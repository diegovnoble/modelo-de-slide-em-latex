%!PS-Adobe-2.0
%%Creator: dvips(k) 5.997 Copyright 2017 Radical Eye Software
%%Title: build/sample.dvi
%%CreationDate: Fri Jul 13 02:11:31 2018
%%Pages: 23
%%PageOrder: Ascend
%%Orientation: Landscape
%%BoundingBox: 0 0 594 792
%%DocumentFonts: UniversalisADFStd-Bold UniversalisADFStd-Regular
%%+ SFTT1440 Dingbats CMSY10 UniversalisADFStd-Italic CMMI12 CMR12
%%+ UniversalisADFStd-BoldItalic CMR10 CMR17
%%DocumentPaperSizes: Screen
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine: dvips -P pdf -o build/sample.ps build/sample.dvi
%DVIPSParameters: dpi=8000
%DVIPSSource:  TeX output 2018.07.12:2311
%%BeginProcSet: tex.pro 0 0
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/CharBuilder{save 3 1 roll S A/base get 2 index get S
/BitMaps get S get/Cd X pop/ctr 0 N Cdx 0 Cx Cy Ch sub Cx Cw add Cy
setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx sub Cy .1 sub]{Ci}imagemask
restore}B/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/dir 0 def/dyy{/dir 0 def}B/dyt{/dir 1 def}B/dty{/dir 2 def}B/dtt{/dir 3
def}B/p{dir 2 eq{-90 rotate show 90 rotate}{dir 3 eq{-90 rotate show 90
rotate}{show}ifelse}ifelse}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0
N/Ry 0 N/V{}B/RV/v{/Ry X/Rx X V}B statusdict begin/product where{pop
false[(Display)(NeXT)(LaserWriter 16/600)]{A length product length le{A
length product exch 0 exch getinterval eq{pop true exit}if}{pop}ifelse}
forall}{false}ifelse end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{
BDot}imagemask grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat
{BDot}imagemask grestore}}ifelse B/QV{gsave newpath transform round exch
round exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0
rlineto fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B
/M{S p delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}
B/g{0 M}B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p
-3 w}B/n{p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{
0 S rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: alt-rule.pro 0 0
%!
% Patch by TVZ
% Makes dvips files draw rules with stroke rather than fill.
% Makes narrow rules more predictable at low resolutions
% after distilling to PDF.
% May have unknown consequences for very thick rules.
% Tested only with dvips 5.85(k).
TeXDict begin
/QV {
  gsave newpath /ruleY X /ruleX X
  Rx Ry gt
  { ruleX ruleY Ry 2 div sub moveto Rx 0 rlineto Ry }
  { ruleX Rx 2 div add ruleY moveto 0 Ry neg rlineto Rx }
  ifelse
  setlinewidth 0 setlinecap stroke grestore
} bind def
end

%%EndProcSet
%%BeginProcSet: pstricks.pro 0 0
% $Id: pstricks.pro 698 2017-12-30 19:08:50Z herbert $
%
%% PostScript prologue for pstricks.tex.
%% Version 1.28, 2017/12/30
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%
%
% Define the follwing gs-functions if not known, eg when using distiller
%
systemdict /.setopacityalpha known not {/.setopacityalpha { pop } def } if
systemdict /.setblendmode known not {/.setblendmode { pop } def } if
systemdict /.setshapealpha known not {/.setshapealpha { pop } def } if
%
/tx@Dict 200 dict def 				% the main PSTricks dictionary
tx@Dict begin
/ADict 25 dict def				% The arrow dictionary
/CM { matrix currentmatrix } bind def
/SLW /setlinewidth load def
/CLW /currentlinewidth load def
/CP /currentpoint load def
/ED { exch def } bind def
/L /lineto load def
/T /translate load def
/TMatrix { } def
/RAngle { 0 } def
/Sqrt { dup 0 lt { pop 0 } { sqrt } ifelse } def  % return 0 for negative arguments 
/Atan { /atan load stopped { pop pop 0 } if } def % return 0 if atan not known
/ATAN1 {neg -1 atan 180 sub } def		% atan(x) (only one parameter)
/Div { dup 0 eq { pop } { div } ifelse } def  	% control the division
/Log { dup 1e-20 lt { pop -1e30 }{ log } ifelse } def % control the log
/tan { dup cos abs 1.e-10 lt 
  { pop 1.e10 } 				% return 1.e10 as infinit
  { dup sin exch cos div } ifelse 		% default sin/cos
} def
/Tan { dup sin exch cos Div } def 		% sin(x)/cos(x) x in degrees
/Acos {dup dup mul neg 1 add dup 0 lt {		% arc cos, returns 0 when negative root
  pop pop 0 }{ sqrt exch atan} ifelse } def
/Acos2 { 2 dict begin 
  /x ED /y ED
  y abs 1.0e-20 lt { 1.0e30 } if
  x y div 
  dup dup mul neg 1 add dup 0 lt {		% arc cos needs two values x,y
  pop pop 0 }{ sqrt exch atan} ifelse 
  y 0 lt { 180 add } if
} def
/NET { neg exch neg exch T } def	      	% change coordinate system to the negative one		
/Pyth { dup mul exch dup mul add sqrt } def   	% Pythagoras, expects 2 parameter
/Pyth2 {					% Pythagoras, xA yA xB yB
  3 -1 roll 		% xA xB yB yA
  sub			% xA xB yB-yA
  3 1 roll 		% yB-yA xA xB
  sub			% yB-yA xA-xB
  Pyth } def
/PtoC { 2 copy cos mul 3 1 roll sin mul } def % Polar to Cartesian (origimal)
/PtoCrel { pst@angleunit PtoC } def % Polar to Cartesian with \degrees[??]
/PtoCab { dup cos 4 -1 roll mul 3 1 roll sin mul } def % Polar to Cartesian (Ellipse) a b phi-> x y 
/AnytoDeg { pst@angleunit } def 
/DegtoAny { 1 pst@angleunit div} def
/AnytoRad { AnytoDeg DegtoRad } def 
/RadtoAny { RadtoDeg DegtoAny } def
%
%/Rand { rand 4294967295 div } def		% a real random number
/Rand { rand 2147483447 div } def		% a real random number between 0 and 1
%----------------- hv added 20050516 ---------------
/PiDiv2 1.57079632680 def
/Pi 3.14159265359 def 
/TwoPi 6.28318530718 def
/Euler 2.71828182846 def 
%/e Euler bind def
%
/RadtoDeg { 180 mul Pi div } bind def 		% convert from radian to degrees
/DegtoRad { Pi mul 180 div } bind def 		% viceversa
%
/startGlobal { true setglobal globaldict begin } bind def
/endGlobal { end false setglobal } bind def
/pssetRGBcolor /setrgbcolor load def
/pssetCMYKcolor /setcmykcolor load def
/pssetGraycolor /setgray load def
%
%----------------- hv end---------------------------
/PathLength@ { /z z y y1 sub x x1 sub Pyth add def /y1 y def /x1 x def } def
%
/PathLength { 
  flattenpath /z 0 def 
  { /y1 ED /x1 ED /y2 y1 def /x2 x1 def }
  { /y ED /x ED PathLength@ } 
  {} 
  { /y y2 def /x x2 def PathLength@ }
  /pathforall load stopped { pop pop pop pop } if 
  z 
} def
%
/STP { .996264 dup scale } def			% BP/PT scaling
/STV { SDict begin normalscale end STP  } def	% 
%
/DashLine {
    dup 0 gt
    { /a .5 def PathLength exch div }
    { pop /a 1 def PathLength } ifelse
    /b ED % pattern should fit evenly in b
    dup /X ED % pattern array
    0 get /y ED % length of first black segment
    /z 0 X {add} forall def % length of the full pattern
    %% Computation of the scaling factor as described by van Zandt:
    b a .5 sub 2 mul y mul sub z Div round
    z mul a .5 sub 2 mul y mul add b exch Div
    %%%% scaling factor on stack.
    /z ED %% now, z is the scaling factor
    false % for the length test below
    X { z mul } forall X astore %% modification TN 04-08-07
    %%% Checking whether at least one dash in X has positive length:
    {0 gt or} forall
    { X 1 a sub y mul }
    { [ 1 0 ] 0 }
    ifelse
    setdash stroke
} def
%
/DotLine { 
  /b PathLength def 
  /a ED /z ED /y CLW def 
  /z y z add def 
  a 0 gt { 
    /b b a div def 
  }{ 
    a 0 eq { 
      /b b y sub def 
    }{ a -3 eq { 
      /b b y add def } if 
    } ifelse 
  } ifelse 
  [ 0 b b z Div round Div dup 0 le { pop 1 } if ] 
  a 0 gt { 0 }{ y 2 div a -2 gt { neg }if } ifelse 
  setdash 1 setlinecap stroke 
} def
%
/SymbolLine {   % on stack [ x y x y ...
  counttomark 					% number of elements
  2 div cvi /n ED     				% n pairs
  /YA ED /XA ED					% the start point
  n 1 sub { 
    /YB ED /XB ED
    /XLength XB XA sub def
    /YLength YB YA sub def
    /PAngle YLength XLength Atan def
    /XYLength XLength YLength Pyth def
    %% for negative SymStep we calculate the distance 
    SymStep 0 lt 
      { %XYLength SymStep div abs cvi 
        /nSym SymStep abs cvi def } 
      { /nSym XYLength SymStep div cvi def }
    ifelse
    0.5 setflat
    /Shift Symbol stringwidth pop 2 div def 
    /deltaX XLength nSym div def
    /deltaY YLength nSym div def
    curveticks 
      { XA YA moveto }
      { XA Shift sub YA Shift sub moveto }
    ifelse 
    nSym { 
      gsave 
      curveticks 
        { PAngle 180 sub CorrAngle sub tickAngle add /rotAngle ED  
          currentpoint translate rotAngle rotate 
          0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
          SymbolLinewidth setlinewidth stroke
        }
        { 
          rotateSymbol { PAngle 180 sub CorrAngle sub rotate } if
          Symbol show 
        }
      ifelse 
      grestore 
      deltaX deltaY rmoveto
    } repeat
    /YA YB def /XA XB def
  } repeat 
  curveticks 
    { XA YA moveto }
    { XA Shift sub YA Shift sub moveto }
  ifelse 
  gsave 
  curveticks 
    { PAngle 180 sub CorrAngle sub tickAngle add /rotAngle ED  
      XA YA translate rotAngle rotate 
      0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
      SymbolLinewidth setlinewidth stroke
    }
    { 
      rotateSymbol { PAngle 180 sub CorrAngle sub rotate } if
      Symbol show 
    }
  ifelse 
  grestore
  pop 				% delete the mark symbol
} def
%
/LineFill { % hv ------------ patch 7 -------------
  gsave 
  abs /hatchWidthInc ED
  abs /hatchSepInc ED
  abs CLW add /a ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform pathbbox 
  /y2 ED 
  a Div ceiling cvi /x2 ED /y1 ED 
  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clipType   % must be defined in pstricks.tex: clip -- eoclip 
  newpath 
  2 setlinecap 
  systemdict
  /setstrokeadjust known { true setstrokeadjust } if 
  x2 x1 sub 1 add { 
    x1 a mul y1 moveto 0 y2 rlineto stroke 
    /x1 x1 1 add 
      hatchWidthInc 0 gt { CLW add } if 
    def 
    hatchSepInc 0 gt hatchWidthInc 0 gt or { 
      /a a hatchSepInc add def
      CLW hatchWidthInc add SLW 
    } if
  } repeat 
  grestore 
  pop pop } def
%
/DotFill {%	 on stack: dot radius
  /dotRadius ED
  abs CLW add /a ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform 
  pathbbox % llx lly urx ury of smallest bounding box
  /y2 ED /x2 ED /y1 ED /x1 ED 
  y2 y1 sub a div 2 add cvi /Ny ED
  x2 x1 sub a div 2 add cvi /Nx ED
  clipType   % must be defined in pstricks.tex: clip -- eoclip 
  newpath 
  /yA y1 dotRadius add CLW add def
  /xA0 x1 dotRadius add CLW add def
  Ny {
     /xA xA0 def
     Nx { 
       newpath 
       xA yA dotRadius 0 360 arc 
       SolidDot { gsave fill grestore } if 
       stroke
       xA a add /xA ED
     } repeat
     yA a add /yA ED
  } repeat
  grestore
} def
%
/PenroseFill {%	 on stack: scaling factor
  /Scale ED
%  1 exch div round /penroseFactor ED 
%  a 0 dtransform round exch round exch
%  2 copy idtransform 
%  exch Atan rotate 
%  idtransform pop /a ED 
%  .25 .25 itransform pathbbox 
%  /y2 ED 
%  a Div ceiling cvi /x2 ED /y1 ED 
%  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clip 
  newpath 
gsave
  220 150 translate
  Scale dup scale
  systemdict /setstrokeadjust known { true setstrokeadjust } if 
  /I/S/L/W/G/+/Z/F/E/D[/def/exch/for{E D}/add{s E get mul}
 { Z -36.2001 1 33 }{25 E S rlineto}{/q Z dup q G E q 1 + G}{Z 2 2}]{cvx def}forall
  [0 72 1008 {dup sin E cos }F ]1 setlinejoin/s W{/a W{/b I 10{/i I 4{/m I moveto
  i m +/j I 10{/l Z b m l + G a l G sub s m get div .2 + floor .3 + 25
  mul j l + S rmoveto}F i L j L stroke }F}F}F}F 
  grestore 
%  pop pop 
} def
%
/PenroseFillA {%  on stack: scaling factor, border color, kite color, dart color
  /Scale ED
  Scale dup scale
  /border_colour ED 
  /kite_colour ED 
  /dart_colour ED
  clip 
  newpath 
  gsave
  100 100 translate
  6 
  Scale 1 lt { 1 Scale dup add div mul cvi } if %%%%   Number of iterations
  10					%%%%   Long side length in millimeters
  /border_width { L 0.06 mul }def		%%%%   Choose the scalefactor for the borders
  /L exch 25.4 div 72 mul def		%%%%   Conversion: mm -> inches -> points
  /f{-1 5 sqrt add 2 div}bind def		%%%%   The reciprocal of the golden ratio
  /l{L f mul}bind def			%%%%   Short side length l = L*f
  /Ll{L l add}bind def			%%%%   Ll =  L + l
  /c{36 cos L mul}bind def		%%%%   c  =  L*cos(36)
  /s{36 sin L mul}bind def		%%%%   s  =  L*sin(36)
  /draw_tile { 0 0 moveto c s lineto 0 lineto gsave closepath gsave fill grestore
	     0 setlinewidth stroke grestore border_colour stroke } bind def
  /half_kite { dup dup 0 gt{ 1 sub gsave f f neg scale -36 rotate half_dart
			   Ll 0 translate 144 rotate kite grestore }
	      		 { kite_colour L draw_tile }ifelse
	     pop } bind def
  /half_dart { dup dup 0 gt{ 1 sub gsave f f scale half_kite
			   -144 rotate Ll neg 0 translate half_dart grestore }
	      		 { dart_colour l draw_tile }ifelse
  	     pop } bind def
  /kite{ gsave half_kite 1 -1 scale half_kite grestore }bind def
  border_width setlinewidth  1 setlinejoin  1 setlinecap
%  450 0 translate  
  dup f exch neg exp dup scale
  5 {kite 72 rotate } repeat stroke 
  grestore
} def
%
%
/TruchetFill { %	 on stack: scaling factor
  10 dict begin
  dup dup scale
  1 exch div round /penroseFactor ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform pathbbox 
  /y2 ED 
  a Div ceiling cvi /x2 ED /y1 ED 
  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clip 
  newpath 
  systemdict
  /setstrokeadjust known { true setstrokeadjust } if 
  /ma a neg def
  /ha a 2 div def 
  /mha ha neg def
  /tile { 
    rand dup 2 idiv 2 mul eq { 90 rotate } if
    mha mha moveto ha mha lineto
    ha ha lineto mha ha lineto
%    closepath .1 setlinewidth stroke
    contents
  } def
  /contents{ 
    0 ha moveto ha 0 lineto
    0 mha moveto mha 0 lineto
%    1 setlinewidth stroke
  } def
  /dotiling {
    f ma mul a f a mul { 
      /i exch def
      f ma mul a f a mul { 
        /j exch def
        gsave i j translate
        tile stroke grestore
      } for
    } for
  } def
%
  /f 3 def 
  5 srand dotiling 
  end % local user dict
} def
%
/BeginArrow { 
  ADict begin 			% hold it local, for end see EndArrow
  /@mtrx CM def 
  gsave 
  2 copy T 
  2 index sub neg exch 
  3 index sub exch Atan 
  rotate newpath 
} def
%
/EndArrow { @mtrx setmatrix CP grestore end } def % end the ADict
%
/Arrow { 
  CLW mul add dup 
  2 div /w ED 
  mul dup /h ED 
  mul /a ED 
  { 0 h T 1 -1 scale } if 
  w neg h moveto 
  0 0 L w h L w neg a neg rlineto 
  gsave fill grestore 
} def
%
/ArrowD { % the sides are drawn as curves (hv 20071211)
  CLW mul add dup 
  2 div /w ED 
  mul dup /h ED 
  mul /Inset ED 
  { 0 h T 1 -1 scale } if % changes the direction
% we use y=w/h^2 * x^2 as equation for the control points
% for the coordinates the arrow is seen from top to bottom
% the bottom (tip) is (0;0)
  w neg h moveto % lower left of >
  w 9 div 4 mul neg h 3 div 2 mul
  w 9 div neg       h 3 div  
  0 0 curveto    % tip of >
  w 9 div        h 3 div  
  w 9 div 4 mul  h 3 div 2 mul
  w h curveto % upper left of >
  w neg Inset neg rlineto % move to x=0 and inset
  gsave fill grestore 
} def 
%
/Tbar { 
  CLW mul add /z ED 
  z -2 div CLW 2 div moveto 
  z 0 rlineto stroke 
  0 CLW moveto 
} def
%
/Bracket { 
  CLW mul add dup CLW sub 2 div 
  /x ED mul CLW add /y ED /z CLW 2 div def 
  x neg y moveto 
  x neg CLW 2 div L x CLW 2 div L x y L stroke 
  0 CLW moveto 
} def
%
/RoundBracket { 
  CLW mul add dup 2 div 
  /x ED mul /y ED /mtrx CM def 
  0 CLW 2 div T x y mul 0 ne { x y scale } if 
  1 1 moveto 
  .85 .5 .35 0 0 0 curveto 
  -.35 0 -.85 .5 -1 1 curveto 
  mtrx setmatrix stroke 0 CLW moveto 
} def
%
/SD { 0 360 arc fill } def
%
/EndDot { % DS is the dot size 
  { /z DS def } { /z 0 def } ifelse  	% outer or inner dimen 
  /b ED 				% the color definition
  0 z DS SD 
  b { 0 z DS CLW sub SD } if 
  0 DS z add CLW 4 div sub 
  moveto 
} def
%
/Shadow { [ { /moveto load } { /lineto load } { /curveto load } {
  /closepath load } /pathforall load stopped { pop pop pop pop CP /moveto
  load } if ] cvx newpath 3 1 roll T exec } def
%
/NArray { % holds the coordinates and on top of stack the showpoints boolean
  /showpoints ED 
  counttomark 2 div dup cvi /n ED  	% n 2 div on stack 
  n eq not { exch pop } if		% even numbers of points? delete one
  ] aload /Points ED 
  showpoints not { Points aload pop } if
%    { ] aload /Points ED } 
%    { n 2 mul 1 add -1 roll pop } ifelse	% delete the mark symbol 
} def
%
/Line { 
  NArray n 0 eq not 
    { n 1 eq { 0 0 /n 2 def } if ArrowA /n n 2 sub def 
      n { Lineto } repeat 
      CP 4 2 roll ArrowB L pop pop 
    } if 
} def
%
/LineToYAxis {
  /Ox ED		% Save the x origin value 
  NArray            % all x-y pairs on stack
  n { 2 copy moveto % go to current point
    Ox exch Lineto   % line to y-axis
    pop             % delete old x-value
  } repeat
} def
%
/LineToXAxis{
  /Oy ED		% Save the y origin value 
  NArray		% all x-y pairs on stack
  n 0 eq not
    { n 1 eq { 0 0 /n 2 def } if
      ArrowA
      /n n 2 sub def
      CP 2 copy moveto pop Oy Lineto
      n { 2 copy moveto pop Oy Lineto } repeat
      CP
      4 2 roll
      ArrowB
      2 copy moveto pop Oy
      L
      pop pop } if
} def
%
/Arcto { 
  /a [ 6 -2 roll ] cvx def 
  a r 
  /arcto load stopped { 5 } { 4 } ifelse { pop } repeat 
  a 
} def
%
/CheckClosed { 
  dup n 2 mul 1 sub index eq 2 index n 2 mul 1 add index eq
  and { pop pop /n n 1 sub def } if 
} def
%
/Polygon { 
  NArray n 2 eq { 0 0 /n 3 def } if 
  n 3 lt 
    { n { pop pop } repeat } 
    { n 3 gt { CheckClosed } if 
      n 2 mul -2 roll 
      /y0 ED /x0 ED /y1 ED /x1 ED  
      x1 y1 
      /x1 x0 x1 add 2 div def 
      /y1 y0 y1 add 2 div def 
      x1 y1 moveto 
      /n n 2 sub def 
      n { Lineto } repeat 
      x1 y1 x0 y0 6 4 roll Lineto
      Lineto pop pop closepath } ifelse 
} def
%
/SymbolPolygon {   % on stack [ x y x y ...
  counttomark 					% number of elements
  2 add /m ED
  2 copy m 2 roll				% copy last two
  m 2 div cvi /n ED    				% n pairs
  /YA ED /XA ED					% the start point
  n 1 sub { 
    /YB ED /XB ED
    /XLength XB XA sub def
    /YLength YB YA sub def
    /PAngle YLength XLength Atan def
    /XYLength XLength YLength Pyth def
    /nSym XYLength SymStep Div cvi def
    /Shift Symbol stringwidth pop 2 Div def 
    /deltaX XLength nSym Div def
    /deltaY YLength nSym Div def
    XA Shift sub YA Shift sub moveto 
    nSym { 
      gsave rotateSymbol { PAngle 180 sub CorrAngle sub rotate } if
      Symbol show 
      grestore 
      deltaX deltaY rmoveto
    } repeat
%    XB Shift sub YB Shift sub moveto Symbol show
    /YA YB def /XA XB def
  } repeat 
  pop	% delete the mark symbol
} def
%
/Diamond { 
  /mtrx CM def 
  T rotate 
  /h ED 
  /w ED 
  dup 0 eq { pop } { CLW mul neg 
    /d ED 
    /a w h Atan def 
    /h d a sin Div h add def 
    /w d a cos Div w add def } ifelse 
  mark w 2 div h 2 div w 0 0 h neg w neg 0 0 h w 2 div h 2 div 
  /ArrowA { moveto } def 
  /ArrowB { } def 
  false Line 
  closepath mtrx setmatrix } def
%
/Triangle { 
  /mtrx CM def 
  translate 
  rotate /h ED 2 div /w ED 
  dup CLW mul /d ED 
  /h h d w h Atan sin Div sub def 
  /w w d h w Atan 2 div dup cos exch sin Div mul sub def 
  mark 
  0 d w neg d 0 h w d 0 d 
  /ArrowA { moveto } def 
  /ArrowB { } def 
  false 
  Line 
  closepath 
  mtrx
% DG/SR modification begin - Jun.  1, 1998 - Patch 3 (from Michael Vulis)
% setmatrix } def
  setmatrix pop 
} def
% DG/SR modification end
%
/CCA { 
  /y ED /x ED 
  2 copy y sub /dy1 ED 
  x sub /dx1 ED 
  /l1 dx1 dy1 Pyth def 
} def
%
/CC { 
  /l0 l1 def 
  /x1 x dx sub def 
  /y1 y dy sub def 
  /dx0 dx1 def 
  /dy0 dy1 def 
  CCA 
  /dx dx0 l1 c exp mul dx1 l0 c exp mul add def 
  /dy dy0 l1 c exp mul dy1 l0 c exp mul add def 
  /m dx0 dy0 Atan dx1 dy1 Atan sub 2 div cos abs b exp a mul dx dy Pyth Div 2 div def 
  /x2 x l0 dx mul m mul sub def
  /y2 y l0 dy mul m mul sub def 
  /dx l1 dx mul m mul neg def 
  /dy l1 dy mul m mul neg def 
} def
%
/IC { 
  /c c 1 add def 
  c 0 lt { /c 0 def } { c 3 gt { /c 3 def } if } ifelse 
  /a a 2 mul 3 div 45 cos b exp div def 
  CCA 
  /dx 0 def 
  /dy 0 def 
} def
%
/BOC { IC CC x2 y2 x1 y1 ArrowA CP 4 2 roll x y curveto } def
/NC { CC x1 y1 x2 y2 x y curveto } def
/EOC { x dx sub y dy sub 4 2 roll ArrowB 2 copy curveto } def
/BAC { IC CC x y moveto CC x1 y1 CP ArrowA } def
/NAC { x2 y2 x y curveto CC x1 y1 } def
/EAC { x2 y2 x y ArrowB curveto pop pop } def
%
/OpenCurve { 
  NArray n 3 lt 
    { n { pop pop } repeat } 
    { BOC /n n 3 sub def n { NC } repeat EOC } ifelse 
} def
%
/CurvePath { 
  %% for negative SymStep we calculate the distance 
  SymStep 0 lt { gsave PathLength SymStep div abs /SymStep ED grestore } if
  0.5 setflat
  flattenpath /z 0 def /z0 0 def
  { /y1 ED /x1 ED /y2 y1 def /x2 x1 def 
    x1 Shift sub y1 Shift sub moveto 
    gsave 
    curveticks 
      { x1 y1 translate startAngle rotate 
        0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
        SymbolLinewidth setlinewidth stroke      
      }
      { startAngle rotate Symbol show }
    ifelse 
    grestore /z0 z def }
  { /y ED /x ED PathLength@ z z0 sub SymStep ge {
      x Shift sub y Shift sub moveto 
      gsave 
      curveticks 
        { y yOld sub x xOld sub Atan 180 sub CorrAngle sub /rotAngle ED  
          x y translate rotAngle rotate 
          0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
          SymbolLinewidth setlinewidth stroke
        }
        { 
          rotateSymbol { y yOld sub x xOld sub Atan 180 sub CorrAngle sub rotate } if        
          Symbol show 
        }
      ifelse 
      grestore /z0 z def } if 
    /yOld y def /xOld x def } 
  {} %% the lineto part
  { /y y2 def /x x2 def PathLength@ 
    x Shift sub y Shift sub moveto 
    gsave
    curveticks 
      { y yOld sub x xOld sub Atan 180 sub /rotAngle ED  
        x y translate rotAngle rotate 
        0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
        SymbolLinewidth setlinewidth stroke
      }
      { 
        x Shift sub y Shift sub moveto 
        rotateSymbol { y yOld sub x xOld sub Atan 180 sub CorrAngle sub rotate } if        
        Symbol show 
      }
    ifelse 
    grestore
  }
  pathforall 
%  curveticks 
%   { gsave 
%     x y translate rotAngle rotate 
%     0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
%     SymbolLinewidth setlinewidth stroke grestore
%   } if
  z 
} def
%
/OpenSymbolCurve { 
  OpenCurve
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/AltCurve { 
  { false NArray n 2 mul 2 roll 
    [ n 2 mul 3 sub 1 roll ] aload
    /Points ED 
    n 2 mul -2 roll } 
  { false NArray } ifelse 
  n 4 lt { n { pop pop } repeat } { BAC /n n 4 sub def n { NAC } repeat EAC } ifelse 
} def
%
/AltOpenSymbolCurve { 
  AltCurve
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/ClosedCurve { 
  NArray n 3 lt 
    { n { pop pop } repeat } 
    { n 3 gt { CheckClosed } if 
      6 copy n 2 mul 6 add 6 roll 
      IC CC x y moveto n { NC } repeat 
      closepath pop pop 
    } ifelse 
} def
%
/ClosedSymbolCurve { 
  ClosedCurve
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/CalcBezierSpline {%  Christoph Bersch
  10 dict begin
  /getX { Points exch 2 mul get } def
  /getY { Points exch 2 mul 1 add get } def
  /n Points length 1 sub 2 idiv def
  /GetFirstControlPoints {
    /x n array def
    /tmp n array def
    /b 2 def
    x 0 rhs 0 get b div put
    1 1 n 1 sub {
      /i exch def
      tmp i 1 b div dup 4 1 roll put
      i n 1 sub lt { 4 }{ 3.5 } ifelse exch sub /b exch def
      x i rhs i get x i 1 sub get sub b div put
    } for
    1 1 n 1 sub {
      n exch sub
      dup dup x exch 1 sub 2 copy 6 2 roll
      get 3 1 roll tmp exch get
      exch x exch get mul sub
      put	
    } for
    x
  } def
  % 
  n 1 eq {
    0 getX 2 mul 1 getX add 3 div
    0 getY 2 mul 1 getY add 3 div
    exch dup 3 1 roll 2 mul 0 getX sub
    exch dup 3 1 roll 2 mul 0 getY sub
    [ 0 getX 0 getY 7 3 roll 1 getX 1 getY ] /outPoints exch def
  } {
    /outPoints 6 n mul 2 add array def
    0 1 n {
      dup dup 6 mul dup 1 add
      outPoints exch 5 -1 roll getY put
      outPoints exch 3 -1 roll getX put
    } for
    /rhs n array def
    1 1 n 2 sub {
      rhs exch dup dup getX 4 mul exch 1 add getX 2 mul add put
    } for
    rhs 0 0 getX 1 getX 2 mul add put
    rhs n 1 sub dup getX 8 mul n getX add 2 div put
    GetFirstControlPoints
    1 1 n 2 sub {
      rhs exch dup dup getY 4 mul exch 1 add getY 2 mul add put
    } for
    rhs 0 0 getY 1 getY 2 mul add put
    rhs n 1 sub dup getY 8 mul n getY add 2 div put
    GetFirstControlPoints
    0 1 n 1 sub {
      /i exch def
      2 copy
      i get outPoints 6 i mul 3 add 3 -1 roll put
      i get outPoints 6 i mul 2 add 3 -1 roll put
      2 copy
      i n 1 sub lt {
        i 1 add get i 1 add getY 2 mul exch sub outPoints 6 i mul 5 add 3 -1 roll put
        i 1 add get i 1 add getX 2 mul exch sub outPoints 6 i mul 4 add 3 -1 roll put
      }{
        n 1 sub get n getY add 2 div outPoints 6 n 1 sub mul 5 add 3 -1 roll put
        n 1 sub get n getX add 2 div outPoints 6 n 1 sub mul 4 add 3 -1 roll put
      } ifelse
    } for
    pop pop
  } ifelse
  outPoints
  end
} def
/Spline {
  /showpoints ED
  counttomark 2 div dup cvi /n ED
  n eq not { exch pop } if
  ] /Points ED
  n 1 gt {
    CalcBezierSpline
    mark exch aload pop
    ArrowA
    n 2 sub {
      6 2 roll 4 2 roll curveto
    } repeat
    6 2 roll 4 2 roll ArrowB curveto
  } if
} def
/OpenSymbolSpline {
  Spline
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/SQ { /r ED r r moveto r r neg L r neg r neg L r neg r L fill } def
/ST { /y ED /x ED x y moveto x neg y L 0 x L fill } def
/SP { /r ED gsave 0 r moveto 4 { 72 rotate 0 r L } repeat fill grestore } def
%
/FontDot { 
  DS 2 mul dup 
  matrix scale matrix concatmatrix exch matrix
  rotate matrix concatmatrix exch 
  findfont exch makefont setfont 
} def
%
/Rect { 
  x1 y1 y2 add 2 div moveto 
%  x1 y2 lineto 
%  x2 y2 lineto 
%  x2 y1 lineto
%  x1 y1 lineto 
  x1 y1 lineto  % counter clockwise path
  x2 y1 lineto 
  x2 y2 lineto
  x1 y2 lineto 
  closepath 
} def
%
/OvalFrame { 
  x1 x2 eq y1 y2 eq or 
    { pop pop x1 y1 moveto x2 y2 L } 
    { y1 y2 sub abs x1 x2 sub abs 2 copy gt 
      { exch pop } { pop } ifelse 
      2 div exch { dup 3 1 roll mul exch } if 
      2 copy lt { pop } { exch pop } ifelse
      /b ED 
      x1 y1 y2 add 2 div moveto 
      x1 y2 x2 y2 b arcto 
      x2 y2 x2 y1 b arcto
      x2 y1 x1 y1 b arcto 
      x1 y1 x1 y2 b arcto 
      16 { pop } repeat 
      closepath 
    } ifelse 
} def
%
/Frame { 
  CLW mul /a ED 
  3 -1 roll 
  2 copy gt { exch } if 
  a sub /y2 ED 
  a add /y1 ED 
  2 copy gt { exch } if 
  a sub /x2 ED 
  a add /x1 ED 
  1 index 0 eq { pop pop Rect } { OvalFrame } ifelse 
} def
%
/BezierNArray { 
  /f ED 
  counttomark 2 div dup cvi /n ED 
  n eq not { exch pop } if 
  n 1 sub neg 3 mod 3 add 3 mod { 0 0 /n n 1 add def } repeat 
  f { ] aload /Points ED } { n 2 mul 1 add -1 roll pop } ifelse 
} def
%
/OpenBezier { 
  BezierNArray 
  n 1 eq 
    { pop pop } 
    { ArrowA n 4 sub 3 idiv 
      { 6 2 roll 4 2 roll curveto } repeat 
      6 2 roll 4 2 roll ArrowB curveto } ifelse 
} def
%
/OpenSymbolBezier { 
  OpenBezier
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/ClosedBezier { 
  BezierNArray 
  n 1 eq 
    { pop pop } 
    { moveto n 1 sub 3 idiv 
      { 6 2 roll 4 2 roll curveto } repeat 
      closepath } ifelse 
} def
%
/ClosedSymbolBezier { 
  /f ED				 % save showpoints value 
  2 copy /yEnd ED /xEnd ED
  counttomark -2 roll 2 copy /yStart ED /xStart ED
  counttomark 2 roll
  f
  ClosedBezier
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
  [ xEnd yEnd xStart yStart SymbolLine 
} def
%
/BezierShowPoints { 
  gsave 
  Points aload length 2 div cvi /n ED 
  moveto 
  n 1 sub { lineto } repeat 
  CLW 2 div SLW [ 4 4 ] 0 setdash stroke 
  grestore 
} def
%
/Parab { 
  /y0 ED /x0 ED /y1 ED /x1 ED 
  /dx x0 x1 sub 3 div def 
  /dy y0 y1 sub 3 div def 
  x0 dx sub y0 dy add x1 y1 ArrowA
  x0 dx add y0 dy add x0 2 mul x1 sub y1 ArrowB 
  curveto 
  /Points [ x1 y1 x0 y0 x0 2 mul x1 sub y1 ] def 
} def
%
/Parab1 { % 1 end  |  0 SP
  /ySP ED /xSP ED /y1 ED /x1 ED 
  /dx xSP x1 sub 3 div def 
  /dy ySP y1 sub 3 div def 
  newpath x1 y1 moveto xSP y1 lineto xSP ySP lineto 
                       x1 ySP lineto closepath clip 
  currentpoint
  newpath moveto
  xSP dx sub ySP dy add x1 y1 ArrowA
  xSP dx add ySP dy add xSP 2 mul x1 sub y1 ArrowB 
  curveto 
  /Points [ x1 y1 xSP ySP xSP 2 mul x1 sub y1 ] def 
} def
%
/Grid { 
  newpath 
  /a 4 string def 
  /b ED % 				psk@gridlabels in pt
  /c ED % 				{ \pst@usecolor\psgridlabelcolor }
  /n ED % 				psk@griddots
  cvi dup 1 lt { pop 1 } if 
  /s ED % 				\psk@subgriddiv
  s div dup 0 eq { pop 1 } if 
  /dy ED s div dup 0 eq { pop 1 } if %	\pst@number\psyunit abs
  /dx ED dy div round dy mul %		\pst@number\psxunit abs
  /y0 ED dx div round dx mul 
  /x0 ED dy div round cvi 
  /y2 ED dx div round cvi 
  /x2 ED dy div round cvi 
  /y1 ED dx div round cvi 
  /x1 ED 
  /h y2 y1 sub 0 gt { 1 } { -1 } ifelse def 
  /w x2 x1 sub 0 gt { 1 } { -1 } ifelse def 
  b 0 gt { 
    /z1 b 4 div CLW 2 div add def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%    Helvetica findfont b scalefont setfont 
%    is set in pstricks.tex
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%    
%     /NimbusSanL-Regu findfont b scalefont setfont   
  /b b .95 mul CLW 2 div add def } if 
  systemdict /setstrokeadjust known 
    { true setstrokeadjust /t { } def }
    { /t { transform 0.25 sub round 0.25 add exch 0.25 sub round 0.25 add
       exch itransform } bind def } ifelse 
  gsave n 0 gt { 1 setlinecap [ 0 dy n div ] dy n div 2 div setdash } { 2 setlinecap } ifelse 
  /i x1 def 
  /f y1 dy mul n 0 gt { dy n div 2 div h mul sub } if def 
  /g y2 dy mul n 0 gt { dy n div 2 div h mul add } if def 
  x2 x1 sub w mul 1 add dup 1000 gt { pop 1000 } if 
  { i dx mul dup y0 moveto 
    b 0 gt 
      { gsave c i a cvs dup stringwidth pop 
        /z2 ED w 0 gt {z1} {z1 z2 add neg} ifelse 
	h 0 gt {b neg}{z1} ifelse 
        rmoveto show grestore } if 
    dup t f moveto 
    g t L stroke 
    /i i w add def 
  } repeat 
  grestore 
  gsave 
  n 0 gt
  % DG/SR modification begin - Nov. 7, 1997 - Patch 1
  %{ 1 setlinecap [ 0 dx n div ] dy n div 2 div setdash }
    { 1 setlinecap [ 0 dx n div ] dx n div 2 div setdash }
  % DG/SR modification end
    { 2 setlinecap } ifelse 
  /i y1 def 
  /f x1 dx mul n 0 gt { dx n div 2 div w mul sub } if def 
  /g x2 dx mul n 0 gt { dx n div 2 div w mul add } if def 
  y2 y1 sub h mul 1 add dup 1000 gt { pop 1000 } if 
  { newpath i dy mul dup x0 exch moveto 
    b 0 gt { gsave c i a cvs dup stringwidth pop 
      /z2 ED 
      w 0 gt {z1 z2 add neg} {z1} ifelse 
      h 0 gt {z1} {b neg} ifelse 
      rmoveto show grestore } if 
    dup f exch t moveto 
    g exch t L stroke 
    /i i h add def 
  } repeat 
  grestore 
} def
%
/ArcArrow { 
  /d ED /b ED /a ED 
  gsave 
  newpath 0 -1000 moveto clip 
  newpath 
  0 1 0 0 b 
  grestore 
  c mul 
  /e ED 
  pop pop pop r a e d PtoC y add exch x add
  exch r a PtoC y add exch x add exch b pop pop pop pop a e d CLW 8 div c
  mul neg d 
} def
%
%
/isbool { type (booleantype) cvn eq } def
%
/Ellipse { 
  dup isbool { /MoveToStart ED }{ /MoveToStart false def }ifelse  % false or true
  /rotAngle ED
  /mtrx CM def 
  T 
  rotAngle rotate
  scale 
  MoveToStart { 0 0 moveto 1 0 rmoveto } if  % move to the start position
  0 0 1 5 3 roll arc 
  mtrx setmatrix 
} def
%
/ArcAdjust { %%%% Vincent Guirardel
% given a target length (targetLength) and an initial angle (angle0) [in the stack],
% let  M(angle0)=(rx*cos(angle0),ry*sin(angle0))=(x0,y0).
% This computes an angle t such that (x0,y0) is at distance 
% targetLength from the point M(t)=(rx*cos(t),ry*sin(t)).
% NOTE: this an absolute angle, it does not have to be added or substracted to angle0
% contrary to TvZ's code.
% To achieve, this, one iterates the following process: start with some angle t,
% compute the point M' at distance targetLength of (x0,y0) on the semi-line [(x0,y0) M(t)].
% Now take t' (= new angle) so that (0,0) M(t') and M' are aligned.
%
% Another difference with TvZ's code is that we need d (=add/sub) to be defined.
% the value of d = add/sub is used to know on which side we have to move.
% It is only used in the initialisation of the angle before the iteration.
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Input stack:  1: target length 2: initial angle
% variables used : rx, ry, d (=add/sub)
%
  /targetLength ED /angle0 ED
  /x0 rx angle0 cos mul def
  /y0 ry angle0 sin mul def
% we are looking for an angle t such that (x0,y0) is at distance targetLength 
% from the point M(t)=(rx*cos(t),ry*sin(t)))
%initialisation of angle (using 1st order approx = TvZ's code)
  targetLength 57.2958 mul
  angle0 sin rx mul dup mul
  angle0 cos ry mul dup mul
  add sqrt div 
% if initialisation angle is two large (more than 90 degrees) set it to 90 degrees
% (if the ellipse is very curved at the point where we draw the arrow, %
% the value can be much more than 360 degrees !)
% this should avoid going on the wrong side (more than 180 degrees) or go near
% a bad attractive point (at 180 degrees)
  dup 90 ge { pop 90 } if 
  angle0 exch d % add or sub
% maximum number of times to iterate the iterative procedure:
% iterative procedure: takes an angle t on top of stack, computes a 
% better angle (and put it on top of stack)
  30 { dup
% compute distance D between (x0,y0) and M(t)
    dup cos rx mul x0 sub dup mul exch sin ry mul y0 sub dup mul add sqrt
% if D almost equals targetLength, we stop
    dup targetLength sub abs 1e-5 le { pop exit } if
% stack now contains D t
% compute the point M(t') at distance targetLength of (x0,y0) on the semi-line [(x0,y0) M(t)]:
% M(t')= ( (x(t)-x0)*targetLength/d+x0 , (y(t)-y0)*targetLength/d+y0 )
    exch dup cos rx mul x0 sub  exch sin ry mul y0 sub
% stack contains:  y(t)-y0, x(t)-x0, d
    2 index Div targetLength mul y0 add ry Div exch
    2 index Div targetLength mul x0 add rx Div
% stack contains x(t')/rx , y(t')/ry , d
% now compute t', and remove D from stack
    atan exch pop
  } repeat
% we don't look at what happened... in particular, if targetLength is greater 
% than the diameter of the ellipse...
% the final angle will be around /angle0 + 180. maybe we should treat this pathological case...
% after iteration, stack contains an angle t such that M(t) is the tail of the arrow
% to give back the result as a an angle relative to angle0 we could add the following line:
% angle0 sub 0 exch d
%
% begin bug fix 2006-01-11
% we want to adjust the new angle t' by a multiple of 360 so that  | t'-angle0 | <= 180
%(we don't want to make the ellipse turn more or less than it should)...
dup angle0 sub dup abs 180 gt { 180 add 360 div floor 360 mul sub } { pop } ifelse
% end bug fix
} def
%
/EllipticArcArrow {
  /d ED      % is add or sub
  /b ED      % arrow procedure
  /a1 ED     % angle
  gsave
  newpath
  0 -1000 moveto
  clip                  % Set clippath far from arrow.
  newpath
  0 1 0 0 b             % Draw arrow to determine length.
  grestore
% Length of arrow is on top of stack. Next 3 numbers are junk.
%
  a1 exch ArcAdjust   % Angular position of base of arrow.
  /a2 ED
  pop pop pop
  a2 cos rx mul xOrig add % hv 2007-08-29   x->xOrig
  a2 sin ry mul yOrig add % hv 2007-08-29   y->yOrig
  a1 cos rx mul xOrig add % 
  a1 sin ry mul yOrig add % 
% Now arrow tip coor and base coor are on stack.
  b pop pop pop pop       % Draw arrow, and discard coordinates.
  a2 CLW 8 div
% change value of d (test it by looking if  `` 1 1 d '' gives 2 or not )
  1 1 d 2 eq { /d { sub } def } { /d { add } def } ifelse
  ArcAdjust
% resets original value of d
  1 1 d 2 eq { /d { sub } def } { /d { add } def } ifelse  % Adjust angle to give overlap.
} def
%%------------------ tvz/DG/hv (2004-05-10) end -------------------%%
%
/Rot { CP CP translate 3 -1 roll neg rotate NET  } def
%
/RotBegin { 
  tx@Dict /TMatrix known not { /TMatrix { } def /RAngle { 0 } def } if 
  /TMatrix [ TMatrix CM ] cvx def 
  /a ED 
  a Rot /RAngle [ RAngle dup a add ] cvx def 
} def
%
/RotEnd { 
  /TMatrix [ TMatrix setmatrix ] cvx def 
  /RAngle [ RAngle pop ] cvx def 
} def
%
/PutCoor { gsave CP T CM STV exch exec moveto setmatrix CP grestore } def
/PutBegin { /TMatrix [ TMatrix CM ] cvx def CP 4 2 roll T moveto } def
/PutEnd { CP /TMatrix [ TMatrix setmatrix ] cvx def moveto } def
%
/Uput {
  /a ED 
  add 2 div /h ED 2 
  div /w ED 
  /s a sin def 
  /c a cos def 
  /b s abs c abs 2 copy gt dup 
    /q ED 
    { pop } { exch pop } ifelse def 
  /w1 c b div w mul def 
  /h1 s b div h mul def 
  q { w1 abs w sub dup c mul abs }{ h1 abs h sub dup s mul abs } ifelse 
} def
%
/UUput { 
  5 dict begin
  /z ED 
  abs /y ED 
  /x ED 
  q { x s div c mul abs y gt }{ x c div s mul abs y gt } ifelse 
    { x x mul y y mul sub z z mul add sqrt z add } 
    { q { x s div } { x c div } ifelse abs 
    } ifelse 
  a PtoC 
  h1 add exch 
  w1 add exch 
  end
} def
%
end
%-----------------------------------------------------------------------------%
%
% END pstricks.pro

%%EndProcSet
%%BeginProcSet: pst-algparser.pro 0 0
% $Id: pst-algparser.pro 446 2017-04-19 11:40:55Z herbert $
%%
%% PostScript prologue for PSTricks algorithm parser
%% Version 0.07, 2014/08/01
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%%
%%-----------------------------------------------------------------------------%
%
%currentdict /Pi known not { /Pi 3.14159265359 def } if
%
/AlgParser { tx@AlgToPs begin AlgToPs end } def  % Dominique Rodriguez
/I2P { AlgParser cvx exec } def  % Infix to Postfix
%
/tx@CoreAnalyzerDict 100 dict def tx@CoreAnalyzerDict begin
%
% PS ANALYZER FOR ALGEBRAIC EXPRESSION V1.13
%
% 09/2011 DR factorial with ! added
%
% E->T|E+T
% T->FS|T*FS
% FS -> F | +FS | -FS
% F->P|F^SF|P!
% P->(E)|literal
% literal->number|var|var[E]|func(params)
% params->E|E,param
% number->TOBEFINISHED
%
%% E expression, T term, SF signed factor, F factor, P power
%
%% parser
%
%% str
%
%% C->E<condition_operators>E
%% STR index -> STR index+lenExpr
/AnalyzeCond { AnalyzeExpr ReadCondOp AnalyzeExpr EvalCondOp  } def
%
%% analyze Expression List (separator , or | )
%% STR index -> STR index+lenExpr
%% /AnalyzeListOfE {
%%   { NextNonBlankChar pop AnalyzeExpr%%dup Strlen eq { exit } if NextNonBlankChar
%%     NextNonBlankChar dup 0 eq { pop exit } if
%%     dup 44 ne 1 index 124 ne and { dup 41 ne { PROBLEMCONTACTBILLOU } { pop exit } ifelse } if
%%     pop NextNonBlankChar dup 0 eq { exit } if 124 ne { PROBLEMCONTACTBILLOU } if 1 add NextNonBlankChar 0 eq {toto} if } loop
%%   AnalyzeListOfEPostHook
%% } def
/AnalyzeListOfE {
  /NotFirst false def
  { NextNonBlankChar pop AnalyzeExpr
    NotFirst { EvalListOfExpr } { /NotFirst true def } ifelse
    dup Strlen eq { exit } if NextNonBlankChar
    dup 44 ne 1 index 124 ne and
    { dup 41 ne { PROBLEMCONTACTBILLOU } { pop exit } ifelse }
    if  pop 1 add } loop
  AnalyzeListOfEPostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% E->T|E+T
%% STR index -> STR index+lenExpr
/AnalyzeExpr {
  AnalyzePreHook AnalyzeTerm IsEndingExpr
  { dup 0 ne { 32 eq { NextNonBlankChar } if } { pop } ifelse }
  { { RollOp 1 add NextNonBlankChar pop AnalyzeTerm PreEvalHook EvalAddSub IsEndingExpr { pop exit } if } loop }
  ifelse
  AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% T->FS|T*FS
%% STR index
/AnalyzeTerm {
  AnalyzePreHook AnalyzeSignedFactor IsEndingTerm
  { dup 0 ne { 32 eq { NextNonBlankChar } if } { pop } ifelse }
  { { RollOp 1 add NextNonBlankChar pop AnalyzeSignedFactor PreEvalHook EvalMulDiv IsEndingTerm { pop exit } if} loop }
  ifelse
  AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% FS -> F | +FS | -FS
%% STR index
/AnalyzeSignedFactor {
  AnalyzePreHook 2 copy get dup IsUnaryOp
  { RollOp 1 add NextNonBlankChar pop AnalyzeSignedFactor EvalUnaryOp }
  { pop AnalyzeFactor }
  ifelse AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% F->P|F^P|P!
%% STR index
/AnalyzeFactor {
  AnalyzePreHook AnalyzePower IsEndingFactor
  { dup 0 ne { 32 eq { NextNonBlankChar } if } { pop } ifelse }
  { { dup 33 eq%% is there a ! DR 09/2011
      { pop 1 add NextNonBlankChar pop EvalFactorial }
      { RollOp 1 add NextNonBlankChar pop AnalyzePower PreEvalHook EvalPower }
      ifelse
      IsEndingFactor { pop exit } if } loop }
  ifelse  AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% P->(E)|literal
%% STR index
/AnalyzePower {
  %% depending of first char either a number, or a literal
  2 copy get dup 40 eq%%an open par
  { pop 1 add NextNonBlankChar pop AnalyzeExpr 1 add NextNonBlankChar pop }
  { AnalyzeLiteral }
  ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index STR[index] -> STR index
%/AnalyzeLiteral { IsNumber { EvalNumber } { EvalLiteral } ifelse } def
/AnalyzeLiteral { dup IsUnaryOp exch IsNumber or { EvalNumber } { EvalLiteral } ifelse } def%%dr 09102006
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% recognize + or -
%% chr -> T/F
/IsUnaryOp { dup 43 eq exch 45 eq or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a number can contain only : 0123456789.
%% chr -> T/F
/IsNumber { dup 48 ge exch dup 57 le 3 -1 roll and exch 46 eq or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index -> STR index number
%% a number can be of the form [0-9]*.[0-9]*\([eE][+-]?[0-9]+\)?
%% STR index -> STR index' number
/ReadNumber {
  exch dup 3 -1 roll dup 3 1 roll
  %%read mantissa
  { 1 add  2 copy dup Strlen eq { pop pop 0 exit } if get dup IsNumber not { exit } if pop } loop
  dup 101 eq exch 69 eq or
  %%% there is a "e" or "E" -> read exponant
  { 1 add 2 copy get dup IsUnaryOp
    { pop 1 add 2 copy get } if
    { IsNumber not { exit } if 1 add 2 copy get } loop }
  if
  dup 4 1 roll
  3 -1 roll exch 1 index sub getinterval
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a number can contain only : 0123456789.
%% chr -> T/F
/IsCondOp { dup 30 eq exch dup 60 ge exch 62 le and or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index -> STR index number
%% a number can be of the form [0-9]*.[0-9]*\([eE][+-]?[0-9]+\)?
%% STR index -> STR index' number
/ReadCondOp {
  NextNonBlankChar 1 index 4 1 roll
  { IsCondOp not { exit } if 1 add  2 copy get } loop
  2 copy 5 -1 roll
  exch 1 index sub getinterval 3 1 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a literal can contain only : 0123456789.
%% chr -> T/F
/IsLiteral {%
  dup 48 ge exch dup  57 le 3 -1 roll and exch
  dup 65 ge exch dup  90 le 3 -1 roll and 3 -1 roll or exch
  dup 97 ge exch     122 le and or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a literal can be of the form [a-zA-Z][a-zA-Z0-9]*\(\((Expression)\)|\(\[Expression\]\)\)?
%% STR index -> literal STR index' nextchr
/ReadLiteral {
  exch dup 3 -1 roll dup 3 1 roll
  %%read literal core
  { 2 copy dup Strlen eq { pop pop 0 exit } if get dup IsLiteral not { exit } if pop 1 add } loop
  4 1 roll dup 5 1 roll 3 -1 roll exch 1 index sub getinterval 4 1 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or a clpar
%% STR index -> STR index STR[index] T/F
/IsEndingExpr {%
  2 copy dup Strlen eq
  %% if end of str is reached -> end !
  { pop pop 0 true }
  %% ending chr -> clpar, comma, |, <, >, =, !,
  {get dup  dup  41 eq
       exch dup 124 eq
       exch dup  93 eq
       exch dup  44 eq
       exch dup  30 eq
       exch dup  60 ge exch 62 le and or or or or or}
  ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or a +-
%% STR index -> STR index STR[index] T/F
/IsEndingTerm { IsEndingExpr { true } { dup dup 43 eq exch 45 eq or } ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or */
%% STR index -> STR index STR[index] T/F
/IsEndingFactor { IsEndingTerm { true } { dup dup 42 eq exch 47 eq or } ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or ^
%% STR index -> STR index STR[index] T/F
/IsEndingPower { IsEndingFactor { true } { dup 94 eq } ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index -> STR index STR[index]
/NextNonBlankChar { { dup Strlen eq { 0 exit } if 2 copy get dup neBlkChar { exit } if pop 1 add } loop } bind def
/neBlkChar { dup 32 ne exch dup 10 ne exch 9 ne and and } bind def
%%%%%%%%%%%%%%%%%%%%%%%%
%% DEBUG
/BRK {false} def
/BRKtrue {/BRK true def} def
/BRKStop {BRK {BRKtoto} if } def
/BRKEvalStop {BRK exch if } def
/BRKBRK2true {BRK {BRK2true} if } def
/BRK2 {false} def
/BRK2true {/BRK2 true def} def
/BRK2Stop {BRK2 {BRK2toto} if } def/BRK {false} def
end
%
%-------------------------------------------------------------------------------%
%
/tx@AlgToPs 12 dict def tx@AlgToPs begin
%
%% algExpr -> PSVector
/AlgToPs { tx@CoreAnalyzerDict begin InitParser AnalyzeListOfE pop pop EndingSequence end } def
/EndingSequence { ExpressionVector aload length /end cvx exch 1 add array astore } def
/InitParser { /ExpressionVector [ /tx@AddMathFunc cvx /begin cvx ] def dup length /Strlen exch def 0 } def
/Strlen 0 def
/EvalListOfExpr {} def%
/EvalNumber {%
    ReadNumber  cvr /ExpressionVector ExpressionVector aload length dup 3 add -1 roll cvx
    exch 1 add array astore def NextNonBlankChar pop } def
/EvalAddSub {%
  /ExpressionVector ExpressionVector aload length dup 5 add -1 roll
  43 eq { /add } { /sub } ifelse cvx exch 1 add array astore def
} def
/EvalMulDiv {%
  /ExpressionVector ExpressionVector aload length dup 5 add -1 roll
  42 eq { /mul } { /div } ifelse cvx exch 1 add array astore def
} def
/EvalPower {%
  /ExpressionVector ExpressionVector aload length dup 5 add -1 roll
  pop /exp cvx exch 1 add array astore def
} def
/EvalFactorial {% DR 09/2011
  /ExpressionVector ExpressionVector aload length
  /fact cvx exch 1 add array astore def
} def
/EvalLiteral {%
  ReadLiteral
  dup 40 eq%%% there is an open par -> function call
  { pop 2 index
    dup (Sum) eq { EvalSum }
    { dup (IfTE) eq { EvalCond }
      { dup (Derive) eq { pop EvalDerive }
	{ pop 1 add NextNonBlankChar pop AnalyzeListOfE 2 index TrigoFunc
          /ExpressionVector ExpressionVector aload length dup 5 add -1 roll cvn cvx
	  exch 1 add array astore def 1 add NextNonBlankChar pop } ifelse } ifelse} ifelse }
  { /ExpressionVector ExpressionVector aload length dup 6 add -1 roll cvn cvx exch 1 add array astore def
    dup 91 eq%%% there is an open bracket -> vector element
    { pop 1 add NextNonBlankChar pop AnalyzeExpr
      /ExpressionVector ExpressionVector aload length /cvi cvx exch /get cvx exch 2 add array astore def 1 add }
    { pop NextNonBlankChar pop }
    ifelse}
  ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% the derive function : Derive(n,f(x))
%% firstparindex lastparindex ->
/EvalDerive {
  %% manage the function descripiton
  1 add ReadNumber 3 1 roll NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  1 add NextNonBlankChar pop
  3 -1 roll cvi
  dup 0 eq
  { pop AnalyzeExpr 3 -1 roll pop 1 add }
  { 1 sub 3 1 roll (x)  exch tx@Derive begin DeriveIndexed end 4 -1 roll
    { (x) tx@Derive begin Derive end } repeat
    ExpressionVector exch /ExpressionVector [] def
    AlgToPs aload length
    /ExpressionVector 1 index 3 add -1 roll aload length dup 3 add -1 roll  /l2 exch def /l1 exch def
    l1 l2 add 1 add l2 neg roll l1 l2 add array astore def 3 -1 roll pop 1 add
    1 index length /Strlen exch def } ifelse
} def
/EvalSum {%
  pop 1 add NextNonBlankChar pop
  %% read the variable name
  ReadLiteral pop NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_Sum } if
  %% read the initial value
  1 add NextNonBlankChar pop ReadNumber cvi 3 1 roll
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  %% read the increment value
  1 add NextNonBlankChar pop ReadNumber cvi 3 1 roll
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  %% read the limit value
  1 add NextNonBlankChar pop ReadNumber cvi 3 1 roll
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  /ExpressionVector ExpressionVector aload length dup 7 add -3 roll 0 4 1 roll
  5 -1 roll 4 add array astore def
  %% keep ExpressionVector for later and create a new one for internal Sum computation
  ExpressionVector 3 1 roll /ExpressionVector [ 6 -1 roll cvn /exch cvx /def cvx ] def
  1 add NextNonBlankChar pop AnalyzeExpr
  %% add each term
  /ExpressionVector ExpressionVector aload length 1 add /add cvx exch array astore def
  /ExpressionVector 4 -1 roll aload length ExpressionVector cvx /for cvx 3 -1 roll 2 add
  array astore def 3 -1 roll pop 1 add
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Convert to radians if trigo function call
%% (name) ->
/TrigoFunc {
  dup (cos) eq 1 index (sin) eq or exch (tan) eq or
  { /ExpressionVector ExpressionVector aload length 3.1415926 /div cvx 180 /mul cvx 5 -1 roll 4 add
    array astore def
  } if
} def
/EvalCond {%
  pop 1 add AnalyzeCond NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_IfTE } if
  ExpressionVector 3 1 roll /ExpressionVector [] def
  1 add AnalyzeExpr ExpressionVector 3 1 roll /ExpressionVector [] def
  NextNonBlankChar 44 ne { ANALYZER_ERROR_missing_second_comma_in_IfTE } if
  1 add AnalyzeExpr
  NextNonBlankChar 41 ne { ANALYZER_ERROR_missing_ending parenthesis_in_IfTE } if
  ExpressionVector
  /ExpressionVector 6 -1 roll aload length dup
  6 add -1 roll cvx exch dup 4 add -1 roll cvx /ifelse cvx 3 -1 roll 3 add array astore def
  1 add 3 -1 roll pop
} def
%% CondOp STR index
/EvalCondOp {%
  3 -1 roll
  dup (=) eq  { /eq } {%
  dup (<) eq  { /lt } {%
  dup (>) eq  { /gt } {%
  dup (>=) eq { /ge } {%
  dup (<=) eq { /ge } {%
  dup (!=) eq { /ne } { ERROR_non_valid_conditional_operator }
  ifelse } ifelse } ifelse } ifelse } ifelse } ifelse
  cvx exch pop
  /ExpressionVector ExpressionVector aload length dup 3 add -1 roll exch 1 add array astore def } def
/EvalUnaryOp {
  3 -1 roll 45 eq { /ExpressionVector ExpressionVector aload length /neg cvx exch 1 add array astore def } if
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% H O O K S
/AnalyzePreHook {} bind def
/PreEvalHook {} bind def
/AnalyzeListOfEPostHook {} bind def
/AnalyzePostHook {} def
/RollOp { 3 1 roll } bind def
end   %tx@CoreAnalyzerDict
%
%--------------------------------------------------------------------%
%
/tx@Derive 41 dict def tx@Derive begin
%%increase ^^ for each function added
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% algExpr variable -> PSVector
/Derive {
  10240 string 3 1 roll 0 3 1 roll
  /Variable exch def
  tx@CoreAnalyzerDict begin InitParser AnalyzeListOfE end
} def
/Strlen 0 def
/InitParser { dup length /Strlen exch def 0 } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% algExpr variable index -> PSVector
/DeriveIndexed {%
  3 1 roll 10240 string 3 1 roll 0 3 1 roll
  /Variable exch def
  tx@CoreAnalyzerDict begin InitParser pop 4 -1 roll AnalyzeExpr 4 -2 roll pop pop 4 -2 roll exch pop end
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u,v)'=-(u',v')
/EvalListOfExpr {%
  4 2 roll 2 copy 9 -1 roll dup length 4 1 roll putinterval add AddPipe
           2 copy 7 -1 roll dup length 4 1 roll putinterval add
  6 -2 roll pop pop
  2 copy pop 0 6 2 roll GetIntervalNewStr 5 1 roll 2 copy 0 exch getinterval 6 1 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (-u)'=-(u')
/EvalUnaryOp {
  4 -2 roll 4 index (0) eq
  { (0) StrConcat 7 -1 roll pop }
  { 7 -1 roll 45 eq
    { AddSub AddOpPar true } { false } ifelse
    3 1 roll 5 index StrConcat 3 -1 roll { AddClPar } if } ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  7 -2 roll pop pop 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (number)'=0
/EvalNumber { ReadNumber (0) 6 2 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u+v)'=u'+v'
/EvalAddSub {%
  7 index dup (0) eq
  { pop true }%% du=0 nothing added
  { dup length exch 5 index 5 index 3 -1 roll putinterval 4 -1 roll add 3 1 roll false }
  ifelse
  5 index dup (0) eq
  { pop { (0) } { 4 -2 roll 2 copy pop 0  6 2 roll GetIntervalNewStr } ifelse }%%dv=0
  { exch
    { 5 -2 roll 7 index 45 eq { AddSub } if false } %%nothing yet added
    { 5 -2 roll 7 index 43 eq%%something yet added
      { AddAdd false } { AddSub AddOpPar true } ifelse }
    ifelse 11 1 roll
    3 -1 roll StrConcat 10 -1 roll { AddClPar } if
    2 copy pop 0 6 2 roll GetIntervalNewStr }
  ifelse
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u*v)' or (u/v)'
/EvalMulDiv { 6 index 42 eq {EvalMul} {EvalDiv} ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u*v)'=u'*v+u*v'
/EvalMul {%
  4 -2 roll 7 index dup (0) eq
  { pop false }%%du=0
  { (1) eq%%du=1
    { false }
    { AddOpPar 7 index StrConcat AddClPar AddMul AddOpPar true } ifelse
    3 1 roll 6 index StrConcat 3 -1 roll { AddClPar } if
    true }%%du!=0
  ifelse
  5 1 roll 5 index (0) eq
  { 5 -1 roll not { (0) StrConcat } if }%%dv=0
  { 5 -1 roll { AddAdd } if
    4 index (1) eq
    { 8 index StrConcat }
    { AddOpPar 8 index StrConcat AddClPar AddMul AddOpPar 4 index StrConcat AddClPar }
    ifelse
  }%%dv!=0
  ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u/v)'=(u'*v-u*v')/v^2
/EvalDiv {%
  4 -2 roll
  4 index (0) eq%%dv=0 -> u'/v
  { 7 index (0) eq { (0) StrConcat } { AddOpPar 7 index StrConcat AddClPar AddDiv 5 index StrConcat } ifelse }
  { 7 index dup (0) eq
    { pop }%%du=0
    { (1) eq%%du=1
      { false }
      { AddOpPar 7 index StrConcat AddClPar AddMul AddOpPar true } ifelse
      3 1 roll 6 index StrConcat 3 -1 roll { AddClPar } if}%%du!=0
    ifelse
      AddSub
      4 index (1) eq
      { 8 index StrConcat }
      { AddOpPar 8 index StrConcat AddClPar AddMul AddOpPar 4 index StrConcat AddClPar }
      ifelse
    %}%%dv!=0
    2 copy GetIntervalNewStr 3 1 roll pop 0 AddOpPar 3 -1 roll StrConcat AddClPar
    AddDiv AddOpPar 5 index StrConcat AddClPar 2 copy (^2) putinterval 2 add }
  ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% str1 index str2 -> str1 index
/StrConcat { dup length 4 2 roll 2 copy 6 -1 roll putinterval 3 -1 roll add } bind def
/GetIntervalNewStr { 0 exch getinterval dup length string copy } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u^v)'=(u^v)'=u'vu^(v-1)+v'u^(v)ln(u)
/EvalPower {%
  4 -2 roll 7 index (0) eq
  {%%if du=0 then (u^v)'=v'ln(u)u^v
    4 index (0) eq
    { (0) StrConcat }%%if dv=0 then (u^v)'=0
    { 4 index (1) ne { AddOpPar 4 index StrConcat (\)*) StrConcat } if
      8 index (e) ne { (ln\() StrConcat 8 index StrConcat (\)*) StrConcat } if
      AddOpPar 8 index StrConcat (\)^\() StrConcat 5 index StrConcat AddClPar } ifelse
  }
  {%%du!=0
    4 index (0) eq
    {%%if dv=0 then (u^v)'=vu'u^(v-1)
      5 index dup IsStrNumber
      { dup (0) eq
        { StrConcat }
        { dup dup (1) eq exch (1.0) eq or
          { StrConcat  }
	  { StrConcat
	    7 index dup (1) ne exch (1.0) ne and%%%dr 09102006 insert du if <> 1
	    { (*\() StrConcat 7 index StrConcat (\)) StrConcat } if%%%dr 09102006
            (*\() StrConcat 8 index StrConcat (\)) StrConcat
            5 index  dup dup (2) eq exch (2.0) eq or
	    { pop } { cvr 1 sub 20 string cvs 3 1 roll (^) StrConcat 3 -1 roll StrConcat } ifelse } ifelse } ifelse }
      { pop AddOpPar 5 index StrConcat (\)*\() StrConcat 8 index StrConcat (\)^\() StrConcat
        5 index StrConcat (-1\)) StrConcat } ifelse
    }
    {%%if dv!=0 and du!=0 then (u^v)'=u'vu^(v-1)+v'u^(v)ln(u)
      7 index (1) ne { AddOpPar 7 index StrConcat (\)*) StrConcat } if
      AddOpPar 5 index StrConcat (\)*\() StrConcat
      8 index StrConcat (\)^\() StrConcat
      5 index StrConcat (-1\)+\() StrConcat
      4 index (1) ne { 4 index StrConcat (\)*\() StrConcat } if
      8 index StrConcat (\)^\() StrConcat
      5 index StrConcat (\)*ln\() StrConcat
      8 index StrConcat AddClPar
    } ifelse
  } ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% No derivative for factorial ! only cst => null derivative
/EvalFactorial {% DR 09/2011
  4 index (0) eq
  { (0) mark 8 -2 roll  cleartomark 2 index 7 index dup 4 index exch sub getinterval exch 6 2 roll }
  { DERIVATIVE_ENGINE_ERROR_no_variable_in_factorial } ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% str -> true/false
/IsStrNumber {%
  true exch
  { dup 48 lt exch dup 57 gt 3 -1 roll or
    exch dup 46 ne%%.
    exch dup 43 ne%%+
    exch 45 ne%%-
    and and and { pop false } if } forall
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% literal switch -> func call, vector, variables
/EvalLiteral {%
  ReadLiteral dup 40 eq%%% there is an open par -> function call
  { pop (EvalFunc_             ) 9 4 index StrConcat 0 exch getinterval cvn cvx exec }
  { dup 91 eq%%% there is an open bracket -> vector element
    { DERIVATIVE_ENGINE_ERROR_vector_not_yet_implemented }
    { pop EvalVariable }
    ifelse }
  ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% first last parpos Expr[first:parpos-1] ->
/EvalVariable { 2 index Variable eq { (1) } { (0) } ifelse 4 -1 roll exch 6 2 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (f(u))'=u'f'(u)
/EvalFunc {
  4 2 roll 4 index (1) ne
  { AddOpPar 4 index StrConcat (\)*) StrConcat } if
  (Eval             ) 4 8 index StrConcat 0 exch getinterval cvn cvx exec
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 9 -3 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Func derivative -> Eval<func>
/EvalFunc_sin {%
  PreCommonFunc
  { (cos\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_cos {%
  PreCommonFunc
  { (\(-sin\() StrConcat 5 index StrConcat (\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_tan {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse  (/cos\() StrConcat 5 index StrConcat (\)^2) StrConcat } if
  PostCommonFunc } def
/EvalFunc_asin {%
  PreCommonFunc
  { (1/sqrt\(1-\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_acos {%
  PreCommonFunc
  { (-1/sqrt\(1-\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_atg {%
  PreCommonFunc
  { (1/\(1+\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_floor {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse (/\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_ln {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse (/\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_exp {%
  PreCommonFunc
  {  (exp\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_EXP {%
  PreCommonFunc
  {  (EXP\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_sqrt {%
  PreCommonFunc
  { dup 0 eq { (1) StrConcat } { 1 sub } ifelse (/\(2*sqrt\() StrConcat 5 index StrConcat (\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Fact {%
  PreCommonFunc { DERIVATIVE_ENGINE_ERROR_no_variable_expression_in_Fact } if
  PostCommonFunc } def
/EvalFunc_sh {%
  PreCommonFunc
  { (ch\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_ch {%
  PreCommonFunc
  { (sh\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_th {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse  (/ch\() StrConcat 5 index StrConcat (\)^2) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Argsh {%
  PreCommonFunc
  { (1/sqrt\(1+\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Argch {%
  PreCommonFunc
  { (1/sqrt\(\() StrConcat 5 index StrConcat (\)^2-1\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Argth {%
  PreCommonFunc
  { (1/\(1-\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
/PreCommonFunc {
  1 add NextNonBlankChar pop 3 -1 roll 5 1 roll AnalyzeExpr 1 add NextNonBlankChar pop
  4 2 roll 4 index (0) eq
  { (0) StrConcat false }
  { 4 index (1)  ne { AddOpPar 4 index StrConcat (\)*) StrConcat } if true } ifelse
} def
/PostCommonFunc {
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 9 -3 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
/EvalFunc_Derive {%
  1 add ReadNumber cvi 1 add dup cvr log 1 add cvi string cvs
  4 -1 roll pop 5 1 roll 1 add NextNonBlankChar pop AnalyzeExpr 1 add
  4 -2 roll (Derive\() StrConcat 7 -1 roll StrConcat (,) StrConcat 6 -1 roll StrConcat AddClPar
  2 copy pop 0 6 2 roll GetIntervalNewStr 6 -1 roll pop 2 index 6 index dup 4 index exch sub getinterval
  exch 6 2 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% literal switch -> func call, vector, variables
/EvalFunc_Sum {%
  1 add NextNonBlankChar pop
  %% read the variable name
  ReadLiteral pop 3 -1 roll pop NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_Sum } if
  %% read the initial value
  1 add NextNonBlankChar pop ReadNumber pop
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  %% read the increment value
  1 add NextNonBlankChar pop ReadNumber pop
  2 copy get 44 ne { ANALYZER_ERROR_missing_third_comma_in_Sum } if
  %% read the limit value
  1 add NextNonBlankChar pop ReadNumber pop
  2 copy get 44 ne { ANALYZER_ERROR_missing_fourth_comma_in_Sum } if
  1 add NextNonBlankChar pop dup 6 1 roll 3 -1 roll pop AnalyzeExpr 1 add NextNonBlankChar pop
  4 -2 roll 3 index 8 index dup 9 index exch sub getinterval StrConcat
  4 index StrConcat AddClPar
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 9 -3 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% literal switch -> func call, vector, variables
/EvalFunc_IfTE {%
  3 -1 roll pop 1 add NextNonBlankChar pop SkipCond
  NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_IfTE } if
  1 add NextNonBlankChar pop dup 5 1 roll
  AnalyzeExpr NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_second_comma_in_IfTE } if
  1 add NextNonBlankChar pop
  AnalyzeExpr 1 add NextNonBlankChar pop
  4 -2 roll 3 index 10 index dup 11 index exch sub getinterval StrConcat
  6 index StrConcat (,) StrConcat 4 index StrConcat AddClPar
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% advance in str until a comma is found (no error detection!)
%% str index -> str index'
/SkipCond { { 1 add 2 copy get 44 eq {exit } if } loop } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Convert to radians if trigo function call
%% (name) ->
/TrigoFunc {
  dup (cos) eq 1 index (sin) eq or exch (tan) eq or
  { /ExpressionVector ExpressionVector aload length Pi /div cvx 180 /mul cvx 5 -1 roll 4 add
    array astore def
  } if
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% No derivative for condition....
/EvalCondOp { 3 -1 roll pop } bind def
/PutIntervalOneAdd {putinterval 1 add} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add open parenthesis in string at the given index
%% str index -> str index+1
/AddOpPar {2 copy (\() PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add close parenthesis in string at the given index
%% str index -> str index+1
/AddClPar {2 copy (\)) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add 0 in string at the given index
%% str index -> str index+1
/AddZero {2 copy (0) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add open parenthesis in string at the given index
%% str index -> str index+1
/AddMul {2 copy (*) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add open parenthesis in string at the given index
%% str index -> str index+1
/AddDiv {2 copy (/) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add a plus sign in string at the given index
%% str index -> str index+1
/AddAdd {2 copy (+) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add a minus sign in string at the given index
%% str index -> str index+1
/AddSub {2 copy (-) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add a pipe sign in string at the given index
%% str index -> str index+1
/AddPipe {2 copy (|) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% H O O K S
/AnalyzePreHook { dup 5 1 roll } bind def
/PreEvalHook {} def
/AnalyzePostHook { 7 -1 roll pop } bind def
/AnalyzeListOfEPostHook { 6 -1 roll mark 6 1 roll cleartomark } bind def
/RollOp { 5 1 roll } bind def
end%%%tx@CoreAnalyzerDict
/tx@AddMathFunc 12 dict def tx@AddMathFunc begin
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% NEW FUNC
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% function arcsine in radians asin(x)=atan(x/sqrt(1-x^2))
%% x -> theta
/asin {%
  dup abs 1 gt { EQDFasinrangeerror  } if
  dup dup dup mul 1 exch sub sqrt atan exch 0 lt { 360 sub } if DegtoRad
} def
%% function arccosine in radians acos(x)=atan(sqrt(1-x^2)/x)
%% x -> theta
/acos {%
  dup abs 1 gt { EQDFacosrangeerror  } if
  dup dup mul 1 exch sub sqrt exch atan DegtoRad
} def
%% function arctangent in radians
%% x -> theta
/atg { 1 atan dup 90 gt { 360 sub } if DegtoRad } bind def
%% HYPERBOLIC FUNCTIONS
/sh { dup Ex exch neg Ex sub 2 div } def
/ch { dup Ex exch neg Ex add 2 div } def
/th { dup sh exch ch div } def
/Argsh { dup dup mul 1 add sqrt add ln } def
/Argch { dup dup mul 1 sub sqrt add ln } def
/Argth { dup 1 add exch 1 exch sub div ln 2 div } def
%% modified exponential funtion for 0
%% x n -> x^n
/Exp { dup 0 eq { pop pop 1 } { exp } ifelse } bind def
%% modified exponential funtion for 0
%% x -> e^x
/Ex { Euler exch exp } bind def
%%
%% factorial function
%% n -> n!
/Fact { 1 exch 2 exch 1 exch { mul } for } bind def
/fact { Fact } bind def
/! { Fact } bind def
end
%
% END pst-algparser.pro

%%EndProcSet
%%BeginProcSet: pst-tools.pro 0 0
% $Id: pst-tools.pro 842 2013-10-26 10:25:41Z herbert $
%
%% PostScript tools prologue for pstricks.tex.
%% Version 0.06, 2017/12/03
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%
%
/Pi2 1.57079632679489661925640 def
/factorial { % n on stack, returns n! 
  dup 0 eq { 1 }{ 
    dup 1 gt { dup 1 sub factorial mul } if }
  ifelse } def 
%
/MoverN { % m n on stack, returns the binomial coefficient m over n
  2 dict begin
  /n exch def /m exch def
  n 0 eq { 1 }{
    m n eq { 1 }{
      m factorial n factorial m n sub factorial mul div } ifelse } ifelse 
  end
} def
%
/ps@ReverseOrderOfPoints { % on stack [P1 P2 P3 ...Pn]=>[Pn,Pn-1,...,P2,P1]
  5 dict begin       % all local
  aload length /n ED % number of coors
  n 2 div cvi /m ED  % number of Points
  /n1 n def
  m { n1 2 roll /n1 n1 2 sub def } repeat
  n array astore
  end
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% subroutines for complex numbers, given as an array [a b] 
% which is a+bi = Real+i Imag
%
/cxadd {		% [a1 b1] [a2 b2] = [a1+a2 b1+b2]
  dup 0 get		% [a1 b1] [a2 b2] a2
  3 -1 roll		% [a2 b2] a2 [a1 b1]
  dup 0 get		% [a2 b2] a2 [a1 b1] a1
  3 -1 roll		% [a2 b2] [a1 b1] a1 a2
  add			% [a2 b2] [a1 b1] a1+a2
  3 1 roll		% a1+a2 [a2 b2] [a1 b1]
  1 get			% a1+a2 [a2 b2] b1
  exch 1 get		% a1+a2 b1 b2
  add 2 array astore
} def
%
/cxneg {		% [a b]
  dup 1 get		% [a b] b
  exch 0 get		% b a
  neg exch neg		% -a -b
  2 array astore
} def
%
/cxsub { cxneg cxadd } def  % same as negative addition
%
% [a1 b1][a2 b2] = [a1a2-b1b2 a1b2+b1a2] = [a3 b3]
/cxmul {		% [a1 b1] [a2 b2]
  dup 0 get		% [a1 b1] [a2 b2] a2
  exch 1 get		% [a1 b1] a2 b2
  3 -1 roll		% a2 b2 [a1 b1]
  dup 0 get		% a2 b2 [a1 b1] a1
  exch 1 get		% a2 b2 a1 b1
  dup			% a2 b2 a1 b1 b1
  5 -1 roll dup		% b2 a1 b1 b1 a2 a2
  3 1 roll mul		% b2 a1 b1 a2 b1a2
  5 -2 roll dup		% b1 a2 b1a2 b2 a1 a1
  3 -1 roll dup		% b1 a2 b1a2 a1 a1 b2 b2
  3 1 roll mul		% b1 a2 b1a2 a1 b2 a1b2
  4 -1 roll add		% b1 a2 a1 b2 b3
  4 2 roll mul		% b1 b2 b3 a1a2
  4 2 roll mul sub	% b3 a3
  exch 2 array astore
} def
%
% [a b]^2 = [a^2-b^2 2ab] = [a2 b2]
/cxsqr {		% [a b]   square root
  dup 0 get exch 1 get	% a b
  dup dup mul		% a b b^2
  3 -1 roll		% b b^2 a
  dup dup mul 		% b b^2 a a^2
  3 -1 roll sub		% b a a2
  3 1 roll mul 2 mul	% a2 b2	
  2 array astore
} def
%
/cxsqrt {		% [a b]
%  dup cxnorm sqrt /r exch def
%  cxarg 2 div RadtoDeg dup cos r mul exch sin r mul cxmake2 
  cxlog 		% log[a b]
  2 cxrdiv 		% log[a b]/2
  aload pop exch	% b a
  2.781 exch exp	% b exp(a)
  exch cxconv exch	% [Re +iIm] exp(a)
  cxrmul		%
} def
%
/cxarg { 		% [a b] 
  aload pop 		% a b
  exch atan 		% arctan b/a
  DegtoRad 		% arg(z)=atan(b/a)
} def
%
% log[a b] = [a^2-b^2 2ab] = [a2 b2]
/cxlog {		% [a b]
  dup 			% [a b][a b]
  cxnorm 		% [a b] |z|
  log 			% [a b] log|z|
  exch 			% log|z|[a b]
  cxarg 		% log|z| Theta
  cxmake2 		% [log|z| Theta]
} def
%
% square of magnitude of complex number
/cxnorm2 {		% [a b]
  dup 0 get exch 1 get	% a b
  dup mul			% a b^2
  exch dup mul add	% a^2+b^2
} def
%
/cxnorm {		% [a b]
  cxnorm2 sqrt
} def
%
/cxconj {		% conjugent complex
  dup 0 get exch 1 get	% a b
  neg 2 array astore	% [a -b]
} def
%
/cxre { 0 get } def	% real value
/cxim { 1 get } def	% imag value
%
% 1/[a b] = ([a -b]/(a^2+b^2)
/cxrecip {		% [a b]
  dup cxnorm2 exch	% n2 [a b]
  dup 0 get exch 1 get	% n2 a b
  3 -1 roll		% a b n2
  dup			% a b n2 n2
  4 -1 roll exch div	% b n2 a/n2
  3 1 roll div		% a/n2 b/n2
  neg 2 array astore
} def
%
/cxmake1 { 0 2 array astore } def % make a complex number, real given
/cxmake2 { 2 array astore } def	  % dito, both given
%
/cxdiv { cxrecip cxmul } def
%
% multiplikation by a real number
/cxrmul {		% [a b] r
  exch aload pop	% r a b
  3 -1 roll dup		% a b r r
  3 1 roll mul		% a r b*r
  3 1 roll mul		% b*r a*r
  exch 2 array astore   % [a*r b*r]
} def
%
% division by a real number
/cxrdiv {		% [a b] r
  1 exch div		% [a b] 1/r
  cxrmul
} def
%
% exp(i theta) = cos(theta)+i sin(theta) polar<->cartesian
/cxconv {		% theta
  RadtoDeg dup sin exch cos cxmake2
} def

%%%%% ### bubblesort ###
%% syntax : array bubblesort --> array2 trie par ordre croissant
%% code de Bill Casselman
%% http://www.math.ubc.ca/people/faculty/cass/graphics/text/www/
/bubblesort { % on stack must be an array [ ... ]
4 dict begin
   /a exch def
   /n a length 1 sub def
   n 0 gt {
      % at this point only the n+1 items in the bottom of a remain to
      % the sorted largest item in that blocks is to be moved up into
      % position n
      n {
         0 1 n 1 sub {
            /i exch def
            a i get a i 1 add get gt {
               % if a[i] > a[i+1] swap a[i] and a[i+1]
               a i 1 add
               a i get
               a i a i 1 add get
               % set new a[i] = old a[i+1]
               put
               % set new a[i+1] = old a[i]
               put
            } if
         } for
         /n n 1 sub def
      } repeat
   } if
   a % return the sorted array
end
} def
%
/concatstringarray{  %  [(a) (b) ... (z)] --> (ab...z)  20100422
  0 1 index { length add } forall 
  string     
  0 3 2 roll      
  { 3 copy putinterval length add }forall 
  pop  
} bind def
%
/concatstrings{ % (a) (b) -> (ab)  
  1 dict begin
  exch dup length    
  2 index length add string    
  dup dup 4 2 roll copy length
  4 -1 roll putinterval
  end
} def
%
/reversestring { % (aBC) -> (CBa)
  5 dict begin
  /str exch def
  /L str length def
  /strTemp L string def
  /i 0 def
  L { 
    /I L 1 sub i sub def
    strTemp i str I 1 getinterval putinterval
    /i i 1 add def
  } repeat
  strTemp
  end
} def
%
/concatarray{ % [a c] [b d] -> [a c b d]  
  2 dict begin
  /a2 exch def
  /a1 exch def
  [ a1 aload pop a2 aload pop ]
  end
} def
%
/dot2comma {% on stack a string (...) 
  2 dict begin
  /Output exch def
  0 1 Output length 1 sub { 
    /Index exch def 
    Output Index get 46 eq { Output Index 44 put } if 
  } for
  Output
  end
} def
%
/rightTrim { % on stack the string and the character number to be stripped  
  /charNo exch def
  dup
  length 1 sub -1 0 { 
    /i exch def dup i get charNo ne { exit } if 
  } for
  0 i 1 add getinterval
  dup length string copy
} bind def  % leaves the stripped string on the stack

/psStringwidth /stringwidth load def
/psShow /show load def

%/stringwidth{ 32 rightTrim psStringwidth } bind def

%/show { 32 rightTrim psShow } bind def
%-----------------------------------------------------------------------------%

/pgffunctions {
    /pgfsc{}bind def% stroke color is empty by default
    /pgffc{}bind def% fill color is empty by default
    /pgfstr{stroke}bind def%
    /pgffill{fill}bind def%
    /pgfeofill{eofill}bind def%
    /pgfe{a dup 0 rlineto exch 0 exch rlineto neg 0 rlineto closepath}bind def% rectangle
    /pgfw{setlinewidth}bind def% setlinewidth
    /pgfs{save pgfpd 72 Resolution div 72 VResolution div neg scale 
      magscale{1 DVImag div dup scale}if 
      pgfx neg pgfy neg translate pgffoa .setopacityalpha}bind def% save
    /pgfr{pgfsd restore}bind def %restore
    userdict begin%
    /pgfo{pgfsd /pgfx currentpoint /pgfy exch def def @beginspecial}bind def %open
    /pgfc{newpath @endspecial pgfpd}bind def %close
    /pgfsd{globaldict /pgfdelta /delta where {pop delta} {0} ifelse put}bind def% save delta
    /pgfpd{/delta globaldict /pgfdelta get def}bind def % put delta
    /.setopacityalpha where {pop} {/.setopacityalpha{pop}def} ifelse % install .setopacityalpha 
    /.pgfsetfillopacityalpha{/pgffoa exch def
      /pgffill{gsave pgffoa .setopacityalpha fill 1 .setopacityalpha newpath fill grestore newpath}bind def
      /pgfeofill{gsave pgffoa .setopacityalpha eofill 1 .setopacityalpha newpath eofill grestore newpath}bind def}bind def
    /.pgfsetstrokeopacityalpha{/pgfsoa exch def /pgfstr{gsave pgfsoa .setopacityalpha stroke grestore newpath}bind def}bind def
    /pgffoa 1 def
    /pgfsoa 1 def
    end
} def
%-----------------------------------------------------------------------------%
% END pst-tools.pro

%%EndProcSet
%%BeginProcSet: pst-dots.pro 0 0
% $Id: pst-dots.pro 446 2017-04-19 11:40:55Z herbert $
%
%% PostScript prologue for pstricks.tex.
%% Version 2.02,  2009/06/16
%%
%% For distribution, see pstricks.tex.
%%
%% Timothy Van Zandt <tvz@Princeton.EDU>
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%%
%% Modified by Etienne Riga  - Dec. 16, 1999
%% Modified by Etienne Riga  - 2005/01/01 (er)
%% to add /Diamond, /SolidDiamond and /BoldDiamond
%% Modified by Herbert Voss (hv) - 2008/04/17 
%
10 dict dup begin			% hold local
  /FontType 3 def
  /FontMatrix [.001 0 0 .001 0 0] def
%  /FontBBox [-571.5 -742.5 571.5 742.5] def % changed to next line 20060616 hv
  /FontBBox [-1000 -1000 1000 1000] def  % See end of file in /BuildGlyph
  /Encoding 256 array def
  0 1 255 {Encoding exch /.notdef put} for % fill the array with /.notdef
  Encoding				   % replace with given dot names
    dup (b) 0 get /Bullet put		   % get the numerical position of b in ASCII
%					   % and save /Bullet at this place in Encoding 
    dup (c) 0 get /Circle put
    dup (C) 0 get /BoldCircle put	% 67
    dup (u) 0 get /SolidTriangle put
    dup (t) 0 get /Triangle put
    dup (T) 0 get /BoldTriangle put
    dup (r) 0 get /SolidSquare put
    dup (s) 0 get /Square put
    dup (S) 0 get /BoldSquare put
    dup (q) 0 get /SolidPentagon put
    dup (p) 0 get /Pentagon put
    dup (P) 0 get /BoldPentagon put
%%%		  
    dup (k) 0 get /Asterisk put
    dup (K) 0 get /BoldAsterisk put
    dup (J) 0 get /SolidAsterisk put
    dup (h) 0 get /Hexagon put
    dup (H) 0 get /BoldHexagon put
    dup (G) 0 get /SolidHexagon put
    dup (f) 0 get /Octogon put		% 2008-04-18 hv
    dup (F) 0 get /BoldOctogon put	% 2008-04-18 hv
    dup (g) 0 get /SolidOctogon put	% 2008-04-18 hv
    dup (a) 0 get /Add put
    dup (A) 0 get /BoldAdd put 		% 65
    dup (x) 0 get /Mul put
    dup (X) 0 get /BoldMul put
    dup (m) 0 get /Oplus put
    dup (M) 0 get /BOplus put
    dup (e) 0 get /SolidOplus put
    dup (n) 0 get /Otimes put
    dup (N) 0 get /BOtimes put
    dup (E) 0 get /SolidOtimes put
    dup (i) 0 get /Bar put
    dup (I) 0 get /BoldBar put
    dup (l) 0 get /SolidDiamond put
    dup (d) 0 get /Diamond put
        (D) 0 get /BoldDiamond put
%%%  
/CharProcs 47 dict def
CharProcs begin
  /CirclePath {0 0 500 0 360 arc closepath} def
  /Bullet {CirclePath fill} def
  /Circle {CirclePath .9 .9 scale CirclePath eofill} def
  /BoldCircle {CirclePath .8 .8 scale CirclePath eofill} def
  /TrianglePath {0 660 moveto -571.5 -330 lineto 571.5 -330 lineto closepath} def
  /SolidTriangle {TrianglePath fill} def
  /Triangle {TrianglePath .85 .85 scale TrianglePath eofill} def
  /BoldTriangle {TrianglePath .7 .7 scale TrianglePath eofill} def
  /SquarePath {-450 450 moveto 450 450 lineto 450 -450 lineto -450 -450 lineto closepath} def
  /SolidSquare {SquarePath fill} def
  /Square {SquarePath .89 .89 scale SquarePath eofill} def
  /BoldSquare {SquarePath .78 .78 scale SquarePath eofill} def
  /PentagonPath {
    -337.8 -465 moveto 337.8 -465 lineto 546.6 177.6 lineto
    0 574.7 lineto -546.6 177.6 lineto closepath
  } def
  /SolidPentagon {PentagonPath fill} def
  /Pentagon {PentagonPath .89 .89 scale PentagonPath eofill} def
  /BoldPentagon {PentagonPath .78 .78 scale PentagonPath eofill} def
%-------------- hv begin 2004/07/25   from: er 2003/03/24
  /HexagonPath {
    0 550 moveto -476 275 lineto -476 -275 lineto
    0 -550 lineto 476 -275 lineto 476 275 lineto closepath
  } def
  /SolidHexagon {HexagonPath fill} def
  /Hexagon {HexagonPath .89 .89 scale HexagonPath eofill} def
  /BoldHexagon {HexagonPath .79 .79 scale HexagonPath eofill} def
%					2008-04-18 hv
  /OctogonPath { 
     550 dup 22.5 tan mul dup neg dup add /xMove exch def 
     exch moveto 7 { xMove 0 rlineto 45 rotate } repeat closepath } def 
  /SolidOctogon { OctogonPath fill                             } def
  /Octogon {      OctogonPath .89 .89 scale OctogonPath eofill } def
  /BoldOctogon {  OctogonPath .79 .79 scale OctogonPath eofill } def
%
  /AsteriskPath {
    20 0 moveto 10 250 180 500 0 500 curveto
    -180 500 -10 250 -20 0 curveto closepath
  } def
  /Asterisk {
    AsteriskPath 60 rotate AsteriskPath 60 rotate AsteriskPath
    60 rotate AsteriskPath 60 rotate AsteriskPath 60 rotate AsteriskPath fill
  } def
%
  /Basterp {50 250 220 500 0 500 curveto -220 500 -50 250 -50 30 cos 100 mul curveto} def
  /BoldAsteriskPath {
    50 30 cos 100 mul moveto  Basterp
    60 rotate Basterp 60 rotate Basterp
    60 rotate Basterp 60 rotate Basterp
    60 rotate Basterp closepath
  } def
  /BoldAsterisk {BoldAsteriskPath fill} def
  /SolidAsterisk {CirclePath .9 .9 scale BoldAsteriskPath eofill} def
  /CrossPath {
    40 550 moveto -40 550 lineto -40 40 lineto -550 40 lineto
    -550 -40 lineto -40 -40 lineto -40 -550 lineto 40 -550 lineto 
    40 -40 lineto 550 -40 lineto 550 40 lineto 40 40 lineto closepath
  } def
  /BoldCrossPath {80 550 moveto -80 550 lineto -80 80 lineto -550 80 lineto
    -550 -80 lineto -80 -80 lineto -80 -550 lineto 80 -550 lineto 
    80 -80 lineto 550 -80 lineto 550 80 lineto 80 80 lineto closepath
  } def
  /Add {CrossPath fill} def
  /Mul {45 rotate CrossPath fill} def
  /BoldAdd {BoldCrossPath fill} def
  /BoldMul {45 rotate BoldCrossPath fill} def
  /Oplus {CirclePath .9 .9 scale CirclePath eofill .775 .775 scale CrossPath fill } def 
  /SolidOplus {CirclePath .775 .775 scale BoldCrossPath eofill} def 
  /BOplus {CirclePath .8 .8 scale CirclePath eofill .775 .775 scale BoldCrossPath fill} def 
  /Otimes {CirclePath .9 .9 scale CirclePath eofill 45 rotate .775 .775 scale CrossPath fill} def 
  /BOtimes {CirclePath .8 .8 scale CirclePath eofill 45 rotate .775 .775 scale BoldCrossPath fill } def 
  /SolidOtimes {CirclePath 45 rotate .775 .775 scale BoldCrossPath eofill} def 
  /BarPath {40 660 moveto -40 660 lineto -40 -660 lineto 40 -660 lineto closepath} def
  /Bar {BarPath fill} def
  /BoldBarPath {80 660 moveto -80 660 lineto -80 -660 lineto 80 -660 lineto closepath} def
  /BoldBar {BoldBarPath fill} def
  /DiamondPath {0 742.5 moveto -428.5 0 lineto 0 -742.5 lineto 428.5 0 lineto closepath} def
  /SolidDiamond {DiamondPath fill} def
  /Diamond {DiamondPath .865 .865 scale DiamondPath eofill} def
  /BoldDiamond {DiamondPath .73 .73 scale DiamondPath eofill} def
%%%
  /.notdef { } def
end
%
/BuildGlyph {
  exch
  begin 		
%  Metrics 1 index get exec 0
    0 0
%      BBoxes 3 index get exec
    -1000 -1000 1000 1000
%     -571.5 -742.5 571.5 742.5
    setcachedevice
    CharProcs begin load exec end
  end
} def
%
/BuildChar {
  1 index /Encoding get exch get
  1 index /BuildGlyph get exec
} bind def
%
end
/PSTricksDotFont exch definefont pop
%
%% end

%%EndProcSet
%%BeginProcSet: pst-ovl.pro 0 0
% $Id: pst-ovl.pro 859 2013-12-21 16:51:58Z herbert $
%
%% PostScript prologue for pst-ovl.tex.
%% Version 0.04, 2014/05/12
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%
%
/tx@ovlDict 10 dict def 
tx@ovlDict begin
%
/BeginOL { 
  dup -1 eq exch TheOL eq or 
    { IfVisible not { Visible /IfVisible true def } if } 
    { IfVisible { Invisible /IfVisible false def } if } ifelse 
} def
%
/InitOL { 
  /OLUnit [ 3000 3000 matrix defaultmatrix dtransform ] cvx def
  /Visible { CP OLUnit idtransform T moveto } def 
  /Invisible { CP OLUnit neg exch neg exch idtransform T moveto } def 
  /BOL { BeginOL } def
  /IfVisible true def 
} def
%
end
%
% END pst-ovl.pro

%%EndProcSet
%%BeginProcSet: unvsl_sjpjw4.enc 0 0
% THIS FILE WAS AUTOMATICALLY GENERATED -- DO NOT EDIT

%%AutoEnc_sjpjw4ssg32e5kzaeiwtqme4ud
% Encoding created by otftotfm on Thu May  1 20:56:04 2014
% Command line follows encoding
/AutoEnc_sjpjw4ssg32e5kzaeiwtqme4ud [
%00
  /grave /acute /circumflex /tilde /dieresis /hungarumlaut /ring /caron
  /breve /macron /dotaccent /cedilla /ogonek /quotesinglbase /guilsinglleft /guilsinglright
%10
  /quotedblleft /quotedblright /quotedblbase /guillemotleft /guillemotright /endash /emdash /.notdef
  /f_j /dotlessi /.notdef /f_i /f_f_i /f_f /f_l /f_f_l
%20
  /.notdef /exclam /quotedbl /numbersign /dollar /percent /ampersand /quoteright
  /parenleft /parenright /asterisk /plus /comma /hyphen /period /slash
%30
  /zero /one /two /three /four /five /six /seven
  /eight /nine /colon /semicolon /less /equal /greater /question
%40
  /at /A /B /C /D /E /F /G
  /H /I /J /K /L /M /N /O
%50
  /P /Q /R /S /T /U /V /W
  /X /Y /Z /bracketleft /backslash /bracketright /asciicircum /underscore
%60
  /quoteleft /a /b /c /d /e /f /g
  /h /i /j /k /l /m /n /o
%70
  /p /q /r /s /t /u /v /w
  /x /y /z /braceleft /bar /braceright /asciitilde /hyphen
%80
  /f_t /f_f_j /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
  /.notdef /.notdef /Lslash /.notdef /.notdef /.notdef /.notdef /.notdef
%90
  /.notdef /.notdef /Scaron /.notdef /.notdef /.notdef /.notdef /.notdef
  /Ydieresis /.notdef /Zcaron /.notdef /.notdef /.notdef /.notdef /section
%A0
  /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
  /.notdef /.notdef /lslash /.notdef /.notdef /.notdef /.notdef /.notdef
%B0
  /.notdef /.notdef /scaron /.notdef /.notdef /.notdef /.notdef /.notdef
  /ydieresis /.notdef /zcaron /.notdef /.notdef /exclamdown /questiondown /sterling
%C0
  /Agrave /Aacute /Acircumflex /Atilde /Adieresis /Aring /AE /Ccedilla
  /Egrave /Eacute /Ecircumflex /Edieresis /Igrave /Iacute /Icircumflex /Idieresis
%D0
  /Eth /Ntilde /Ograve /Oacute /Ocircumflex /Otilde /Odieresis /OE
  /Oslash /Ugrave /Uacute /Ucircumflex /Udieresis /Yacute /Thorn /.notdef
%E0
  /agrave /aacute /acircumflex /atilde /adieresis /aring /ae /ccedilla
  /egrave /eacute /ecircumflex /edieresis /igrave /iacute /icircumflex /idieresis
%F0
  /eth /ntilde /ograve /oacute /ocircumflex /otilde /odieresis /oe
  /oslash /ugrave /uacute /ucircumflex /udieresis /yacute /thorn /germandbls
] def
% Command line: 'otftotfm --automatic --encoding=fontools_t1
% --tfm-directory=texmf/fonts/tfm/arkandis/universalis
% --vf-directory=texmf/fonts/vf/arkandis/universalis
% --type1-directory=texmf/fonts/type1/arkandis/universalis
% --truetype-directory=texmf/fonts/truetype/arkandis/universalis
% --encoding-directory=texmf/fonts/enc/dvips/universalis
% --map-file=texmf/fonts/map/dvips/universalis/UniversalisADFStd.map
% --no-updmap --coding-scheme=EXTENDED TEX FONT ENCODING - LATIN
% --feature=kern --feature=liga UniversalisADFStd-BoldCondIt.otf
% UniversalisADFStd-BoldCondIt-lf-t1'

%%EndProcSet
%%BeginProcSet: cm-super-t1.enc 0 0
% This file is generated from `T1uni.map' and `glyphlist.txt', `gl-other.txt'
%
% LIGKERN hyphen hyphen =: endash ; endash hyphen =: emdash ;
% LIGKERN quoteleft quoteleft =: quotedblleft ;
% LIGKERN quoteright quoteright =: quotedblright ;
% LIGKERN comma comma =: quotedblbase ; less less =: guillemotleft ;
% LIGKERN greater greater =: guillemotright ;
% LIGKERN f f =: ff ; f i =: fi ; f l =: fl ; ff i =: ffi ; ff l =: ffl ;
%
% LIGKERN space {} * ; * {} space ; zero {} * ; * {} zero ;
% LIGKERN one {} * ; * {} one ; two {} * ; * {} two ;
% LIGKERN three {} * ; * {} three ; four {} * ; * {} four ;
% LIGKERN five {} * ; * {} five ; six {} * ; * {} six ;
% LIGKERN seven {} * ; * {} seven ; eight {} * ; * {} eight ;
% LIGKERN nine {} * ; * {} nine ;
%
/T1Encoding [
% 0x00
/grave
/acute
/circumflex
/tilde
/dieresis
/hungarumlaut
/ring
/caron
/breve
/macron
/dotaccent
/cedilla
/ogonek
/quotesinglbase
/guilsinglleft
/guilsinglright
% 0x10
/quotedblleft
/quotedblright
/quotedblbase
/guillemotleft
/guillemotright
/endash
/emdash
/afii61664
/perthousandzero % PERTHOUSAND ZERO
/dotlessi
/dotlessj
/ff
/fi
/fl
/ffi
/ffl
% 0x20
/uni2423
/exclam
/quotedbl
/numbersign
/dollar
/percent
/ampersand
/quoteright
/parenleft
/parenright
/asterisk
/plus
/comma
/hyphen
/period
/slash
% 0x30
/zero
/one
/two
/three
/four
/five
/six
/seven
/eight
/nine
/colon
/semicolon
/less
/equal
/greater
/question
% 0x40
/at
/A
/B
/C
/D
/E
/F
/G
/H
/I
/J
/K
/L
/M
/N
/O
% 0x50
/P
/Q
/R
/S
/T
/U
/V
/W
/X
/Y
/Z
/bracketleft
/backslash
/bracketright
/asciicircum
/underscore
% 0x60
/quoteleft
/a
/b
/c
/d
/e
/f
/g
/h
/i
/j
/k
/l
/m
/n
/o
% 0x70
/p
/q
/r
/s
/t
/u
/v
/w
/x
/y
/z
/braceleft
/bar
/braceright
/asciitilde
/hyphen.alt % HANGING HYPHEN
% 0x80
/Abreve
/Aogonek
/Cacute
/Ccaron
/Dcaron
/Ecaron
/Eogonek
/Gbreve
/Lacute
/Lcaron
/Lslash
/Nacute
/Ncaron
/Eng
/Ohungarumlaut
/Racute
% 0x90
/Rcaron
/Sacute
/Scaron
/Scedilla
/Tcaron
/Tcommaaccent
/Uhungarumlaut
/Uring
/Ydieresis
/Zacute
/Zcaron
/Zdotaccent
/IJ
/Idotaccent
/dcroat
/section
% 0xA0
/abreve
/aogonek
/cacute
/ccaron
/dcaron
/ecaron
/eogonek
/gbreve
/lacute
/lcaron
/lslash
/nacute
/ncaron
/eng
/ohungarumlaut
/racute
% 0xB0
/rcaron
/sacute
/scaron
/scedilla
/tcaron
/tcommaaccent
/uhungarumlaut
/uring
/ydieresis
/zacute
/zcaron
/zdotaccent
/ij
/exclamdown
/questiondown
/sterling
% 0xC0
/Agrave
/Aacute
/Acircumflex
/Atilde
/Adieresis
/Aring
/AE
/Ccedilla
/Egrave
/Eacute
/Ecircumflex
/Edieresis
/Igrave
/Iacute
/Icircumflex
/Idieresis
% 0xD0
/Eth
/Ntilde
/Ograve
/Oacute
/Ocircumflex
/Otilde
/Odieresis
/OE
/Oslash
/Ugrave
/Uacute
/Ucircumflex
/Udieresis
/Yacute
/Thorn
/SS % Germandbls
% 0xE0
/agrave
/aacute
/acircumflex
/atilde
/adieresis
/aring
/ae
/ccedilla
/egrave
/eacute
/ecircumflex
/edieresis
/igrave
/iacute
/icircumflex
/idieresis
% 0xF0
/eth
/ntilde
/ograve
/oacute
/ocircumflex
/otilde
/odieresis
/oe
/oslash
/ugrave
/uacute
/ucircumflex
/udieresis
/yacute
/thorn
/germandbls % or /germandbls.alt
] def

%%EndProcSet
%%BeginProcSet: texps.pro 0 0
%!
TeXDict begin/rf{findfont dup length 1 add dict begin{1 index/FID ne 2
index/UniqueID ne and{def}{pop pop}ifelse}forall[1 index 0 6 -1 roll
exec 0 exch 5 -1 roll VResolution Resolution div mul neg 0 0]FontType 0
ne{/Metrics exch def dict begin Encoding{exch dup type/integertype ne{
pop pop 1 sub dup 0 le{pop}{[}ifelse}{FontMatrix 0 get div Metrics 0 get
div def}ifelse}forall Metrics/Metrics currentdict end def}{{1 index type
/nametype eq{exit}if exch pop}loop}ifelse[2 index currentdict end
definefont 3 -1 roll makefont/setfont cvx]cvx def}def/ObliqueSlant{dup
sin S cos div neg}B/SlantFont{4 index mul add}def/ExtendFont{3 -1 roll
mul exch}def/ReEncodeFont{CharStrings rcheck{/Encoding false def dup[
exch{dup CharStrings exch known not{pop/.notdef/Encoding true def}if}
forall Encoding{]exch pop}{cleartomark}ifelse}if/Encoding exch def}def
end

%%EndProcSet
%%BeginProcSet: special.pro 0 0
%!
TeXDict begin/SDict 200 dict N SDict begin/@SpecialDefaults{/hs 612 N
/vs 792 N/ho 0 N/vo 0 N/hsc 1 N/vsc 1 N/ang 0 N/CLIP 0 N/rwiSeen false N
/rhiSeen false N/letter{}N/note{}N/a4{}N/legal{}N}B/@scaleunit 100 N
/@hscale{@scaleunit div/hsc X}B/@vscale{@scaleunit div/vsc X}B/@hsize{
/hs X/CLIP 1 N}B/@vsize{/vs X/CLIP 1 N}B/@clip{/CLIP 2 N}B/@hoffset{/ho
X}B/@voffset{/vo X}B/@angle{/ang X}B/@rwi{10 div/rwi X/rwiSeen true N}B
/@rhi{10 div/rhi X/rhiSeen true N}B/@llx{/llx X}B/@lly{/lly X}B/@urx{
/urx X}B/@ury{/ury X}B/magscale true def end/@MacSetUp{userdict/md known
{userdict/md get type/dicttype eq{userdict begin md length 10 add md
maxlength ge{/md md dup length 20 add dict copy def}if end md begin
/letter{}N/note{}N/legal{}N/od{txpose 1 0 mtx defaultmatrix dtransform S
atan/pa X newpath clippath mark{transform{itransform moveto}}{transform{
itransform lineto}}{6 -2 roll transform 6 -2 roll transform 6 -2 roll
transform{itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll
curveto}}{{closepath}}pathforall newpath counttomark array astore/gc xdf
pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}
if}N/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1
-1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip
yflip not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub
neg 0 TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{
noflips{TR pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop
90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get
neg sub neg TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr
1 get neg sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr
2 get ppr 0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4
-1 roll add 2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S
TR}if}N/cp{pop pop showpage pm restore}N end}if}if}N/normalscale{
Resolution 72 div VResolution 72 div neg scale magscale{DVImag dup scale
}if 0 setgray}N/@beginspecial{SDict begin/SpecialSave save N gsave
normalscale currentpoint TR @SpecialDefaults count/ocount X/dcount
countdictstack N}N/@setspecial{CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto
0 vs rlineto hs neg 0 rlineto closepath clip}if ho vo TR hsc vsc scale
ang rotate rwiSeen{rwi urx llx sub div rhiSeen{rhi ury lly sub div}{dup}
ifelse scale llx neg lly neg TR}{rhiSeen{rhi ury lly sub div dup scale
llx neg lly neg TR}if}ifelse CLIP 2 eq{newpath llx lly moveto urx lly
lineto urx ury lineto llx ury lineto closepath clip}if/showpage{}N
/erasepage{}N/setpagedevice{pop}N/copypage{}N newpath}N/@endspecial{
count ocount sub{pop}repeat countdictstack dcount sub{end}repeat
grestore SpecialSave restore end}N/@defspecial{SDict begin}N
/@fedspecial{end}B/li{lineto}B/rl{rlineto}B/rc{rcurveto}B/np{/SaveX
currentpoint/SaveY X N 1 setlinecap newpath}N/st{stroke SaveX SaveY
moveto}N/fil{fill SaveX SaveY moveto}N/ellipse{/endangle X/startangle X
/yrad X/xrad X/savematrix matrix currentmatrix N TR xrad yrad scale 0 0
1 startangle endangle arc savematrix setmatrix}N end

%%EndProcSet
%%BeginProcSet: color.pro 0 0
%!
TeXDict begin/setcmykcolor where{pop}{/setcmykcolor{dup 10 eq{pop
setrgbcolor}{1 sub 4 1 roll 3{3 index add neg dup 0 lt{pop 0}if 3 1 roll
}repeat setrgbcolor pop}ifelse}B}ifelse/TeXcolorcmyk{setcmykcolor}def
/TeXcolorrgb{setrgbcolor}def/TeXcolorgrey{setgray}def/TeXcolorgray{
setgray}def/TeXcolorhsb{sethsbcolor}def/currentcmykcolor where{pop}{
/currentcmykcolor{currentrgbcolor 10}B}ifelse/DC{exch dup userdict exch
known{pop pop}{X}ifelse}B/GreenYellow{0.15 0 0.69 0 setcmykcolor}DC
/Yellow{0 0 1 0 setcmykcolor}DC/Goldenrod{0 0.10 0.84 0 setcmykcolor}DC
/Dandelion{0 0.29 0.84 0 setcmykcolor}DC/Apricot{0 0.32 0.52 0
setcmykcolor}DC/Peach{0 0.50 0.70 0 setcmykcolor}DC/Melon{0 0.46 0.50 0
setcmykcolor}DC/YellowOrange{0 0.42 1 0 setcmykcolor}DC/Orange{0 0.61
0.87 0 setcmykcolor}DC/BurntOrange{0 0.51 1 0 setcmykcolor}DC
/Bittersweet{0 0.75 1 0.24 setcmykcolor}DC/RedOrange{0 0.77 0.87 0
setcmykcolor}DC/Mahogany{0 0.85 0.87 0.35 setcmykcolor}DC/Maroon{0 0.87
0.68 0.32 setcmykcolor}DC/BrickRed{0 0.89 0.94 0.28 setcmykcolor}DC/Red{
0 1 1 0 setcmykcolor}DC/OrangeRed{0 1 0.50 0 setcmykcolor}DC/RubineRed{
0 1 0.13 0 setcmykcolor}DC/WildStrawberry{0 0.96 0.39 0 setcmykcolor}DC
/Salmon{0 0.53 0.38 0 setcmykcolor}DC/CarnationPink{0 0.63 0 0
setcmykcolor}DC/Magenta{0 1 0 0 setcmykcolor}DC/VioletRed{0 0.81 0 0
setcmykcolor}DC/Rhodamine{0 0.82 0 0 setcmykcolor}DC/Mulberry{0.34 0.90
0 0.02 setcmykcolor}DC/RedViolet{0.07 0.90 0 0.34 setcmykcolor}DC
/Fuchsia{0.47 0.91 0 0.08 setcmykcolor}DC/Lavender{0 0.48 0 0
setcmykcolor}DC/Thistle{0.12 0.59 0 0 setcmykcolor}DC/Orchid{0.32 0.64 0
0 setcmykcolor}DC/DarkOrchid{0.40 0.80 0.20 0 setcmykcolor}DC/Purple{
0.45 0.86 0 0 setcmykcolor}DC/Plum{0.50 1 0 0 setcmykcolor}DC/Violet{
0.79 0.88 0 0 setcmykcolor}DC/RoyalPurple{0.75 0.90 0 0 setcmykcolor}DC
/BlueViolet{0.86 0.91 0 0.04 setcmykcolor}DC/Periwinkle{0.57 0.55 0 0
setcmykcolor}DC/CadetBlue{0.62 0.57 0.23 0 setcmykcolor}DC
/CornflowerBlue{0.65 0.13 0 0 setcmykcolor}DC/MidnightBlue{0.98 0.13 0
0.43 setcmykcolor}DC/NavyBlue{0.94 0.54 0 0 setcmykcolor}DC/RoyalBlue{1
0.50 0 0 setcmykcolor}DC/Blue{1 1 0 0 setcmykcolor}DC/Cerulean{0.94 0.11
0 0 setcmykcolor}DC/Cyan{1 0 0 0 setcmykcolor}DC/ProcessBlue{0.96 0 0 0
setcmykcolor}DC/SkyBlue{0.62 0 0.12 0 setcmykcolor}DC/Turquoise{0.85 0
0.20 0 setcmykcolor}DC/TealBlue{0.86 0 0.34 0.02 setcmykcolor}DC
/Aquamarine{0.82 0 0.30 0 setcmykcolor}DC/BlueGreen{0.85 0 0.33 0
setcmykcolor}DC/Emerald{1 0 0.50 0 setcmykcolor}DC/JungleGreen{0.99 0
0.52 0 setcmykcolor}DC/SeaGreen{0.69 0 0.50 0 setcmykcolor}DC/Green{1 0
1 0 setcmykcolor}DC/ForestGreen{0.91 0 0.88 0.12 setcmykcolor}DC
/PineGreen{0.92 0 0.59 0.25 setcmykcolor}DC/LimeGreen{0.50 0 1 0
setcmykcolor}DC/YellowGreen{0.44 0 0.74 0 setcmykcolor}DC/SpringGreen{
0.26 0 0.76 0 setcmykcolor}DC/OliveGreen{0.64 0 0.95 0.40 setcmykcolor}
DC/RawSienna{0 0.72 1 0.45 setcmykcolor}DC/Sepia{0 0.83 1 0.70
setcmykcolor}DC/Brown{0 0.81 1 0.60 setcmykcolor}DC/Tan{0.14 0.42 0.56 0
setcmykcolor}DC/Gray{0 0 0 0.50 setcmykcolor}DC/Black{0 0 0 1
setcmykcolor}DC/White{0 0 0 0 setcmykcolor}DC end

%%EndProcSet
TeXDict begin @defspecial

 systemdict /pdfmark known{userdict /?pdfmark systemdict /exec get
put}{userdict /?pdfmark systemdict /pop get put userdict /pdfmark systemdict
/cleartomark get put}ifelse

 /DvipsToPDF{72.27 mul Resolution div} def/PDFToDvips{72.27 div Resolution
mul} def/BPToDvips{72 div Resolution mul}def/BorderArrayPatch{[exch{dup
dup type/integertype eq exch type/realtype eq or{BPToDvips}if}forall]}def/HyperBorder
{1 PDFToDvips} def/H.V {pdf@hoff pdf@voff null} def/H.B {/Rect[pdf@llx
pdf@lly pdf@urx pdf@ury]} def/H.S {currentpoint HyperBorder add /pdf@lly
exch def dup DvipsToPDF 72 add /pdf@hoff exch def HyperBorder sub /pdf@llx
exch def} def/H.L {2 sub dup/HyperBasePt exch def PDFToDvips /HyperBaseDvips
exch def currentpoint HyperBaseDvips sub /pdf@ury exch def/pdf@urx
exch def} def/H.A {H.L currentpoint exch pop vsize 72 sub exch DvipsToPDF
HyperBasePt sub sub /pdf@voff exch def} def/H.R {currentpoint HyperBorder
sub /pdf@ury exch def HyperBorder add /pdf@urx exch def currentpoint
exch pop vsize 72 sub exch DvipsToPDF sub /pdf@voff exch def} def

 /pgfH{/pgfheight exch def 0.75 setlinewidth [] 0 setdash /pgfshade
{pgfA} def /pgfdir { dup 0 moveto dup 5 index lineto } bind def} bind
def

 /pgfV{/pgfheight exch def 0.75 setlinewidth [] 0 setdash /pgfshade
{pgfA} def /pgfdir { dup 0 exch moveto dup 5 index exch lineto } bind
def} bind def

 /pgfA{ /pgfdiff 8 index round cvi 8 index round cvi sub 2 mul 1 add
def 2 index 6 index sub pgfdiff div 2 index 6 index sub pgfdiff div
2 index 6 index sub pgfdiff div pgfheight 9 index 9 index 9 index 14
index pgfdiff { 3 index 3 index 3 index setrgbcolor pgfdir stroke 4
-1 roll 7 index add 4 -1 roll 6 index add 4 -1 roll 5 index add 4 -1
roll .5 sub } repeat mark 15 1 roll cleartomark exch pop }bind def

 /pgfR1{ newpath dup dup dup 0 360 arc clip newpath dup /pgfendx exch
def /pgfendy exch def 0.875 setlinewidth [] 0 setdash /pgfshade {pgfR}
def /pgfstartx exch def /pgfstarty exch def /pgfdiffx pgfendx pgfstartx
sub def /pgfdiffy pgfendy pgfstarty sub def dup /pgfdomb exch def }bind
def

 /pgfR2{ newpath 0.5 add pgfcircx pgfcircy 3 2 roll 0 360 arc setrgbcolor
fill pop}bind def

 /pgfR{ /pgfdiff 8 index round cvi 8 index round cvi sub 4 mul 1 add
def /pgfcircx pgfstartx 9 index pgfdiffx pgfdomb div mul add def /pgfcircy
pgfstarty 9 index pgfdiffy pgfdomb div mul add def /pgfcircxe pgfstartx
8 index pgfdiffx pgfdomb div mul add def /pgfcircye pgfstarty 8 index
pgfdiffy pgfdomb div mul add def /pgfxstep pgfcircxe pgfcircx sub pgfdiff
div def /pgfystep pgfcircye pgfcircy sub pgfdiff div def 2 index 6
index sub pgfdiff div 2 index 6 index sub pgfdiff div 2 index 6 index
sub pgfdiff div 8 index 8 index 8 index 13 index pgfdiff { 3 index
3 index 3 index setrgbcolor pgfcircx pgfcircy 2 index 0 360 arc closepath
stroke 4 -1 roll 6 index add 4 -1 roll 5 index add 4 -1 roll 4 index
add 4 -1 roll .25 sub /pgfcircx pgfcircx pgfxstep add def /pgfcircy
pgfcircy pgfystep add def } repeat mark 14 1 roll cleartomark exch
pop }bind def

  /pgfsc{}bind def/pgffc{}bind def/pgfstr{stroke}bind def/pgffill{fill}bind
def/pgfeofill{eofill}bind def/pgfe{a dup 0 rlineto exch 0 exch rlineto
neg 0 rlineto closepath}bind def/pgfw{setlinewidth}bind def/pgfs{save
pgfpd 72 Resolution div 72 VResolution div neg scale magscale{1 DVImag
div dup scale}if pgfx neg pgfy neg translate pgffoa .setopacityalpha}bind
def/pgfr{pgfsd restore}bind def userdict begin/pgfo{pgfsd /pgfx currentpoint
/pgfy exch def def @beginspecial}bind def /pgfc{newpath @endspecial
pgfpd}bind def /pgfsd{globaldict /pgfdelta /delta where {pop delta}
{0} ifelse put}bind def/pgfpd{/delta globaldict /pgfdelta get def}bind
def /.setopacityalpha where {pop} {/.setopacityalpha{pop}def} ifelse
/.pgfsetfillopacityalpha{/pgffoa exch def /pgffill{gsave pgffoa .setopacityalpha
fill 1 .setopacityalpha newpath fill grestore newpath}bind def /pgfeofill{gsave
pgffoa .setopacityalpha eofill 1 .setopacityalpha newpath eofill grestore
newpath}bind def}bind def /.pgfsetstrokeopacityalpha{/pgfsoa exch def
/pgfstr{gsave pgfsoa .setopacityalpha stroke grestore newpath}bind
def}bind def /pgffoa 1 def /pgfsoa 1 def end

 /landplus90 true store

/landplus90 true store

%%BeginPaperSize: letter 
letter
%%EndPaperSize

 /pgf1{gsave exec 1.0 pgfw 2.00002 0.0 moveto -6.00006 4.00005 lineto
-3.00003 0.0 lineto -6.00006 -4.00005 lineto pgffill  grestore} bind
def

 /pgf2{gsave exec 1.0 pgfw 0.8 pgfw [ ] 0.0 setdash 1 setlinecap 1
setlinejoin -3.00003 4.00005 moveto -2.75002 2.50002 0.0 0.24998 0.75
0.0 curveto 0.0 -0.24998 -2.75002 -2.50002 -3.00003 -4.00005 curveto
pgfstr  grestore} bind def

 /pgf3{gsave exec 1.0 pgfw [ ] 0.0 setdash 0.0 -5.00005 moveto 0.0
5.00005 lineto pgfstr  grestore} bind def

 /pgf4{gsave exec 1.0 pgfw [ ] 0.0 setdash -3.00003 -5.00005 moveto
0.0 -5.00005 lineto 0.0 5.00005 lineto -3.00003 5.00005 lineto pgfstr
 grestore} bind def

 /pgf5{gsave exec 1.0 pgfw [ ] 0.0 setdash -2.00002 -5.00005 moveto
1.0 -3.00003 1.0 3.00003 -2.00002 5.00005 curveto pgfstr  grestore}
bind def

 /pgf6{gsave exec 1.0 pgfw [ ] 0.0 setdash -4.50003 -5.00005 moveto
0.49998 0.0 lineto -4.50003 5.00005 lineto pgfstr  grestore} bind def

 /pgf7{gsave exec 1.0 pgfw -2.50002 0.0 translate [ ] 0.0 setdash 3.00003
0.0 moveto 3.00003 1.65689 1.65689 3.00003 0.0 3.00003 curveto -1.65689
3.00003 -3.00003 1.65689 -3.00003 0.0 curveto -3.00003 -1.65689 -1.65689
-3.00003 0.0 -3.00003 curveto 1.65689 -3.00003 3.00003 -1.65689 3.00003
0.0 curveto closepath gsave pgffc pgffill grestore gsave pgfsc pgfstr
grestore newpath  grestore} bind def

 /pgf8{gsave exec 1.0 pgfw [ ] 0.0 setdash 1.0 0.0 moveto -5.00005
3.00003 lineto -11.00012 0.0 lineto -5.00005 -3.00003 lineto closepath
gsave pgffc pgffill grestore gsave pgfsc pgfstr grestore newpath  grestore}
bind def
 
@fedspecial end
%%BeginFont: CMR17
%!PS-AdobeFont-1.0: CMR17 003.002
%%Title: CMR17
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMR17.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMR17 known{/CMR17 findfont dup/UniqueID known{dup
/UniqueID get 5000795 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMR17 def
/FontBBox {-33 -250 945 749 }readonly def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMR17.) readonly def
/FullName (CMR17) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 2 /Theta put
dup 10 /Omega put
dup 40 /parenleft put
dup 41 /parenright put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3DD325E55798292D7BD972BD75FA
0E079529AF9C82DF72F64195C9C210DCE34528F540DA1FFD7BEBB9B40787BA93
51BBFB7CFC5F9152D1E5BB0AD8D016C6CFA4EB41B3C51D091C2D5440E67CFD71
7C56816B03B901BF4A25A07175380E50A213F877C44778B3C5AADBCC86D6E551
E6AF364B0BFCAAD22D8D558C5C81A7D425A1629DD5182206742D1D082A12F078
0FD4F5F6D3129FCFFF1F4A912B0A7DEC8D33A57B5AE0328EF9D57ADDAC543273
C01924195A181D03F5054A93B71E5065F8D92FE23794D2DB9D6295729076BD8E
CBC0F4C1BE246922D2482233846A96D867B66D9CF25A1DB661141D36B8506E61
A022F9EF8BC1F2F674EDF1533E67A78CA29A612AA9268E113C5EB84DA56CEDFC
D7A111403E6E2A8682DB04368889747E003A124395ECF0C7FC81218552EE7C6F
60BCFB4120893528670D0E8A4117EA5676915E3591AE5652D003EEF67818A41A
8882E102AEEEBECBD15DCF632ED246A6A58B6A7780DB6F1F9AE3FDAC8344585D
E104F2BA2DF06D68945889A2A3B6C262FB53FC670BC5EB7C56887FBFB7AA7026
84115872CFB0652C6BB330447AFF8F0F665EFD6A41D6DB6877B08052F402448F
CB21C26BDC900636C99CA347B79AA73AFCDE9762A992CA3DDF7279E5C50F453F
52098529850AFB1F501A442D6A02E0A2896F81C8AC735AF1E7EE47208B4CC944
649DF6802EEE813F1456205C6126D7D0B1821AB62DD65468F3A30575E491623E
0054E2E680E4402E1C8C538DA389B81603BE88D6DC287A076F92B224CD58A0AC
44B8D490197341808DEF243660971F444A560C747BC6F52707ED42A99736ECCF
EBCB694A561C3A70A319D204CD40D402FBF937A00BBCBE85DD26C9E3F91B7D10
D85B9D314BC3AAD5A58B107F5F341BE2C53490924142566417D6BE03BB4977FA
6635EA58DEB9508E40B9FFAC75FF44C683680CF242FE210519C9BF92483B0A54
83F48341318BE16D2F8C988FE3DB2E7914581F579D5E323148A31E4ED03BC24B
C990372DF5F3B0C5FA32EB2CA4FA0EA33316569133C87697BAA2292E685C26CC
F8CD40A2366E60B47D47CC9D0FA29D2836011376A07F78BA7664DE96E775CF45
9BC91559A063073A4C2FAAD0893C517C5C46A1425D07EDCC2B57162E3A45103E
FF26A2D2F98B194256A4B052AAFCC08965A50EECD7B9E8F35AFDF7B6568B3983
8030655E7C2BEC961A2F20539D617626E8454E3FE9EBD3EFCEF7F63498441DAE
16CB509BF239FBBE25EFEF07A3E16C9C71EB8D9DCB8403916FB40FD7F4E1A52F
72F2DFF94FD14D7D49FE775390C17C37C1BA0CAF35CF75D682B7833A83224158
D54CE962CFBAFB1B2CA50B60CBEB1F8F58DDB2F5470C355ED9632342D9382AE4
5D33BCA3A0A25EE9E5B39BE5370E7F20684C664EDB48E7973FEDAD9676F9EE8F
701CD4D8CC9B9EBC06E8C86EB88AD56E15CEBB8E1930E8F711CB6E01D5D14967
D7E6C1BDDDE2C4D00384EF4CB02877DECC27AD53FC981338977BA0CC0257CF7D
B42E9BC91AF45D9722461EC3CD9DEAA8011FB855FE14B74BE0A102008EACA2B6
0E287BB4F466FBFDD6E65A5262B9322F95E20DAB875A10A84572D982E6FC7ACA
23C0C37E5EB47B8E69C07507B53CDD98CD1B6445E1699CF35B3DA3E0DC56BB76
F997C40E2ECE47DBDDB707EB527055960113F2DABC87FD9EC7D0AB36B400CE33
0D54D4F197B2830B43DF0AA802DFB2BF747A4C44B31FB708B2C8BBE1955A6A28
379C91AA4CC065A50098AEC0B837E180B76801865A43C74859DF18FE1DA1483B
C17843BF1C7E1B11A8C6D8BB8CDB1D552FE6A1FD0A696A8F7405F2320F8621EA
17C1A32056C45A9ED35D2BD12D02D8B26489CAAEBF4EF33B66FF4BD9B46E4823
6395831A8F3366EEA0D0EA88D612DEBF63DA7FAA24DA979ACC1A52544BCAA007
6C39946BEA6076ACF45722B2B8E4D0823EA2D12B14A98367BB0433A21FBD9F94
18DF298C56F67ABC9DB1868D431A854DBEDF8E1F49E359A545C75A7AA1FA4D5A
50F1EE6B45FC68ABF65FFF257964E4E50D8B0C1FAF498DFC554073697C2F219D
4A68DA9E873B270B9C56F0DDBC9927ADAF9203FD684DE615F68C24ACFFB44690
89C0D5322049FA69E7FD00EFC9C9B2BD177B5B339907F81C31496662847BEC1E
56B5DCDF4FE618970F4268F475B2EF7E0F28CC986DDF098E59DDAD818649CC35
4080C0867A884B8177A6880F06F1E5CC130AB4243EF8DD8032FCF390765BAB1C
1F0C9728EEE261A09F8C1D7ABC7A6B1550551BE2A7D19D45B656650DB00B3A5E
B3E1186043E173BB4DD5EFFB379654F88146382AE3F7196F099BDCD6D245FB6B
AA2FA9B6CFBC9F0CD52798DDF2F13874BDE5B124DFFE0DD93E24C9DAEAE4C3BB
71A9A13AE2860F620B4EC789F95221015D9C510CB4AC775EF69DB9E32E59C896
1AF82C9F0DCDB4812A37761859A3D3BA0CA57F244489C78065346FFA78F5F7C8
0B2E8CBA9EE62FF5C27369D0BCD52857D40F1FB8F8A1441B83565A4150AB1945
0B54D6E49F66389E43096269EF5CDD39526A288C0CB81E324E75D326EC9A182F
2CD966368CE300B41873B08E17C3E6BB51804460D2562AF5A12339966F44CD09
114C6809AF246B5BA6937631842CB9417781A58944B6BA4FCF961465C208957C
81A662D560D0F81BD3CB53C06B6D979F04F6121CCFD5D52702CBF6C70C01EDBF
2040AAB9CB144321E68C4010E0E98CCA2603EB55DD62E881DB621C37EA4108D1
528ECC7A0121B57C6BB1E26F8AE7161ABA7E88256D2D6A8B7CDE2E730D137493
3FF628EF6030DD2330D747FABBA03B44CF600418C245C388F33EC5559E7313BC
4B530C4FC12530D38B27D6408548F25FC084DD0523B27D29D6518D3115AE7755
37162CFD4CF528214466FE525B13782F9C3CD78F3D6C7423E63A134C0A371F15
10F4ECE1D482C647B563D3D15586F80BD9DF7381BD53927825D5AEAF762E1CDC
3BD184F345029A95B3AD4D1B66E79AB4F0809418C0CFD4D503457A190D02F134
3F57FC04FF655AEEB783D6791E4EC300755861837D3D50649F6B7F60766211B3
8148F8E575E28D6C2DE75B15E722ABFC6DAADAE53D89FD295352781DCC2CFF6D
982F6DB778D6FCBF1B7BDCB53F3A23AE6EB499BBFA96E8BE04C3C8E5B660EF24
01EB842DAEBE979F2C2DB72AAB4D21627063B1D3C6CD40944E4CB81655698FBA
A343766CB22E392E5DAE01DB33A00918D6DAA07F2F38B336A3C5DF3708865E75
0DE04D3AFBCA27A249E97377D5785B4E28EE0E93F7D353619C200DB967372ED2
153BF8BE945474266EB2FD30F80042A11B7E3586DE4AB1FBD4A741D36DE583E9
1CA25DA345520AA60634EC819E7EB493CDB128BBADEC3890F055455F060A1100
D5A41D7B180027E08AD6EE7E393DB9F83799544404FE397F557773BE6A130541
157C0EB37E036C94825B5090EF85F8B4E3DB72895D86687758C20EDEBD6D1079
196E9949DC6ED0113571C70B150B37E446E319EC54D44CC0CF6A14760953DF4A
D0E1F33A54D240E236AB63B35BA8E071D77776BE5B9312245F2C6E4FDB4312A0
0D9CF723E7D9A3D8546C4739C00C301A89ABA60A02757AB1A0AC40B24CE6CF12
5850485B11E16646D7150795EABAEB08364A53161111F46A7BC3423A0D3BEB69
BF15726C1F8363914945DEEB29CB8766328318AF3B344FD6D77BBB92BD7FD161
93356493D4D8252AD125708D47C124E44232FB2BF7DD75F87889496DCDB75D03
F58A57D4122CFC194B75A9E9C4789C9A33C0435FB4ADA16AD4A6191928D1663D
05FB8152C0AA176FBA4755205F8A66713404787070757D3721ED6E6D55A59DF0
C92BA8F05EC7BE05D0A2E66DE85E75373483EA3BBEE0F0DFC7E2FA5FBAFAB118
058D095AA71FDFC8AF37E5A98406B64E58BF476C6926725D7EF3C2346CE3F662
1E5A4A18D966479A37070859014719456EA2C7F23E68E1AB2F25ED3A0C00A18C
DD403506923BC983F89CCA125780DC76A411472E38173BC0DD4CDA7B43E13419
B5AB0B9A35E77C58BBA12AA4F5C7EBF8A29996B059E4FAE6809565570442AEE5
D56CBF4407E1CD9A4398B1F3ADFF023F64B230E3D29F526B62D964F5C8DF801F
E94295AD85BD9E1C18E6327977260A871E921C0745CA06A263E335E344686E7D
D6FE3ADB4EE0A7E462F3C00873C3E95D183CCEC71C0E5DC1D2FB310B28FC3611
67C23DE336C374F72368F4973052B48E39969305791C986E6EE35D0350571860
3A8ED849712CF21AEF444BA390644E8646CCA16559BA4642A5800827A0DDC453
7CA0818BC47DF6348A5209A2F0A10CA39840CE6346E89CA0E842BE8692DEF25C
4623A5A0E0B98708B9492E9F564324BB3872D6B953CA59E9F393C477E2AB85EC
C557D333E88C111CF995FB79D9432DC94C2BDB3BFEE13C0D7D1BB920DAFA6158
8548447AFC65CD5515D5021E0ED7D213B0C08C35BB424AA91885CA023D7AF767
B83E619B15DFEF5588D2F0564296E14B5A6ACE03751E1016105C51BE76EA5ADB
4167BAED2A8899031FD7BA05C410ADA25ADD94A787EED1A7AE133B0568B1DBA5
44B41BE013782CFCA3D81E8E8210DD506ADFCE7DC7E792EFEF438221164A7D1B
5E7089F476240C5F94988F081943F24DBF7CC3D1E58CB89E1C0C1624682CC3D8
C95815ECC9183A4B3E353C7F920B7E64086E01672DAA7C8A81319BAA03C1FBB7
8E5E84CC5BAE0E107754794C755B7AF00953504094E1A9DF357D51B578259613
8D26F0BA26AAC459BBEEB90BCC98B865EDD26AA4DF533D6624EDAC762C446B6F
CF9F86DD2D8989D4655775E662B93BF51805EE3CBA0AE2293D95F166E80973CC
82C53042D0249C598B0821E9E7F218BA6114EEC86C158F277934F2651490B723
7F0D0288560DA5BEBAFDDF243048E590871AD18B3B220EC56549004DF122AA03
BAAD6971D790BC644369FDBEE74A324083CFA9496C2A333774F06E35299242BC
F4B26578907CC5AD1893613F2B8622CFBB7B55810162EEBFAAEAB2A6D69CB72B
D7859C73843E665125FF450631F32E64F13A6207F368103C7A7318DBAF2560D0
F1CDD83C3E48CB30C62AF1E0896E1962C655D9ED98E1BB38477C1C60ECDB6B95
067D3A638AD43EE886338F7AD2D2A574CE6FD2E21F6FCB4220EFEC85ABF8272A
82081CE70E4390A74EC717F1DDD168F4A4A080A79EE2ECE0F98A96871DA4B52F
78441601AF47763C2219F5A167604C32F478D498835EF3A6167936994F7C7139
3019FF43C97E7978D3CDA641C1E391FEA572D308E759F28DDE2B40B5BC207A4B
C5EB6A93EEE26782016F8B6534420BE4D790A2E1A65B6CDBE9468152230384FD
14E9AE84418A44F94E6825DD7D77D0BB5486DE26A692B3DA96C81FA4440C5D44
8E7F3CAA9B8DF38F87E09C4D78841F629F78F4E7CC8580CC44E59E5D9AE8B2DE
C0682F793AE7AEC12A8AE688636197E8A08FEB70EFDB6203681A60223B9B0D39
2DA656E5E99B82130D4BE38D7AFE18568DD30B0CC3C73C1E2914ACE11A65334D
A9F18135E7B86157122CD221C33C62012FFB16D2D2F3473A53BE3E7B9FD4303F
66ADF0B07155C7B9B002EA68C6AC7247EB3CE7D2670A60138049DAA964F86A05
22983EDA7242E6BEEB90DF61C937399B2CE1061DF1E551CEED4A80D86C2D4649
C9FF9A1F93E96773CD392478D5B70D5336A03A274E0A6EF44BE8CB2274324142
706BC2E340DC944339D647961FD7BF29944503B4AFCDC69A706AA6B0F6AB2CB5
D220A96ACC1EE5E7826F6F75F044224E5260D581AE761AD0C752A06AA03FD935
FAD65C9EDD4E5505396E331D45DE88F0D1A4303D766ABE0702C17E2A7F53C0EA
96A4DEC5A6B6186F5DBAAB05DD78E38AFE630465BEF0EC66ABA9C1C9232214A9
795D105C33CF069F6BE20B179F4CC9F484AB63ED25C1212C457DF62CA0D56E20
608572216F2D4C09010B03A8AA6D287C8F514BEEDC1C912552CC2489858BF4D3
084882CE4F4B6FB9EE27C0168671E6DA154018ABEAD013C88E1D3EC918371251
63D95BA0FE20212C20AD3F4DB614EE36B488A3F55D94C1EDFCA8E68E54A1EED4
7DD168DCCF07C3DDB5E2B499DB5635C5C5056A7438120DB4839427D07F96AB8E
F842E285243E40259F6DF029E27779CCF3D3BD7206B2C341045A5A4AABACC2A5
91C6830FE05ACDCFDE99046F16F2AC183426ACA4A89FE5F09B7EB2F811BB5FB5
AF073BDA2886070B2327D582DCBA66B47E8948C3BE05E837BE4B81402A583403
74FF9E938F0E9DC3B1CB81B93DFD4070F9EBAED40BA570DE8F9A5C2C0A097311
22A6065139A6580E332473E9410D9F4C734794F79E41D0D437CEC7381919DF6F
A24B170E2BC97A6396A4E3AC3D844AD6E2B8FCE1C6AE97DFC5319F49130C3D6F
AF2541EB2384D5D4CCBEB976846EF8C2165DBF706112BDDDEC9A57D157F5996D
95229FD5C71B885D16B177BAB06B9DF5740A45C2A005778EE879193290419C0A
A4A339029E37E685B8A05B111DDF94AC19B1D85C8E6026E57E3D3B373C08557A
F96E6FE3916695ADFC1F0BF5D558565F42A71C61ACFEFC9026424397F0646642
7EDAA05794BCCD164A645860B57EAD53CB6899B18C6E9496EA4DAB0A0C272639
DEBC4FCBA94B3BF123F7771F602E7667C8F56E12429669F2219C7D8E294BE07B
71E88EA62F5616CAAB7C0198E6FF12A348E36B306FE2684A401399431B6A84CF
B46EE4BAA0F4099E65E9AF3B70274EDD6B6524F4FA38C23F9CD5273EEDC8C6C3
E7312B6E0497C05AD3F3C246638F01387CC11DBCBD287ACF54D8E24759F51415
35ED64132EF4158F54AB9F4D567482B3057880490F805822F71E7E2C52F7BC38
8B1F803AC3731064B90E5E97AA3351D17E73DC2FE526CD6C91158636E395867D
C1150FD3BD12493FFFB813AF0D08C8ED0B7418A2CF90BD5B783364358605D075
5DEA95A9299C0654EFB28E2FE8A41358A0DD124D0314A27558E42ED5F2D74BB7
056DE04D2CF13B9B804A3CBBA29BC155A3F18B8B48283194C33CE8291677E1EF
0721138F8E0409D49BB99F217607586D2DF00C29A25536E21924B4CF6702CF85
C02DFBFD2AA4DE3DBED1D2C02E21052A8D10F96629D0D18154923638FE0C48BD
E2DEAF11663E20717EA77A5453686AAA39D6FF7919AF09B1AD956FDBF734F49E
262F3076F62E77BD45122B55A5913902D9F91C4246FC235BA9C0FA4A96994291
830638949BED423387DA2D455A3C9122484EFF27F5367D1D3DD27D207D973815
965E1CFF36F43C653ED406F65348671D9FFAF55BA3FC266D438AF473181B7801
164EA3F04FEC870743195B3F467DE36B3719BAD9BF15A18637A314C887D46673
445BA3C212749B0A33136FEE9FE2C9A13D62E7ACC96378D257FBE0EB06AD4D4E
D41976AB92AC720DFD33B0677062C32E6F5C992A0324FD26E984B5341A58C190
D20EC3F1144697D514D9157340A6C9F82E62AD8CFDEE59F6FF86C6250CE33D6B
BB82DDB4F65BEFC6F6D0E4044F7BF307CC346E2FFD191846E3CA288C6F91CB71
5FDE855FEC5E38816CC635C470BF15263A10A409F0BC4877F7E6D4C223E3564E
E7BB5B320AAA5AAF4F32528F7413BFB97C70FF5E6843E1FE501472129BC9758D
7531BE576C75840CBC4CD3E6D9E5FF52559B68DE6E7827128BB2ED1BAD43F36E
A0CB68C1A147A7093EB02062AC5492DB7EEE08B1BDB187E15339A66269E459BC
67495937B4317AF66A498923322B087ECF47B601C26E253D223A784DB2D204FD
0668BD403A73723848018B7C86B627B9AE0BD9038F567CD5F670CAFC5C4D86FC
ECA211B713ACF8C1370191161CBB6C2592E8B9DBF3471133F2D9A60F15D72F9C
5E5539D59A6A7E124D9A38A6FF6EB7C71990716F88E1888295584F17D49144B2
BCC7543330AEEC6A5046047DD9CE52B692C3529814C33457ED7FF4ACDB57C373
A4D87A0571AE1FAFBB39DE44A4EC3A1883B216F1DA8B572796FEF338E0768A22
013B2EA39BF76FA0A9802B8B22DA67DB87371ADB7669CD8740019C075B0E4BA8
59C4668A7EAC8CFEDABB124F8CBF10A01AE6B11AB2D7B1099140CE83BD3212C1
56A0C13999463EC5DA4EABBFEBE23FAAC12BA68C2622BA35E5D798A70D15F48C
2F617CE0AD7A4007088A67B8EECDF4BBCBC0EF7AC86FEDB03880B518561F29B8
8E7CB2AFE3E757D822165262098C11AD111E6ED180CD58CF86A1E761C49E0CF3
E56E1812C5A5A022CF2E2B5BDD72F4CD626F55EAD77D247C3679C8F51C4B89C8
1FB479490779813120726363E88F200C65E50957A2F0E744ACCF23EA337BBBD1
18704F4E7D5C247D07559CACE22F924AE235F4F872E63640056BEF4C5697E076
23018520AC102CDE4382607DE1C6E879E05678C84F900FA81E6C81CD58F3A8D1
17A13D29CF2990613E2E6CDA2A399EDAB57621CD9B44D73FA082F51C0DB88AD8
453FFE78A85481C700B964AED30B3B7B8B0E6F6BA9E8D793BE9D945789EBBDAE
AD6059E510C2E5DCA8579103067B18150352984F2C2E5939F7FB71483A3F5662
E692DAC093989B3426C4CE004EF34CD7FF53FC490EE9E1068D20D100E0547513
365032EBEA8503DFCE91C8B44720E67B0CFAF5783FEF477666796D661056C6B3
C2CFB9DD2F3FB494530988DD73A4D3AA8B1E78FD892F1386710B81DA1920FF70
8940F5338AB17F2AAFE53A5EB9F671B8FA7542DCD1A6E5CBD9D3DEC72BE32EF2
9B7FC45256410914BA517936AB9F23593843FE49A33CDD46A1A0115BFC94EC36
FC1C1D524B258CF8479517937D0689F143AAF347B8611E8E62063B7AFBA7428B
90368569B959A04A03DAA0E1BF91D2B6A67E9FD6341D3C9D35067CBE93AD50DD
A8B9EB17E37B5F2A41F184A6F1FFCE2C3E90CF1D97632424E99CB8DC3F1AA7C7
575B408259916A5323A9D48EBF2B26D16A427B2B2D0289C91A74AA24DB342237
390CF8C8F30AD8214E213F19F717087EB079723FB40B625D74181939ECC00936
360C3B47B55F23D9DD360829388DBB0866B25B4DC779C55A35F1F8E127DA0311
8C8FDF9A1E5F1FE3599E1468C4FB840B4FFA6F8E189A494D8A45519F0E0309BF
AE1E06BAD1A7D3456186ECFAA7C2C3013D29718671CCB236D98829597805FE25
A7D7C46FFA7927F8400E06FEBBD9A2182A42B9E056B1A0FF5AF2E6D116146179
4D4CE8EDEDA456ADC88452A81EFA214A956BB8658D0D51D572CAB39A03A6669D
91ECCEE09BB11514455DA31B9C07CCCC2A9A08BEB8C05B16159F32
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMSY10
%!PS-AdobeFont-1.0: CMSY10 003.002
%%Title: CMSY10
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMSY10.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMSY10 known{/CMSY10 findfont dup/UniqueID known{dup
/UniqueID get 5096651 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMSY10 def
/FontBBox {-29 -960 1116 775 }readonly def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMSY10.) readonly def
/FullName (CMSY10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 20 /lessequal put
dup 21 /greaterequal put
dup 33 /arrowright put
dup 50 /element put
dup 56 /universal put
dup 79 /O put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CD06DFE1BE899059C588357426D7A0
7B684C079A47D271426064AD18CB9750D8A986D1D67C1B2AEEF8CE785CC19C81
DE96489F740045C5E342F02DA1C9F9F3C167651E646F1A67CF379789E311EF91
511D0F605B045B279357D6FC8537C233E7AEE6A4FDBE73E75A39EB206D20A6F6
1021961B748D419EBEEB028B592124E174CA595C108E12725B9875544955CFFD
028B698EF742BC8C19F979E35B8E99CADDDDC89CC6C59733F2A24BC3AF36AD86
1319147A4A219ECB92D0D9F6228B51A97C29547000FCC8A581BE543D73F1FED4
3D08C53693138003C01E1D216B185179E1856E2A05AA6C66AABB68B7E4409021
91AA9D8E4C5FBBDA55F1BB6BC679EABA06BE9795DB920A6343CE934B04D75DF2
E0C30B8FD2E475FE0D66D4AA65821864C7DD6AC9939A04094EEA832EAD33DB7A
11EE8D595FB0E543D0E80D31D584B97879B3C7B4A85CC6358A41342D70AD0B97
C14123421FE8A7D131FB0D03900B392FDA0ABAFC25E946D2251F150EC595E857
D17AE424DB76B431366086F377B2A0EEFD3909E3FA35E51886FC318989C1EF20
B6F5990F1D39C22127F0A47BC8461F3AFDF87D9BDA4B6C1D1CFD7513F1E3C3D3
93BEF764AA832316343F9FE869A720E4AA87AE76FA87A833BBC5892DE05B867F
10FA225E233BCFA9BB51F46A6DF22ADCEACC01C3CD1F54C9AEFA25E92EFAC00D
7E2BA427C25483BA42A199F4D2E43DFCE79A7156F7417ACF78E41FCA91E6C9EF
B933450D851B73A6AB6AEA7EE4C710CB5C14270D1674FA334686653793FCB31B
491E870D3C2BC654D2C1DE463EC9BA29D7371AA1078800EF93D3F66263A2EBBB
F5723697BF7448BD0D2E301544BECF497FD475B85DFEF52AF4F8F8BE445CABE6
019318806D10C5952157FF8F8286C1EE701545C8F60EFA854EAE66835A2046A6
915D395F1E0366EFE0C0391583FE001FF16D82A2E2DA5F57754A2C6F69306E36
356ECF8EFC3F1188AD6FCD2427E0580C97A5B69B4E0E09B85EEDE142F5ADD2F0
5DE51D6DB72B127412A0D57106C19CA493048A4F815129ABE767D51715B1515D
9C21067CB5BC88741B7298C83EAE36A866DFA87D8981F179B1C31292F56BBB64
3C430779468AAF07C8A8B4934E1E775FE3F35186BD1FA6EE3689C1C750678AF1
FBF9B23195A124C5C991FE670AC0C86FD39D2B07B9A319E74EFD498B45820252
720ECDF7294F7B0B137CEB86D33BFCEB8606985A3260FD669E461C8BE94216C5
D434FD8854F44EE66E5A289A9F9E32BC36AF645D53F96652602BAED418C8D726
BD04A1B4617551FE4DEF54083D414F7DCE004E6BB2DC9C2EF7CE232B254BA2C5
7DCBD36C2072ED46FF711F121A701E2284BF1B718B3164382B8F453D68FA0377
DFE106503B8401D4DB87F5402A3AC9A442FA060B0610A9524D530C7157C26B56
AC970FCC1D5655FFFFA39246E6420CF97D08ADFB7B05822679BD40C638DDF0E7
A97BFE8918B611A145AC965C203F1428812F9D340AF499B3A915B22BE798594E
0F520109FC81E452180AE45B170FF999C5FC2761C6CECD8742A5A6FC97F16743
AD4EFCC6572A6D3F3E4E330C5CB2FF6FEA48A5B64DD3DBE943BD9918D4A18E18
CBCF598AEFBB6AB3CD2CBC9BFD6099272F6543F3E532E0E21E614BD2880B1023
0AC234CB705827BF016DB84E00E8C255FDEFA0101A842929540B7B4AA8A089BD
5EFF05B72356B6BC3727817823B5CDBB1B963103000D7F2A4E2A1472FC3E614B
5CBCB6D6D784023173DEFEBFA8F9ED87EC1A0A9EE98CA59CFC964CF943DC683F
E9E00DA718C4425A705A69D99988EC6F152525C790912C2E46A2381A569424AB
54DF4798BC2D7E7A361E7991641D4B756CE2A7FF4A2848927092C59C2C4B8809
E13AB84FB6B111E680D7FB9F2FFC2C5C66B0B501E4447C2E46C10E2F6124476F
A140C404CFE2DC9E0199BF61E035CEB481D438139A9630934E541D261FFD2906
4CAD99E20655FA746AFB81EDBB5601F5FD6B1D6832A01D585E2C55053F6A7378
4DAACCAC7608DBDADAAE732D66B3E7F87E79756337C1A961E53A4651BE7C77F4
038B89C87F650C54A2A90EB7F1D525BB353F33318551EE8D84A6A83C718EA5A4
B2AC0F7306B1E095819B87015A90CA3ED739B09061782C28CDB36BA4BD5E5308
5CBB70414E4112193DAC4A1FA30996327230D1E021F3CD8115E12D239D93FFDC
B645910EB29E40D830E7BAF2DB255FD7C4E776557BB38157917D993EAC245837
A3B515147043574157B8342D829C7228CCEA843ABC89D1785A9672A5923FC4CD
2F3FF27E6FCACF84E2D3136CA2C0FD3EF1EE7354CD04C38B5FB874553646ED2D
CEDF7E362EADD04B18051F20A8FB0DE18E152385B9D05F98A3A7EF177824E246
455ABE69E2F700EB78185CCFC07E3B4C6FA301112528D977367D30D0D5D59EDE
FAEB706DDC970A9E296236C725B2B55B09B9C336B8E23CBA5FB8692D56F33B03
16294E5FC7FAA42E96395A57CE51CA8DDD77442F142E2E576B778373FB31C81C
16840BB422CA827E30A81829648BDF1CA36700EA32AD888D097C1FE0A05B2D9F
483AEE40269DF09AF0D1AD3DF80C45DDC59C2A03FBB661C79B87853737C6D352
67626B657321B16198DBD6DB98A092F17878AE4698121E1006E53D6F9B0A3BE2
3FB68828EF854A0CDBAA68B37ABCA6AD4A3D809AAF0BAB1697A81FE59C98C472
1E33CD70A75A22C249DD11D76C2575ED3370A25892A16D2FD569CDA70C130770
93F493C7D47D6F9A5424A7A542BAD726BFC3AB225DCEBBE6AC4BE006F8C7C0EA
051424B08305BF2D951AB2986AAFEA04E078CA79B399585BFF0F1ADCED02E15B
8765EB6BF6A8E4D0901EFF2C3AA104924EAD9637A35D877E0C51A3C37DA78CD4
8643C8CE6DCDDE3F116A6C2390F948E5371BEB5AD2E87B41C5F01FB5C196C436
6E256A88D082E3F46E4EFFBF605B2EFF1E9D9AD5EE4DDC323A137CD9451EDEE0
06F7D82898D71FAF2362C0FCF1F726F97F820305B7CE20728CA08C63575083A7
84BA28B7DE2B916432475510E274C12FFD1660A717F51DACFDF0A102D85224E0
D6DB607BB72569ABB8A7BC6A10354CBBC01732EFE35B72062DF269CB25EA3DE6
DC603B04C90C5912D2C38D7A5ACDCDD3F6F116D884F0D8C528F69D5D47BA20DB
0A9E585C7D8CC3C324FE8A1DF150279F7E8FB43BDB720E624E5E9918032C02CD
8020636AE5C38DA2484B7F4B34163E0D0A561B43B80E97746DC05C871AB620EC
C5D47101ECED4A7E25F291184BEF8B80024AA7BB456C1B83A907652B331DEA34
754226C39C6889EBEEFDAD081E01EF8FE47751987667836FDE4C8BB8A3FD4406
1E643B4EA37BD370734D1A2DB17C2F4B74B4ED75098B433601F75A88C9A37A05
CCB157EF6E32023BFA33973F3E655A4D58289136996FCFA61EEABD70791B6523
1FF5DE71AB8A17038923118A5EED8D59C4C58D246FFA9BB26472346B40C8741F
153D19CAFF20DD2A86C6DB89154A630FB1761929FC3F0448EE2F089C1C953E02
905BA8DE75D101A982A611056C4B237596C10951DD98BAB838B742D3CF7DE718
617DB72E5268583223E37E029D1C8FD3F1D21690151F76B76C52C725CA135CA2
8666553E863CE188BFC9B99AF56AC2DB5BFEBEB12FB563D00244EB89E478657A
98AF2E1223C1ABC25A4500E8119B86EB3C26B8A2F3505A3E5610F89B7C34E278
53FA0A54A7F46D84A35EFEC36AE660A9E3C37EE3864106702DE5AF6C45ABF64B
888A4A51323138CE77DB935576FE6B4824B6942DF80625098CE1B5B32B234F1D
052A9D6039697118A9D793793775D8729D8574A2E74D7109C7B7E23BC5E2E87A
CA8E019203952A4892544E1AD3D4EDD22971611358AB230E9A2ABDF00A288501
A01B67C42B33F6B78C39562DB50F4663B922D9BE0D8A150311AE44B83C1F129F
07337323E9A23211EE58E16043E127C6F9574019179F5635648A011266677B56
B5D0201A4E1470B952A1579B57AB2329CD4C615395023C653F784D36B5EE3672
10D191F29EA508CE84763CA4CE7C2C5229E38E241255A5CABCD6C7CBAED901A2
CA53B5E24111921CDDF83578D33D463D70EDACA0E470D8F592303FB6BFD68B4D
3F3BE2D7C5EC8BBF10C90111A33E205F2649B56E8443F6FAA6C721C66575AE12
D4C40F1F46CF9E9DA675AB5D5840D938780CD9E4AD6736ECBEB6A4397613586F
849B51048AC5F9405E03E14540A5E5582F61CDCDB57EDDF95A8C6705F433EE16
648F098C03DED8A2AD94AE3DE202D629B9422ABB031318D48F2C85F9DBFA17BE
84708AA3B6C9F81F4508F7A5CB7B6646AB8722ECF817877B77D473F577556DAA
2BA0ABACFCF5DEA7498C47328E873019A956FBB250FD9D8885D21D368FA70CBD
2709D2DA44EE7A9869963EAB48789541906DE49FAE785ECE1F18A22C7E7ED204
9768896B78E9EB7A2BD6EEC1B26083940656ECD689D92942CC8AF05CBF82AED0
B45A7DF4DD7AA6526FB597322560B9ED3087A65B5EEF1371C328A021411BFE3B
D9B5088B2F1AAE381FFED52D2D1E02CD0DA78683E3B06171CBE94BE9760005D7
135893D7CC2DB097F6AC664D9594CF1C650F84DA80D2EDE04802DBA33CE3DAFE
EB7A37E8AEFA4FDA6252FF21E8673DD98E67124D5DBC7BACF361E57077B71939
C1D1FB923E4E35C075CD1BCBE0E80DAEA1320D55B43EAB45D9B26C366B278782
7519FDC482D98839BF0DF2E7C3A56A1C1A3FC0E57A75CA414F6536C1FE8EB7A0
4ADFEE3BEDA0F53BE8CF5F64230784A797133E8CD46BCCB3BF38BCE38A73CCE2
9E073ADE792F7128231DDD1F63E6156ADB2609C200837C2E8A2D93D2A7BC9171
050C709A71E44E32B1B03C92EB5CF1D3BAB1C38E027DC4ED9AED633D98CD7486
3F773ACF8AE332631CF2ABE6D606607593FE862ADE31803964E3F4DC3CE3A271
C76BDD95C87CDB3B87BC26FC7A16D567EEC62E6FF0D471B4853DB8A94D4CACF8
843824F818083F10E88D52FC4253E8203292CB40F1414AE7E51DD7347007C342
CD70E8E9F2D2A13D71213B841DDEAAB208AD9EA644591C15DEB084165F9DF24B
B91D3BBEEC2E34E38EF16A0C3F00700A7BDCBBFED2EC0D09601AD6538288DB50
3478B051B5E16B604A0341FE621A58718D960D699D3FAD284310DCF54EB13175
19A75A539EE98E804AEA24689D3540F0F12951A3C01FACCE9A7BAF4D0DAFA946
FF65A4D2A4C39969607272C6886F44E90ABE27CA3A1F12A29D9B32E60E8E34F0
17C5FE43D0E69A99A922D98909B2BBCD145E59A5E7F5426B3988F73B09A525F6
8BD4915663C1301323180E760BE81CB874B020FDA3AE63340E4261E4F3E4949B
CC0966BDC4426190BE9F5D77F76A72AD925662E5FE1CEF9CCAB68F0BD33DA003
F11EB91AC4502FBD6AE48DA0F9D07C35B96B103E379B8A83A05FE728F1716194
1F650F75BEBADB2E3810388F3E2DC7B19F1BA9E32925F2FD9F19F4E8701F3E4E
4069125D7C401144740691E7A460021A47B1E27997FC1DDABEC5BD0EE0B20194
2D579C7D6727AA124083242BDA46D8E116E2751C5F298851A62B60AEBE82A929
9B9F2492BA35690D1EFD16215B8EF14E7A3803B93C28FA41D971B05B6AF3B593
E74AD1E68A5FCE12A86E63B78BFEA87D3949FD164F12277A4688BE96356791CB
8671C49365608F3EDECC109321AF92B4C29CAF073DA3A7D73E913D0D83FAC5EB
BD884D4C686056404DAAAD6F82F94F803FA1FB0DD8908D1DF08FB87A8BB83027
04DE0CBB1C6FEB6B517FBD7CF065120079E608CE41893C2BC96A347826CCDFD5
C69E161217F2127A59F1A6F22037641613F191F22D5B4CDCBCC2EE5615623404
ABA7BE6C5FE475481615B2AC1A2412E54688DD21E44CC9AF5F16E634AFCA389C
4D740B7B51BB141BFAD1080E7C726C1606A28ED492E6BDE9F800EFACD1513909
84E98CEB6A0B7A2A6F3E1D1DCC3B2552795E0932673E59ECC56DDD37A1D52BA6
C3F0E905978AB568941A163F4CE3AAB5C5B16F86016EC47BA6F3F7AAAA77C3B6
09C8C3ABDB6D514A76ECD37C37AA88B5860630B3406B494F7725975596F84777
D9CF48686EC9C5DBCC1D78513F591C7C10AB9D153B3D41426B7BF668B0D04503
56BCB686258462C1DC61095724B9F3312316262FD7C1AEC6E54DE7E5A7BD8EFF
035299B8FD8A4A7B0F51404F4A760F4D8B4C0FB7A32FA4B2383AB6E9C78FDEDB
FE6A5788D38A6701B123630C2A6D820A684166FBBC83DB17069494FBD411B333
CB37E2491C5BD035A33867A6D3A3D420CC31ACF43AA07182CAAE67E40EC63663
B678F71D4C6E0EC3A0AAF904CD3AA66E0DE5E3CDE049E94249B39A1C06E3CE9A
F974B2484BB2CDA14282B9511E505B3C89F9C802218AE40D1A7541335C5736DD
CD565D4B9F4CC78F3A393737EDB4FBD0DA299E21CCFEBA5478EEF013F0552A8B
0BB11FF46CCDB784E8BDCF730A16363E66572049E42C695886EAB42A9AD9094C
B635DF4B5B9BD9B9AE8455DFA3EEFC77653190F9A8B1E93B7281C2A21EA7DDA9
33484745BDF7E3DD63C7AC66C286C9A5A698A5E4D7A91710B7FF943FB23609B6
4B442F83CB795788FAB5E9CF3F75D5487DA26170E4561C7941C910B088C3B86D
F844B0F340CF82786A3FCF347048463EBD2006281A816627065DDA6CD4D3AC5E
2024BC96C7D896381BBB567951E7A1F29D4E95351298B000D29E5F3D0448CB5A
CFDAE1BADE9403B90371C3A07D208948AFA022A69C519434B6813086ADF518D5
88E0B92072A44BA1B3EBB630A13B7AB90992E85B6D67361C8D96F3E0D826FF37
17B67E4B1EB7BADFD98D7F4FD17BECE740ADF13C141EBF0A91CB105DABB32FE0
55086D56A0D358841D15FD349E6B95512E4EDF4C430216FF85C2ABE995E4B40A
A6044CC8820AD885C07E052B3F91C2E9A1D163BFFD210F7BE95B923E2500DB50
2075106DB541C267BD450B25B670CE80BCD068D4DBFF2D82634175B61FBD3BC3
406131F44C7D6F18D375D1F2270829DDF29DC14DBB58A30AC193245D18DE91F8
AB88AB548D8138605BB5A50073295534E314366E26665AE70482B890E4101D6B
60E4F3B37ABCA1346DAAE8FDB8DD9C832EFF3E73BA470E2BACE7B8515CB43388
C27AF99FF9322175CF8D4947E6B3846AFF5163E972156847F58A66660EC8A3A6
5FB47C9F637B4CBB4C73B6A080B0CF6FD1E9665E92032540570FFCC747C67C50
822811AADC404BC7ECD1673E8AA6C3A2F1D82F39430B58C29145E2F1B679C46E
94EDC711883F1E4EA84117A54757E8895A40401A26E1437B39A2F65CAADD6E02
D71FA8AF7453668DC613F326A3344F74AD7AC67569AF399385500ABDA5EDD3BA
343CC5EDD4B558467626850E752B9959FEF1454E53E7A3DCBC2255AD8F6AB4FE
894455118A61C58840CB68A925ACCAD75CEACE863D806916228F0614191A1CD5
DC9BAE256018615AA3725834519449B0A88B4F396654E74099C007930ADB1327
DD119BF799FE3B0B223E1EDA04FE2DA7A1C879143E1C33B6C6344F4BA033AD6F
8E88C33DEF1977796B454BAB2494C930F492A518E8198C708A75FFEF8C49C324
A718AB59B889DED521229E741FFE53F98EBE88B0405AD523254FD3FA4BBE96DA
DA1C27C1C979A0DD4E61C3B1F4C4DE01E42F1C4435EECFC02D97994BC8AF5270
E7CB1458D76ED0229C5FFB4A23B8716018F9050970895D51722CDE8F2EA3D947
DFF374D84915D5C5D16463A6FFCD079D1ED416C4347BF831FF0C4ADFB61295DC
4D5785BB0852BF472CFC97EC174491CAF961AB90629F055E75DAA6D9898E8653
5BCF379816CAE46FEA62E7BE8E9B953466E51828172C4DBD0E1BBAD1CE28B5B1
02B3E36403BE80B49A47446A6677FCED438F01D60EB10F478C89528FA337D0D8
88D3FC123C076507ACDAF783A9A6E24ED73BF24B6E0F11C13E532DE5F70B1491
307A6D9A2F2BA5099C8A07762E70BDAA74BA5E2BAB260C1352107EB8A96523D9
4BA3082B99772D585329AB8645C3BBD11D72BA01F95CCF11C6DEBFDAAF7F5C4D
795F99DAE6A8D59462D759001BBEBB59AB0C322EFE02904D82B424649C2FA593
0E23281DECC5AA908E54244566055D418602EEDBE78843300158908F77C0AC75
9562065826D34C38C598D8626BFED7CB672F132E065E2C27932F709935988376
94901EBAEAEC410E2B36575A71EBB8954C3A90EEC264E6115950FC91D0D54999
323D8B4FF8129A8EEC3900A00CCB026E6943BE1728BCD3F6C1BFD503D55A6A7A
6376AF4D646B2F31B1AF935446DCC68233C72AC164BB393DA250B0B423D32887
C680509C862B6F49EAEC995036CF797BC11DD87159241A7503B1FC87023766D2
E1CA46A71DA0AC46F5351FA1215F3B82978F3DC0082D300490B49742609EF2E6
D276DE76E9E50E17C3EAEAAFA02C1F5267A4D81750E30D70C5444A52A1F5F5FE
952C82E3E05B19390AC2D899973611975187E4D892E8B7ABA102EEADE2EEE64F
251964C6DBA967DD98D8CE925AFF700932C8007CE627502531688D57A64FE518
C40D5EA1828E888F61B162E478E499A28A9044DB3B61CEE796515166048D9CD4
BC06442850D6F863DB40D4FCE6C55B611F52BBD2298D474C1214015EE6B7E67D
6ACA8F3ACFAE9D36CB7ED3C7E8A277AC1CA71855EC89327CC806ACEBE331E057
A94B653D0F2008042DD9DBC81539A0C0A0FD20C53D4E52946B065D9B3E42900B
45C44C7016AF55EAA81D52410F0C8CC1A7E1613441A0D3470FE20A284A6D228F
1D2678B2EDCAE7D27D0F5CBCC4D2FC787334F571C6990C167100BEA40B3C3A9B
9D949EB2EEDB5F8D970F2303518F89D367F1C867778504901942F6CA3277BA0D
8CA3576B33B59B379D3463341F976A05DC44686318A7C6E8B27AB0A121152858
B736C06CF123E1D2579A3C083CA880A87BFAD27AD7D379860912916E5338AD5A
133FEDC2617FF4232E949E9961FD8D0DE342CC08D709E4C5F6594659189E0B08
38BC04060B911682741FD8F0CA16EB943AF05A6DAE68EC152A5573328267E1BE
A7A559C2EDDAF6D32F2ED22589CF138AC6C3CC4E475B41D37EB419930C1620AE
EEF1BC130A74A47C3514D7BFA262BFD8DC547BA5A829835A45F019EB4F0E3291
01D0766019EAD0ED3D34399D6AFD324B2A5C37214C2274256709C39C130C5D34
ED410DFAFF1BC54F9B66CD4D84993C3CE108481E853CC710149AAF40CD75A3AA
71000EC535EF0D7B7F9B79780515B9ACCEEE3ABD6E17C1A6DAF43B0509BE0111
C3699A4DB07B932D9EFC4DFCA30120F5A7CFA30DD810B29C84D75B798040B587
FBC456637F3F195D29C3F5295F23D02BF18B672160560479F8645B3D81D637A4
AD7279BA942CB8557E27A96175386AD727639D26DD574C9A1DDC768A164543BB
35033C41AFA8D06CFDC34CDDD04A74670258B445DAA65104BD66A7AF4A7ED038
283C6D76D9559AA54C80BC4039D0C29BCE2E7FAC66A9F6CEBE0AF817C098E34A
DADE44E58A70262FC614F1061DC9AB898F7CFAA7D369BE0E5363CBE674DC57CE
FCFACC099B9477386E90774EC62BC5EA11F097190A4987392999603B0722E376
3C0BC40503F66487868FF2F5FAF8521422CE85B9799BD98DEAB8E82D5B662A16
3E971448C955D4246F9417D29344299F5134B3FCA712092F6C0FF681A2C5BDAC
67BAC0A2B4BE20F066930DA6B2C52A9C8060198738CEA3ADFFBBBE390D0D0C6B
CDCA985C5202020668
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMR10
%!PS-AdobeFont-1.0: CMR10 003.002
%%Title: CMR10
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMR10.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMR10 known{/CMR10 findfont dup/UniqueID known{dup
/UniqueID get 5000793 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMR10 def
/FontBBox {-40 -250 1009 750 }readonly def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMR10.) readonly def
/FullName (CMR10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 48 /zero put
dup 50 /two put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3DD325E55798292D7BD972BD75FA
0E079529AF9C82DF72F64195C9C210DCE34528F540DA1FFD7BEBB9B40787BA93
51BBFB7CFC5F9152D1E5BB0AD8D016C6CFA4EB41B3C51D091C2D5440E67CFD71
7C56816B03B901BF4A25A07175380E50A213F877C44778B3C5AADBCC86D6E551
E6AF364B0BFCAAD22D8D558C5C81A7D425A1629DD5182206742D1D082A12F078
0FD4F5F6D3129FCFFF1F4A912B0A7DEC8D33A57B5AE0328EF9D57ADDAC543273
C01924195A181D03F5054A93B71E5065F8D92FE23794D2DB9B8591E5F01442D8
569672CF86B91C3F79C5DDC97C190EE0082814A5B5A2A5E77C790F087E729079
24A5AC880DDED58334DD5E8DC6A0B2BD4F04B17334A74BF8FF5D88B7B678A04A
2255C050CB39A389106B0C672A1912AFA86A49EFD02E61E6509E50EE35E67944
8FC63D91C3D2794B49A0C2993832BC4CDC8F7BD7575AD61BCDF42E2E421AA93E
3FF9E4FAD980256D8B377043A07FC75D6169338028692CCA8CD1FE92FD60AD26
D57B7519B80A8F8DCE9CEE5CDF720AF268D3C14099498A843D76E3B6C0328F24
D36EFE7F5C4E5B5C612786200C8DE3A41EE5F1FFAF4097653CFCDC8F4FD32E0B
03EDB3E413283B9EFB0AC33B055617005BC9B0057FD68C52D1B0E67F0C571685
767F2AA85ADE4E0104A1C777733D5E318A22A9944336E5B98D965E50D31F357A
8B6EA5A0EA98E1B027CE68C2EDB149EDDD04ED74A1B3D206D471A0C11C11449B
DE190BBFEBC08C9E1B7513B43DA3134D6B11A2516E6E86B67F68C970A320D05E
94FEC57FB347606DF89989C33482BD09D011C55AA920319E7B26A205D3D0F004
22466F09C0482A164CFB27EF6ED2B040ECCC3DCAF345B5A73676F193D43123B7
72FD6CFC5E37930E61EBD5A6307E4DE70194E6384EC0D79DB6AD86D3B319A31C
8B0589D0FE28241D8ACE280D0530EE99C80723E560BB72AE9D53F4713181F491
344B06D3027BA4E9E94D4305BE1D817197C54C8FF56CD6964165F6448ECC8A8A
64B48B4F0FD69299A137589E2491A283509B21A3A5772F75B7602A9F60AE559B
07A58436D04222C73EAEA72DE9A5A441F88D27C11F4F91255EFE280E91A4ACAC
1E98A4E5E6C57B9AE86FD218C3CD8F24A4104156A80F13821384E529783C52C8
78B94AB3A0096090867ED32E8A30980E737922037F75F062BD83BF4F5929BC51
CC22AEE2DBBAAA001CFFBFF41D258424FAD888FFF1BEAB796A44E3126159E120
7E4025C676CF94888A1971AEF8B6764B3AF4A92D36FAF6FC56FD049710EE3782
BC2CD84FE2473F133BE03C1346B875463F126DCAB15C7A9BCC9A727D23611462
4E8D2BFD2466600285D79518712B8681ABCD69608E6AA9578F7BD771EC36E01A
5A17BC17E375020ECA59B43790ABEB9DF5F4FBBEF807E5699EFEAC563E1ACC5D
EFA336E75DE6D8248E9381BB110884FDC89C2F9A41EBBC9A8A1F98E6A41F68BE
EE30E25CA148C1EFF42DFF8C214A6537AB11F260B8C329A4947B5FC8DC9C5622
4DF7BF4FBFB00380D47BABB03BC30627AA74103E553F55278F538EDD8C1E64CE
0F1398CA0AB5A86630139B4A7E8FC02804CAFF3830114640AE50D2FDA3B561B5
C63AD7EE3347804CBB40FB1E77A6C89735DD870351C3A1811591AB493251B904
314F65791963C0412377C1D02362C5E9655F1C3D4803CD379A8EF24C48218C2E
DF1165840462BF37DDE1B8D5FF09FA2C3B261E2F1A65ECFBE5D4EAD43B52C029
EEB3948CB8A252CBAF545C8FA1C31E920E23A12DD7222CEF2D2A513BD758EA13
DA33BF5FBF1D734653EB83DA2D374A5B9A0CE316F24EE375D6DF6BDA49954C2E
DB25A88821193636119D469BA66E5DAA9C92520FD4F84426A4E54273FA469084
7517817A6EE3E21176D333825E88046F50B3CF6938AF9BA79A2F51398239EB91
1A2D07F7FCD948427FF62F40FF95E39FE1A1AA8451411563FD5388472251C155
69BDE9283B41900B21EB1190D06E6B13B7794FED020D2C1BDD205AE77B084BCE
EF628249398B496DE85B406FC2E1939EF00DFC84C07E26CF72EC401BAAE756E5
7F6673216E7560D1C2A723CB405EE5CA474A07F61B81F8836482F73DC9516D67
CE0CB770EAD755B6B356198B4B97EBB29C63456953270CCC8D5650C1D006E69D
38DE2DFEAB27DAD50A817F0D645D30AF5B75A7B53CBD3D2B8D87BD0A7E525AF3
22F7ADDFCE31716914C2318260C2E2B4664893921B68C5A93334A361D94A759C
0D7B146D6FD94F0442D672BDA0F6432E18F3C5DFA37ADA378D95B75F413C9ED1
BB5C606A3EC7DFB3F796F59B0478C13FD1900381EFE0BB5242D5B5D34D03AF1D
4BDC93EAF8020E26CA23C8B0E7DDEBBC6762A557067A4CE05A524188A8F02E2F
3625DA38DFCF381727887F5646A3995A8A38A5FB1E5D5EBB395FDD0B7C8E71AD
B48EEDB62AB2CE99D121435EFBBFCEEA69AE9ED8238B60CC7288DE33C766CDFE
15B767B4AE2E6CE0965E77272AC9F86023DA620548CFAC85BC751C44218A29C9
849F1C2DCBDFAD895B54E51A569952ED50F82DC8A19F367E7E44643854EFD6B3
FCAEB04E55E4661C82D31E2932611748480EF61FB2FBFB0CFB940BEA81AFCD84
4C6A6332D7A600170E38A8EAFCD4F93DC153C43175434C86BC747348FAC61B76
1FEC9027C1A193E55C80F1F20B5317AA0A05AAA36AE235F6E49F06E570FEE798
84857D7552EA92EF3EFAD52DE39C2F8F43C59E3A957B7B926FC95FC4B60186DF
7F3523EE2AB74E294C8C4BCD8B4975E84849E0FBDA6C0B0F24A636DFA578B122
CF97BC5089E21E9F5298D1C9F30CB8BAFF6A3A11BB4D9A0A5CF2B18D055C44CA
4FD4D8FE1AF3630907DE7E585AA811F9CD11FB2C8FC791851D651009FA5DF20B
3C33FD2FF848A9E3F5652BD294965A332DD3F246C91B0ADA34017FF2451D1394
F9C3C95AAC6EC8062BE98E8914D51DA6A164AD13938693D446044859D03A949D
F9AC5DF4A000CDA98BB516D762CB9F6D44B5268FD0C26E88BC4A760C0F75A140
DEBDECA4F511128B7D2805872160C55236F0A0FA7637FF0D4E94AC079CD3C8A7
D03A5A56F26B0438B577C46011A10532FEBCAD14FBD6032E224F45691A726886
56F305231EB2FCDF59C8BBFCB5DBD2D093A0E84D62AC93A2312CA69295E937C4
8DBA1802B85F54B5E7E6D6216A918F911FF705D3B5CF055F1D873B96283A0B53
59344D910CD396D883F6F7836BA65FAB4393A773A8F6BC298069E5BA38210EED
49C9D920F718E3FCE692527DC7CCE6963BF744F2C91BC5952564196D60574E86
87A0FAB21F2DB2BD5A51D7FBD8FC19946D24E5A228462C4772F978E650ADCE3B
8D66B9C21279C531CA1C3A8ECE3420BB65837287A7222CC3673A2A5F8BBFDB60
C719CD073EF9A23675198462C7C87B24CC92D6AEE5C25AC63855CC3281494342
D28F3D2FDE0C183486769A4FD5B0143193D31FCB2C2A14E487BBD96D0BADBB64
D1B56021C363A795BF10E2DB448261C363A54A4AC1182B470C457AA82DF3F5D1
F4B329806141EBD53CAE309319B94133D7EBDC2D0453A905ADD207364371E178
0A95C2686E3B34C4A978BFC0EE968C39ABA00889BC5149162C2B54483D44FD3B
5CFF41F611C7E03B94945F414560E874D7CF27FFD0630890D7D7EA66CBD15448
229059E1C436BB33D69552B5367AB5D53591C4678D0C704DD3EA23F5D9E8A7AC
17D003C19E333E726FFFA2961F33C70F429085F7BFE3E2510F59B78F58B19CB4
01B48E184BAD9020FECCE3AF52048A056981DAEA02AE78197E65855DDB170616
F54278395D9EA50DC83761AE759F9CDEF9E1948E7002414FC05286ED793E6662
3347F2A9AF8917493D7305B92CF93E8E9185F70015F5594084298A6C2F9FD3C0
689F262AC9FEDC9B89577ECDE92F08D3142209FBCE7B5C0A840CC767BCA56C20
4E4E545E2BE4D21C53855CEE4CD0AB35D1A604C0FFFF77DBAE4289752276559F
A05FEE65F45ECAF44E95E23FAB6052195C7948AF0B1126482D4E02D72BF8AB03
DE0F1A632F7672AD9DDE70EDC82AA993678A82BEAD0BC2649C4707FD8509810D
364B5C6FE0E10772E95288C622C2F06C634F4DF8C7FD1432BC9310D5F24FEE3F
7AB324863D6DABAA1576E70643CA79EF4D7DF4105093D66CEE0F3B87D2164A7F
26EA05F5C4645B22D3E1BFD2219657712C168FD90DE801FB0F32759E80DEC1E1
43CEEB19FED12D757205043FC98FEC62D6A8D8B97BC083B4A0E985AF7850D6FD
8716B9957C1C35A0675BC53DF672C425C79F43FDABAEE7D63F092CF271C9A9D7
C41F40C4189510987887942E60A412B3EEC84C9A6E1AC7D54D528F5604B72C08
94B7882621A5BF1F325B92FF96B80878CC550D1AE4D8196E41CB1251856609A5
C4D3BD05A922D0D45E039D9450DEF8490A3E924E41434194910BF60BA1B08BE1
B41824345627745541A4F1703E956328F6227D11C74946B38CFB096139979E56
4E723B889B44C6D78673868C89912F8B4F0B4B485F1587A637B630F92E6072D5
7F3B44EA6FD96BBD4FC28A6C1D90805E3BE3E42A7BC9C880762966C55BC04E01
204D083AE976FAE6F37C94F27E68F8C0F28D52B17F6C0FD7C9150701FD78F8CE
B8E8DC9260E3974005EB5CA728171F482D765016C94D4ADFE4A42EF42212BC56
7E4EEEE8B0D2A7856CD4E44F55C0BAB762F92CB8D64C17022D4BF3A47C12F5E6
279FC23101FEE93753653CE8CEDC3B75C9CCB29BF1D4554C6120DE8EE750FCBB
E38B5D915206974962E320362E59B3F21B3AB1875703191043D03284D4467346
CFF2F98CEB4845B73ED8E003E0DC94251B73E13A9B51A3F1430BCF6A21EB9B7A
65E17FA411F53BE6432F1506232B8159E008FA257F884A4A01AC53BE91754D78
BF14A5B0FBFB9C31BF4908355F8A762052968DF526D118708CCB0B7CB5BEE285
6DAB6CD2E3934178E60BECB11AAB5478623CF6C50C92F8BB5D1A583609028FA7
B8A53B791BDC9EF76A124F3F7641857E4BEA0837CB36176EC9A522EA7F41B8D3
63C37D1145367BD300F17B54522A834BBB74DE12BF9EB26ACE6F24A046D58F89
4D4B7DF74875F1A0C1C9D97BE0849593D7B398EB4B00BEBC8C8D1497B6EF831A
A35380FFB7F1AFA4D888AA52C9482E8B1755CC209905F98F40D95B44D4DCBCB6
67423D1BC2F3560FF0A8B4F0CAC352A4EE2C1D946E45AAEC8A6AD40303F3382C
DF0756BFA3B1ED64C169E56ED1C760F2FF0E24DC5C9F41306EF8D2628153D30A
5DCB0791126BEFD4947D7EF08301FE015F2B0008DFFCBF9F2D4D859FD43EC7D9
C5BE237E9BF6665B7B1BEBB362F0C0C3A8D86010B9C97FA741C97C2E0513386C
9C26C235B14DD2A58BFDAC7B5F63DB4DA6D5D37D0098175A9071590E1DF66A3D
B8173A047C29D7D35557F06132CC920B5460B8AFC11D23D09A4E45D089F5EB51
963FA1A6256E359D485107FD143B2BF21FDE9DA5744BC2615E86C31C89470CF0
D06C6397D9FCCB316EA9989430240759D2C4945D941F159FC02327F34B042BAB
B5C3A47C78E8C1A6FBCD396B1A51CC4B020B8AD401841EDABACECDB482D6EC5B
72D2BFEB4556720FADD49D07307C8B22ACB7E310CA4151A85C71EEF70E8D15DE
B3B00F26E0E166C14647A65ADA228A3D1C89025BE059306565DB1B1EFC37D358
8C1EB024254AFD049BA977BD4C2C605050E17940A89D0D4C5D963E792320F5DB
3706682E03D25D9E02487247819551465092CC22B6B56E93F3AB528038FEC3F0
668F866707A19B0463BE706EC729D2EE1653AAC7E29BD25BFB3241D4792F5152
ED415B4E7FA92C2EE5A22E27E8B75542C492E56D811C192E95542A6FE0BFE5A5
69273C2ABED4300D491B92D2AECDD278404CB84B1BB1BD7AFEC858215837D118
C0E928BE7E07CFEEB51A6D21375B772B8248C994564014015232A0DA4BEA1754
3274F407FED0837A236371F1A32056240F2015B1E7F4B2CA72C6B58610A66F13
407CFFBA5E0A2893C1F572D50F51286E9133B5A84239C9493B0574E77D281D01
11D00683354A000C9700EAFBC1FD104EA19DFCB87470190E7E2CE26E3A6FD0FF
2620B87B82AC8686B6206B530F17E9348BC7D04B948348802CE53A312443DB87
4DBBA5313A6A2A8DAB8A1CC9A594FF8C299281C0A261C8CB2226B732FBEEDE40
2C6ACC74A1A61379E2E1CD5548CD908268A32FA83D8504C442EA0E183ADBF7FF
9FD09C037AB03516ECCA93FF048235BD11A25DB07F164512A079C5392AC7F889
CE96AE5C8D9580BCAFCC087C35E76EED1A671E87C12E3045E15A687134736DF8
DA984772AFD189D68571A2ED7256F1E204230E41D3D9DD876F938951714A3973
0CA9310489F8E807C1C7A4E51AEA5BC030610A5D7263FF7E0F9FDE3E5E37A362
5B919000BD94D978583B942EB79CF2BEAC33FEBC9A67272EB10865BA8FB75FD7
9D280AB59F91B96C16C982DE848D76D8FA8620DFD7C80B7DEAE7264350D6FB3A
EF04794DA3305844A7CF718F6D1A4A3AFF6826173A076A1372ABFC54ED3AC6C2
09C9287FC830556CA694E21CA5342ECA7B10C90AFC4783D841D7B1E34FA3DB7A
2B706F3E21B0FBAB23E7257962FC3BC309CEA2C7239A9D6B44CC96825115ABD2
AF9A2566D2F3382C01569FBDB94C8D664A5DA0F7DC3DD140CA77C743D7BC1420
324ECF9E4780280EB119885E96A6C619CE3C0C8E1E264E2DEB137E5DC8149786
486D65667ECF47B1A1E20E9E6E4FC8323E0BC8E61BDD3BCDFC6575C69C03E31A
EFFC290472CBBD049DE3F840AEE37A2486034240F80E75D8A79E0762377DF660
52B12EAA16D678990B11A9BFBC03C1D4FCDA9FD4FFBB3E88352438102F10B7C5
9F04C013B6575B5E948FAB58EA691984A0E54E6B9F3F505FFFEF74D06FA1CDF3
4B8A95904C8A2763AA8AF5B71D00F5DE09DC1CDF87A08B6D181453063E14C12D
B7BB3775A6E2A901636273D9EEB833EA8CF20FD83AE899E28DADE10EEEC20BD7
BD93085A4B1AC80AC1AE8280C14767F1A487BD066007A0D050317BD081131A14
6EA0898ED59E46DA7B6254BDCCBC660686E2EDA0E77A705A653733BB5C5497D0
B130359F866CF293FB6EF0C2AC5BAA2DB0DED045E2DED3A2612D078333260359
16CF0CCB272D34767EA069E0F0B0D42327A18529D72E890EDA6195C2688438ED
E9ACDBEED41E81CA8EB5E43C2B09CE266EFCA03F2D7FF57F12B06F9E54FCC6A6
546676F6FFC5B8B7D3F0982B6FF0D21D949309F0C0B175CC1D0976F8C55C6AED
6E821C39041E22D91AB30922F2B2EC2746BC7DAB484991542FBC82D87B487507
559AB466F73EE23C2D3194DC5CE4C9AE66D3164613AC5CBB3DB501B64DA7C91B
C7ED2EE9027FC0906820B35D4F2CF66C4F9CE4A884B7C07155BCA884ECA5EB3A
ABB83F84DB1F5639599DC7D3F51241AB5D95C3BCB7AB1EC90B4BC989F74FB354
04B2D7366A34D335A47B8C00C05CB423482BF6C7970A95545424A08AFF9A035B
7F83F52B65A9799CE76E303B85664B624C65E9CA58184C7BE2BB9D9C86A4DE5A
8165EE3DA2E652B5022EE7893896BABD88931DE1D538F615787645DF5ACBBA0B
A8E5B899A37321AA7D4B283AC9234978C2DD81813A1EE5DB6EC170DAC1B6EF02
94892635B498765C07A38D2E9DB0B7581B11056C28278F89B0E60998379C07EB
C0EAEDC32AA69B8B836F92A61AFD35688315B2C3F860632FC13E4BDFB63214BC
41CC6859EAB3AC3034449213CAB99FA1D216563419CD6D6CE4E1B56F33E6C654
7AA9DCB5B05FC068DF02AC32408C8010AD004F6CCA9887830927F8CBCD49CDB5
18CAC1EAFF815FF2F6F527F936948201565003022C6C7390B4E3C2B219FB4F76
9F12BD25CA7B3B61D1A2F8DFEE795D04D5428B42FB66E0C254AF7B7A10CEF7FD
E6544A8E490800362539DECEFDA209FBE1774B790CB6222E100903033A4CA73E
F0F4EB1F66741F359B651D485B87864B83A2FCCAFDCC861D7E34DD6D3E6AE7CD
6EA69488607C212ED00D993F9C24F612A61AD8C13C202E9DA91CDD15846EB4F5
FE15650CF4487A938A117EE85ACC8102EB37397718D4F17E60D3CEE08BE4BC5C
C93E8677D3A0A807DA8C72ECC71B26B24CD315BC351E053081BEADE92D2E498E
8A4CDB963B1104272310678F74491DA1572344FA5B2B920DC304A252193F1D93
5ED5268A6AC194D21A19DB87C73771A6CED0715EFF43475A0FD680DDAE896369
D59A6B8297CC9EFE00FCB9EFCA2D26256C58D6809FA22A0DC3112E7888A49945
0162B7373CCF7BB457EA8FCE8009D30DFEB19A02D18CA44689E5D8C34CC8F267
CDDA36431BC83D98704404C2E77DE570C7704166CD3DD128179D772063505904
9FC2FE5183581C921EC9198BC03CE04A0F0B2113C7B19A19D7E1DCF6AD566401
52A5010D25C836FAD8B8569DAEAE65CEF1295FF2EC1D6F82BC0428A071213C63
F9E6981B7A7D02A567FB66A67AB2E9556E6C9AE40D3CE74A353A702BB017E760
AD9AA7BD2198D8808551147686B2ACDAE4BF534FC07180E277C771BBC84A3007
94A6EA81739C1FE770576F4593A1DD7ACF15A1E166892EF94CCC6BFED98F0D54
D93AB3AE38D3F24C63EFD772D35A49E34D4359CD47A000608F799114BE5D3635
9D09FD6D5B025A7B766FFA65AEA58C77DC4ED68C27DD847573EBAD6AFB646F54
CEC76AC98678B54E6E3A103EBC0F25C44B4AE7D581455520DA75F0AA2AD71C12
CA19CC7AE1B8F62F15899242621F17260A5F8DB1B789A7340EC576E93E5592C5
03E4DA37DA7FABD00C06BE3B854DFA815E1F376539ADACED2F63269293495687
A19CF128855B9566EB6AA1B52455A825369304D7A2D66EFCE4E4562017EFC2DD
684583B0D7B2DAEB2429EDE50A4654BC39F1EFF014357292F0EDFB338F67BB46
6F76A8368D8F95C3F24AC4B3FB9BC915F32D7E36B483B05454CF05A292A26715
B43B6311D3B1BB45065FDDEC6D3C9368DAA241227BA447B5EC4683D5F7B84B97
9F0D57395CF5E6415BC4F4E28A54D0F6A9C022163711BCE3B6F903D79373801B
BEB01FB74C43F9F2859F271D9D1905283C15AB1432A2DBF70B6BF7DB5CBEA075
590CF8FC7E91DF5E46FEA9A4E455830A733C5144FA4526B3C8A702CBB14BE4BB
9E988EA6AFAE8432B022627232C776E72753811894A2EB658B02044F181DF4B1
6DC2295F061DECED2F2FA1A7966C8E9FB5124FAEF32EFE9F34CA01462C15F2A6
AAC7D86115E14DC96A1ECDED3990BFBB40537650FFFD467F91ADB881C07A5CD5
4B657A633C6315BE8BC9DFB8BCB6928FB37010724DB5BDEE806D763B086ECC87
8AB54D6F80141A2BFAF8E487C18AE1A927951B7087B10CFBC06344966932C582
897A3D8F3BE6CE82109ADF49E391BC00EB03FD69C423A2FB117374CDCC26D299
431800B89D54E41AFFA9B15366F2487C46E188BEF09DD95D492E66AC5B229CA2
4B2FC518D31B7A89A935478107E1930E9A9A841AFF06
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMR12
%!PS-AdobeFont-1.0: CMR12 003.002
%%Title: CMR12
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMR12.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMR12 known{/CMR12 findfont dup/UniqueID known{dup
/UniqueID get 5000794 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMR12 def
/FontBBox {-34 -251 988 750 }readonly def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMR12.) readonly def
/FullName (CMR12) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 2 /Theta put
dup 10 /Omega put
dup 40 /parenleft put
dup 41 /parenright put
dup 43 /plus put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 53 /five put
dup 56 /eight put
dup 61 /equal put
dup 103 /g put
dup 108 /l put
dup 111 /o put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3DD325E55798292D7BD972BD75FA
0E079529AF9C82DF72F64195C9C210DCE34528F540DA1FFD7BEBB9B40787BA93
51BBFB7CFC5F9152D1E5BB0AD8D016C6CFA4EB41B3C51D091C2D5440E67CFD71
7C56816B03B901BF4A25A07175380E50A213F877C44778B3C5AADBCC86D6E551
E6AF364B0BFCAAD22D8D558C5C81A7D425A1629DD5182206742D1D082A12F078
0FD4F5F6D3129FCFFF1F4A912B0A7DEC8D33A57B5AE0328EF9D57ADDAC543273
C01924195A181D03F5054A93B71E5065F8D92FE23794D2DB9C535A5E57376651
F6823308463DC4E0339C78699AC82C769542FD3B410E236AF8AF68CF124D9224
FD6EE92A38075CAAF82447C7AF41EF96F3ADF62F76FB425BEDE4C4124E7B1E0B
8BF254D91912D3A99557F5427907A56514C5A3EB961B94112077FE9417B70DA0
B2E1C1FA3E1D6F01D11F640CF848E45BE3E205258E64FE36AFBD4DF4E93F6B1A
966C8E7FBE2CC8FF43C1F67BF6C361678B5E90F4BA524FE8A4CAD6AB28183E6E
CA6C9636E884845105595A2E40CDBE8D4807A81AF4DB77B31873FEB221BCADD4
2C4669459704CB58A7BC230FC59F867EEADE660E49AEEDEEB042BA9A7DD8193E
56C3A36A1F639F7EA512EE4BC6992F52C2FC82A890EFDA730105B0AF7B819295
EE00B48F64C2B5BCB275B1DD62F289CDAD4AD9B7EF057684642FA6FA6322C277
E779CAC36D78F7779CB6DE12638B3C65B70C6B5F8A8C6421A379719B8DD44973
5F52856A4A29B2ED37F2B1FBE6EF4B79B7C0CD6395C756A00FACD763C235914F
847D1D99831023CE1FD89EFEC83AA7E313131C0C197248605EF5BA773D0A4000
72F607551A8EA6F0FF19441ACA179177D1FF7B423FEBDF58B0C19CAE3C10EEF6
3538D8FC4762B77C5AA023A8186C40D0365A4487DC3564265B3DF908572DEAA2
57E29EC669DD72974F806EFF5ECAFA9ADF1F9D2A63087FB7BBD100F0F81C6FFB
B1EA1C9DD46548AEDD147EE64B1B4894972DAE1DC3E8569D6A3CEF9F9E46DEB7
547E10BB2959D374A33E47C58F1B20419920AB485F166062FCCC08EB5CC9AC88
F388F0C0155027B727729488E44CCABB7064A1432E179189C4627453C5231535
47D1F2B8BA43069696830CBB6E5F9A135CF22D3D1FE490A3A63C088EA32FF444
24A2427BBA63033DFE2E06DF8CE67949B6AB02F26335A376B57376814D2A7DE7
64A4347577EBE9A6E33DD2FC214A09C6D889C8FFBF1D567032548851B8F97204
49E215CC7D222F593E1EF1439ED60AD922D41E0E9EFB5CA48F2FEFF75AC5FEE7
FB6676D8B8D4DB6885FBE8B61B586313E4DAFB09D94CEDC0507E93000104F3DD
F83865A2C6F6A7DA8562BF86F5DB233CC9B53391273A1462E40876A8AC2B098A
DBADD5A160DEAC061F86A5FCCAB495EF8A9D121AF07928EAFD56F618E4EAEA97
CF89A3AFD406FC9DE1E9769C1E1EB83BB883786BC075EB5DA2692CD59C4DD7C1
7FD2FF9B18AC740A390C1DB38670DEB18C67721A1DCD502FE7368F47DB4281D5
459B3F020595FA3B10544AAE9EF786A0645FB7C9BB29D091E1432CD878A05918
1665643005BFD9A4B0FFD347ADC84CE22D6F9AD4EDC05E8C7179DCB360AB57D1
6ABCD200A4B4AD56825DC345984D9A3DE11CDA5E9EC1E5006EE4181E4EFE0846
67D8C27BEE8F84A1E01947E945BBE988702DEB2240C4BED952E433E5305484E5
71965D3DE95C4115FF78CE9EC18E323C599727C8B93CDFBCD1CCA780DB8C81ED
C4B5E596E1603624308972FFAE9A57B0EDB51FDDB6E23EDE2946F61BEB241345
2A192D8CAD53E823D687F9C64A70A4B4B703291FA6317C051DC6A44BCCE0288E
3839D726A8F2E39BFF429865E95C726E808E02CD06F36C1CC9AC77999F8E28BF
CE9D74B699CA982479E9D0DD98EAB24D29C981EF0349721D6819549A39413801
F80182D567EE316E2F0AB208068E15693E4C399A381BF9BBA625E597E6E109B8
16F3A84C8EC92F2ADE288821092A421A8D3B907048FE947230810F0777EE2542
29A3485223FEA079B359034F70464DAD2F0E420271A4E0CCF57A0ABBC20AB327
0CA71B292126D395E0D083B19BEC6B48A9DE2BF470C3D01A8C3F52075BD4BE02
A0C518355814478202FD4762EC542F8E7B9B1F7824F0554660CEB83E35635E1E
DF0D03C94C903ECB36B4948ED98B6324E0094EB1DF70863142D4ED3A932D7346
39D69F8F044B6084482D7748C27328AFD24A3A70B99D1F7D32CB984488672254
28B6A9E9DCA2C9FF6A1B311D72413404B3CE5428BDB7FF3C36357D7975184F56
FA6B32AD54C37D0AF7576663AB1397B80D4E998F0B4C4F6D90B483029EF2EDA9
D4C4204C1546EFF3100629453EAE01918D09FE104E626ABA38646F17B6A94CE8
116BC7A8D9C319434CA5B830859B4164DFADF1D7C3ECA5C78D8DEA930EA4AC3F
59DBBF3148C91A2E807FB934E3439D4F67C6DBBA9972854E6E3688E1E0A34B74
482217CFE031CD7B5DFEF727C3EF8DAEEEDA08F4C90289E62FB2AF2357EB2E45
4BC547980FD479101FFEEE477AAC6268DD659E8DD9E244676FD3C6909713B71A
323B211E571BE711D103FA23B5B9AF077D84E2D20FEE805E81D20C03501F0F17
C3B081946CD0FD577F00E50B76CC37CFA97A61B89C25DD43911B28857284BEBB
5BEC61FFE3A14C64BC5425A7A82326617F6F1FA4FEAE56071C9F559F91568179
46369B394A5CE96FB7420FF8AB7C61CB83492FA5AE4A4B0799578594C9EA67E1
E54498AA5CD6ABA34AD3417F04F5D8D664A7EB39D41E2D17643CAEBBCCD9C38C
C5C9541641A09335EFBCE0D276A54253EFD68141807A66F1DFEB4BEA5889FFA3
4D20BD52012206A9F8D3E0F6AFC03FDBBDF3E51506EC6336E249CEFB571AB84C
BDF8E471E3795C04E38A5306BA6D450D72E50910D1AC385BB06CCD4B8E433A32
5A4B7FACC976BB31FCAA1E62DB2C4FE06DDDE7367930E336B49F47DAD91C8735
9A35D80CA2E117E86B52E41E9278046ED923454989E48610ACB3B1663F197117
52659A9D7BFA561C7ACE0771794FC778675F83C5EDCB132AF124C7E6540A140B
E0A268836C73A3C746DC964E482E63C56C0D396515283970FBFF182F9F684FE2
655FD8F5D057D22246DDC3FD11B77552DB4D90ADBAB77BBB1FB1592129DE0AEC
F822D7D36E52BCDABBD560B403A5C56C5E1BE789C3AC049318C7FAC5E5861E42
FD66C3C0F46361078D7E036281682BCE9BBF77983C93ECBBEBA9B359769CA442
87FCA1B98F4EEC4935CC93B08AAADDF355C99816453587310F08C50B9BA3D107
5388A1F3AED2AE32BEFADF0285DA90436D1D7EA85D7B9B6DF2AC4B778CFADFF6
6EEE54D1A1C5DEE3CCA7EFF57A7C2931933CEED90CA26DAAB45E4388EC4DC366
B9E88518D6CF094861D2A59282044CC06E63EFB390A6DF4BA5EAC7CE39E1EE03
3D84099F5BE96612789AF3EDED07266EF10A0FC23EA1EA97040B6BAA63138B1A
A9CB8F5DED781260962D7618EDB200C3ED976033E8967A8CC676E9C11F74BE34
343A7ECE7EE97E8F76F7E95517A6D6163527406EF5A669535CB2BF4031F29046
BB2D0FFFB47A576F5EAB1D00A582965C56F28C00B3BB7BE2CC8D8391F789070D
775EB775437F0CD53DA840BB3575104B63E4B0BF14E3F14B320EDEF65FD4CAF5
8596DA491BBCF3153DED3B718F833D106432DF8DB8B8E6B34D5308C9010A5DD0
7E0E53260BB84BAB3EA748E8D72F75901604F80F4416920D69B4B983DCDB72C5
E9928F01A4A85954FD74578AE336C782CDF81D1EB7EBCEBFBAE7ED8AB4862584
397928F502D65139CCD582CF0723C5262EE54B9D2B8C39614652A8A90E1C3B65
7D26B99DA298FE4B9A7E98848F619C9BB4FF9FD215B72F99506F06355B332689
37D80AFD9F9ACD8172CDC51FCD3A759ACA0F7D4EBB07840840EE42C2D5B8B257
2C6DB3A7657B75F2F0B9730A20112745703E2D0FE709436CA6A5F36F59E64D9E
37C0A23D6D289E1AC1DA273872F5FC5C3DA2B127F078A4D7AB3FD7E124455817
DDC796D54EF26A1FBFD539D3A21B86DD4477DA49213259ABB3FF241424F2BE5F
89151E02FF87E0BEE26E85C0E518D8BE7CC9214B8E9A9EA1DBB49C6C212CCF08
90C0F23E9858947EE344062EBD9C574979087439975EAD4E85CD7BFAD3C91CF1
EFF577843AF1427D06CB2F3BB519ED1591974218C43F0D2038665F9E2E3960B7
FE68CD3CB2DB6B36C7997C6B21EC11CF1DE049541001FFF26D14C255E3AE862C
5A5701292FD2FB3D04523D6E2F3547923BB117718DFB6E6520F0D0B5450C695B
8C9242CC8671B7284CB2E1E9EB097A3DB1B4D5E8EEB93B4DC7E38C0A10474665
54DDCBAF079B92EA494F6FA75A84C5AAFE280284D0823D7C22249A21044BB0E6
4062074ECD17B62E03EDF4945A294BFEFB51F5FD870D9D7230FC91B83C1D85A8
86CDDF326FC90E04362145D6E8630C50594484FB829DA18F5C078F2EE67D2F2B
08DFF39AE2E8C9741FA989AE494C7166F122D2C5F71B97C973B7CE8500E9F87E
D59C30F2E99CC4D34713DAB680598F41955FBDC26A14CF1E73D6BD6B9AAC8D3B
B998F2D0D647356CD236DEAD6561389ED3A6746221B0CF15D6648412B35A6B54
6A0EF5BBB34AA376D9BAF025BFC650C1B74333CE85413D0EBB2F4D082A26A5BC
3C0A25D2B12CB159F140E00E262F1CFECCB2C802FF94CD34DA0CE9B4B3830FB1
DA85B9B670D5169928990A2E9CC869891CA2FFAD9774E6B92549644DAA5FE00C
A5BE4F5FF91A0B6D2FD8F96121D766391EC4ED3E73DADD476B7DAE1A50AFCD98
DB7E27E44D30416088D9BC07D4661D9ECEC0806830ABF14CE55AA3CA2DF66E8E
748B8ED46466F1EEB072AC0674FE6FED231E0DDA59ED7C42BC05EF00E176050A
C4834D893DE42474EA20DB1E25059E84BD137EF65A02CC295B0FFDE4CDE95879
0FE88BDF2519ABAE7F8CC3E6386ED35E04A14F1E3861922645E3A3F43B48A5AA
1999A5EFE192515FCC625C829FF5A7B337AA422F5E920545F9BB269C869A821D
6C4C26DD2AE746EF0F0B4C1E7E9871ADB5270E1CA9BE28225F7A0370D4C52422
E25263EE101C4EC1C7811B05AD42F364844A56BB91EE72FC8ED53CC6954D2BD6
F945D739BE4C61E36143CE890FC0CBF2F610018D678ECF7CEAB18FF5A0E48F76
FDE2463D40A99380D679B3B76D39C664F4992D23E5988B0D1AF33DFB04894016
E852EFD1EFFE586153C0F31ADBDBDE3F73FB49C5EE64D0D02E1504248FAFAC3D
903FD44679BB09C30288139B41B1E90A10139CA3172677250B16535A1F3E5E4B
6F4264DE58896E66051FC677030A121C5A285C47B6129CB5A3998830CE070D21
2F093FC1B44089F603A21F45F60960F134A47226874C737EF6C085634B0A4A66
139420501351F737A73F39D960EC38420BE46E5B09D298E7C16B8E32F01507D4
0141FC52DA1DE718D634AD9C8B00E46EEEF84356759324D2B9A3473C5DA38DE9
E30182B87F91B6A7F7BACF29A93B44C879CCDEDB063F9D2E51E0F1FC9F018FE1
2433D85AF24B55DE3A61C4D0A2DA4FDE933F5F6FDF17E9FA9932BFC46E2D71F6
585EEF5B2E4E89E797A24B799D7F064DD1A817A53677FC9EB8CC3E7F93FE50E8
D50E3191052943FD6C98B573BDD1F6D70349E1F8011599E3F8FDF1D6E80A710E
51E434E85801617C6FD8ACCF1B77B4BFCCDD35CB4C0367F4EB4D8D9DE8284D5E
B4F43E2F8320C2C5A9AE90ECBA7E65D377E91DB69FEF27069235366AD3E126C3
A73CE97F4C90BA00D206FA012C327FD69EE59AF4470A315B1799CDC0539BF90E
512C8FC3BEFE4D1B01D969EA9E3FEF976CD6E0FA4C9ECEC955B265CFD58AB8E5
F7371E479279EE14B689269205C5B506940606CF3E24A1E7EFF3CA96ED30AD6D
E243DE57690C3D69A401AB3315FA49E4BF4ACD4DD1CA39272533E82EFDD508E5
1C2CD286CCC5DE1202C7C7F654521750632EB637F918667E2233A43DF75239EB
F28F3129EB5DEE2FC5BFC331FF709B0FE9B327CBBCE98BCA2C861C6547E50407
1218CEBE6EB5F9BABA4F2E11BCC6FB553A544A567B459E06375102C69F8018DF
BA6A227CFB13E2D74E6A521E01B74F2963E9A0A1C9FD87A88EE6356E3BFABF55
BABC751D2BF85E6712E8EF57914920775906662E4BA68FFA21AD422D34E15578
43CA0568B431101A1194F8AB1EF25E886BFCDFC10F4A5EBD9530816548BC298E
AE4A0B6B52B8B59C644C409B4191B6F4203F52314F2675F02AEB65A72C66E92A
2AC703E15D8D381522C0AC30C165B822A9B8D18CAECC094EDE020756018DCF51
D0701B507519C4270B70D8CE94B436F640C15872F9B5B77892AA3D110E4D6A65
8F0815C61A5127BA25815378683F46E69E54A391A8675977E7DF9C2D4E6FA991
9F029E50CC2F266B31EE9F9F24452D5838905F330CB7E416B8AF836C5AC26AB8
BE2ECC6EA4BDAA08C30995709E225C21D35DB6369167602CBFA8DB2697635925
969002CD1BEE745DA2E56C17EF3F0C05E3847147F86963C37A221C8827195A8A
3D38993E4939AC915BFD9A212F5FF3F826F742B952018986F9FBDDB69C3AC65A
845F7F33C55D4BE60A1817EBBCA7E1538E8087E1BD5C083A320D52953BE65F31
E8339C612A510B59CE48D2EF7061560C4AD258E7DC59694493E3AC878246F37D
6DE89253EBC8830C6B209E818213C4AC4CF1F391AD91D57BE76FB0E2924A1407
E4A949C905E44F54EAED6419F13D59942C8079336A172D4758BEB5D3E786FB93
3CBE4FD2EB53E4E1DAC34E821EB30FD44BC6CB4298242C38F848FC23AEDC9733
52BE6F32E31E25F18301370F8936810B0566B664B042C7AE0D78ACF0A87E5BF6
F9B66E358168B2CEA30DCD940074F3ADB793CDB136161FE2522905E87B8E463F
95D4DAB7E14A3DF7BCCE8141C5A08FCFA2BCE9F2D1B05A7642E75877EB840149
AAB007CD239AE47AD115929427717F219B0A8907F0EC79ADE1B901DAEE87A2F8
39361DAB43DFFF69650F601B24061A9353CFD619FF9626F63275FD09A5B13BB4
8B3379EC4D147C41197E8387FC04DA7BE409524CEF74EA91DC066808A7FD0EF3
957A44E2503EDA67B1C61827479486134E922E560A673BF314D601C66003CD07
55569085AFC8428389A140EB976CCFB8F29E27587E46C413ABE2EFB51AF5913F
53EEB74063162E0BA1E24CEDCA320377D3E11BD374F0B44E132A5C35835B6E2C
D32948EF9DC7931D104C1385709DA882DED6458319F21C2329938396BC074106
CB9CFB9E0A915F8DBC8435F386917AC87A2BA45D857EC30ECA66FB4044F5439E
CDD556B82A0E43418D179AD883C85AC276E1190CEC242E3E1D86E725ADC39E46
BB6C47FE9E17E29F8EA81E870302A00D91434F3B7A05F243176E6EF1082541A1
B9052191EE5C2B8E94A2E02DB65FC769653CA8D1C07A13CB853544AEC7FC35C5
218DE3128AA31952DCE19C55C23FD69BCEA2C661F57B11B8F9E86BFA718D1521
3346E78C701A5E51923D6D937E62FDE3669B214D240538F069A100A542720A86
31DE88116DE775F7ACC2A49EA6C02A24408271A846990669F2AF60AFAB4C16F9
7F4E88E917F0FFDCE68F22998AC0AF2A60A73258C3A4BBC42A2F918123128195
196D0E150D79AC3CF4628503D1F3FC528265ED8324E56849A47B3B07C29940B9
1BC270071E221D355EA51E9942D3BD7F99816304FFFC8F5B036C953B38759341
ED5D7B9C8E6B70C409DD8362FD291201CC385E4A98D73E8518A4C0E544152563
82032FBD2FCB6E403D34B85ED4053A8CB619BDD4DE001F4C3007B1F317579651
E6D6662189CC2D95AB85D7473F65C5D7B4AC63B0FE928F3400035D5A9D443D0D
F3532B99F3AC26CB25EA3CD64C341159061E02EFBC7C033C05CD919BBD827A6A
BAD47EE10B9AECC871B76227228CA161EA7B61DABB252EF91E607AC8D3F85774
DF0B1507B60BF52E4E9BC0FD04400A548D553D4A6EDB247875E0A2E013685C51
D23EE8A56AF57025AD67D929CE8BE791BE91A4C4D9F00DB8B4F16252C04F7BC2
02236296A9052306639F4672E90E3B9DDE466EAC17E200523B2AECD6C05A0A83
66D4EBC86C0DF27B789D5597FE88BCDAD2925CFF60F5A8EA618FE867857D585A
CE25A158AED63B8FE391030C518692F2EF74DC514FD192BCC93C02373CE75137
334A9C960EFF02B687E7B8F18FE2D9EAD2EBBEA3A459D8476AF51AF6C85E1166
08A0A6190D8FA8252F5D38820C6950A8B323B1B8648E3AFEB827678CDE87C535
EBB201D3A169CD9DCC4C3C256A0960D963F3C6659BBF4D2971663D0AB84621F1
5C186C05504839AE3421349C49878E3945DE280110D3161CC9F2B6F442D72535
354246F33BBCEBFB0FB9B2C07E4E2211F052B895C6F7A078147C874CC443BC07
CCCB0475C0DCD6E3F93DE5CEE44D8F7F6D1588A8B22886C9FB1C9D0F43E0B494
314CA6C473EE4AC6F971923EA0354859256438AC0FF0773FA937A248D6B99A4D
E739E3A43555F7BDF08E3F47C9A582C735CB99E97048161FDDF71302340376D4
FDF94DCBA95E2FE4B11A6D3893400AEB31ED453DEC0E7593CC4758DC0B193C4F
A1D433E814610EB745501625D618AC27C2AA77BB62D4CD6EA3DC8082FFA3C0F0
877B83952C38BD5124B938F68B5025CA733F4B766366462E747E85E77DDB7962
A8779DDB8765F3AC2956B79858461A9C5254CA9A7F73E978CBFEEA0A49636468
E0BAF95774B6182B1B4E4888D4FB111027D040EB54F2AF508C99B1753652A9FE
FF94AFA28570CFCFF4075D97972A22B24A5016F731460729EE2495A8D09A5FA4
DC725CAD20D6FAD540592C08585CA30065E8D10774E66A80E19D22F8E2E9490A
9A0922F06B776444D0DB58FE5A93C6D1BA928ED328AA4CE1F83F20A8042F37AA
7A8D23E258E4AFE772F0D11A18A86CA2C2F1B34EAC3E8C852389ECC6158BE657
9F9CE67C8E92C2C91F6F4A178CECA1E10F441BADC966827545E398A1327FD188
A91B6E6883F3A6E7EBAA7F2659BFA800173494380BEB12D0143BB941F9082DF0
BD9B35AA80B1A2F2665682D1AB9DEAFD93FD8C313EB2A39B9C9BFBBD86D7D20A
4B6976B682164FF565719358738EBBC21928AF1A6C07CFB3CD889EB74CEC284A
B08133B0792118A419375C4B098F3CC567E9DA503EBE5C7961781B8EE8A6DA00
ED5494F1D152FBE891752EFAA2B3113BE6DC22E226F017BD1DD7EFEAD18D6A80
585F90199DC36745E0D7CEAB3D51D13C292556F2CC39CE542CCA933D619A9855
5621D979C8FE2C1E2CEE04718FF85E036310B9DEB6616AD90AEF611AD12CA59C
77EAB2D6E9979556CFD400B8F7F1CCBBC02722920BA3FD4B3A01CB917C19CA10
2C7555C7012B2FB7DEC251DE91336F5FAAF3F93EEFF8A9F9EB27F5D08C99CE6D
63D2A522CD635B8145E29CABBCBD77945EA66852B3230AEA376871A579328E36
7E341A10BA09E020E097124D0A83890FB34B80E5A62A3D8785398A49517DB636
26EB916723451ECF6D341286C66248529A97D339730A9F002733DBDDBF0BAD62
EA8990EE20BB387EA30CBAEE4186570820AAF19C34452BD183E4D8391775EF80
F08713FBA843809D7FC01EDF6C326EEEA39BEF3BFEF48AEF407162DAD37644E3
EC32F13C7589E791C25C087BC709BD17E60F618D0AB3234C58164A6114A69D41
C15364A0CFB2F7ED1A906030EAC50BA4EB5BF98BD41141C599FB05C38DC937D3
B4AB31E491ED64B3FCD9E24D99A5AD24EA7766BE9AE608A5ADFB9561F522D445
E912F88F40B530286319219601E45481B97DF0E69BDD0439E0D88F4B0A3D12E5
73E913023C0328743DC90FC1FABD28CB542088E23448C19D1D45E5AEF4D7943D
006FA0D36477B339C1469577F88689A7E599D5C38EB7B34A48476D645F86023F
5F853152E9CE8CFEB1D1794CB3D783F53B6A6E8C4678C8808A2ADF67AA95DEF3
26C738677279AFD5EC10D984813E678CC07BA373BD73DF4403C6C7C7E0A68D85
A95A189DEE31740097C231213897C7ABBED01488F990C3D06F7BCAF99A6E9B2E
A7AC481D33C0A25FE506D1B18C5BC9DE58DA7F6C2390939633F50EB9518A907A
5B4C09D19D477545B4C250AEEB39019E874F2C339E7471798FDE50FD68C30C48
EB5FEA5271FDC6A41426E37CDC30E0C063C7827D038E73A962DFC2BCBFDD6088
5BFBE654B62C1505824A5FA08DF9C96D97536039874F18D003116E043ECF3BA1
5AA2FB6E46547A101EAFF67F60F72856F7AEDDE4F8841E995FEF0B6906854590
EAB6DFD0532EE2A726DC5CDD49E1FD42E6A583B303AA88EC30281CB7A7C74D65
2F090B3514526A20D200AA94847D5B4180513A236C42F3B3B1C4BFBB06DDAFE0
7C722F5689E6559D1D762A1F8E333AB95902DEF32B55EDB6A83477459F99F3B8
D2BE4BDEF12D2A7308280391464ED0E9F83215B3E1C0E74E5D70DB4D735A989F
28EC9197C6773A3AA46B0AEE7246DFB12F7F402BC72D6C5AABFD201CC0B8FF13
60444ED68B1A3F744A438B3C560CC5546A55466D7A7A1B17E58736513F8BF290
C925F65243A087F0460B5369525CD29936D0398062F395090F90D46CBFABAB10
A4EF4D5E1C2EE19D7FC04350607B038249092318827BE3BC2B0EC8FCDB66964D
4ED09BE95C96F9EBABE6C47CD01A9BB4D12A6C04477962EF45748662D305EB64
0674DB7551ED76B595C1A61D7B23BCBEAEDD3F941E1EFDBEBA5953B805DEE9A6
FFE25F9B2CE793BDD857B709E57DEBD5E46ADD8014F9F3FAE389D4EBCA6D0E9A
D28D1A9275363D28FF9D7A59A7165E33FAFB7E5A1CD8D86FFF72EAA68444524E
512DDE722C2EEECCDAB59FA761455FB1E2F0164C59E6518ECC9DCF87F35EF862
B131AD07010F0969238A7DB064250DF497E5B362D88415C88554A7C3D9F54669
8CCCF0B8E7F97CF8D7F3E36B58173101D21A7B28CFADE004D5A0C54D7206AB2B
97D1770E931744A0ABEBC3E89D3E62AECFC00F27662F68FD70E972EE164FC6F0
BF08C4445D32E5EBE895730E0DC08E37F7F14750629761EE2D182DD7E892ADC3
CEF3D04D32004027F2F37C43A2C7F5551CB5FF6E6D9D2A9A220F43C5DFD7D6D1
6746E6E6CB633C08A077703614B3192B176DC9112775B0A9CEC4AE54B6D7DFBB
42FCA98A9A674E0759EB6C84FD7EF32159D3763BF8FF4BBEC5E88CB31591B551
B5D978E943026B5AC2E923FA78C0E8936280D57020C51335892D191B24DBA418
5D23767C2B0F0AAFD9C43E2194FD2A9F73A82E2201178E97DD27DF52402DCEDD
459A98D7E517486D6D5B7578A39785B8E8A9E98971E2194A8846760E5AE6C0B4
AED54B86B076D6422EB595DF6EE375F60F5F33E5A7DFE64E6AD172C10C23A3E3
1D7659D465F3D02EE0426B636CD8C2529930EF0C249961FB0DB4FD26F98A3117
5CEF5E41F3AE49087A498197B410F397C507599BBD4C80D1394201DFB02F8E77
AA68B229F41CF6C61F24D812F4F182043FB5240B4C2A2D072CB85FEAB6EBD919
B60908CE8CA8673980CEB28355CF67671E163B46C2BE0ACAE03AA833D6F3C4B4
42E014412354AD4FB15DB96D4BE65F1058E1D0EE69C35ECBD0071AD5A2233FC1
1974DBB335AF48402B859C29F9BAF1F940C7614D3FE7ABB4147C81F1F5477F87
F631126914E24759A41F1085C2A37C9980DA3EA3A8F1DFD9ED1F6C09E9E267A0
62B7C6997BFF7E5CB44CE877CAC99352312C2566B750A15080D78F071270294A
2D1F96D48D36863B442DDE51D72CD6C3560E25163FDF2D1B76888BFA1F8A6C73
7896BFDFD3DE00221E12884EFD53D407DC4C6833795F769F3BD111C75B055006
EFCC62C8E91653EA057306C85A40B4F23D4924
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMMI12
%!PS-AdobeFont-1.0: CMMI12 003.002
%%Title: CMMI12
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMMI12.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMMI12 known{/CMMI12 findfont dup/UniqueID known{dup
/UniqueID get 5087386 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMMI12 def
/FontBBox {-31 -250 1026 750 }readonly def
/PaintType 0 def
/FontInfo 10 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMMI12.) readonly def
/FullName (CMMI12) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
/ascent 750 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 58 /period put
dup 59 /comma put
dup 62 /greater put
dup 79 /O put
dup 84 /T put
dup 99 /c put
dup 101 /e put
dup 102 /f put
dup 103 /g put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 116 /t put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3C05EF98F858322DCEA45E0874C5
45D25FE192539D9CDA4BAA46D9C431465E6ABF4E4271F89EDED7F37BE4B31FB4
7934F62D1F46E8671F6290D6FFF601D4937BF71C22D60FB800A15796421E3AA7
72C500501D8B10C0093F6467C553250F7C27B2C3D893772614A846374A85BC4E
BEC0B0A89C4C161C3956ECE25274B962C854E535F418279FE26D8F83E38C5C89
974E9A224B3CBEF90A9277AF10E0C7CAC8DC11C41DC18B814A7682E5F0248674
11453BC81C443407AF41AF8A831A85A700CFC65E2181BCBFBFE3573BF464E2BE
882A715BE109B49A15C32F62CF5C10257E5EA12C24F72137EB63297C28625AC3
2274038691582D6D75FE8F895A0813982793297E49CC9B54053BA2ABD429156A
7FFCD7B19DAA44E2107720921B74185AE507AC33141819511A6AC20BC20FB541
0B5AAEC5743673E9E39C1976D5E6EB4E4D8E2B31BEA302E5AF1B2FBCEC6D9E69
987970648B9276232093695D55A806D87648B1749CB537E78BB08AA83A5001F7
609CD1D17FFA1043EB3807AF0B596AF38C91A9675E2A53196FEF45849C95F7DC
182A5EC0EC4435A8A4B6E1CDBF9A5AF457564EA72BF85228EB6FD244F2511F5A
CA9B71A65D53CC06EF5F7EC3A85106139A4D312378BC22183C09A229577B793A
1B7422611C03E84BF809F46C62CE52D3AE29CE01C32B202ACDAA5B72733EB0AE
C31D7EF7BA88D2D14F85313F7A8B9B7A5B124B03AB923744D336C969E5CE304D
3AD977A46664479EDEFB69F113024E761C05FA48A54072DF9E12C2F352ACB3E6
D04F6EEFFDE209E7FA3DA22E5B1D1409461F4286B7F4F8251B44E5CB7805762E
E129FF4A06A7458F3191926B1CAF70E32C6571AD2DC07C34FF62840896F4D200
761B1A7FA356526D1E3AB4C542AF13623BAEB9F61B1BEEF79A9205B1FEFDAE24
8799D516A9ACC30BC0139C63C9A0523E9D5439213B67D490C96F902958779B8F
68BD8E9FDDCE8A3A2E35877DB6C94B7612382ED8F218EB1157D2ADD090A2448D
10B99FBC9211C5629ED1C61C74FE93041E5AA03EA4AC3FFDA00C2B6E719CFAA4
262FE17F66804A6B54D3669836EE4367D2A2991580C5564463C973CA0DA38AC6
922716E13B4A807B50304B8826CEFEAA47C305FC07EB2AF25FA7945797237B16
56CDE17AB0834F5C97E0CC5741B061C6FF3A8DD1A79B9A173B66A6A750538E26
32FBC92E75BA15CFFE22A7302F47908547007402569158F62C29BA2956534FEA
7DACF1E507AC309DAE8C325F2A6023D2FBD81EF42146BFCE6A16A6310A650460
7B07BB7647C8760FADDF0DBBCD3DA6CC4645D1732DB3A22D8B76E1D2D48E4D4A
46F4BEB80CE65F3517283A1AE08391FD1C10ED452133706BC6725AABC80107FD
754A8BA47B0281D479F052CE26A723EFFACB79B213041A536542AB334769A2BF
88505D82C498ABDD5A73EB539530F47CAC52825D16A969C8BB56D4A7F2830B8F
CB63B92B576E7BD922A4B25E634751F8A3B7C4EBAFCB373EDC8B8281B1D1371A
7844E9AD990CFF09F0D7ED73A5CF873D2D5C9E8A9923CFA31E1A4B4CCCC40760
8B3AC8FC3C88BC08BD7407725281BB879A1A822D94997826418F1B89D303F2C0
BE7A0102E6F529630CBF1BC5BF3E4578C164A3DDE45E62A957EF3FB7F0FBBA6B
CA1E79A1ED195B6A11CFB345B663C5E72FA55D80476F604F6C4257B51686AE25
8F7D159FE605DDA0AC74BAA5034F29FFFD403070013C6E2D8EF6A0990D91173B
D5A3AEB98B64E412991505C3CB7C2CDE13C091FEB3DFBCAF30C4C19511102300
135BD5D444BB55692013F52056908DFAB2ABFACE81A58423ACEC59344CEF7D4A
C5A3EFFFFF70759BC3E593D878281225060B97D1BEE6B26EED90571FEAFA1812
1115C0EEC892F5DE6FDD68321A0B3F10A2D771B79BD85476AF6018472A499A86
07D64CFF4550866AFE590C471C80EB12CB3A989A60BC7BED39097C12D9286E39
14C7952C4C64820B4DE44A1827B7B0B535244E93FDB80036D6332F90F95B472D
7031E7E3819E881BD0313CFA112EB3AAE943C99C47635CCA7E34DC0306C04E5D
2E9F60FF037EB11602BE74E8E6B711392E866E3E55D988F7C856417A2B9C186D
639819B4786D039B77F8578EF63C088FF28BD08D8353031445C8498A8F445BC3
D08923D32AC04BF3CAFEFCCC1E77EA894F4E846F47EF62D6841B8D8576FEAE8F
90044626869D04D61D64D56E8C51AF8C18D6CC3FEF3B6C4F7D56FE3260354948
10104F69B117FB8269292579A7D52FED688C663B643D8D99F13956612271073E
1A337AED059B7A93819A28CDF01569CBEB51069D22ADAE25C47355560F402B2E
8C9900DA82B79C64497C8494F42FABE5AC41791C2010D98FB7E593C744F250DC
D837DB0EAA4F75D0016970F3AE8359878A08CF9A697A06C5EA945819151265B9
1A12122B98F79185DF852257BB4798E7DC03712EA6ED34F6E6AE1476788DBC33
9229FADB8D581BE1A63F596698DBD6DB98A092F67197A4FD4A50B648F2691875
EE2495D6BB310078F516785A0CEC7EB6E8305FDBAEB1D15690409FE32DD9CFAE
DBD3866FB63EBCAAB73E3E4BE5D7F3AA44793938AAF3F8341683F0790F1D46A3
60CE083F9BEDDA22E0639A92393960F86602216FA51E2754BC2F4CD0BDECE3D8
FFAB7E0E49613DD4956C9A10AEA798BDA1F756C755BEC12147ADECAB0FB73B7D
203A11D84DD2AB5AA98FD38C1C2573570FD49A4924A94A106D2A7D850E793608
FB135853E8C4204441CDBE697FD0CB330B1C3596F32D2BCBF263237EAB362D09
DA6F531B40384DC91F30674760CA7B64BA1968F6A7FC9EBEF431A1AFC5E76D7F
2D44DCB7F61C7F6B16196B3E8B47343F572DBA8B8B21B43E35BB6B2DD5C7982D
244FD4304D254D6CCB5E8CF70E77F50812F41A988EEB3B26BF0F6F69BBA18077
31134B5A5823D10FEF6201D045AEE7A24E0F25376E9FC66340C56C05F6CD810B
724D85CC4BB8D789834A447CBBA159565D08BA5793D8599035BB5063271518E8
F6C50E7DCE71B1D186270DDC860C6DC0CD506010EB5B1FDF6BE47A9A18CC15D7
D657E58BED9EECAD5CE5D49F63139A39BC52C6584BB2C3264D51BD584B40F8EA
AFCD8B83F548594386EB2B05CE803105E84931DC6E7A1398073D48E130E0D907
CD0F1ECC3254EDF5D4DDBF44415DC9BA66C673820CDB0FDF033D59BE2B5EFCEF
01FF9D33EDC88F8D522E07F1689D024DBCD09A16A63519E1764C8630FF36058D
CFC07027E0ECDA01E0E85B166C613B22F587B4D355EB018BA93E92A36007B4DA
287FF5A91F7D8A0EDF5554ACCF45AC8066E88865C5692E63EB99CAC81367B605
8E6C19EB98EBFE0D2D161B447B9A70CDD1122C7B78A413369016E6D8481E2AE9
9AA97B5DD0ACC9B0820F7742CEB2F46F89F3E2092621969A88DC0156B4F941A1
6BF1546D4B136657C47B082A8A35FE96016BAF3D9679B8C32EDDD6AE6DF3BFB5
7854074FA019707FC22BFA82299E72ADF9A980AE29A8E2434277E58B01F6B03C
192E1E25DADD49F6E3F69799AE62B56E00B60A031BF8721DB8B2CB6D4A4C15CA
AB1FDE010AB7DC0DDED977389B101B8E53A949222FAA126656E02817DD32B0D4
A49516CEC2B97EA7C78FD66229B044EB92F502384BCC6CCDFFF995EABE3BB7A9
50D5D1AED861E7D3BA8D333026C673C5762712E763E59261426044583D789C67
A606B96F97663F92BF104CE02FBFDFC521EC0D6670B7D4F85A229F51426DE912
3B729C4A535FB7C88D0A5E78074751B58885DD6BDD2DD9E9C83F105E8CF63DDF
CA7DB39D0319CA7CC2E73F42747F007574DE25AE1538B4D493D22D0D5F0F80C6
5F6FA3937C8391DE2F0116F81DB2DB0EF751EC838A7F85F163A6F48804E84B96
8D715EF25B7E2A5CAECC558D80F421052A1D698F3B8452AC27E30A4E6226E3CE
084C8A83ADA0818A110923CF7AC7AD4CB92AE4ABBE0A9EC1FF935FD02774C1F7
92A278E513012AD17722A23C55EF82E18F8847B5CCE47F4FE3EC508BA563F7B2
AE56C94285A18DED4D432FB0CEFC05A20BC17DDF9FF919C724810A8ED7358A27
97EC93C1A13C443A91947FE1F6F528EA7B628917FA7E554A1D7B31ED46C5ABCF
92BA57961C8876DB4041305EBB029B03D8351D5E2819FF87E97ED214D8F1CEF5
7F7668DDE223721C0B810F4A4AC81CA4EAC86EAE546E1B15D91E626FB9A31824
5BFF17C4E79FD56ADBF6DBF01BAF6453A81EBDCB38A5FC0FD0FF0646B3B0D199
13E2E59A1B5CAB6DE5329BE389BA0E2A2AB55CA40B711ED746C24F1E48892E76
6DACF7DA163CDC90CF076763008E7A899870CDED5A80758E6177BE6B93B07EB1
5800A3BF7B9AAC3FA825CE594EF5B7546B181375FA8F37608DF17856D2F8EBD5
6030A9E6F6BEAF224AD2AEF76D03B023E2FCB922CB8E3C6816AABB61FE6E4F83
F21B4935102C860ECA03DBEFCA461F0E5B93E5A8D18440BCF7D1D6252A24CB6E
A64FDAC8B67C4888519AA368D9C4A8C08C7155DF5BACD75C5196C571C3C456C4
7CE8D90215FA6EE8CDD72C48740F7F5930EC3632DB63A9C8D2DA125088C0F05A
9FC83D16B7F53163F4EB6FF372C6C3115F1E68EB35967D11126EDEDF0BF80817
E68A698183B3EB0A207DB43786E1B9D289359D75AD5E465328CAA90E712C2962
AE2A466173F2FF30EB535A6054BB0B875DC8552C16B49DF17CF84D98D35497BD
F55E273FCBB0C735899529A69990E09149FBD2DDE64B7FA8D50AE83925DF03C8
0B63EA158FBABB12A028803DA4B9DD6C48C0FEC469C4E730729F4BB420D5B003
1918B4AE9CF35CFD31E8E62A44C0484E3D00143BF1D330235E821E5CFEAB4D31
7CB4604DB1F310457FCF9075A3527279644D908DE847CCD00B6F50DBDEF91D3E
38238CAF550FDCABA2C3A46237218DCC5A09AFAF69997E1EBDA7EFE6FC99ECC8
5D4AFD5EE35FE2346BE79B499EC8EC436868154A947D13BC02C780EBA4B9E64F
3026F1BF5DC1F8D64FEA1281EA40B4BC355638A3A59BD9055BCBB232FA45EA0B
B405131B64F105814019BC55466EE78E9E9ABB62DB30EA452F7EFD7196C76A85
15B2CFCD89922CADC0F392B0C54A231F3999AEFB53C24EB0C63B0C8A1A1ABB6B
AAB2F93E5ECC7AB90EADA320E918106BAAFC1F8C425C617639984629018BA674
6FF4F338AC43E23BC3740542911C058D43A49A11CB3A0CC8E3088BB5BA6048D6
CC2AD250DE956BFBE83BB24C945C20D9C22E7105983F284EF478F9B68BFB0322
EEB7D62802CBAAEFF1C2332159DCC7243EA40CE15C734EA905E04C476B178B82
A08ABCB0B86A7330C75E62EE7844C9E22DDB013ADDF20AFE08122EE1B930A81D
806A0F8CC584CB7FF5F56F9B35E5FF78FD93E7E4A40C64537464EAA275FE88F4
461FC6A467C8A69B9A9FBC10D44AC1B753D313A8E7D97F5FAEB60F82855658D1
4DCEE043C8FCDFD8A29DD091F3BA55874A458B2B8989F35055C72FC411382361
9AADC717E602B48D7C9521D3971A6F7EB19D539445DDE9EFBC5B58FA9E5E426C
172C45CDA24985FC4632287FC3B15849DEB56F5A061993AB10A6BC59868534E6
69888175053108B77E4978D971B4EC57224C0F93EEA4C15AE92254140A94704E
ED5666FC06C5341F643F779CC88A9E81891565C63B6F7F6286E664F4E0A48690
356DC96F1B98026C563700772485B83BFA06435D4E0793EF822F423C93FBACA0
E5D889D2B76771C6F0EE997A5DB43C2F6921132890406E3C33F6F159B14C5D78
7C151BDFFDD02B697315F191B5490073EB418A4FF2A398C68D44F0CD1B87CF9C
B52F12728B72F94D752D23151196A256908135C87991E508B8906CE2539DCA8A
31F86809C8C6C18A09F6129BD7CDC6B37E76B648788056851F22BD3E3B5772FF
EC01D822B57FFDB3BAE624F05531292641FD6A7E3666152D18F6C653048DD7D7
98A942C840C4A0FA662F260B21C64214152BB86F03662A330109C5AC0A5EBA30
C6201F558858130703DF76AF4FBBEE069BDE45C0D9467077D85FFED4F9BA9C61
AED87D67CDCA453A6528AC5BA153E1039D9CCC556CEA5CBB542265FF54A1B208
E0E13740E7E7C26AA00AEE909F8F3ADC2726081A744D8EF6BB711BF5F611A900
76F91C26A338DA13A7160A9F42410CCEB3190000D963D036FDA05A29F598EF40
8FAE6F8E7E6F50C99C3304A573501C13A00023085F057DF331E3354CBE65D573
CAE73BF15B3B96B502E0AAF2B4A86237E98A997AAEFFF4227D5A26E8972C48E7
761F430733E6EF8AB2D903C17FAFBFA21C25F8A0AC157D397BF3CC1AE7598F0A
2BE4FB46B29443CE57F41FD5F91122E9D86F903E94D5B55E2BB95949C156D138
89883BEFD634311F9280C7F028DCA6408D3A682DF5B55B9F7ABF08F019190F60
D39E4F0E80F0594235B09A5320109638B938633A2C196E4ED2B43DCD8643C3CF
C6123B076B7F73352F906D96FDE0FBF50CCCA432712C574D5857838BAC30B485
D25024EB254A7EFE57D1DF0892C275CDB3DF77602F0FED0FAEBC644BCACA04B8
B424DB125E487794CAB36E01B5E1A26F5E1E97A739AA36D77A12F5B45338EB39
AF36CEBDED55DCBFCF497FD475FC6BAB5530AD6153C6BD982564EE8712185F1F
D5EA7ADF4104661168A01994C1FD773A50C8AD6A3E4D332E4D59521BB8BBC6C3
866EB4AC3EA4532477E6CBF6BBF0860031C3B916AA25E3492670EA67F55CF4FD
207C684A0DDB6F4AD21B2909CBA71BCE2E762012B0927BA72367A6AE0AF87F73
756C9BC85E4EDE35317E2CCCD138C02C7A8013AFDC1A48C3A4BB8EF257BDEEA7
60E012F54D12D31D18DC59D5E526F12567B8688B4B67E16B56713870300016BD
A3B9DA87FDC865246AF8E94316799110D86B1DDADB8A673402D4226C519C058A
1D1E5A5778584FC28AF12819B1924060BC4F54B1054EA6AB0149E04B8C4302D4
A56D8A347EB5D3D2A0E12CF7E35059BDB53D9FF6BD25F6D9619BC4669CFC1048
C6C9978B8751B840F27D82A69075832BE59F55C1737CBB1220FB8FF691FDBDF3
03BD7D225A9372AC221C38245E48320E1CCF898D9EEDD678E5B8C65B7F588321
1A3953EEB9B39EA9A8CB72DB08C3E9234DFFF5FDF9DF804C021D57E97DA7622B
97F4CB6E0EB640E0DC9EA15C5193F92A3A7565F4C7A4C9CC327F7CD2C44900AE
D9E76FFE62FC37FA376E77131B566AE67C3E09DA80F198BBB995EE8FA47EEDB8
4B467C6C7DB8AEA745CF8C56B8BE56534E9C56FCB2B7006426DFE93D728FA4CF
94F131C549814E54ECE7C914C5FE8E4961D3437CE7475D03534B62650F551D97
201C794AA877445DBEB11C85ADF6119B05360700F8CEDE4766E3A1D7A35CDDC7
9ABF7C619E3868A39D1852DBE1EEAF5D7898C78323873AC005542B68C43C5000
CC58F675EB595F87C879694751494676465891E8A897158B481F11A171CCBBD7
29603F00210CFD7FF31FE3D273933ECC34AFBCC4108D9B76D9ECE63EA06CF939
4799092A54A749DACB82C1424E9879672C8BC084C360014C9C1B6D5D65C68AED
66CE329C3AD712C0A36BE7EF03FDF339CAA2E0336D387A693B1DFAB5D5164E31
14755A158168962C9B399F8F1DF3FF5060D7464D5071058C30C572A2BC7DEE53
84BD7614A4BEC4C84E18CF7EC81C811724463BD46CECA5FB57B0F55EAE20CC74
6AD815D1897B037C197D2456797B992C20C70B663BF99FE28C513B4E221C8E12
49779F8C0AE8517048ADDF7CDF0D698E3EFE60071C4997B7F5EF12B6CB65390C
224F13FBB99FFC034C0710F05019899689B6D3350BBA65C7CE7C2AB03D81B9A5
5F3D65E4D462DAB189006669F7390A78A1B8908A4C913B15DB8827DFF15BB9A4
A6037DDB643103B937257A7DAB025F09D53FBBC2BCB6B0BCD8D56B2B2784E498
1F6CF8470DCC892AD0CFE11578718948BABF9C14270906014FFC731E49C9A3A2
B13072D67E5ABFB20CE24ED96E7E62DBE177B40207982D2001379CB47D6A7283
9E73DEFE881E4C77381AE42DF058D81FBE1DCBD8AA217A5B8C1B75606E5D31AD
786B21468FD963961F88CBF47F32CD5EA977310016F5279CC754F3D13AD666CB
A8F8C56E27E1343B4C874AAD2B92245CCACDC805315D24D7150F18F57580B62E
6B59CC31BF4368E12CED705A5823BF6AC2348B46BB5353E1B4B548A0EC5AA55A
9FACED611429DADB394837D3E87D399B65090F5CDEF1325975357562C9D7D2FB
69E0425E6B527C4E25D28CDE453EF7A4E092C3E8760F750493009BA9B13FD300
A78B984ADD80DBCBF7FB5979EF5F012CAF413DABCB3290E29A0CEE1F4DE1C6C6
3C0ACEAA1B0280C4A7740C14DA2F7B6B1A532DE5BF0DA704808D7B0878A09BF1
DCA721854E8D7F0C0E7F16A7D1761BD80997CAC753596D23D81EC0BF5D498496
818C244467171449C73BABBAB53F489CD2505FE87A03025806340E77CF18F450
B11BECF3DCE6C03B4E655BF2A7957D95FF01CAE1DC020E577ABB22FCD1AD8EAD
CFEE7E92637D00097377258E81CFEAE1FD98697E21F7AD3CF2FB3897152B7E9F
7C4C3271BA63CD47F5B91A075F5BE42A3BF17038D2ACCA782E6D038B3E0E5E88
944720EE44A47E6D5C64DA4CD35E7A7973DB0D3A6929C8706D29C8F9469F0752
1A6555AE1254675CD0EA94A638DBBD0D0627A5AE85B3B061595BA4880CE60BB7
BE9A862223C5C6E41197EA81A5C5381575900CC6F06936C89A0CA3F1783DC42D
7700D73B67BA0FE24D41D94194E5FC2564ACD7935C70ECECB89C6B7E2213C6BB
5DA31DFB05876A64386E863C5686F4F22FA5546410F5575B56D3A484AF5D02AE
E6CB517109806DD2CB6704EBB0D4389D1217080B75018CB2E68751997E96F9ED
7A2E4DCC52B55ED92B262BCCDA7CF82CB2855CF7DFD25D8B7DEF7C80370B05A3
9A51613E3E6A46C9B7B1052C0A5491130E312ED6D97D202BB69739202BD31EDA
A120CE54ED0DE7EAAD0663A4B86A2F487BB059DD7A3BD1CE641C8300C59652BF
D0B62B8429F77FB1EA332C7A1CA8B004C731816ACD4083FDE377A8E800BF093C
C74B3F067CC1DF9D5244305A7012568991AFC0C327003830F7131CC30962C96F
B1AF009BD9BAF06212037185E23A7BA268D568CDA22B8B3B2374CFE22D5817DA
7E88EAC7999AD59024388FB285B72C05B6AAE575B67C26D06A35A0D394EF1A33
2D55D8641A502E7C51C52741BF812CC89EAE94F1908928FA612A5624A93F4754
E28F4ECADBC97BB43F687E2003D7484BF4A034CF2FA7D9FF944DCCE92FADA46E
BE4A677D798B431ED8640CB015F6CD3E4A2D87D6BEE02E18BBA2E6017118C37A
B2FE439C0785F4006CB6D67EA8464648521096B1240EDC18A069CEA146770040
3A19665D7241643523B8C6A3BFB4B3DFDEF5363899F97A9572E5349F5A5A7C1A
431486EF03E082C5C6A9F2D1D038F03FBABA548EB67ED18D437A2AFB114183DA
45B17B93757530AF7AD352563063A1A6B764F66CE61D11CE52AB036715EC18FD
6FAC7D1476A879CE94608E6C4082A21BBF80EC93F7FCFE82F4DADC600746F71F
355A75F01AB676E600823FEC28C30D2208A868EC0D076D127DFA22DBC6438DF6
62539BEDE920BB2CBBD7D1643D98E1E5CAB279BBB39551EEB707FE4AD7CB25EC
EDD7B5F506FACD39FC16A0261A33DD1B6A331F24B4F35F9A60033314466D7858
BCE4C8CEDF7C3D5EC001044998DA7D0468E20430E9D2ED91A720C13E9CDC31D5
F15BBEBFCD70E15F89CC21BAF2F34DA94B4B8340676896B1B6061CFFE8F3A0CE
C5C182171486B128D1B9CB3E7A332A72F74F026FC4E7E9FA9232EEE326614224
A5D67CB53A4EF9BAA163FFEBD55D73A5C381186F39ABF5F9E71FF58B5911E383
915F92E43961266164C711B59919C274F4F5A24C4A7F1778EE99BFAEE7177CE0
EEC16E2C68D8472C3C880DE68E65567094FC36A43171983134EB0D04DE3EE8E5
02A3E067880A00D731660FBF32036AC4954A14062F82B02AEC078CCEEB609D89
1BD7FDE4D96FB69375043BC0394536C01FA7ACC0DF28F7F0406C33713FB8F571
90F169A3CD73CA19DC4C553A2E4198D0023953625540EB03014B9AD15E850D14
0FABFC41E8B42AACDE2D2C0DB130FFEEB2E49F505F7BB454A5E07E155A3BE586
5F2E4DF2F0E9273E74B788496863AA1CCB4ACED54B272ED67F11A16F283F7BCB
4B5EF83915082057117FD48BDFC26A23AF70D58AA2DAC924A9048F4B69D422FC
79E0CFB83263028B9C062CA57D54FBAED620D723ADC584A1351B15166403B67C
B88DD20D79D530F44BB7CC5A9F2919644BC439BFD210FC3B5EF76C388B11EE46
61F8B909D2257880F76918CDB673567FBE4EDD6392B56E6DA5584FAC9FB51FC0
297209D10D28EBB70D4A955039C15A454ADCC96BCC6143F05DFF04A01B0B06D1
2489BC6055618D5D6FF46A4A7FB4F62B0BAC6DBE881ACEF0455133096D01E50A
18379FB0EC7A2815547B7C5BD822E8F6AE219F551273331B6735953F4C37FF61
DD114254DB30DA6ECA588FE727AFCB3431938502C796C16E944F7E51EF59D7AD
33ACBDBAF7443CAE6BCC88224B8948A2CEF7BBB81EB4609221DBC89C79620CCF
04927A72C23C2F56863C8E4A180988CCC9B11C26CE8E3ADC76B98748E867285C
4C63A51F023439CAE1C3650A89BC187A2562C65AFD366B080380B0413C5A67FE
A083F7DB4933AB6BB6EF6E302DDED416CE50A0F53F0D1D6FCCE1C9A053582DB6
2A440B3C3C7809D9BA6561E70CA99D47EA8D580A5A99A98133909944001EF821
4980C0563AA6CD226915FA5A14B89B8D742D5836F30C251C3BBA2E144AF49267
A8AC5036246254DC35B5F45665C05C5D5D9D5A63118F174BE95F91696B71DD6A
29B0BC86DFC217BE02AAAAE6C661FA264D3D30B379BB85C878F903067F6C0D0D
5FDADED3F25291D6401C5282F935636405A07482BE24E7AB9C7BCA69F9A67DEC
3B764D8B3A8676DACABBF5C648646ADDF916E170417DCB4553A459F703AFF1B6
6F64CCF68DA25B8FBB5C4AF8848BDA193A89EC756D69AA6E9BC16B34A2D1B8B6
4C4E61043FA4F14251E133F51C548140D4CB914BADE0D2A8B0B8756F553BB132
35A9C6E6C5E940E6EDE20C975F8A6F28151E8668CC2738A92E2E7BA4C83EFD29
251D819FA406E548CFFFDB1EF9DECE7B3B9C9A8892D0698A327B98A7277B8FD3
B59D0C159EA09A107D5A19B4958B23BB4D2E2419C443431E65A1F064C1A7F618
D52984F0BEAF86DD2EB48AAAC3D2847F293181F9803964564377DC0A288C2186
9E9E9E9E2C91B23C2987DDE0C95BC2EFB58AE165984AC43DCA4C55A2FBD31509
F3A43643F9B70964D1D18D89E914D2A96A465062A16DB1707DF01AA33BEB1B16
10F0F38A7106FC778ADF98E616E3E5D30B2734E9AA5B0B4E80C6E559133CA73E
49BA1D130D8958C3E5B0BC7D3BECAC33221358BFE3525170EB890087785F1A2B
65AB39F335AD3DBED496ADB5F5AB0D23F392F530391082C28E81BB73C1512032
AB8095B26A95B916990DE3BC2538098BD30B3B2B4747203D28DC3A86BD7711F4
1153C123954E8FCD58755A993FCB9C0BF25F061A31C372B29E643FC2E123DC5C
8ADEE3E2E1F11125050D419C79A7B2690E701CB1B7647F19BCA8CFD0E549D663
4CD0E8A3DCF0344C21957FF7BFF207FCCFEF2AEAFF48D654C1BF4D54F40FCDB3
0CEC07D115957E4B10C527DD222B1C11D61C5A04C4B298DF585EC9C4B6033117
E9A95533FB77B32DD3C02755E7E978D81C968E734DA3CE501E3E89D19E1657DC
754BF04FD92E00F984DDFA3B3BDD5A2C7B44B94DB4761FC288260892C915825F
07D8CE4435F0EFFD1C7C4FAAF0D68C66BFE67F1B70DAC44C080C07CA0F7E4128
05A28395F91D90DBC3BB5B2EC263F4A565EEF4F6633F9C23CB44A0466815E29C
470F0A7918D36B71EED9CB06AD69BA165BCE5764FB90DD86B89DA25C4EE22BFB
83C77161B929E79EA7A93586D2E0E2397F5EA10484C7FD4E918785EF83308C18
926F98B21BE22698C124168915FDF79D18EA864B80C22B3ACDC94B6062B6DBB5
8B144ADBBDB17EDB0E2E66224492ACAE60DD9F66A0C70488ED5076CECB378215
C9D9D0B4E403364C3E1A64D75F0B9EFAF473BD42357510C264DF71ABB5866B48
03AADA697FCA9A45D72E9E38936C9AD77088A4A92D4722E6EE6FBCCCCB737E67
2714105AA913F4B44383D96764F81F8DF3BC71B9D04A5E7A6FD3903C96965529
38C870FD451F4AEA5113C9E457C477343CFE012EC894072F084BC497C79E392F
2406CCCF6507E89B97158EAD493FD0C67370992CEFCE1712E2FC21DACB3B9628
14803FE1E52B23FD6EB151FE792FC235A00878360F7D4E75F250668F345ACCB2
B590015B418FB31A893CD3CC9EB6B303B02A3C48A6CEE91522B74E08668C989C
E8F1E9E371B614FBC99AB81B0D7DDC51443B57CD84A83C733C5BB74352D824D1
7FE40E884D4E943C28F25C8B0D4C340F755307B9AB1A44D74B272FAF98A0600F
7714FCDAEC2B8C88ECED84551D4C5912092652725748B0413C737F43D483F5BD
C6C844DEA9036A177B301B286F92A733D589E1DB3B6395066333430767886CCF
366236C1EDFC07250389DE8C34FA46C85C334D2ABE0699A9523AF9F44DA2604F
193E6E005DC405B6E31C0D816EBD3C206E2D32E7873003C88054C0E4FDA6BF03
920D76AE8F2290492DCEC656D2FA6F91AA5504CFE1EC6E2AF9D07A5266B1498F
2B7A4C3650CDD023DAA3296C155701B980D5E1C9CCCE9F5C1DD7E133AD394549
2D6AA2DA88EB80DEEBA8EA9EA5DB993DD88CA8442F5546159CB585F3C541A7EA
9CEC14174635F0A409B666DAEA5385DB01EC62471F47826296EBA5F12027E89E
43E77FE9D330CBD44A109FD895172176DB14FEC7DC217E209ADED8356E962EB2
58440C835D54D6444CDC7A1C99B93C3540C190837FEDAA65B80DD865E8F45F44
1D396D7FC71404C4CC0DF036E9B6F5AA300741F4B509B59E874BF10C7E8DB5BA
3CE4EBEB368E4A6CB34871272D0D335891BF3116E188478485235BB439B9F41D
5EC7A509D7AB002C995EB78B3A2E694C97AF1C49BBDF6AA01F84FCE4039CE45B
1E0AE89C398D8BC14CB5CE8A1C0360D702
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: UniversalisADFStd-Bold
%!PS-AdobeFont-1.0: UniversalisADFStd-Bold 1.009
9 dict begin
/FontName /UniversalisADFStd-Bold def
/FontInfo 9 dict dup begin
/version (1.009) readonly def
/Notice (Copyright \(c\) Arkandis Digital Foundry, under GNU General Public Licence V2 and later, with font exception.) readonly def
/FullName (Universalis ADF Std Bold) readonly def
/FamilyName (Universalis ADF Std) readonly def
/Weight (Bold) readonly def
/isFixedPitch false def
/ItalicAngle 0 def
/UnderlinePosition -125 def
/UnderlineThickness 50 def
end readonly def
/Encoding StandardEncoding def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/StrokeWidth 0 def
/FontBBox {-44 -226 1922 961} readonly def
currentdict end
currentfile eexec
D9D66F633B846A989B9974B0179FC6CC4458BABD05D76517D9C24FED216BE906
1643B22AABEA637BFFCB75FF65A91279495B00B8B92CFB39C8899C3818357033
2BBD344CBB263D4250A46E5B09E712D88275731E98C996C69406E43E9DBEFDD7
161A841EE17304D49501F13D3AD3CFB00DA1700EAD2364C31908F18B9F3643EA
E9514021B52FFC8EEA03D195015D30E3BB12C272A254955F88A4DCD045432CDB
693596BAF5E1BEFA2D9AC1CD0CCBC3EB428243AB90B02B35BA3A6C5B66E6A2A1
ADDF72C4E1C85E0D1616279E70578303633EE7B6B0DEF67A7EA923C661949BF5
268AB6292E26967380DFFBA4E50822F679BB138795C9FE7007F0E1FCD4719DB7
5A46EB799A99B43DBCA06EFC7B83A71B48C4A474D62A7D84490E476AF332195C
D260ADC538181E4309324D4C740C067D6E821F6D39E4E093E490C5591A5D52AE
E3C60479FE5AE1232119350562438A4F32CE20D0993E8D6969A74A04DD6221E8
BFCFF6C79171FA2B2CC248273AF5AFDDC44202C35C47A1D8A21EC9F4F611B0CC
8D84022FF495ACF28D100A2E5D179D97598A722E77B7B62C727DAC4F163C9F21
F1D15B54E530194314456954083593E2CEFBA442EC33195347F878E2BFB29576
BCC2673666EA207F22339E64A34ADA8F8E871F112394411340AC8504A833EE48
E583E592A533E7C442F336FF4FAF421DB267215E7BD90EAB19C45A757D43E8BE
73C06C3404EC8A1BC6383F1896BB02FE5C941D2741C821E94DCC9E4EF27CEF84
8A724AE461BF9A7B5D39A44CB83130BEC9845E6C8D0293FFEAFA91B80A669452
C5097ABB3A1C3C8F7D1C3384EB457C41A5F5BD1A572C2D5565C5A92F5F532BD0
0470BC1EB895BD9F973BF75AD3852F0FC40C88837E868C76110A8AAC3C4CEECF
1D3A5D12AF400E93252C2C91D83E3F93397CC2973EF86F9B24E03D3045F76F55
F908237077E6E2C61BAD4360BB820C449ECB9A32A6D5048959F7BAF1C4798D57
29448D9F45888369A080D5470EACF9B177446E96A18187F8F59E09FA130319D6
9D85B1302220F14A147D2DF9076CB83CB85980D6361966E8FE428D9D5C2B6B8A
9B1FECEEDAB1EAA0F4A7350C8B6F24B9DEC1D0FE052F7101A4F8A8A82FE4E356
B3AC131E61F98F5E116A43097836E5EA9248625C00A88585F4721704B67C193D
1636A3E4631D6B1EF6C6A6A25CEF932CE51787111ED26E9B9EF859D57CFCD2B3
4900134074D556D1FE615C94B1EAD9B697F1970CE283239B741B89D5670B15E5
FC7A7B9DA57EE2008E525E655FEB86EB0B9AF9D1B3087B407C677FC54867AF36
08543DBAC7B3EE3B6999755C59CA1ACA40305F9216580BA04AF7602F98637183
1DEEC9952332CECCFFCFB823C10980E1527E49D7DB46C20C173A7112AA7BE1B1
F5BA9DA4F5EBDF8F9839CDA1C099D37DCA49FB000165B7B2AE4346F572436658
D99015F688F9F1CD82595BF7084A3D8077A4E8FD527B67E286629C7C79F07C06
38C6A7C88DD0DC071D57F5812A81161C8118DA23E262662CCB3CCFCB735C8696
EB95D3FF126E34731584CC1197BAF5A6858F9E9CB0AE3C47C5974071BDA82ACB
A28B63CE182B0DD871AA577F36974FEF3196939B7128C3590B719483F90397E8
522ABA5252B4B56A5EAD839DA49DA76C712EEA29ED0726788B54B46EDC45A29A
D99E60EFE68E53D5B14FF03B1EFB3FC3DE780E49A0BE0CAA6636D1BC8996B177
61336061EA0A4ABE2826CFA35D6F1AB533457432F4EA5208EE5D8CC1AA19AC56
C794A1CD0AD16152CD598F117957FE091B6F5FD3545F949AE6DC89F6E3C52601
B9B4839A7A46874F8C38CC5D641369DAE6E3661946E9F2A27478DCB31380DADE
24756D4591E5956E2D363B830096D809ABBECA640713C181093CB6DBF603D110
56EA7FB96EF30261E49101FDE32D6EC80857EE08035F0BF9EAF9AF8C758A9538
5D3E7BF42D43D72DF0B1706633467254A00510D8290FE18E00C2790B50454936
19294C86B4AB97D7787A1341CD343081524C535F5090A9AA5C09E5DDE5B5F17A
3272DD1D51D6E4D1E33F521A5DE5C92AA700C43115F9010E7CA7ABB45C02595E
071DBDE5F9B6591FA00634464CCDBC20FB277BD4741056B0E037D69717950AC9
C0502E8FE64891B80ACCEDB2741E6B535FF17D2AF4F8D8348A46681FF4119A84
A2169CECD317DD62067E3F8FAB82A85BCC2E9E0AA7E557DE3E3CBF86C446D331
296C5343999EBF7EAACF417A9B7DEE7BAC4D6053E7C2B7DADDB668E30AFF111F
801E2DB6BB64915F1131110238ED9A36AE7F84D2158D58054C353402CD0AC276
E0AC0A35C282C83697999723D5B05E83E6DC3521CFDC4A38F4475B4D24E698EB
9212336A93215EF35EBD381454B236217A4142462D3D172DEAB9D0B01DECD219
49BADB7BBF9962FBE0CC7135FDF249205CDC246D60E249DE90F87A9DF6F8735B
5F694240A0422AAEA56F4DF4B00C4ED2ABA5823543AE1B5511248735B1246B73
0F9A6EA34C3CE538A5F9167D58C9D59FBFEDE5A2A0A34B0D5EB1CF427425EBAD
7C19B5AC6F69300362A9C58B868F652378E809451349AE6022DA7F191C732443
4CF0E61DF4A3B5FC73ADF804AA40054F296475DFE19C8D5F8194E7C3CF8E1A50
63AE71E806568D4F5CEE13F58BD3F0B8F85E2437E430A7C833680AD5FABCDFDB
B36521C716275E48FACDDE05BF7C06682E04EDBA5EE5BF9796E0758691D1D722
CA34A8EBE52E404F01717192A0DCCF43AB8FE1D8D282CFB81012176F7C032EEC
EC9339F80F4783C3C7DEC761DC26BA2C20A64AB6506DA5FC854F9791114E79AA
D1516B0CD8C3859CCB3276C4C0BC18C36D9A5F6099BDF392C43D26EAA05384E0
3815355D0003EE931407253FB150D2E2A96818F2E1C8D767F694C985957DA4F4
64DA99B6078A1E87A73B8AFF4B745F5D968E23CF852B0881674C853E41A0514A
B71D279EF6EEF2381539110E679960AF469D2FF97C823E60A71FE789A7E419D8
4B86EDBAAE9B4FE6FA59E4FB7C6A43F968915102D4130BC24F6A65D52F24C3CF
27015D9C490B55CD18FB79A1B720E46BC1F2686F963134B24A46EA5616E788AB
2E05313CFDC45EB4D715A1AF4477C1E5935C71B812A6ECC0A8D9B1C27BFD077D
7D686782E8B747B9FD4E9D4EAF582A6A87742F26DEF78DEBD6065B8AB1311432
9D8B2B99A82864CED40D1380D7E81A4F35FD1611A259CD7D0A02FE598FADCC1F
B467760AF23A548C84F692BAAEADD21049EAE196062BFFF3C134F108710B4C0B
92C7F9E10FEAA3FA7ED33FF7914D153AF45013CE44B4E5E57C9DF613804A3C29
C418FA90407BC1254F7C629534A447E89D640587BA5F50EAF66345C286323743
EAB98D8AD4C17F019769DCDAB4C171946A446D334D1E0CE0542BD01EA854D75A
82C39773D63601A724854EFC6EB46EC9F230FE8CF590D3F1319E043EA01813CD
690707FF8FEBC448E80521DED0B3F53348120A9FAFA7EBF248D8076438023E1E
153BA496C12B6BE741033530E20E57136CE3AEC484C6F5B5F22F133BC9DAD2DB
AD315FBF841BA7AC6B3B8D37CB867F0684C031CA340B196B17D120C38F6977F4
AFDD4F5618CB3A57E378CC215A1A2F0E03D3B11245E8D78EB5F28CA5C85BD3DA
A86D2885FD8EAA2BA71552CFF991BD461D001C3FB5A3C7A3BB33C1257440A807
EF6A38BA22032E165482E8B93F4F2BA97CB1CBE8D1ED37AD5F67CCE566F2F7F5
0D48526D210F60415B885322F6ED75E6633F7B4D7BF6286C2DDB4A21595179A2
33BEEE03CE5D2B252934B550613D1ABA01910E8FA35867F93D8761BE58B93C28
A738008D89BB23C19E65824888BB5B50330B1F6F2F6C029DA3376421A9CC7237
B32A1B9E81699AE51691DDAB03F56CAEF1BE1397FF0F069F7AFFA3ABD57C7FCF
1A4D4B85F747FBBF20F824490938294D9A5C018F8FEDE46FC53C81D9F440C6FE
BC9DFDF6BD78220F3EA4A0FAFBCB6D27E11CA6B3E4E46A082278006F0D4598DC
55E6DA2EDF9BC4693ABC5842B42A12B4C29E69AD0BF44989A7F7A8FDCFEC32D6
EF932A8FD9E1297F2158A52FA33FCD33E4A4960996E8FAB83FE1EC413A836FE0
3F474E876DA842C4F0B4F9C2B8D6E702D30AB5F49DD5EFA803FA01955E723279
34105D77A6F3B66731551BB42C917BA6BFB52E522928793CCAE5D0AE88867FDD
D47B4D66E1BA4954D1681982C5C4A74161217DE3E570841A6B7F8524A7656573
9C2C4BF22796003B481F8812A1D8A26C264230DEC479A73D5ABC4E7079FD054C
031F288085744A337A58C7B6FB3DA17CB05F42ED59B17C793C9E1FF238AC534F
0E8963153883165D4019F6E0976ACD1293A2990A790ADD335C5F220A0143369A
EED6BAAAF0BB9CA4344AB460B99D6B7E991BD2CF7092DCDDE50416CA167CD093
9B28E1FD50B79CA9CD45E3B54CA6ED28C4CBEF874CDE0DA07FCE7AD68C5911C4
D0CD9F78F66EBB354AF6939CAE2643779B9EFD65A0607FE64ACA9984FFD94554
590B2F1C17FD25BF7AD67A23E5CFBC09CDF5D7E7CA0790DA43C4AFE85D7E2E8A
98AF5C48025DE8D1DAD455AA78E73BEB1A63794082EEB6E087E5359A875E9454
C0B13705332461DC4FE30BE6979D6B7F4170E6B44335EDE01DE868274A2E4DFE
1473EDA25050355F10F78508B4D4F5453337E79ACC7D3E1FB28A6DFAF89B0EC7
E098D8DE72F01FD0D065596E47533A987789B070D60F1B041840901173E900E0
A2C81773287D0934FC9BAA6196C92C13D3502EBFB6B31FD0A1EB16031019FB0D
87DBB7B0EF6153CCD59F61C33F806C6EF2C8CE1D198F581EF211FB91FF9FE225
E5BCC950EAB9DFA79A7E9002CC4B2378DB08A423FC2A251F2F57EA44D7B87F5B
3DDA622300EFD528B4EE5D2B026230EC693AC15EEB9745FBF0EE61E1AF6109C5
E30838F1F6F2AA29B6BF64B9BAF24D9DDE39355C393042EDC28CD33A8FFCB3E4
3B04A5A55EA69686522F58F14255C13B503DB1C27106C70B38F7BD865EA6B89C
B1EDFE297517CAE9ECFC84FA55484D898D3851994BDE23FD955A080D4980DA1E
D54AF9F91694222F327EE9EE3F513504CEA79327D9C14C1C3031D136CA42BB7D
D3A0FCBCC1C9E5BB7C92AD7087CD2D3AFFCD689005A8F2E5A5BFC2A0AA6A33C3
754CB95A9396195873D2830CEB7CE6939F26C5F7B7FCFF3AE43AE27B12F43D06
52434AD81ED74F9326B41867C5BE9616409D1136D06E7D892DE5204BA9FFD01E
A839D76D1369F84C65177A8AC9ACEB059026FAA710C986BF4C4F57422A033D2B
B840664840CD56E019C5089C4B0D27BD3199AF7F8B5DE713A037B007FBDE2B93
60A207CB8951AB4C580D415DF6DA134EF281D240190767A635497E2D8E714787
CB77A4FD5871F14A460882C773C32C95A21EE35F754C56ED98D5103B3685A581
2F6EE099707A6F84DEA86D88B1F23420B4C53B67BE13A8A7BA80523CA3CE5922
7A73ED79A7962547457E1475D266FB343831BF3E627F98D1213736834528D7C0
A23A1FA0ED12E06EFE4A10CD684BA433B84AA428AD95CAF704DD7A4E1EE9833E
A8C1CBA1CB52AA98B97BEA2F8299A1B7C277ED52280465004EC8CD8F512E7A9D
FD68A66597295C278F02E3B39970568B36AB07B0F434143AA6C792B9B6D8E00C
F36FAE940CB9F4217F3FA4ABBE3060BFB864C723437B638E6E9965BEA1D19EF9
D8F326E88E4319775C57384469BDE941314F2E37CE97C758DAE3DF7E260BE31F
F59678E66CDB35A5162BB68E09DEFB219EC654204DAD2678F5550BBAAAE9B181
81E6253348C8BA8B945413722594BD958A6816EE5946B616793187D8DFE9EDDB
9D3A616F2C7F8B39EACFE4B58EB2CD82CBAE063B3D416D98FD8100D80DC37A11
CFD6E56A93CA99978E1BD8CCE9FCD93CBFA1B5284D9D9F861DC04C037D1BE31E
6B7C1A12ED22789382F9A67781BAEB61643D5C681AC42135DDAAECEEAB992791
CBE8308E9DAD7237D993D25DD09FD205F67341030C1D6742C8A3ADDCD466B558
0A9FA9F6B446F5E85F0F7C88ECA6AC1005254831DC207CD24F56436C6E23F9DD
6110C68A0B8A8AA618BB87EF3D21D40F6BC35CED1EBBFE7507E7153F59D9067B
6B5617F0ED9E7AEE3FBEECF60E9AC800B32A2DA963C331C90370033CC7B672C6
C3115F1E68EB35967D11126EDEDF0BF80817E68A698183B3EB0A207DB43786E1
B9D289359D6B4675143A5E91915343B697E4BB31CCA5C80D64C7E3F78B4747EF
58408AC7D6C6AD63DBB010FD36A0AB1CC5D6AA2D9EA8CF127DEBEB911DBA0C79
828608007327ADE7B597CBB9E28C08076E6ED0E64ECC90A8095E9A8271882541
57536AF9BA7E04033E3A621D53850FAFF6A7345F9A83E67E9F66CD28AD29F143
3E4AB73592E2A04080C30E02D36268B73E6AACB9B9DDA20B711EFB3F4BF4318F
58E1EF0E0D0F972E411B54AED78DB7CE7771EFDF24038E418614C16EBA13160E
66FE01BCCE0DF5F7FAAF07411A85B5F19228969399FD4029026D2F665F9E2E13
4F35F55CF07FF6DD68046E4AE27D31A0DF92F942E29D87AA5142B4DED791FFBF
74933DBCBBD9E4283B185751149CEF625B50015A5A82467F219A9076D0800D23
F8F07617C8BBD12002F6ED0822BB0964E0BC3B13C8F3B64967DADEF859EE5B1B
51C9430845A509F4054640997D8E6C2AF0CEBD00F19833F53A60A4C17964B734
157335483F74227E9D43B2E8DCEE1747A7514FB40A3C03674DA5DC2E272D51E6
C5FC219B1D304B037571E32E75C0CA5D14B5906F923650A4D91A309316F24FFC
41910436F59B5F0C0B5C40E6505117424C3AA62CECD683636AF97FFCFCBB01E6
6F7BCFDE3FAA08A58B480BDCFA027FE98FEEE5C64234F1830485E737301C4A60
D2EE73099E34253B25C3EBC54715E0A7124F0FE6DF16C8EDCA58009A34974BB2
202E7AF9C3B0151F337515CB983916A5C731026AA278EF11EA83092BCF827E9B
C629071FC23E8AD1717E6429C54A1E67D85729444EC40AE64CFA43233680D2C8
D14897AA6889AA746B291A1EC0B90A79EE11883C533D06E3DFD65196F0194585
E37B92B73C1398C096350A31019ECD6E5BF9D5740038383A9638503E4DF3670E
3EFD6E0A5BB58E09936B9CDFC6CF3532113F61AF41F3482E4DBE147256642016
6B0C9670A26CF881217BDC5A98C6D2C37F85EB317705FFEE5C86F5B7EC193028
CB5889D1C1910E132E47095397DCCDC83D6EAE75E48AA1D05A2A11B4D72BACD4
708C58102A261DCDF4266FA1A99579D986B9507424992CBFC1F6A00033DC64E3
233F4320FF6B5307EB49DA0B7508FCDB364FC41F1A6804DE5FB1007729B0DDD4
42B08D32A5F6038511A8E5CF1C4EB93E1D0198A65250C32DD9D6035CD1A173E2
3DD0AE99E9CB2983EA19D99DF814734EA3EC195F1749638E640A57697EC8EBA3
E40ACB479ED2C13F52626407B945F0673061E8E83E4F3F9661BFB0B60F4670AA
8DE9D4404AB2F935908A65805FA588446B215569690E9545705A16DAC5A105C6
1A779F8795CAD5294970120EB23EB81D58191EF180DB61B7C21E0755F4571DFA
B10BA8DDAC5691DE80A72A9F8385AC11B92136107C077138562D9242A9DEF2D7
C7670EFB18772403D1732BD4B09AE0903AA5D86421817A69CD245ED6C5DBA1DE
3141AD955F84761F4A4ECEAC22563387DCF44FE195BD79825A1F435E00FDE2AC
FAE5F3942C5FD54CFE608E483A52FFB606AD582657B5163AB0C9929D7890C482
168FCD3AD9DCE1F9D6DE3271C3519D4E8D466FFD037D967141908909175188F4
9ED98D9C6531EFD800826A1D4B465B535A35BABC3E33627CD466C6DBCC6BCE72
7BC60A4164B12B921D0D646390E14BD1F8E1B07B85CE8730970D556670797036
46B07E83EBA97298D8C28BEE73B93CE7525EA67ADEBFDB3DBE25A7563986B7C8
15EBD4127C6BF2573A3551866F6C727F9748FB104C169544F8159B19375F602B
053BF7D30B68A158BCF8CBC2A41D44CEDB17873CAF742B4AA7EBC92E1B169332
05E78FA09EE6901FF12858EBD47600848AD6B61EC9AC28A28AA480821D9BE1E0
3A0405CBFE090C3916BEBCCEBCCC74E8BD46C4E516A9246D76CA3780B194CA51
562E0F833943FFFDFD37279E9F4FBFE14B1FCD023DA1994288F8D84CE7E8A00B
533D0CCB16E1C8C298882221EC99C0D67DBEA50DFACCBF983D0E6764A98592D4
85C336672A382136D3019F3C283684553CDCC5D8FDEDD6A87FD14366456711E5
43497606B876E3D55078E9123F2A24C8AD6C18E4031EAB17ED10A531FC222F3F
3AB093A4A8D5870507907507ED492B8DC2BFC958E7C13721EED11DD7ADFC2F88
4B3C3D90CDCA8DD26EA6B25B067BF78EBEEE7D95C8E5D7B4900CD505F47BF97C
A9323AF83F41AE01BD3AEF1A6D7F5711D1E9B1A93D861BE032979A1EEEC60BFC
91B5D99A3CC019AE179E316C22CF70DFD305B5F9D88AA0C78ACECDA7591E2C6F
51C625382E8EBDAE5626ACDCFC02B7C16E0B32C598FDF4AE8C0841ECBA53805B
1400F82144047808A0A6364EED9E284CCD6B34423E7A4B3EBE0A1FBDBB9F7187
1E9EA79128CD3841C3CD86A53ED3FE12A18749697800FC0B930DCF4897D8FB13
4A21534AC475A8C2450529D610EA8A75B2C92CBDDD98C2545FF3E3FA85CF1B93
F38B2FA9C2E2A677028B38DDC66F7CF7CEF851784F7BC53B46C3069DF975F303
3EEDA6F4AB1CA99F4009138C4975135C53A8213445661DFC2550058A12CC32D8
2BC887F8FF4EAC83CC9FEEBF122FF047097E042E315D52260FCFCC0539870281
C7CD4FBCE0C5F60D6A771C9F2E33F486AC03EDEAFFC13E89AE26C9111EC14D4E
D775D6A631E5A5060488E8C20999C906F97AE33E89E2EBF77506EAFDAE7D8522
A5EE6D6FDB2D3213A9B55C358E0DF17E94E7DFDD2D35441DD14CDD0288269195
B89FEE748A425F24C2705D2B9185C5215AF81FFB247B91CA69206DB4DE28841D
0A71720914760052850898B7085566361EED58CA4663C339EDEC28C30764EEBE
395D0794CD09DC2C1CFA6831E7AED879D124E9FD0C9F452D47B684000E560435
EE9757053077D8DE2C6E0801F9E29D6F1DE7DABC4120E10557776C7144021E2C
7B566849AE54BA55EF6195D7BCA3FB7D8B07B9C4B889F3E304C2BC24CDDE7108
DA8C6A94D8336141E86DAB63847D7CC3F45C34A6982C23E1D9B3FDF838565C93
DF6109DF1894BAD823B4073D666A1A196CEBCCBE066C55874A7E2F351BD20CE8
CD317805BA7E9A7BEE6C834B09BC1718D39B93625856B4B43F3AD54C7D41B5BB
27D550237DFE7D88F87E5E1B9CB0FBC5CCA629125FFC530341B141CCCCB1F22E
CF14F51941A2321A6DA768E99BA80AA076BF784B213539EE6135F0ADF5AA11DC
FA41AF08401165D400F57325FED7A430784BEDE61C1D2EE7D496DD1515D2FB65
3AA5BC41BA8413CFA1E49615B75A00107149AC5FBB46321AFC795EEF23B0E817
F64A68502C98C0799EA9236E90E926614F9FA8BEC8966724AAB8DFA38F712DCC
DCA9BBC75984BAB2DA260EE1769C87C82338EE24AE162BD60F82934EBBE34E1B
813E68478BEF598F0FC4FD79012E625E7584473FB8C9D737152F9709547C769B
475EAB6197F950AD3DF7E1332025DE13AC5F07F1A4DF98EDBA8BC75A0A2A59A5
6A2BDEADBFC2CA141DA395BD0AF83E782E9B6D5D6FB93D36F63E4927767293A9
F2CA64A5FA797068AB8B5E9DAED30CDDB4C3BB8F96158E522ED5AFD3402F13D3
F1E353239DCC965AD08E81EB5FE562AC4F5C2EAE78A7C3E42D3D6AA5BF0CCB25
F77E4A7CA92ED44264C3F381FFF69663FFDEA4D77D58638D06C4F2BE92E35680
3EA7F762C8C06F7757ABD0B7F1F83466480BB9C53CD4D84CC312A582D14C02D9
8DD85EAD061835C6618E1F8E80EB28FC471CAC24947B5C4D6B3D136FCDC2AEEE
1911EB141EF214889A270D62C37119C2C4ABAB18FA3CE2C36310B2B5DD1AE673
803E8A2C587234FAFDA6713CCF3745C58511561C9D048A7C2955ABE3EB11A850
3601BD8F06EA568C747D0079C50FA42E1529411DED8FE47049FD1771E44D12EF
0332844BE9F88BB32850C294F085AEA94441A837C6AFF7C5D7BD0C1E1B7EA9C0
8745A8F9E79E53C02E073C1384656CAFE18BE930D2182564CBC6C00B141A7589
34A721E7C0AE87E06232F71C037F947F9CC09C22824566B2C89DA14B5D1774FE
C1F774B4B4E067010F61D39403AAFDF0A13E3ECF9C88D6E4973E0BB25C6CA408
1CEDEB5F7B37FD80CE8306133763A31172C84E445ABC1004DD62587DF729A99B
4DBC194E0897CDF0542FE383FAD1143830B37BC358EDD5383B3CE52762DA9288
7905BE00C44C87353B39B0A910C0C86FD39D689E767AF62A5965A160BB04EB45
943BF62FB430073F69EFF0B12D93208D7CE9C96D500638CAAE75F8F6954E412C
3E88E373004011A1789D990913F04EFEC96FAC3C190527017BCD1B405ADC3943
24393E7E6767420DDDC20E7D04488DEAC6273372C651F35FCF210876171868C5
ED5B3D0E26F151EEC021DB975868D0B7F0451414327801E3433E0C4B5B8EBBC2
194C4B6CA568382988B91BE2263FED8A167304BA010E50862D89A5CEF8DCEF78
318AFFD6459FA5D0F75CFB4C451D3A6C3C67DF16C925D65FABE34D60E7880391
279C8A505877FAF72F3392BBDB3D0232235330FF76850CCC432D15F5D60F2D47
7F107C96C42BA51ED8CDD5C08077EA02453BB25C3D2F1B42D5D4A04B99BC516D
A75EC588605732F3CE021A2D8761A63CF2A3B97E0311F29610D46DB4FCB96FDE
DAA79807511D4E1F41BCB2C6901617337E04196AC990715EE7F059D2A80F1E5A
24AFB033C28C40FEF0FB0B0F65947060722FE97562B7BAF51E4AF0629A2693B0
2E63BA2E5D206C7F6299C49CAB1B335DCF66076538200D56F226A8BA3A3CB20B
81C6442386EA456E492D32C447E0933FC342E5CD79B9DEAA6A92DA046E772063
76DF90FA2832B97858E16209A7A07522B6F0432B0FE4E7F1C3804FD1A47B8D8F
A5EB10E25BA41EE9192A6BCF7B1A9C9B8CA6BDFC7EA1F45B8C743FDE770D8917
4DE274188FB0A04FDE5EBFD52385E21CAC1DA7735C1F44C5D00BE953BF18BA66
A98E49AE58B26B9DE116EBD8CDD7A77B98A615AA26973696EF05D0D854478CD0
58DDCA8F6F19DB4EDEFB4295A25296BA921B781FE62E1A287BED8B3912C724EA
EB3B72A578578626A29B22DC5844CED7BDF92D245FC1F45012819DD2FE7FBFBF
A95C5BF98B9A708BC7D956560D89C5F2BBA9EC0FDB41D0A2BB7384B96D8464FE
E31F276573685ECCA651F72EB99C527152CA3083DD0735182C903FB95692C246
7EDE240FA1A70318E63BF984F1AFB3A1F7C9AF466FEC7EF998C17E1BA181478B
A5733E426B5F3F28CFCCFF76EE84451C87587312044D1E081F15636AF9D903B7
C7EBBE81AEDC755C53A81A3D24F283A1569DE0120628C563D8007EB73EAD437D
9FCA2E65F64E835F4886CC36DFD25696FB3564D06A68B3D8D19BE3A88F65099D
56A89C884C5D19951B7E48F7D4AF307A55F374F8D1DA9D11F02FC1A7D014B846
6A8D22219481E6454A486BE235504066C0422B5C2C731F42165F0D54473647EC
47E14FB8DC4CE563B9333E6FFD8C6A5B9153690C89E91ECFF9B57EC471120426
37241B05121F5978D529852F0C0DC7830944A0E6BEEB03509C8C9A73DD89CFCB
303E06CB767E307AFD49DBC0317AFFD85FA1A1CF898B9126DD7A418B8298E089
0B6E5D5B346A78C649B7F4FFE8306418CD7E169510940A9DED0C27ED58F59B12
39855CB5ADA7DCC9E1BF24014B40B0FF6C2131F6FA30DFE295BCDF6FDB007C4E
6A20D0325A0667E1336DD8F729BB83EF512496224131352911A8E502E1E21C42
4E740AA002E3144A27AE6A8DDB93ECAAD75D76760C8DF21FA00A362456FC9293
7CD10AD1275DCD28A933A933830B40EE517B384AF5D01E840632F06F34C689B9
C2EA0E498C7B2BE8769BDA523BE5D9BDA5D89F2EE08C971566B54D64F458F540
4D34D3236341F36846317861AB24AC4352EBBD4BA0743E0A6D160309B35881BD
7D6E7903E4175CECEF116411A0E35D4DC57177AE3D2A4BAE417570D2B23AC1D3
CC25D9F1F481FB83C9B5F9774CEC9FB67880183B93780CA18B4356C4CBC751F7
102C4997E0A6167F8C45EE6FF581580105AC3D461EF1596D7A18E8B76D7B46FC
A2C9ED38AC8A7B9AC794AE4C7D41C3B938A8854C717C70C5AABDB0BF476FC4E3
DC99888D637110F615FEB0F28CFB90C0E3F5E2526780C83DAF217EDF8DF570E3
B1EA77EF214DCAC4226ED291118978294BB55392EC9FCFA99C4CBCA19B6E682D
3D66D05997E46731234ABCFFA2E107ED8F49865679C50162FB62DAADD3F1F4FE
8412F67043B8F7179DA7667D6F42D5E17E641622D233EBE38683F80AB06F4985
E9549DDF29FDB2896567127AE6201DEC81363028DD8EDDB6346D78857274D766
EF79E0BFA40BBB50AB82D47677C28C69BBE333A7D198D7CD1B8CF909690AA656
952B903556C5BD4B78BD96C7B1F0A60ECA75981E943CD7269DAA331F5D5B4432
EF5F400D86A6F09F1E02ED28E62F982CDDFE1D4FC8ED91DA37270C4A17DF5194
76066477A47ACDBBF646CF3B113EFD98EEF06237F9EAB6BAACB36685759706B4
7385FA7E318807F57A6658C83B96200F9DB64B2AC5FD5FB3C2F68D680CC2B713
1DD500B6313B5CDD93C8636CD37F91CC1544FCC249BC88BB7C8888ADA86C92D8
8C73154A0CA281EB6656E635336F18163E3FA17FA645D37416EBE87F2B756A86
ED0290005C39213823CA0071633277C82AEDD7F30FDD24F118E20092748D2C58
D60E5C05CC27C9DEBFFC8F025364DBA860385028635BA28E96BE47C8141F2923
995F5464C6F1A739AC6DA0DDF0E328975C5BF0362B37173541BA055A19D9B8A1
34D66425F4F64F8A901F6AACFACF5090AC04CA6C0DE548B6276EABF9450E9D00
10533B3BDC47E401F31A2102894DEBFF3824BB7FD9B09EB10B5743F0AEDEFB06
4DA111CBB2CEB90CA3299B704AD4D76FBA3BE482C576C9B5CA81DCBE03C5E4E3
CF083F6C528F7F524D9904A95A64F47694C609186CCC96C0D0B5971F0A9AD7FB
B581F15E84DC1B5081F9544667A1C0AA471F51CD4D31F3CB6994644151962ED9
4D6FCF47A760B51AD504B8B0F5874C6FCD4BAC97D57D8B5A298BC5520E4E618C
431978FDC55115DCC6AF85A4A026AA7B9146913DDEFB153247A8DB81E23928B9
19F8CDD8680E4A2430B8121C9AED3494C969F7D1929CC836C9AFC37F40FA238C
4ED7DD8A4122AEF057AF087A50B56B1FDB85C1B4E00ACB492156C561F0C15B45
1BAFD364E6F145B58EB98A49CE1D707F6F2FFF90596CADD4C6B89B4B2091AD0B
D149FABC1731FC578098BA2035DE5F123E7A3A47280404498F6743AA2C31FDF8
24C8D5C75EA44BA82E4F12F80D982574E6FA5731EAF0D1B074922F4EA482F1C6
76D609BEC0A2C11348AABA02009E68467DDF5A8635701AF426E1DBD0160A6694
B2835ED72ED8AEF4F11462C9E5CAA4290C4A50084E28330774F3A73BEEE61ED7
CD2D834D49594FEF5A77CC754DE86CB4B6AAB6F6CCEAD910D8BDBEB5B80F07FC
62A8CA47085042607A7B64BC6B26716E941B84DC9A2E8710DDFD172708E2EA2D
790339906D56A09C1B725EFC26DB94F66EEA9ED5506A00090A973865E545D921
0C81E706C76BAF37E871AB59E12FBFFAED608FA62FDC9AC0B279D81896F1856F
AD5122EBC63EEA5D848451A245D8F80347A3EB273F554D5D5BFD6D0977E80364
28A909BF69652AC43092F5D7047DF31DD84F2E2228DDEC457E4DF768ADA134E1
C880D26A0B642859F3C692932FD6EA76A0E8AC2D6F91DC795A4958464120A209
068605C71010763CBCFB5549ECCCAD4616977CD6D9187A8A749ACFCBF81E4CDF
618B95240D511F2D77756691BB192C938F3DEF67E7E74C82A940F1D38F379776
B6B1B969006E1B1B4850CDD5B77C56FD9DC513E79A18A0AB8EED4E05E21ABCA1
30A3D5CA6D82A1FD4DF47FF6DEE79E9E1122DA2C46DFA0C302D69CD2638D71FA
ECF4DA3E732ABEE2E4A0D3EF692A6F2134E3B2F9B044557964A45C2B04753E7B
535161A10007B313316840F57ACFDB6135607CEBDF9CBF7D65ED49FDE7288C04
EC131FABA6987B15C800B2099C12CE267C6484A6D7B716A2BA791A9D04A02944
4F6DE6DDB7E78EE1DDEF6F606499052925A92942B5CF2983A443C952B0A2E8D4
2E668E335AB7E67092978C6693B47D1ABA43DD470D1BFD1C6D9EB1C1C0801A35
C2482E8EBA60639A27F75302952542F337A37A122923013234B089DA56961972
5EF1C5074F416A975939B5B053DBF5BABAAA249AC5401B5380DDCCE5BE1C679F
8C28CDBC3C0BBC1B985DF5C4F382D5AD1B49F5450E3FE46FE93E9BCA379A4651
CE6578B6B22D67FCA70DD77500B1E49563AFA37FEE76E871CBE2528500918D9F
05E5E1A3EB1BA1C0345DBB549E596F8890E58C1B0C7867A9E4F9346F54BE7C3C
42D199FD90CBB97B21DC5A28BC4B7325A2F960A91B32927351F3700681DAFF9A
0135EFEF6E07BC21392D05C7D7929E9734FAE5E60F9798A61686135C2514AC3F
F4EE51CA9B0175F5933F02C0718E0CF230F38E13179D3A270A451C78A7BCE1FA
6B4DEDFB38F23BE1EC6EE7C2CB13A78FDE0CFFF4ED0D366DE40CA9C9796EDCF4
1C68102C397582A8CABC4CA8BCF584A655417D6027E90DB2DEB9F9B3FDFA7BAF
277FF22F6992F26351BE5A8DFC5DFC6782BAC711E6D0921EDF2A39A5800DCFDC
E6F80320ABD0EF216593EE0709F70FD5CB34FC77F2DC57117A861411A143D8EE
49856B865F7BB379C39C7077A8A27A0C23449B5AA493BC45BFF826927710292E
DFBC2779A3A49E3078AE783C033E7B2B1DF6B74B8AE6BAE0290A06C0C1096F92
A48D6652351B881810ACFD54385F82BA6156C56693981156C742E703877375C5
B38FEDC3CA0D121473A47AEF5E64FAB7546FCF03ADE83F78985E55003AB6E102
6486B9A4389A1FA0F7182FE8F38E6E9EF1ECFC06F5B596D285D2523E9C492640
30003EB6B02467B285ED455C3B51D3FC2CA9FD3D273ABEAA5475457323783044
81A9138C0178EF0400C51068E51993EA83DE549AC3046496794B1924B4842350
614BDCF83A0F0EC4012EC2D65DC8F1A4391341D2CE633C79FF3AD1BD904834DF
3F1257EA032AD0738235612C0FCBD132BDD619B21747783B38A8E7D3AEF4C8B4
11DABDFE1C0DB414CF6DCBC1973EA2C930F4E178DBDD1D06E02660E589A5D3EE
71AD45CD5CD60BFD41F3E6B111772C207E585F9B288DA0573A5BB2ABA3D3521F
B501D5E60E4D50B5251A076C330C51C902C1B62D25C0DCCAA7F2D0FF9F2CC238
37A2A2FB6D78A40F1BF939CCDE94CE7066D6EEC3CCA535C5B853390D8C8DCCEB
21EE2CEBA938620764EB58B3B5B35C2596B1E3148BF6DABF6A9EBC420CD6D6F2
53717529883C4636B18DB54A127F9ED9E4545FCCB0E5F9A8BB945CDB6BA1EC19
FDC7E7BA2566DFCFC660CE307646891580A4BD965F4A13EC17ACD6E73E18DA3F
F0ED600495A390B9ECA89700F45BFF2E3565ADEAE4DF07AD283FDF09D68E0F6D
4246A8ABB884EED5892D58BD2D3819A02568B2FB139AEFF1D6AA966F03AA2DA5
A3A8C72BDE4CA170FD551F1AF6E6E386D17F0CA1A66E46509B3BDCC877A1931A
9F97A21FDE5C3C67657201E32CCE308A79B92B4B35975C098DBE0772D8ED84DA
3FB9B1D5966576C4873590811B2B934A099D7700107D4292BCDB0439B22ABB70
07F90DB8B38C57F62A7F74B7EB95509A7A53172B1576409EE5F3D7A35F46F047
8E161E48CA4388690EA7C9A652A1BA957CE31576F4A3D43940DBE722264DAD05
B3956F4D0876FC173F11CA98C9754292712D2ADA006A66C827A00224AC7E0EA3
3B53B90A0DB1FD207AD36689D6010DD5A72CFDAECC1A0574FCA192DD70178F53
3EBD0CEE12653B68E4A3D95A293D8C7099E52935A181B5FD0A6542DC3C9604F6
21FD64C85830AC1F655BD18F9AB19A0DAF70F2DEAFC44864D9B237C8325F2B1A
8ACC0E0EF8F8AB024336FC3C868C8BDFB322BCC12DB900D4AC53DFCAD60D18F0
3DFDF2BA90C6E76812238324E48DD87E777FBFF9AD227B4117E0F413BF45C844
93267CA65B73A8B357D2EB7FF8BEE7A0441A1FCB40A74D1D5B57406013432F0A
3C369F8814E6B9037FFB78A82ABF4C2924427FC9A14DB27DB0BC8A782F527C2D
7861D3EE6465D08B5F697218903CA4956A5A44B21710D1F7FC637FE6F72A0049
D782E1F2ACFA052BE94D9D2E5905C604895CBCE0C3E4B0FDC4B4475A81DF634A
0BA50F3787A85487875A0268556B5B50C57AC6CA1AEF3C13F04FBA87A906CC1C
87773B4E04A9B67B999E4F54F51A2126AB35CA27BA70269AA162F4EF3346558E
741682FD93B9A73E67D1BB1119CE4B9AA2D6DBEF5CF3773B7CDBFCD5A2D711A9
EDC9CEA614F208B65B0268F97835EE932E3B9DE3312CF764172DBDD725CF0C7F
038CF42FC75F75541613737B818A0B1EE6411BB7A699CEC0B4A0AA053D469D3C
80F5181378CFB33FD3AB8B7F3EFC1EB3EE219E4E2C5118CF65A6FAD22FB36CEA
FEC45AD402BF1A051E317C30E4B719D9E941D28EAB526B8C6CF4E5D1DE357CEC
2506C0AA9017580171E6FA0F590879D86661688992F5FBD2A6DC83E6144B9375
6776ED4C886A606D031DFFDCE903295A9B3E33404808876160EAC9510999426D
F6B03AB616BFE9B59681DAB06ECE3E647E6199CE71B872BFD8F82BA29202DD16
575FE2EC51DF6650CDDCB6054C1F73A0ACF0B7FA6DED93A85AEF01D6880B94F0
1DCC6E1BD0A527FE053EFE5EE02EF27F0FF7EC8A3C335809184ECFEA3A57301D
4956DA8A25CEC9EA3B146516BE63F232358E154AF2464CF14155BD57FC1AE99F
D7AAF5364A2F5409538935B021D7350F7A026342F8A419C8208E51471C069DA8
8EF44A0B2119883C09DEF7DA239F4ECB43F9534232F9E49E9458AC980F704112
25E837A238F7591EDD0C5C5269AD45568AE6C8A87005BDB95E397FA825ACCBEC
5508EF4DFF69F0C1C5D4E35E76019D378ED0A25487CCF7E632166D7179CB1B7B
86D6E65E8947084D8C0FEEDFB139AEABF439FC5C0E5DA81B104EBC865DBCB720
A7DE3DC9C1AFEC9085272530A82487A88BD2DBAB6A1BCF228A5800696E4C7DF3
005E0AD257372F660CC99BC96F50E8622E3F61FA444DE07FFC99474C88D972E2
12B26DAAEF3813F9214D67055D72B81616C1AA615D02F8E2FF393BA07DEF4D2F
5025768DD4697AF9EA096DF4847E36D0D0D4F70B3870888E9C8737FA7850F25E
969FADFFF33A493A95BD43D934CCDD526674AA67DCFD6943BDD1E7815A8F7822
9DD5D13A8CC0EC8ACE10D5DDC1F52AD833E905722660D90210B65F84B696CD93
60FE39F973FA5241016689B8C25D1BB63DED0B1517BF127924792FC813A41C68
E1D0A9F6C1CDB9412E44CAE1AE730949DB733B089E58D1ABE155934EAC41A8A1
B5E475F39F63589851D2484160E5C963ED74EDB4905F19B25B237881472A19FB
A60FBE6409E0C2974F8642FF57C131FF562A386B84B0BD778E033448B6242CC8
E46C491B52B8BF90FD71AF5985B11E63930F22FC0F9AF73D6F7AE4419C863C4A
0FD1606F26805E19C0F12ACF9513F4779E5A073C99424129C2982B7494361FCC
D0DD18AA84201018F250AF14CA07F424001AA9F1AE8E7BF8AB554566D81D28A3
99C4F214BCBC1E08E7F8B5FBEA967F820CC70C95345FAE5A601B91291304CDA0
66959CCBD5581E2C7A0E13C320FD1389DABF4E8F5504B60A696DB7B288CE78FF
4630907B03FA2EEBFA996B58166D089AB218A83C972FDCFEC50FB0A60EDA8995
C2B1B64859D5CBCD020559A109C338123012DB23469747E31F90720B049CE211
603E3755E0E8E5413D9F9E3482A8D54A479BC576ACD44813125730672D39A7DB
E8A3CB40B91E7A1E8456EE0816B7B9EFE26F697E99E8B7723523E3B6B36C5389
26234104BEBF36C59B1E94C131F720BA1E2CB6B93FAA36CED4C0F356E959F363
2C78D5B7331B20626301A16DE6F38022F89CADD37252A9DBA1587EFA2BB1BA05
E8FF067CF04627054C0209A0F242535BDB4187313FA2DA9944B39BB141AF95C2
693EAB03C8AB9060B5BE7369B7DF6E679B4A0DB382B5F68734CBECDE2C259C50
8561257291D156322AA77ACCBDFE9F3E13D88000E00F6B2FA05CA2F4D5F3966E
ACD1157E2594F6532FCE2F1858D546764C6702DEB5CDF5D3AA1DB2D8304E0435
D3A40A9F78948817CD01F425DC0E14560D9B977B9562CD3CFB9D258F0D1133FD
E7F074509F34892D99ACB5E24974404381D9F456B8694CE41AFD860B7D8B5B08
E86AA9A898D35B7D24F036E2019268A894296CCD57C769A411A1A0A6E449D05B
5EF2A03194E0B69AA6F600A1A587D1611E2A582125F2D015A3F2C9AD11EAA04A
3E5E3A34CC96E19E1091E96FCA04244E1100B3B19663C3D0BCD9118D908A33B9
01F9C3036EFF5B995100233C158266CF7AB9F7683FE9B6B4FB14A52726F68540
381026B1B99612D3DDA1187488780CCFD79C9E25151898F96FE98356DA3911C4
892F70A5F01FA6195820D61B48AD0E613C9ACBC2EA3C5A9C34A6499C291A7B90
CB4498B46F6EA6CC944F0129161A216CBEBF5362E7CDC379DE76CEC9F161DE75
C0B5B2A1181B0A1E8D8407ED588FA15B9DBA2B8D56C7738FCBE161801D72B3D5
95A7B13222CBDC6DB80689C240DB93F24BB1BFD279FF9F8C137B21479343B1D3
713FD519E45089BAE27DD09C157BC8886F8B69A1F3C4DA62F7D6A718DCBF6EC2
126CD41964E1EB1FF72F60B199F4AD2A545C172D1F946FDA9B8BE7055919AB21
CF110C31087DCA55A34AD1679309F4BED2373B98947E5DBCAA4D0CD8F7743FF2
4F0DD8F1F286FB5227A85EC6E929F271CDBED0FDF83EC1B089774ED6C74D3C18
B86459BB0E959BB7E54A778D4174ED12705B872A630B3452624B0A62E44BB0F9
AC1B7EC9C1201D3EA4AE09B7AF024CD5637D2D
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: UniversalisADFStd-BoldItalic
%!PS-AdobeFont-1.0: UniversalisADFStd-BoldItalic 1.009
9 dict begin
/FontName /UniversalisADFStd-BoldItalic def
/FontInfo 9 dict dup begin
/version (1.009) readonly def
/Notice (Copyright \(c\) Arkandis Digital Foundry, under GNU General Public Licence V2 and later, with font exception.) readonly def
/FullName (Universalis ADF Std Bold Italic) readonly def
/FamilyName (Universalis ADF Std) readonly def
/Weight (Bold) readonly def
/isFixedPitch false def
/ItalicAngle -12 def
/UnderlinePosition -125 def
/UnderlineThickness 50 def
end readonly def
/Encoding StandardEncoding def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/StrokeWidth 0 def
/FontBBox {-47 -226 1978 961} readonly def
currentdict end
currentfile eexec
D9D66F633B846A989B9974B0179FC6CC4458BB4CB99E3608702C78822367AAF8
905981B7439CE8FB33CB4CD20CD28CCD26E661FF85FDF38085D23B0460E887DE
732F2B1C30A8E32F24B2C6E3E2AC9E3958A5A6ABEDC1D2635A123C0044EADD0D
935F314C247C6B76EAC74C59BA3D95D42E67E229D9D8905597BB351BF74DA40D
48D0914F1751374A93CFDB8F8EE2A7A7E92932D51EFEB49DA59D7BB1D019699E
DE373B2E5E18D7E3366C931362919EF637CF35DF18D036ADA8E2995AC81A53E3
19E7D461C52803EC6678E213D5AE14DB22B1D4668EB6AFEA1BEF4AEEB9CED0A6
443919437D34ABC048D2C55B7171DA4B36AC383039800A77CE4CA4CDD58EF8DE
FAD0F086AC04F9F01459DA246F7BFDBE231F0C8855B5813EC19327C35D940728
2AA8708FCA214D5D53E4F4B1E599AD64678CBB056E97DDE8D4E42E1A7C2AA867
D7A8912A0D773F13E367D1A26E112A84D97C14F39934A07549DA2357FBDAE007
9ED59C871BC2C91C4DDF57873036B4EE528D5C13E5E55579DF116CAA0724FA4E
0909791C9FE9278C7F16E40328BB20E8A8381E483318A973CE3914EC486283D7
8A56DE60A0477F279BB89E3A4C5AECA5DD85363785D0DEB96E81E0B5E00AA8EE
D3169C5DC6D2E5AC31F9C1E43704890B27152EBCB9141DD1EE0A924F56EBFFDC
20D378E8A7D59C3E6D8F32ADB425AB24845100689BBAC9DCA8D27FCBA20F91A6
45D2D82871EF20B6E737B73570E449F63FD9D583E6E91C63BDF0C9389A8F972B
B033759E25B190CF92269422F0914A12DF37F0C26E3391173211CD8A4BA47AEC
4735D24A41DC552A3F3989024ACEAAC17CB85213CEF43B2D215230190AF456F7
B2210818FB418DF142EB386531B629D15DE7060039917623BD7B195DCCBF5BF6
84A4F498321A86A618660B58CE7E613A1B5574BF74B485775DA71B5A817B6990
0FEF8986F0EE52B08B3AB130864106AD37F25C4A9CFA0F0C6DCC8950CBB35BCE
C58FCB0DDAB92D9DE6AC7A90B849C5CDED27E60AC8449AC721A77C0C75B1D894
780EEAD7AD16D26646261C6C25396E7610462438E6C8DBB82ADAB75A29EE9E5B
BFCF424D423FF08D905661F02D52CFEAFC33D00F186B7E06C85362FE77E85164
48DF4FFF1DE11E5DFD617310BB57F40F6FBDE8CCC5F8CEFFFA19BE91C0622F90
9EA52E2A10857E34C4542DC7195BB16119EEF4D82FA4A8FD88D9BF4FFAE156EE
038DA88D798E3D1859D32BCA67B7ABCB7CF08A03E2F9B2A14F2D388B0A955302
8468BA072959047F0B5C009A8151BF30D8F1C25A4C9D610DF3FC0799F36E2CF9
C2F5FC22A999CB337EE2F7150F7E9CE01AE7D14C5E9CA667A6AD9441282EB8B5
D9ACBA9340A7528F7FA4A095E93E78A27DA7DC5725C8EFEFB83044224F299D91
2D69550DF11375F8CAFD9D086D11A15135137729A05E9AE563C793D9F0C7F3B2
615735F4CF7042803421BF9EB96FDF33EEB0844DF9FD1345DCBDB286B2913146
B824685D41B92940F1047931D4AF7696E20676F4199A9DCA9BA56A4944278C6F
D605F5242EF64ECAC4D71E0AD502C750EC4E8572E9F2FDDC6E2C5AC241E4984B
34567287E1F95C2D61771C0711515B8CB1BEB8BDAA835858FA58EC8DDCB2DCE9
53E3C85D58DD966F7E9525F198E5CFEE1903F47D27E0B2195CCF9C7FE91EA18B
9EF42AFE50C591381FD848412633DAEE06448F179FA54C4827D8E792C3B47B30
30CFF4F7A673367D2C2530024FF1AF8C37DB873B39491575923B322D6A5CC40D
7161612CAEF8DA6DC891F929810F95B9DF36BFC6C8C3A26DC845E964FBF83798
BA5C8DD640A3E0B0DA40DD9763623E0AF84ECEB623C2CF052CF3358975EF7D9F
7BF4D2C1D742F833422D803421DF0073B2C3BA86571F4E8CB88C6130D8A443F2
110EDB8C9A9DA03ECEFACB379ECAE476E631CF4B7929D1E42965B04F5F038222
28DD52F4BBFF40F9FB2C5E4082B744F1B3606E0D4BD7F7C346A578BF1832D104
14E9EC88D635D3608830A5F6B0875D6CA1117F30392155DDC68747915A23F929
F3B69BA663C32CB0C4CE385611A3AE8DA1774D965AD7A4FC16DB6E4EFCB2703A
6B19522B13C2164CC60AABE1A55BE3BB769BBD04F788FF5E2A7CB320A3B28E8A
3650A06154CC00B64846584E593AE29E2F56FA468F81D50023721F02F8AF4BE5
36EA1D9A47A5E7E1757B70E69882231C438BE270EEABB2F802BAD750439D42F6
9D12D054D7718D10D394AACEDFEA26EC987BE51C6CD08AB79D7FFEA1E91EEE0F
D5D9432443E8249E00C758BAD41546B392407449837CD6531F051C6FAD516619
6BD65993FFEF826C2CABF301ABF63CCFB38C6823040D420225066AD7C6CABD42
ECE253AA9A371E03B393772647F59ABB0386FFEC66039F6C5F6D03AC79E7C89A
A0A51A1528D06115D8DD876F6E40602323DAC34224BA5D0B03C29C6C6238E65F
07B2D66B774F03A74BC85E0B2190560E87AE75A0C05C225A851A2CAA84DA426A
44312BA49967AB4469305AB33E16DD261DD2FB53BCFB2A7039C374EA70FBEFB9
878A6A0CC5F08877AF52BF0D949A336A44C623E56626495D2436F8D1B0ECC29C
FB1C826CC3315A1C00722E687FCBC89C382C972C838844A553CEAAF83D88C238
244F2C85E7A417C24896FA97E6E93B7726CA1002E6732FEABFCAF2F0551C03E1
D34B31487A9D326D27A851308AB3E26707B33590C777EC6173B335D374B0D0DC
696C73310606FC6E5898B03A902FAAA4C2AF175053B31D3C30AE176D30E7E55F
F6D9FACA52A8E5FB31B902606A91E3F5AAD18B321B81F75731C30DAC5C1914ED
5F8074AA1F27BB19D6DB181E54DC504C7ED24ABF8AD27DF76B912AAA22E89D02
E9D3F5AC19C2E700D276488F1DD139B1A53C51F3ADB59BA5966A87546C2D664F
96F08BF98FEBCA2320CB6A4CE2D573D1143CDA5AC3129BBB6B668798FE221B7B
DA42E564EB0BBBED88350013E82F80CA61E7FE60E93966C533DABDA8DBFFF89C
8E45A2AE0CE0A8A5D88CDDC7BFD24291D3805E43F2000DAEFA5809D23D3A6B75
4FC5AAC314CC2D20A421D170802EBAB5582E2A66695CC74FDCD71253088650F2
D48FCE08BD8FD4773536B7DF4F505AF272B21728987614EE48ADBC07D4415818
9FCE90B36710200C7C6D4103B77F6421832CC267E3186EE680A214AF8D54E770
D854BF1DF47F66AB3E45C2DB035F71618D1B20F2E858545441C8F06AC58053DD
0AF19EF6DBDA524C1F86F51A1E8106C21301B1625AA3D25E9BC6274CCAB02392
A2E9F77E6B7FCDE09B32ADC0C3915C3FA2E1C3E3CA8FDC5D0F50FE6677460001
85E63173160667401F40127DBECC4284E5B6903B77C06D55A3A6183FFF998B2B
B8E693B0A726BF52225E4BD7BFD2082527BB648EA163D33A9AD2412C3884CF49
F845087506828FB226AA3124AB121571B9B298A3D02CC966EA5E113F3BF709D8
D58DBDD04E574F6666286DBE6A595018F2FB64EEBD14BE94F1257055A598C568
B78EB74375CDD7476D3B7D672870A59235F72D35E66AEA6425265EC0D13FCAE5
ADE111268148FD15091967D849F59EB1CC2E36B217E358A0C866FF02AA076D2F
1572E458E81A97C1085F7E789C7B077EBAF09B8B6BADFB71409C25B58AB73EB3
51378100999D32D81E5BD7D1BA2E00571DCC34267FF43FF18BFB24CC2320994D
5676FC39B60CB167FF0AA9985793DEEA04BA55E14C034622C3BD1E1BA5A91EB9
4C4CBB6A4571B7B6F22C238B754327CC2A7FB8063B23DB5E5ECE098F1DAD85CD
1E08FD44CCD330851ACF0918C579B1D84993F49098F6B109A966F74B1B36C4BA
8FF1BB1C3C6FD4A416739085DB79ACADFB1688A5FDD81BA3F729E1717A5DA32B
E1E319913B74573D76CB8A700B077D62A55D879D067EFDBD36BA15283E3A7F68
09B4DA85AFAA780B9F1C1C6230A58B38DCBB1C5D4205AD458D2398471D3327BC
A0CFBDD04361C21B8FEBDBF966028C8C446008CA5A58E7FA28DD2848D72E3DC0
007849592E9B821DF6C6E8A3E4EC6D72A61C0F290F2B25D4A6889AC41CBE2F74
AB3C174353C2EC2140D946C2FE3C0400097A235DECDC416BFB6D3147B4DF9385
503E7869515D0E536088D50B31EAC233E95412B1F892050F60983D8CBD51E552
5805DE37D2252F1D435E2808CC1CE7C0CECCE32AB9BDEF3A0DB858711E1A4CA3
7E3C5A6C0F85A1581FFADEE637489ACE9E729AA5BF0A67B4D89125BA6EC7E7DB
9229D99F7A554D62BD2E328FCE65C09B9EA2240B9511CE401E1651FB849585B8
C6BB9374C71A12CF79BF64837D7A647DD87D541F777D4E7E88F1DD2F4AAD0AF7
BAA7976521DF59CE59B4FEE256D1028B4942D317BA34338F193D4579EC85A019
1A104EE0BBA753021F91B139AF37FC39D98091E8A0556C8E3E77C1A3CA0B837F
5D5F9D6886860996519CD50C8965881EEE67AEBACD71C0D91B092CE4160D2080
A07B51DCE33DFA2E1235D1FD302997DE6DCE7025BC50A62650CB1E4A2A87DBEB
43368EC7D4E4889AD508B2536FC7AF352B97157116D11063C33A731E210C3DBE
8E9A7BFBA04A82FAE968B31593053954F3B374D3364986D35B42A1406F474FBD
D4552D01A7157F4AAAAEC7EE2C6E410462A8C5054DAA29F55E9F16BB7D9C6AC1
2E88E708472D4BECC82C3A05ACDF4C75DF830807422B22206D69B073ADB1F70D
39DC28C3B0D0322DA096E00ACBF725CFC0E1DE9EC4FDAE9471E281E1FE5E16E8
535DA00E722B099AC956D9DEFDD3CC10E888EBB1FE77F7F19BC18F44EBC38A20
2B94659577B5496149E2D97754E6777F8E4B68A9EF27C6574EBB8700713C212B
85E3C0C0FE43034CD1F6BA136B89E5921916A1585D44D143C89CCC1A1FFF3449
B32A685FE438F1F75F98EC4F9C6BA3FB86B1CF7541F9E817831ECD5468B79880
15261C443029622F87DE3217190FCBC9CB214AFE1713A6974107A74CC5D8AFB1
3D23C08897E986F1B989C9B598B4F1AF308C06E3E8FB62555CB65743980C6E07
DF6C51571992633FB30A3C7E8A72AD640DB938D6AEDFE9F5E451FE9DDD8F58C1
F4091286F92A5ED614FF915BED4E962E570936980755D2C805B36D8E850DFED3
4C4B4CE640CB2753E65462CE7152C7E3293976373086FC1ADF4956156DE55312
EE66344FA523C94DB0660952DA7D8D8B0132C4432A7B5E88E8138A6696B216C8
72B24AECF42AA79F7DD775F7F2DF7A114F2F6CE858447321D63E4A1491018CCB
F0DF7083BB779577B6772BBE4E8442157780F9AB12E932E24910AF43C1D0FA25
5A51D187FB133516F7244D3273CC622E4EC4DE3C637BD3C972FC00802F940033
35FEB4B1714EAD44A6B009837DB7DCA09347EF42A3ED42CAC7B44E2613EC4744
A49935F0698DFD9E4D8DBCC9D89A57741E055E6C5148DF4CFC8C6B884EAF3704
865E727BAD6537B39D9BFFF57132492000FA48833672443DDFECF8CA92DB08CD
AAE4F4CBB89175FAAD443964A9F805AAF5EE96A3F0C32E37BB06A1CD08B0CF34
9D4B961F316F32979F78B3C056E30E76E89563051CB79B8261C36D9E5B6A8AEB
1574CE4859DD74E2FD4421B31829731119591DBA81E50E835075F33A896F4279
AEEF675782FFBE622C6C47324EDE5580A7190EB765377FF17C1FA6CF90922511
7B0EB4B4ECBB59238ECA58248DBB870AD843B20416EFB8BB6B7A38797B15B161
44E8EB23BA0B36D546890F49660887F69A8D5155B49CEE7E91B0C3820D6445B3
A6F09961DAAFE03E8F1AF510354A305ECE560920585DA5EB640F8BC338BFC7D7
5B72252C0017D3A454C8D09213C74B3A811F1471C887B4F14EA4F7A3DDAE227C
310878266ACED7CF09AB5D2B03E078546789037A390A8BAC4CF9814730F018C6
825B1DA309137A2F611897AB6B56BABDD9460475A15A4B3F00AD49662FAD0A5B
26A2667262B031716B6C9D4FB63EE90C5F812DB876CC60E44093FD579E0F66CA
D4CACFAD4A16521A4BCCBFB82073BF1B0AF537868450F9923C2EEBA137C4A4C7
C0DCD19B1934A1632AEBF86956370D18665B598C49AC4123C19463ADF1633C66
A23E81B37AE82D1D2F5FD0CF332C3B40601CA760EA8DA95F9DEDD819B0E1131E
97ADAD3E0E1CE06A206F120B18E6889200304579F6B41CCA7FC37E717FE8B2A3
AE95FC1CB33DB363F03C9C6BB91836DE38031DA9F87320B06A62C88A199A5072
F501C0A1D19F5A3718AEF460FF35382D66566F0DA820C6A8950365F1AE9F2A71
2EE701AA1C85563547CBC616282B35FA8663A2F4F75579F63DE75D40713F3F2F
E1C57ACEEE9E22A15470085F3375EA2CADFE618FCFF5A0E21477C4E2B71A8503
462990D59DAA57739ACED28EE88547121A97B586CE815937B713D6FBAB87E4E2
FCD1484B270C49CC570139E431B504918E846679F8A46BA6BBB5E3E076DC02A0
8E7BEACD4D775D45BA4D125D6F6D6390C35BBF31D2B231E1FB6BB32B560EAFB2
5F17B719271AA1A5CA02F73B30BCE8A23E213F77C04B20E14D049EC859B5F29A
B874AA576846A77BE8D8C38F9271DECB3E684417D758AC8EA0F653535C226382
C2A043A22BBDEB3B05AEFD932948FD17279026254538F5794C7E7B78F05542B1
97FEC43FF44FF20BE2682C7836B2F273B6517D3D7925DE0BBB0174FECB671B1E
08D9AC6AA87FAB25FBA80EB55A9B5B1C22D082A9513FEA406941D3F1828BF2DA
D3246F65E29D1CD7C49F823FA12F76B2EE8E72B908ADDFDC539594A8D32BF49A
52E54E64BFC674A5D88B459ABD08D7B7C6EB7C06F25338969963F9DC47304A64
5158A9FED6DDD118B89008AB5BDF47D6B02B1F9151B2BE3F1E2507E83CE1274E
4E478FCF96C65A9534BDC6F7218C2C6361D23A817001371FBB0FB1BB69A6E855
5D01738D0A8BA220C10DCE7A6EF477DC1648BE9280A3760F870EDD7516611CEE
05A4A50F942024BA4C99BF0BC7E93F503BED5449A09A6009E4AF0763DF99CD18
C6F232A90234E6C0C6218111634D93A38EBFB5DB2B9C23002223B6084EF432F8
E9A745CB1D173D1ECCF3144DEE582AC1E405F00F6B771F055BA0490BAA6AAE07
DB538FF35FDE3AE78A749C5D730DB634D110A66EF342EB8F7D941FA5AA40EB83
553F2DAF0425B8B894133D06B5B8395465324EEDAC3DB26B810806B9F8AC608C
954CFA50D7CC5321B8AAF0D0F13C3570573D22DC9E957E4E5185B8C46E8E47FA
95AA208D6344C201FE1AB5A9EA45BCA9F238CA7BEAD64C760BD16B878F711C4B
BC637DDFE9537036BF7A1A94D0C1DF11DA675C7564F71D40228DD39301EDDA4C
930AE2C1BE63E41C8C6C5675AC880962F3D7F65960D780400686B4ECB962101D
6848DE85793DFE86676E0B1661AE5793C20608D70C00D321A19BC72D375570E4
3104B2BFB1096AD154AA08B36EE6497568C1E4386DF3BF6FC1645563BED30ACB
B3FF3348BC05A2C4F6C2DBF17091AC0ABD340D346C03B3254C474A3C3A9204ED
5A3A8046952013A59D0454801EC2DAC23B847F905A2B89F6DA7CDA780B832F41
042CC7E1D2798E7DDBF7A2990AD7D9FA6B252BE465B42CBCC425E0591A3769A7
C8E3B9E54101790C15E604B22FFC987469E3640A6FA72D2E6F5E4E9C0F46EA60
A3260828546BB650C8BD321E71E84E35E3E102BF2BB2F6765FFCA95FDB1059B3
63FB6EAE3545EB4326D39276FBF8639690EA4ADC54460125BD38DB56DE0EACFE
BBB3576E600C1141FEA428C7F7262E8E076AFDA22D079C19577DD771A617A514
68E5FB36402E2A2AC7AC42918097986D62B38FDCF35ACB469FA0F410505240BD
3D9E0429CCA6141EAB80067EE463D99F6DC939C21C5A2EC7A1D7246C1CC114A6
9BD0396038A49BC071AD9FA850DA6183E96F847BFAC73913282D7DCF4C78CB25
E3B6D77733DEBAD12825C9E4CED944EA53004872AA6A6A47E64A821B74E8A750
C78028AE55F0F7CCF270990C54946E35EFB0375D78345E22962599E44F43D45B
D813E0D15A1B97D41893E73EAA6A8308846059F98C2FF88E5C7C08A3AA5E12DD
BD668A4B291C4DA71597B64CF9764C66F68F2C719F74F9CFE9BDD9085667F76B
09E8CBD9B7E271577B22FC285F3F3A5E4DF20851D576B740C302DD8DCCFAA6F8
7BC92C42F09C9A4098D416DD4B000A141B4886FE0E928D4550BF70DC19F56051
319CFD7519C05FD396083C2A471E51049ED999BE1F2B959DC637E01B33855FE2
427336FBA63171D385F2B3672BD858D5CAA76550EFFF0F17C3CA66C5D873DD41
4F743456298366385C80DB394CBBC16BC57D31CEA08D34BA326D8AC3C275E89B
A65DBE9B3680EF0FC47281BA7C7C98555B61D2CB1D4830D830D0DABE0AC27803
9076BAF3268456D76B3DA2DC71065263DC2A4D23E923BFCD96E60F8B48A96C1F
B3FB67089F1E3CC89CF70581E2BD4CACD7C5B4FA6617BD35CA0C79EAB5D68B4C
103BA0A25E1FECDF6F8FDC14C20A349EC17A9DFA3D67DF7F5100FE47D03CE8BB
315B3F48D9150B45D16793525C3596EE86D1C713B173A27CD4C48708A7B8AF5E
07E2AAC3195B6023A334CC37B0045B92A32531A1F9049F479799D6C6652EE135
F41F3D4F5BB990D6EDA7BD33261974382D3256421407453C7253F0DA055DBF8A
0A732BB8CFE5096766260A3C12F300700FD18931D832EEFA85915AAD59F20357
BDEA11DDD2405D5E61D09346DD19DB4920F0B8ECF6B7EE8F9CC95FD487A39A7E
C07EB5F3EE578A26F1089B6A3DF870B446185D55CF724748198A3E9E888A8783
F49CF037D75307008684C92FC383545D02372D55B118118D386A75185A033E3F
7E26BB7BA949613ED15AD97EDEE0807726DF59815F4192B1BAF2863A7FBAF661
43E6FECDE716FAFEA22743FD30822B66FD58535F8DF45EF058FD013D9EAD2D88
B01654F4C983FE3DC45FAC7CE18B2760904A036D73CCD53205BC4CF1ADAEEDD3
EB2748D94F4708B82792DB64771B00D2530805ABEC524BBFBD23DB383FF3A155
AC5E6F068CF205E361081D9E0C55ACDBDE40B8532A9120DCD467BB36E301E799
64300C8C4E43B324569E8C2D0B08B33C5D022E0D5A8E52192AFE78155BFB319F
17E89E4CDAA34905F963F925155847E1E76E88462A7B6EF1186C57CF52ABD33A
E328D8B9C63B5273B06811AE523AA438C714B7D0A10139430B7A55297CCE7609
181D8C57CC3F2D7CBF1B6547AE0E154313B214ED307DEF0C068374E935385ADC
ECFB7B49A95CD7AC9C779B9B6861BF6E0897D7A39ABAD15C96A5EAC0693CF5C6
E7C1BD6A0E937F65786FC64A9842B832BE9D8D11C794E3E4A55314FD4581A011
D932C4004E60AA73C292B4FB5440CD229F47B1BD06E56BFEEB285FDD3B481E31
B5B5628254B5FF100D879EF97B5705BED310DD87E3187A918C67140829411E43
BE5494C15C81259F2E836B1CC4A66CC7F7A3C73055E686AE32258D1693C478E9
0F1546B2644280BEAAE1498BD007818A0CC23A8013455E9AE765230B81564D5C
7740C834FA1B7754DE4F944B29EDC8B303E1D51D5792598B3C49590DD6AF7B1B
9CB25F5F8AA0DABA2E9EFC37F08E99ED48352198C1DABFB5C648CA0793F7B4F9
06A88362C0605DC18E6160DA59C9538E1902D03B122C20A1EC4588AADFCA97AB
917F145B7364AA6BB48C6E025989C1D126BCEA24D63DBCE4D0BF420106480EC5
4E8EC96EA4CF42C25089402688E31967F6F7D86C88CFEC32DB89C4892DD31096
5D3F3A00A36870AED71C9D1F460CEE2546C66916A90E3F448EF884BD341BCC3B
1867E8C6B76F732EEE4E016B527EF236E5AF135276C81E08B6A3FD1DC69E9FC7
9BD18498AEAB8567C656B2BBC0806CCE9A67D4504FC1BC57CD13C45EF003C149
2E94840A2977D8BC8BD09F7CD15FCF9C28228E74B02B2864B2B9DECF7FF83F81
1F901B8625E9528B7111A07846C1C05CE819EFE2BDAA0A41A7199873EC339F8B
FE4A2E42B70763BF219E5FFE7400A9DC725ADA62706D48136DD5AAB9F58C560E
44F27B9FCC33D11AE650BB57F97CC107D1161D391E60CBE4AAA8D1C34E110494
8A8E94139A3CBB9A64487C50261A0D71EEE71F0433B9B33A09C710D4F20F1745
DBC1E0D8431449FA9A41B2BD4799C81A3D08DF54D34CDE2CAF1BBDDFFFE449F7
AD9BBD14E397290D23FE8A1C55D04F89901A8391E60EA7F85E5E1928BE1AFD2D
7426EAB926A05BCD8BCCE62C372BEAC1BD60473DDF23A2A5579259181D68D18D
5EAE86C7CEF8824413F329CBD6F02CFE5AF7F85118BCA92D688329A67197208B
143D124AD0A3F6FB7CA7FB84C5EDE850CA254A979DC5B9F0ED902559A999AFBC
275007ADBE32EE122BBC910C494E85A1E452B07E15D4B92E535C76F2015EBCF4
8914BA3CB40E888E83F8664FF2DFE16524FC2F4C014C1D5DAD8C80046381AFB3
B4C38B8168112EEE7416D07BC29895E51B42465F8229C10BE32D2F63644C7A72
B93AA248937D51660CCF85417AAB7F663FEE630DB0A4D4F47A8F697A832BC2B4
EBB6EB1C817BB43F4013332B6952B84D332B77AECBBC38A9D62A84710F0225DA
13A470781A325F37A140DBB7B678EDEFDD8D58BF8FEAC4F0A76669093BF66325
9FD085D61D3597D2B5C2F07A2BC39C21D0DAC017324C261B59B859B1458995AF
9C835FF320C47FCB83408D7366A3D2687235FF097593DE3A3B943697CB5EF1D9
49E53D12F791E1D26F058A60459493909FA5578FBCB494B1A26121744435A6C1
6E621A729529B3BEB4F49A32CB8A923AEB073EE7AE8B6EF5FB13F30356D99ED3
DB38521D52B96C2466FE194D253C3234BF4CBA983164BB319869120F4B086BDD
81351A0F95874A94451BF7C7E2EC390F9E22E956BD6BBFB8FA1C460D0B1B646A
680C4C9886F013728A7F165A506295F913116A2E9E6EB506818E1014EC40BCEF
621BA2F39AF2ED585C558A33CAA9A3941614B61A4A3DA50EABA68BEE28AE0207
200A0CA85F553B69EA1B39C721B0B6AD0233FD1DD83AD47EAA98236144924C1E
8E4372C91A9E3A9337EFCAC7B23195409FDA59284049D69B9ABC11CEE1FAFCE2
DD00D180D75CDE49A4D311564F88C312C831EAEFEE08A36896D72B0CD6A17477
C65F08EF78BE48EFA70C37E34FE571E150EFC04863612D17F40D33E223215D3B
B26AA7B41524535464ABF4BCCC12DBAD6E97FF2A12FDAEBD8EC32B4C79F7C85A
B08C7EBA76803BC7470108E8C5A846C7C44FDE5D45BF586978AF665B3DFAD597
669EEF270D5C81BDA1A9E3931670E325062D9354642D017EDE1D680995F859F0
FF46032F465BB02DF044A168676425358F79B0455C210653A2A25921F871B0B1
60D4AFEC2242D6E1D5B5F44725784CBB8D099871C13209A152087C9492A11F27
5332413119919C97593679415663C2CF4C846BF63B646E3CFC1605837A77AD22
0B786472FEF3424CCFD79E223986AD8B96C43C01F0D7BF3E3C8E6A50AB99BDCB
E0A5CA85E065F1A8DA813197F0651ACA1E5CA8485D44A488EDD4205C5DC0AD43
0154D69B70768A2F73666346D058E53FB51B10BDDFAF1160675A37FB7EEEABA9
ECBE4B05BC3A7F367CCEAC44C5AD540E4270BDA8058275CE5648445568DC79EE
2D539DCE4BF98F20D5D9CCC76D4B2F4D2D5D07BFFC6DD5D41161BB11F76CA8C9
F38C0DC02D1F36EB2D051D4CC68630CC68C81F308DD00E4CAF529C26369ABEA5
E3AAF8182FAD1AE322595F73E7B27965A0EA3BFE7C16BFDAFA7443732BDDD74A
05006D7043DD68C9A51B3BA9B59BCA10976764782B1DABE31152F12D23222200
FBF2B26009AB5CFC27596B5780928C64CAB9F385900E6763C1BC2DF9F936A853
8628BD8CB09E3DB2D7552C3BE1B25C30263369B3C1758E1E32A9AB845DD9688F
6BF9DEA1AAA4F5B1BE88AC4D5A54DB8EA50B2C5CAA5BD2BAA4D39C55E358BD70
87D57D039D4624B9540E43EF72D4E95A40F8AEFD0B74A48F81D1422A6F568594
D1C5FD5F541FBBEA65B1EC0CEA9EC23557C2460F1807F05A1F5F28420A5CC9A7
1DD44D933F3BB70CDB6E26C5E9C88150E5F6E4D7B037FD8ED0F5CCE96BADE4E0
996E6F1955DA00118AD121E2D2C32C0E1EC717A4DACF040B07E4DA2CE88C9701
A5CDD27BC06E7B0FBECBDA1723761DA22C4AE9070B53C987DC510FA0EC659022
6819274EAFCAAA43A55290912433993DE58E936102570739805A20F458F4D7BB
FF799C37D0885418291066BAFACD64CBB9EC163E95F37CDFDEA200F11BFD12FF
757540A88782C30879021B99581D95A64CE37532CA6BC2C31691DA1ED2467913
93C2875EF5C40FAC4AB4AEF72A55F3C62B6100FF490227A344CAD53E56B9301D
A6BA7C3D3C42B619B4F31A35646D3ED1911B8B2693D84CD0E1C5A10401F84E70
C16FB5A5121B158A897BF3A4A5FE160446FF5D8553D4A9A779C54066BA8CDAE1
F21BAD215B186E783803F1CB3AF53C0C851BBBEF305F2B69CF12302DED4A67EC
6BB92F610EB5D3F98C8BBF62098C9FEC487AB9C38212F1435D8559DCC04AEA09
8EA19368F5A0ECA4BDC18F908572B6EE608B4B58DB86F27D2A52CDCAC12333B5
11249116875F0911AD3DC880421389CE6F98E660903A674047851BA3762341E2
3E36
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: UniversalisADFStd-Regular
%!PS-AdobeFont-1.0: UniversalisADFStd-Regular 1.009
9 dict begin
/FontName /UniversalisADFStd-Regular def
/FontInfo 9 dict dup begin
/version (1.009) readonly def
/Notice (Copyright \(c\) Arkandis Digital Foundry, under GNU General Public Licence V2 and later, with font exception.) readonly def
/FullName (Universalis ADF Std Regular) readonly def
/FamilyName (Universalis ADF Std) readonly def
/Weight (Normal) readonly def
/isFixedPitch false def
/ItalicAngle 0 def
/UnderlinePosition -125 def
/UnderlineThickness 50 def
end readonly def
/Encoding StandardEncoding def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/StrokeWidth 0 def
/FontBBox {-61 -225 1931 961} readonly def
currentdict end
currentfile eexec
D9D66F633B846A989B9974B0179FC6CC4458BABD05D76517D9C24FED216BE906
1643B22AABEA637BFFCB75FF65A91279495B00B8B92CFB39C8899C3818357033
2BBD344CBB263D4250A46E5B09E712D88275731E98C996C69406E43E9DBEFDD7
161A841EE17304D49501F13D3AD3CFB00DA1700EAD2364C31908F18B9F3643EA
E9514021B52FFC8EEA03D195015D30E3BB12C272A254955F88A4DCD045432CDB
693596BAF5E1BEFA2D9AC1CD0CCBC3EB428243AB90B02B35BA3A6C5B66E6A2A1
ADDF72C4E1C85E0D1616279E70578303633EE7B6B0DEF67A7EA923C661949BF5
268AB6292E269673836F782A5F1F502F0CF976E5A1AF07E5D710EC224D13DB06
E049F6645565A56B9FFF636271F68AF78FDB79A911C41F6B33F523C66194AE52
F9867577BCB8891DDFDC77A47E6A480D51753411222110E169D0D7A382E8F222
0CE601E4400EF8AE8B134BD0575CE77B780D3F08C1C45413C1E78610BC279BE9
25B2E83556FACAC179CF702AE567B893E8318A741745997E180180E6DEE881CB
2718E4D3551846AF8943F2B241D2319814278F1E4B7C758FA67E7548E6EC8866
4A45A26FD85570EBECB9ED7E9E67AF40F1F1AB060C8C7F2BE4D3FD67F0480B2F
A61F27BDCADAA38292C4A9491308D22269243CE391E4286A4160004B98FB7502
3996074FF3EFB52B2C9B8C2F0B5FA422A2B9659B02B9F6E4CFF387155BC5CD90
040A03AC74ECAB62F5F066C735292606F3F8F0B6641AD9F834CCD4D93FB5FE02
CDF223C1FBEF7F8F5298F9A88F2797AD1AD68B05B841A6D50EA42E5F3628FF14
A79AE0695778BA32CA143A54BB90E7F8BCEB590DEA5732883C49FC37CE11FF40
6D91C5305ECE4DC3F131E5F8CE9BBCDA9787652779CD4E3DCFBE5B865F0CC82F
E442EEA5B5BD73F7FE48EA7D45F08BB8ABE3FBA5A696DDD4FE8965650497A8ED
0B22ED25B58EE33FEEB9D1D2D19CF7351152E4936192ED52E2C2C19A56902654
BE7E69BC833AEC4A45DE462EF5A7AC19B074B84CDCF9E3257D60979CD161D393
D6D62CC897C0D75CB074C4025AAB81DF27B516ADCB83D5BA55A43739C3DC7733
682CEB9EDB6F315C240BCC11278989FA9653196ECBAEF0EF40F92B61507A5865
AB551916A5F9425B75C3E54513E5FC871DF216F79FB5D24A60BA3CCA1F7B90A1
E03281E5B2D7A4BF1D4E80050FB3DD5CC1D2A1DCD6209C0C6104FA7634F03FFB
223E8FE41273186971FF8CA0D4B3D8E53AD081DD29D84332DAB4AC7295FC434E
8B244D331892262DCF3890FF6F71C650C553F6B798906F11B17EF7B80FFA87A4
84FE64CE11DBA8552E5D158717D85924724C74AD1E6CC473C3ECA9E39D6B95A7
B76AB9D10146CF53FA5A60675392AC25CA9F3A5D1C8B59C40E3CED6402BDD61E
AB5A36C9B6C15112E7EF868F38BBC0C703C0C24297E3E6E348FF36263CDC87A1
20A54D4DDC6934054EFE49EE4D67FC676FD1FF2BE887147EC84799A53097BEE7
C9BEC3B29B8B1C35C02EEA1F31F3FA178F851AAC4ACFAE72AA71D6D23A000756
1B3A1ACEFDB61265668E940EC8B4B131DFAED453672E4A0FFDE15721F5820776
84DBCF0225BF3DF8C7A87ADF02DEF28896530BB42115B5C50BFBC92D794F7AA3
2EA445E702BF763D634A142EFB8F890D301E8CE75D233062EC9D79C1AA2C5FE8
B7E66F63F91B4ACF66DF02390454EEA4F7449627B6731ED9CFD381F388C987E7
F046322C76C6E0A71A31F569BD850FB0DEDE5550E55B9729D36A0EBDEAD60DDD
AED6152C6B5EBF0A3D2575F54FD5BB948B61862DB8A8E076EE1A1C50677E55A1
0A07A0D358BE002B27CB9ED8AB0A7DFC361711EF9F43D5452891EFFC7DF9CD8D
B5002FDA1879F02441C685643EAD3DFC0F246EB7BB3E9C404E24CA5DA6DA2AF0
7859059A78E2B6B7BC7F73F3EEDDA024A6653821899E66EC3BFECA967B103DF5
D416B9342C4732216CA5AF5A90AE7F0543D846EAD3EDEFDA4F0B6BEF219ED69D
228D811CCCA4896FF60CE7FB917AC7084F750149F81B2D0FE7BCDC0CC731C624
A0687DA5489100973DE6CDFB3BB7B82A4B912ACCAEB1DB5D5E0186290B527DB9
C1376F992A7E2D71BA906D7E27939530982AD2F145E8E7130449E3A777D52543
BA083E513647CEBE7E43E9E751B9F3CE9AF8690892A6BC0A0823AE1B3D52045B
0C76FA1E114C83F12798310D294F092359772015DC9564B06A617A232DF6061A
02741679F28CD820FB51835DE9BBC164E7550B904FA4650A92722BA2D7222066
1D1A11D5E93E4E82988AE50DDEEB10DA70DE694B9C4DBB0108286B6C7D14B275
E4DED2AA2FDAEF0BCC3A5C22B471FA3810CF0795A67075DBEBD15B1B54801BED
EB1BB24920E26E095AFE7CF39FE63D960A21E94403FBFA13B9DB21531C9D5674
96DFD7E7A53E88F0F1D789D9FAA0F082D1732CC7D7D865BD5132E3FAEF17EE3B
EC9F02EE3B8ACED5235B26C459A5C99E560B7ADF44DA4ACD89B067AC711A144E
16C4E92DF1C2ED0798D312130A1DEB876E5E3EB31649B1FC20D6E6C386D833C7
EFBBFC2949BBD7F2F67BADB05066FFFD43379C2075D8072FE755417D2C6FC6BE
B892E04DAD0490567C4099F43BD1E832024D13C27E49F3BD0092B596BF7D05B6
CE247697E9316089CF6D4650E75BB7BDAAEDAFD9B2AA0F0F2C070D9B7B2D0B17
2D0E8B96568410DA7ACDBA587CD37303030DC6284790079CAA8F5418E3A6B94F
534CD9B6641D4D349F630021C975E3968DDB0B328A24DDA9A38CD55E2E1C6562
55D7A0032D8303D99F7926C9891271B9B01DEB2EF4FA6784896B9D262EE5615F
FBB80105D7DCED50EA60A8EF49F452409D1FEC95C6885BA7A347667BA4EEA4AA
6AA6C9F20F24D982E80C01387E73FA3DE32C7B11F0F18DC1077B4E9574227207
BF2E727C01A963E1E318617EC559C70A83DBE03CFD2421EEBF37CF8865226AB1
78ED365FD8138EF50B3B3B0A523514129CEA955DD7C4B917B03755B478EEE790
78450BD8D2DC7C84D12CA6F4931A7461D6023B93BEE489E7AC250A0351C3CECF
3825F03E8EFDB537E8412279684E8FFD69D05F98BD984C9381E300C7393251AE
48B5453EEF9357F3A9513C289E39C6C068C78E203413FAF8FC5CC66DFE433A66
AAF0630B17D407135357EBDC756D1621F4D7CD517DE1007D67E26FDD699BD460
49456164D5E8FB93DDF8257A0642DDC74B1A30E7F0D38569CCECC9135C5EF4E0
D247AF3F58C6CF5423561A311862AD9C214C5CBDE37E4CBA0394C9A305FA1FDB
796EB5A57C0A95F576AE410B68B61BEACAAC658EA6114685420DA493148C8591
19698EAE3EA306F53EE39810207E9707EE082FE8F81541DF035197747F489AFF
498015FE17D6D86896013939E9EE3B1A1E845C21CEAF116EDBD3C96E507B3963
B513E6D905EF7EA38792EFA8F54D0EE8F97DD0DB48F7E392DDE88CB0746172F6
AA1F3EE9023C3F172C134749A0E2B1712B29257B90E845341A2A460A7F34AB2A
E89B54E0C2005293CF085009925893A42D0806A5F2CEEB8E04218FDD2394D500
6713FB268123BF3D14B2ECAF02A96063A06D8531A287E336042D46F310153E74
E3C8B0558D5D039C69D8F82BAF47B695574468F471187021DCD4C31D6ADC17E4
9342DC6CFA30D13D11437157990199990583CF15F4CE7D5F1FBF6A23545E982A
A74F879FE6472A50158F8214D213F5E24DC8C30208CE4B5C6A27422B32A445BE
3423840FBB376C2B7DA39DA98D33187C555A28C4C3A4BD8FE4CB417DB09EF44F
4CB23682A7B41BE0ED876AD7FEC9EA97B74A1FB53FAED1BF1B41315513FE88C2
3A9A336B9AD3CCA2B4CCD3A1581EF9B84C7D48375DBBB5346BE84A55069FE6F3
A9A672790C9322152DA86EF26CA01BF765C74A441D83C1022879BF938A1943B7
46482A85B4A3D76F2F649D8FD3D57402B45C01F1FD5F859BCEF5B690E3EBF8B2
ABDC1619545E6A917769202162B35AF58C930CD14E7A76D8B047183E2AB94940
0CF937C73F18E8B12AA339DDFD892C5E15855492AAB0175DAD9942F2ADDE5B7E
81A784ED56349884EA746DAFAC160B32288A4B3FEB2778C33C9486A3A1A55214
BBC2994D735EABB4C3455AC2BF822EBEC03D618EFCE6C119CDC0D56057ADE351
9AED36666090C3FBDCD42D9C464E5465671394FA2DF97503841B2F0414292116
CEA893CF88655546994E7A1C713B58C8473C6831604B034E899EE63306E67209
BD257E2A9B5BF0AF06B27372367CD17CA6CA52379DFFD871544DFDF1038006BF
B0123BC5DF7D7DB553821DD9E0D64F928C228B1F3DBC53210F90E06928963BAB
9F620DB12BA697D87207A74FEBD1F3D6AD769FE5A7A1DC3CF53F21A596BBF44A
20A75196450986A2485E0756E72495B865B1CD2C81BF533CF373623247E5D558
D17CB30E778DCA36C9F037907CFBFCA01CC4870DCA388F56B2058A860D095606
BC2100BCAADE5E9D4155AA189D32C347DDFB6DA15D321295CF55BCD5F36D751B
B62B3AB2DB9B7FB9BBDD78FC6E1EA1BC4FA730EB29FE13C052AECE0871786CAC
DC039ECCC11AA0ECE480FF14FAA8354DDF463210750F56A7742970BB4523FE56
05A6538337543C10DC178727097BB4803BD71511545BE76CC91ACC41007818C4
0272B7D16B4EEFF11B88508AC66EEF5BBCB427502835177360E68A81F7C3D870
CF587E8A51254930C07B4531E62E559C0A47D20F71E7891D3E2E8DA73BA4A7F1
37120866A702CA64A80D0F2430BDA9A5706B65B1252EB613CAEC5153F2C25900
755D49C4549EE654CD4C868102EEB6EC0B7C14376FD713DCB8FD623A7F7210F9
593D0EB782D9FE87B8D957C2F97D012DE0D340183530F88899A3D3112EC0B97D
0F2D4AFA23A70BF218C420C6776CB42E894D05CD781B43F99C694C15EFF4EE95
48B459E42B1C9847BD9E57A41CF33BABE376F097740E0EAD0096A82CE288E986
8B8977B76FA6D818195377ED75070934BE5440E0C89CA79880BFF75F7A65D57C
54B928B3182791A869700C7A40D6A9058DC9E34D8B3C3BD069891CE95D5F58D4
AD7549DD82D7857B69AE116F494CB2DBBAFB2773F1A3E1C75FBDF8D66FA5AB41
32194E28BB3A7CFA8FA96E1C81967408B21B738E79CF0262BFCA41F65A3FDB3C
7182A6E9F4B85D58204DF29514A2FECAF95FC97A4DCF39ED47355AA62806CB08
F50BCB6C8E816DA7287DF8543E14CCE3BFFAD9672661522A2C7C6E236E02B9AD
78E67ADB451A4D404A76A024E8D95C09E2BB1460AB1A6DA9E900EF6C3C9F422C
B3AF83509D270CA5EDE3564BA9070182336B14BAC4956D641B1153157E31565F
D890987C0E44DE3AF3A70B9D6A65A95A042DFCEA9A982D05E3104024A334CCBA
4FD3DB6971CC0C17D18DBC201B93B29735649EEEB74581E70E4C66AD6671992B
22CD2C02C4E379E2743E524F7B267A2711FCB63C007ABE0CE36BF6BCCE92D5CA
EA8D05D4474EE029782FC4770149F8CA1CDF77427110549C7CF476D224E021CF
B23642DCC41F98F4E28F22B9C66E5EEE8F92E3AB47919912A9F2790BAA839AA0
8A134A241EB106A8201A45FF73D1B040306153938A6F1ED37A7656735D278E2E
A633CB0CDD135EC0AD64B266973089C17CBFA86068DB7BBD17BBB62A21BA9D27
42F2A1E987FE2EC8B71189B9D79051839C1A8A980DD31A1A663C5D1C3E088343
8B13DD23355F264165B699228193AD7174B5BC45A03B679597CFB8C5C1F03641
CEB7B9B40787E70BC6B049260F17D0A2F9E92242325A907E39023923FBD60BD8
5C3FB7473F5E8EEDE2F33826BF84244F6021EE31FBB7B974C06DCAD2AA192DE5
ADA229B3D93783E2A06132FEAF01F3624D3D523735194411D1F54B4F38FAAE25
ED4D5C7E4B50E90E3BD99C9B059EA1F46D9E5E40C6D843318D1C5D9380B7FC34
6319085D4BBF8EAE5FB8514CF3F18BA6F9E831FFE3DF3017592852628BD9A324
7BA5F248B294B7F8176366D30C21AC1209FB540DC5729B82B3E3E03D73F2B14F
A44AF6B8559886A5E0E2DB8A8DEACDCC794D5BEC0A895E4EFEA8D15C14A2E48F
A9B521898077AC9E90B5DB9EFF6210B83E2B5BFBC668B55795A858A3E559EE3F
79BACC1E47DBBF86D1E36779239C857DBC1103AD7090D2B2731DEA440DF32B5F
54A361CE3A816C4C9788D9D3F654302BB9DDCC7E07623BD261411801784F770A
902EEAF0A18FF43136F6D124F1F4C12A6CBAA7081BB8D881174309949DA872BD
8C33DD609B6D5BF61ABB1A7052224096AD6907E12E6A27E8B8D7F5C538BBB18E
DD2D1B11AB2C9D8FCBD309603C89FD9D5A6F52C47FEDA60F81B58F63D2460437
6D0DC0B68C1DBE932723E07FC806BD49ED6F567D1A79887C11A9A3F86AB32BA9
870772A3CA13C6D4D058CAA16F48EBEDAEA041CC6E50040459A09ACDA7A92C9F
8CE90462F428E53E08279CB2AD5DE64240BD03BD86A8500526D45B1AD554991C
D5DA20D2FBBBF971644B1A432229795AA3225E4DBB09CDB14103589CDEF0AAEA
5FFD2496EA78AE33271F8EFF56FE81FAEC8D49FFFC442366385562CD9E5B54C0
76A4194ED94B31A6D9B843A24702BBD4FB46528E17902A652DCE624EDD189D57
13F4F57FA6D1884D6C595964882736A6D0DAD1CB61527DF82A3FD147A723F720
F70615CA1D54C8E245B84AFF1CB0FE97B6B10AE9082CE5C6182A48A2E0B7F1E6
614E4D281D28C40F6EC7A807CB4901371DEAF233DD1BB14359C59EB9EAFD4309
817DD928F1CC380A1EA2BC7922285B2D9CAF5E37E259544F9D2A0DB976AFA7E7
9EB183BA223780F27161FC9968399EC79688CE9054BE501311F001CA4C72CA3E
CA3396536A4CD867345B299FE2F7E23DD8D8C8617CF5A2E0EBBB26F02D5AEE50
EB443153AB63DC47B93C9C73194349E0E4D264FFC10405DB9CE2447A4EE748C8
75F406FFA31911FA7AC5162DC5610C72FA327EB90854F8FDDB46DD3B0D200723
713CFD716B60F14D4D91694755B6DA3B35F373E637A2FCFACF49B3682418E661
51B7FC42E4CF250C997F7705E9109C469D6EBACCB3D0117F588D2C9559876E84
7CD812B892C1A46EFDC414BBFE97B925A9C0C3FEA86B5ED2E339E3CC46935460
241054295291862EF06A8CF665793E1F0C1816D3A9A0CD8AA1941BF5CA15C2FF
07D742CC02BB81FE42A1F051326A6FFE733D591D9166114322F9C8FBB369EAC2
CE298D55415E942D6C05392D03DC4B2BFB4AF2216634BB48A48B0BF41F24732F
BF4E4ED5D33FA6299B923A40AACC330D6DAEF1186427C30FCA3DFD37FDA60319
B8DE3A5EA10CA159EBC7E45077E3499C649F6BBBEFC0455F37D7BA0398A28292
78943164BA08E0D30F74C29947690E09ABF3DF209E546F3F491380B279981D11
454A4858E12431F6D80108A5555F7A0C275CB4DBC61EE13D69768ED2249FF107
9E2EE704F9672DF9DF9C8A41CADAE9013823FACACC1891B8DF4ACB1A3447DBAE
8F55FFF672157ADE1F8145721FF110756E69CFE85EE45372615A24B502310451
96B5036BCB153031DA7A616DACAB60C9135BBE9878E579F6A461552F3229A0E7
DF6ECA67C1414E823C122DA4ECF4580B717BF25BC2FA283987A6C2E95AA3B1E1
2292C30B45A2BAEF348DA497E5997BCA11E47516AFD58738EFD375E0EB68AAD3
487A4FC27A1C156313F82E6482A968947497E4927EA42594BE986AE690D2B0BF
2FFC2BBBC01E8ECE2A53BCE5514CC439B81C2D966C5FAFE38938F89167D898B7
3BA8017F1FA90369FC843936980E6C25CAA7CBC14D0114F5F3641245BC405C78
D785B3C82D90E8C68B033DB9A934D472B533B68115014E76BD4FAB6925032FB2
60FBFEB5C6EB9DFA1E2AE0B5433904CB37887419FFE5FA065687CBF75C16E932
B03B002F77151C45A5A506135386C7D516C3D87E7B99704D9F60B779A3BBF316
5AED7361C900DB7FB3B719A5231A998B666C2E12FB4059ABB91A4DFF98053003
70AE61C14227A525E3376F407F7B1384A42C985680C1E7D3AF81DF41ACEA49F9
60132C79F68DBF2630534CF600B7B7A9005C2D6F5419E8798EAD8025AD630505
06BC90702AFA0EF14ACB86A699D13607EF692BC208A77FE043657C0301246565
C7E609908C3F5D008CE9C86F86D411B254DA5A7C54D6C327ED4A47DFB0390FA6
2CBF30616C93342A28C7CBB47B4B3E70CB1BEA0F21A7C38082CB6339C5E151F3
36CD34037BB38861C00C6A772F266749417B4A4C4515676DBAD27117ACEDC775
5659383A32CB54E84247EFB1321DF98A766D5F97FB210D86C8AF42A11BBAB339
E7AD3C1C9F0ED267A057D452BDDB55E2717D153D09606CABED6E1E460CBC2ECA
045018B639BDF8CD63B130CBA5336235CD4FC66E95CA744EF4DA29B76C73A96D
E69D536D99057E3D378D9E317A8F13F4C1DF6244C9B6128E1297DBDB9333901D
EE47D4CB2B87834E4589841D1BEF8D52DA4A3091C0E8376B036118955AD7A05D
4767DE8FADDB989954D81E42476C12AD52E1DA81437A85FE8316113F25E67C0F
FABA84E80BCE3B1AFEE4760A9656E043F4E76CC0EE566FFB715A94C7F11082E8
D0507C649E02B1A02AD9A811C20FD9971FAC61B95AA4EC64AB7F4678806B78A7
AFDB6A128899B4629549E941750699BC2902CC7472F21F90B8B6DF84EFC5830D
796F8107A37E85AC594FB7D21F6BE904ECD31224728111D4F133C8DBD45CC1E5
A6817C11CD8763F7FF82ECAA21B71103782C8DFCF8BCF3AED3784CB873F37C0E
1CD6D525F34B1A8A6E6687B489A864C030E1044C443D6E1C3FDB669AE6B550EB
ED8769911DA825668FCB5BF5093FDC460F4CD42BE364B0469925FCDC8547452C
3A9F16194CA8AE77289A074CE0EC7CC389EA374D422A315FD93CBDA474277B83
1E52C0CC6212A93881CB68E9BEEEFB521D7D4B3FC1F79D25DCD31676E39D5777
C506BC17D3EB4BD8E2137A1A1A497CDD10544222BBE305B474731328B5D6E93B
96FA7233584C79D6131190FF9CAA8B252379189A85CCB80AE2CE6A5D0545375A
F4709C301D1481669A18D11D2C41ADCCA0F31B26C54D2E45D205E1F823539D8C
5F42EE4F5E01DCFE126496F40A927C7E0AF3D0C67D6DC1E54CDD8A7B08A776A3
4982BAEA71FA21A4D8918C178014A83B34E5707AD015C447E8B378BA7BAAA5F1
B74E8713FB04A74EC2B3ECDD7BA79B48147CB884B0BDBB02A52DFE0CD75F1762
444C55A1B7FB99DBB5E08AC9CDE4D6E8434BE772553D38F682021FD9FC98D455
3EC689B5125F3168646E12B00D19B4ECBFC80AEA92A60965D72FD06E20CF506E
448C5466E4E40093B2122CB0B171A5D0D6F3E88A5000DBCBADFEFAE2C8C2AE53
C97322A2D9909E4DFDEDB2F4CEF1BB35AABB95BE15BE1C82C1590CBD8F0584AA
E93AE2E85FB09BD3D9402B8E7739963C3C8E5F99FC3FCF39BCF9DBF486681939
4EECA329A539E1925A0D5B6354A92E0E58CBDA36272780CAC0AB657307642AC2
179BBFEDE2C0DD526773DE1E37104941369F92598D97EF40BFBE09360B289D10
13BDFFF56823BF82341280C866EEB643400B048D8754CB38BE4EE7587FBEA021
562FE24A3C4C07AFA65AF4FE994788467614880312431D030D2654651F37196B
4AC43D80C680A5FF7DA9B3B6C33B83396220BB79A72ABCDC8C53DD3E8A0B2A5A
3B67A05DDD2951D76429AEF0D6A65B67F36B826D279B6BFBBEFA044453C7A209
9295DC5B9E26E1ECBA15F2049C00622C36D240C5D8B71FCAF0641C7637DBD1C3
0DA344F53E184D5E71BDE3B60EC51914D3601BE414D277017B88D9BB0C45553C
D184D5FB13EE7FE3A07D3B56D68791A864588FBF39609F5F30FEE7DE780C2299
3AB0B2984AB0CB15C1E3A38CC7945B95C47AA9277A669A201DA41C11CD86F0B8
0DAC54E27051D23EE8A56C47101370ABD3E4AF6708A85CB82ED746C75A56E4B7
681BD2A4E6874D9A0C4A7E2CE80F18F485370A435C5EB7C713DAF5A206147935
4D59A3241EAAF7E7C32A92D997EB580B568E7A50F89E716E828DB377DBE6781E
E58B973EE3D87D706A30827AD8B004B57C3F9836BBF2307F7D1E8F3C7A1BFC68
C27E0637B85DA3C9310C96D44749B2DDDC4745442FB7EB6E6CBFF97821C5B4B0
EE24E61250C5737A68181307919E4A201831F71CB16389399A3457929B162EF0
502AC9A3A20481DB2B8032EE3156D4533EA77D663EC228F4CFC3DCDAAAA41583
525D6D9C9F3B820BA7435783E73197F2E345C1A7344ABEC0D139E4C2C1F0A9EE
6D9E5C61CFFADC53835444FBCDA13BD183B8A39B4F34B9919AD6EC8661B01E1B
20C30E7C216E5571D4EF1650D80CB148948BB98D0D9F411B53860DCB345D461E
3FF88AA5D66BCC772A6A6574447C81182E8366C079A1634D1F59AC465499FD1C
0CCC30A8D5EB9646BCBCDE44BE8FD280BCDA44054C989A3EE9B3FD6393E680BE
A39D3FA781908086C26D274EC67FA6ECA659D043B910554E975FAA817ABE7967
2CA10F3182808F1F3E580FD46CBE94E2DCF692FDADFD2B6A15CC7B08A43A3262
EFD7009D749E7EB74D34A4ED68071C8AE5E154100BFA236CE21DC15165D0CAC1
FFE5BC3F3E2793F526A5FD94C653AC8BB3F54324112DC66E4F7A66EC82A85B74
CD8A1ED95F08F9644F1B7AA2484EABB9B2787C33D3D483BDC2D9888A92A589E7
A3EC3FE2B22593F7EDADA3A7DD72A7F1E6738B3B4879DAD8D22F960F9C8C59C3
7FC9540F4E61402F74D763BFCEB4A74B4158613650E55D03BC679A219E5E1337
21EC68DE41BF99512921346A87A21FE7ACFF91A368FD4D6D3F985C07AD6659EE
B53006DBE34E767090910A9D3DE178FFC7314EF032F1FBA346FE9F894A786CED
AF415E67E7CBE1CCFA4B07A5265E7B37A79BEC51253FE3DED2DE827973AE3EED
40413F2F04EFA42029A4E4D84599EF1BF44C6CA1C17D19567AE00FF68B3039A7
C61909D66BDD52A6D7761EFF3FF40B470F64731BC8CD224EE79571B219B38875
D1493715C7F455300669F0B9741DC96D068A6AEFA4DC688549FDD788EFEA74F0
2FE40CF82F1A732792B0F12864B2243961C99C251F4C61166C1564EF88E75722
3BE5797D7311718546A3B83C633E4DD06D4829E03C39AB702BA6E6908560BDC3
DF2DEBF0BC70A92D3B64D1FDF723D18E5BF282717EBA208638F730722C5EC8C6
4CCAF497CDC4B39155C33B65E0BD29DCB007222B745D0B23C18060C4CB1839C1
D52EDE2D9B548A4305614A12DFB4717B4A57B113D9F560F1A870AC8B9D95D2BE
EA401E2A3A190C846E5C95C42DEDEDD3267D0F21C3536434EF79D1C6DB84F0F0
4D7D461ECBABFBDC2D35FCF22EEB85D35E074527E260527A0541AF85249F4FB1
14500064BE35E020C26EEE192AA946A4419ABBE64AE52FD50E7C2E9452F63ADE
389BD7B71A88D227DBE4146ED2D16B7816CF2453E2FA20409EA9B70EC43DD61F
5C3DFE91A020793E66AAC88E94BA7020EEEF360CB61156981495CA4134A0613E
440B67C714CBADBE362EDD7D516E7307BD387BECE67D68412F9FBA33862403B6
7345F1FCED3268F7F51C1B692431A07E3A4986D9477B88A2C26260F2C49ECF4A
2B321794B4AE7D11C549CAF7B6D62B7EED11E1AD17E5B6ED61C622813B81B925
8075B95A2C02ED8BF300ABB39F230647439976DBAF2D5E334626F3BC0119E671
1BA65181BC1EA07F20F73C556667CFBE5191DA8929361920C6F1C7A3728132C5
2A288B1491B76BA1E5A277D6A1BA3232828C8C98FBFEDA1EA5585F8EF3CE5C0D
0C4EF7DE5A5114B0E1A8C2D5BDDB2548C6300BBB0649C022B7FE130EFA8DE4D0
CA87052D046DB51202A1C9688BA5E4613CE3E52D755760270632F92C086231A9
1DA3052DB6C0FE1C6D52502BD71B368E9A3E39C30804FC21FF7AB661FA15F716
3B717CE18E7019A496710F4258320B814E34D992A77074C1A98CC80E4A2754B4
5AC215894121E8CFB5258857949ADF282E10219D38BF938069BD365391AEF1F3
A8124B9D271A171431B0E74E21857D742D3F0956BDEED78E427B79053FBEBE5E
BDF203829A28C156EBD49925533D58E19F391CDC02B39D90562FA3E29E8A535B
1978B4A8BAA1FD14C5A716DE75BADC0BA10ACE16F2BAF9208264B3BFB723DB99
95E21D196907B1D4FC48E2E468F59068D6DDB53993FED802D1FB2296CA285732
6459D847D6A05832248FD1DF8689D0BFD4062438FA9D9D31FB98BDBFD20EDB31
6EE17F9A05E028230DCD0873DB86D89D5697EE87FF5BF18E713EF90BE6370540
99C139BFD6E2DC308070619ACA6ADE78A427FC98B3BF666756421973F879D2C3
2DD0F3D25D9CC5B0F977431E1DEB16DA6DE21C870BE4FD0FB3FE0B8D8A3DB253
6495EDB775A173DE2B48612E288DE6E2DECA41B9F551BA702DBBFB63D323980D
B77571883207883DD2C24096CE1AD5B38FC3526705D51564D33A68E65C2CE7DA
D65B23C77433902A1B5DE9AE3E29D1ACF4076FC4213DCDA083A4B970A1A3F7D1
76DC1F4F0C523302CA03426F3F3C8737EAFEAD98316C0A2283681CDDF42F31CB
AE355F3C328BDB0C6F3CFB3CFE695C7E77670E0C7F7EB2755A1F2EB64A2CC344
3A18AEB1AC9F41CD18EEA6AE3226A121D8FF4FD1AC6DF4EA134195F48D659335
7135251D3F4540FBB733C7C8570E956BCD87BD30746DA5F907D4609503A4187F
914963149B09C668221BE4FBA621CF27AFD95669F3F4578CCB44B05E481B06DA
017EA0D42FD26EB6043B7E971713A274D1C70657707AD638CEF0150761FDF9B0
581DCCF7C00C44D823E45021E1BFFCC2BE6542DF31EF94DE7488E87E3AF5DDBA
76E1A4C27A428D973394BAE6B2A1DE84B0B1699BE6205DCF1D48016E8554B9B6
C6DD8551944C29F068B159C0F505BE6266D680BAE5B3AE02ED3DF1402106BDB2
B163D801908DEA30AA0B6E310854CD09052A48DB0BEEDC74F78CE5CC70F6867B
09C68A1FA3ADF79FEDD0D882E9D44CD2351AF96F38F6657ADB5C6F254110E091
1120DAE8FDC1C001E987546A76D36CD8D4D4CB662E7EE36137E31FE601C9D0CC
9F00D9060305AA8E5986E33134A9BB0B28A1ED1DECFFA7258F37512FDDB53F39
9B95BF9F3A57580639C8C84BF68ADAC6BE4FDBCB64DBA32888685BB2BDDFB90E
381A4A306E3E3A1CB1855B53255A872BB3F677C1BDA58CAF8A510C59E13C82C2
40F3FC47E9DEAAB3CF1C7309E79DC0F03D937E9D0C19DC617FFB2DF8F51CBDCB
9A55D51E165ECB2A2453E77383484B78FD4C94A57AF09058532A1F552E9A2CCA
64154B4BD40F37FBB82FDA7EA33DCCAC96B4CDC905D429A2E2A4ED76F28E70FA
1FD69924707D1F035E9663AC3D67BC7DE626F5B31C973F13C9C94B936AD8B9D9
14780C23F7E54F593D8ECFB86DC1BCF684C23578675E6616CE0731DAB2547708
07C8D1B9EB465ABEC3075EBFFE18094B07A22BB75B05774BDA875E57082FCE58
811F930B6DA3E9317379077123743442A3FEDBAE7914EE967FB8A532576001FA
FB49CEC3FA6567FEE1496B2C5A7BAEB8B2B688386C5472282AB3A82A75643D42
335771666FBAEA9DA57EFAB6DF9616E7EAA4D28DDB3AC7A6F253286768A7060A
497313D00BE7D41E360E6149297E210B2966D704ED80BCADC0BF9C6E302DB5FC
FF80EB043D668CBE11459490B630EE4DA9912E413EA4479F285BEA7F35F21EC6
1DD5A78F267626ED48D966E73E16E0EF469A2CDB229006B018DBD0CF0B5F3FA8
433ADBD62E1622238AB63A27176E01E666192930CE16E485E735410EC7DA18AC
04704121AA934D12AF8EB3BC363AAB7DD45EB4EDF6B1C50BB3AEB114CEFA8FE0
43CC12B42AB0331B0563A1D1CC1F310E3D7EEACCAFABF8805A844699149963C4
1CFBA54940F8933C5FB1577B1231249256E80130CDBCF568BA9C2264465E8D19
D4C4866C86C0107C89272E92295C7A940A9F2FD46681B2404CE3C918A334AD7A
C8AB1186D81001AB3DF099D10777BB35CC8C8325B711C2C022225A86706170BA
14B6F7BE684278FDA6F2692D84F3B2E9FF1464636A69B1B1971CC9A1EB124542
686D99DC66828D98A3AD590F0F6020FC1AAE6991B7440DD980CB0A979F60846B
1EEE3DD87972C66DAA163A36DA67EC28C7D0AFF1AB5CB1DB5401804FC2FE152C
1450A455A4BF834AD26893C825B8DC01987E070F4C578074C9DF51139B2F24AC
5C1155FA56D641701E823009781FBE501F96EF6B96BDB5DF0FF2BFFEB6410C98
5B96C1BB8E39E92B6F7C38EA74BA9BBA2B70E204435737C014C823B7C993EBEF
CAA8BE4FB0DF635F845DC333BF497092AF68F1008CFE5D17349E57D18AEF938F
8B6AF5CF6AF11490F3E47F3C2679076CF2F5021EF42705250B8C1DE1C23F0B7A
8E51E932E9F21288132ED72D3ADFBD77EF08C284FADA665E5C2A997BD80ABE81
A73F9229794640987204EEB60E770EC910C782BA1FBF86F9E8846E93C3146F74
F25E1B7F922973C3B1403BF8F99694303662106E913E43B8DE73769A3592F3E7
76D423BD64EF6D93834EEA99899CC5E88772964939E42C05D99214765BD0F60D
DED3D3DD1308BA8905EA3E241B3751B12495FA17FF0C5A41E4E473215FCF87C4
C792BA4783B66F1F9B28E339EB6D529A4A46FF5AE522BE2DEC5DC5A9D2A47E5B
B4354FAD1AE85B669C7557BDA73126BA6B19F6F3BB01F13001333B70DCD43C00
EC230DC74CBCC2B1DECA830F75CC55AE7CC11F17440234FE1F3B62CD24716067
A72111B8B96B05463319CA184D24094E1ACC5668964BFC626429062372DEFA6D
3AAB03BCBE74CCA60A2D60B970C706DB36F5D020512C9755E8B99332E7C76114
CF0665DD666447769210C24E409DAB00D20C35334B7EE82AEBDA5907EBF7F21B
AD49D7677FBB9025AD5C9AB94F0040E249B143CEC5C803173F9265B8F0B543C4
715329083D012DC992C21BC376867890CE871F56B12A63A4A5DE3E715983E2B5
168C9059CE260BFAB803D5A22AA685A42DD2D1ACA62E728AFF6C78C9028942B7
394FE146963AFF20B5787ED491C51C223A96F6C2E4E119168E4A523E3797B336
09A5059727FC7BA86006628E2E2D3CD49293D009DA12961575DBF26347619308
3E0B5B727E7EE9CC26F1B4913BB88C7B681B1A31A93A45A84D368F339A3454F1
BDF2439A793AE5FA18186CC1AB90D9EA8EAD800088994C9C008B16201BBF114B
6FAAC21ED6E2759D5280D231B5D5A0735AA40EE49F1C9CE75013B5F788798019
C75FC3AD1A4E04307CC0B4E337C4D79CEC2EA587844DDFD1D23A7B8944593364
5DD104E6EB1F16C716FFF21D1692C17B7C391CE0AA7D0267E49C5FAA80F0BAC9
5263B8C27019BA2DC9740C16026E808329161E40DC2B60A793A0103EC3162DA6
DFC2E63340D70F80A1559347C8A74CCFA2DD15316DABA3BED51F7E083668859D
149CCB3B71B247B6147A55C28720A3DF469BDA26C1CD8BDAA50E3167C57EB22E
CF4905C0B2CD41D59B0CB94C9D996585C7B5E8D20DD3F155787379FA6C3635A0
D6A6D13C35DF436D4223F15796828A75A490DD67E5F2FB2FF06B707792EDB378
79F3C9F663AEF5D04487EA01F36C00B017BBC4B66FF19040AE4B7538DE50718F
BFD800E0D2EDC40B59525286E4F1C4CECF2D83B650BA0737F4DB76C21F6B4E45
43895B0851577606D2D14BD61C33CF9F27EC71016EF0C65A9881305824668CC7
989CCB528089BD8F16BA217318F207EA385D9DE6EF12B8BC84D0B6B419F4D0E3
BDF55FDBA8660AD43127C78874EC3E69D75F6677AEB3244EDBFC9B289CCC8F89
B059B088CD632517D4A50504170268BF182ED75DB0213A7057BE4683E0DEC1B5
C56DBA80A35C7BFDDBE4EFD932D60B2310DF102F61BC34CC8457EFC6C25074E9
9BA1DAF036A3C12D25AB4D4C374CC916C668A1A21B3404BE3EFA4861EC493255
8BA1FA5AD6D9B818D765BAFA06745275BC7F1FAD971043B86858298CD7B5DAEC
4FF367853BBCF7692A0BB0660FD8033B643812A6AB374779367C5998BEE9A2DF
543803963EFC05C763C1AE044013AE313F0DB210837DD2A387560181458475A7
0BABC6218B7CEFD96C3A186C2A935A46909EA2A8B45F7D98E85EC87B9FCFBE5F
37880CC5C101B6E3F6C36A21F2D53F15395CD6E390356EE7EAB3E627ADCF28B7
122E2C68F43CC47A28357595EB4168941F10F6E8266740B6F46AD1D57AB2A719
294134C6E944751734BC25B703C3F1D5CBE9050F2E80B04BF5256DEFB2268186
9B9A24BC564A12222F6E2E9C310BC27C43FE2736697007C209A381EB89FCB2E7
1078E65F61ADFA60407E5408A0690E3308F7BACDA0F85604E64E27CADA48E07D
258F31055AE7BC02F49DAA6723EDC4CD2191F09186366F783FD2791ABADEA1B3
CB34F1553DAED902A21EFC3C4A1DF18DC51DD3943D2AE3D80BA5347B3068F7A8
49316C20C043EA47C083A6A88A9E9D8118F2C1EE7BDCE7B6ED858EADD5593AC9
9B7690198BE78AAC30BF97D3229D291C7F9D790F5C2851F7F0C9AA6663695B52
5E87023DFD197F007F2F5CF46B7BCA5C370B9850F560AD49C3BF69138B7F1064
C9D3C3AAF50ACA31BDA9EBE26D3D706BD6728787CF3B590982885E8CE73E16D1
B41B0EFC9952AF640573CBE722B54EEE92A8E3635944D3E1C407EA204A96CD46
5E11DBFFC40C531A4BC1BB7DF2B16FEDA04908174DA1DE329B3B415A31FB36A5
6B2320FC63813C01301CF222B8CCD33BE0C4D4DFE08C0BB7ADF6D9FEAD586860
3687375B7431EF3DFD77D2675E0F94D677846BC3316D882BB5441ABC61F62620
D6748E7998958309AF244058DB0127AF036B78C03D8DA374F8E29C3906350AFD
C198BFA48202652FA68CB4B3286D911F2969253951EDFF15F2D7D82465C41F64
33C1C8D0E9F120942C026D1CF8D22ADCA655480B3F4D0B09905CAA8AE51F8EAA
0D23ABBFC5439C2650E99C299656C1236D1B49B784E00D879310A34C1D9B192B
92463BDC839DD53AF7694F04958A773ADBB2BD55ED29E27F7F107708AF896F49
E6ABCDD6115471D6313EF5F34F66D1EC356666A02510230DA98C71112469A8B7
0554F6A6874EB4DB5455919A97CDE276A95F463DA90625FFF3BD6E45570011AD
5B970D9814B9283EB1F362F5306FF73CF3AA4022F97EB369417171D5DF3B722B
286116C38978D833278785CE0458602AC1934A571E8C855D1513076B7ACD56A4
C86487DDD4823AD8507BCD682A52D9EDA6D44BFC13ED40CA468B166FFB5393EA
2C2F7232EC58F9256441E494CDC9DA210BC532B4C2259ECC0058547133D182B6
A7160B05E4186CC761B278363B64934EA10885BA69EA1DF86FD228FD7BCC8E4B
A01F328E178866067EE35D1E03073232422AAD4C4DC8347C22525EDC8EBE1C53
4B4133642E27725040B90899093BE32C443583C383B270444FD4F93A92C77564
F67BE75AD9100CF0B8A342388FE0766A5AE516D12B6801AB0A85F63A53D9A61A
CB6202F61E1F5E133C37386D6E0B3EEB6E1C94894A20CFD5E0F620E3B5AC3022
882D52BBD2905E0278CFC57646FEC30E64FA1C3CDA51C62105C8F82061784A01
10926A95DBB17DB5D823888BC317766E99CA029B4828E5A9E4C9C4B08FC703DF
3C6E85A6420572A96976D41E0143EC1121EF5DFD8B3315C4D38AFC9DFB34ADC8
3E93465DE56955FBDBB0437E2D0F41405A64B15894160819B06DE4CF72C0D6F9
F643355EABA050BC0EE60CB9B1339B87C9C3DA4560B8685E6B2F2537C0D8862E
FBA4C9E3335B97C0C3C8E570910FF843A40A3F5A62470B15C6E928B76F32688D
C4741C4905DB910AC1BEBD7201AE53CF945033FD4DBCBA15498460137FC20EE9
8425A5AE61FE35EEAE0129481EE2FD17E69CCD3D04FB0CD993B208FA91FD24EC
D43C270C944EFDE8D0FE1D7420CE4893C810C146DC84DBD22766F5A55B52B415
70B5C20CB94B415395FB9E5B1BF999B51583E2697B17EF84924A3B6E18EAA4A5
784B90A61EC9BBA639350DF7BF33EE6EE36839BF3ED27C9EB4B58A89E892C950
55CFC54DE978C48E14305670406AEA4AA971208B2975A8860D2DEBC5D8DF2E63
B6D34ECEF3D464088FC4F575B9131CF9298935B16606B78829C821265B2B980A
71F5E30AD45753BEEEB52196684F886CE021C11495995A334122A8055FEC5708
2C8EB369A2B0A472A48C822647BADE454397B5F2BD01AB8BA2EAF191C8559BC9
A4A6C745021A869EC1C0BD4C5CDE8E493CD5601FB8A4903F6F9C39E47EF16E29
B0310E76A81D4B5A5A6E23DD842912C9F6A68D1983B2D8BAFABDB678902057A5
2AE73BD4B688BE9788A8DC5F0705F3C56A0D476879328B9323225CB67D2EF43F
CC50DB959369482CF5492E7CEA8864F8ED410107A41FDE6375938A6665B8E156
A0DE1FCD7A61DD7D4A2258665B8E3E5AF5F3E8950B8678AF5538F9D000D3CC08
23A0AE941D7F2B06BDDCF3FD45198B95A15D9F3392FF9ED4692B9A3DF55021C7
2AFF65E8089A7865C0ACFAFACA5A3FA5E2C2AB27301B5C5CAD5482663391097F
09A4B98E151BE49EF8B339B7BECEF61123DC3679C144760F0BB9A1C7CF02FD2B
12B5D6C9B52401C1DCFCA01DA263FEEE69664A4E3BA8B11C492310F2C554ED28
465FC1E967F98844628C0CDE2AF433CE0E7A2254640D7A7A1425415F6D105835
F10144CE3BD35FFEA2CFF9E4451F109F098E4EE9328BF2E61243CE410865F8FC
F5C35EAC69BD06507BA8ED57CC1CABF8728712921339F47EA6EBFD0D75B9F80D
B97E8D62449B2414C70EE02D676E4769458D2B716FC868CBEB0E8D42FE0C59AE
6195EA977BD89A76EAE0A93EE96E3459691CAEFBF47812EE698D28C6F799A84B
AEA451C2E2334D974E6BF5F244C2A142C8F630B0AB898D7A109F547CE9E88A0C
D7C55A026538200D5DB77926B30EB270698302C7520AF009D96ACFE5C80E0F13
47C088DD1F29D595536D24DC3506D68303DD0D8AF88197A5CFE13C3844EB95F7
47FBC0D68BDEAD19FA2644012C4FFA65B73930F02C8603100B737F4B2BA51583
93A2A4132E7B0A9B429A511346906A89C08506DDD80BA891F29F11AA40E20502
5BC7FA82BB0A40627905D062C83A4897A0F230D8F3BB17AF95EE754FDA238EEC
87EC1E067495A4BEE8EC76B1832E342C70B312011011601FA7CAA263B3D630AE
4DABD4F54FCA274B674369C0933BBBA411AA923723E441B6001F7E7369FCC1F3
E8B2F3A96E72EDE981E5DBC9662DE0B27A26FBF219576A2930DA0DAD22D6C374
0E608508B1BEFD3E5AE3328D06EE72599C81060290242303F9B60F0F5F49F459
CDCEECF850B24DB762FBB65AC42DCCE80217E6AF04EE9944412AEF884B7BBC9D
D55F51539DDEC0AEA8433A043F87B96119CA986FF26BE77CAFCA99D07ACAF138
240A976C153E25108B9D7EEECC08FD758E6E481AF6F121F892C46AB66A2A62F0
A44AF24E48DF7F9BBFA4DB021716D4C7928502D96F52B942C34F9F9D4134EB28
6E25925A876AE7F95121D301153D946264D83D78A8F63FFDB3B5E448B9823870
8D94955515689AC35885F8521261E93DAB8B1E2BA2CC987B92B235E027A3724C
691904D18E9AAD5BAE497006D48FF773ECEBC1F77771501F326F4446292F3263
BE4B5EEC443541FF05ED87CFABDF11AADEACE4E5312A475F91F65F0EE00CFF2E
96288F0DC40B2FCE3F3810C5366FF5A4CD37B820824424724F084596AC4A5A25
D878C53EFBB69CAA6A8AFB8BE1FBFA16CA9845E4BA5FC4946812CDD71C8E7642
80337D65D7D4B9B22C058633EFE89D20EEE8FFA54CA7675AC215260DF9C33B72
8B236C436A7E0843FE2D748824190A4BC08C750F8EA23AF6A90935B68038D21A
8D1CA8A8867E2062463BADBA0B7E59918B27C384DA3E0D99B8999FED06D4D7C5
5874991F4A85ECAF0DA280AD171B7FD15F9420B60A152019D53BCB5A771F1199
F18A8C5CF3CD6A8DC0E6A867F0F30AED8428B7BF8BFF4D6D2B792ABA82A2A29E
EE2D6600D108628362BBD8DCC5FD93D507CD3D3CCAB71B1BB5FBD69FD1B3CAFA
17CB00AFDE303D7632C2DA4606C71E85E65BFB108C783460033C5348CD6BA44B
E99DE85F74DE926188E803A6B985C5CB5A023A09DB13826FF0A3DC0E56DBA896
1145E54A2C71D2957FDE71F3B53D8F9F5427BCE92AA9CEEEF14FB9AB63B90767
69148B3714BF00572F9BAEC0975481FFF73B8EEE5B04AA3B22E03FC889686FA8
8762B6CEFE117F2BCB9DCB925956E747EF6AD4CD533E861EB489A6066BAE2168
2FF8FB4AFA4B89F19B21FFF0A05F74FE102CDCE2F659FA271EB7754DD2D22D4F
77355FF3E5BF31979F38498E54949919A8C28856151FA67F36ABBF24AD9962EE
D2EB22BC7E5545BE8427423932D2E9F0103F3DC5E469D82139B0D8EF34B092B9
23302397D9454CDEFF1AA803039E00483B2FA5BA390AEA086CA57906516B814D
166A307A93E0B3AE02ED3DA8089E143CCA56111F522CE8E399DF97A751B8DFFC
599F78725643B73F56E4F8A2B5A8DBE9C27D406F8ACFE228FBB6650DD1EB535B
2DA2C5D99B6FBAD0A823D5115D730FA3E7551A0C1FC4633C513349E4A1E95569
ABB995C88FDC5F100C032559E4E77EFC061F05FF60F1966830946785EC5219C0
B0581E31CBE75B35FDBFC0B30E6BF73A781C55F31C69EA15D0B4C1305AAA8CBA
EB6F3349B9D2E6214EA3C89B6EBE9FF4779A5FEB893542589637DDBE9BC39516
C1665054EA5D2043102FAD3EAE16DA3585C37E73DE2522521476A88AB2D60A39
C6C09B196FCEE1F4D061EBB1EDD6F9A584142FA383085B128D71AF3091AEE719
A519ED3A4CDB334064BB22D89C730E2EA96EAF9667049F25890544464C03E34C
EEAAC5E8C1CB5794D95EABE25ABF99D6F6155F8BB9D631EFEFB1F8E06D7F364B
93E9C53B38E7462ACA78C0E5BA3C4355ABB06D1E606A022E23EED03FF0D880F0
23E1D711C336731C51BDAD4CD51BA529831D81FC6576A22E90750ED87C02E12D
7E9A85C5CF2B3EA0D77031687BD05DFB99F17B74C9E55665D14818ECE06AE694
5DC11A09B33BCBB07E9069AF6551D55FA129AB7BD8A841B4004A47A168F158A0
21020A30CF892B28A3EA6B4F1A0424FDFA7DC850681B060CDF28AC8ED352BAC0
082A004A1511D0D9454E798D6F245D323A9396E675693C5E375AEC4D99C4CA04
F37DCA947FDA39938D30B92019F190BEF2A916DEC2B1728398C3221205490A21
BC502915DCB015031FD6904068AB1108983E84415A77340EF8E9F5BA36470895
CCCCBAD94FD43409630D0B58E9C553EEE27EBC14E930E808DF388E65D78F053E
A2ABC5382EE1CF55CADC60696F24BA7618657B76F71056E5321685BFDCF176E3
73D7019017A4426C9CEFC9050F6D2E381BC8AA46C8D89789861B1A0CCBA97435
8144B753E8504749A6E9
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: UniversalisADFStd-Italic
%!PS-AdobeFont-1.0: UniversalisADFStd-Italic 1.009
9 dict begin
/FontName /UniversalisADFStd-Italic def
/FontInfo 9 dict dup begin
/version (1.009) readonly def
/Notice (Copyright \(c\) Arkandis Digital Foundry, under GNU General Public Licence V2 and later, with font exception.) readonly def
/FullName (Universalis ADF Std Italic) readonly def
/FamilyName (Universalis ADF Std) readonly def
/Weight (Normal) readonly def
/isFixedPitch false def
/ItalicAngle -12 def
/UnderlinePosition -125 def
/UnderlineThickness 50 def
end readonly def
/Encoding StandardEncoding def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/StrokeWidth 0 def
/FontBBox {-64 -225 1985 961} readonly def
currentdict end
currentfile eexec
D9D66F633B846A989B9974B0179FC6CC4458BB4CB99E3608702C78822367AAF8
905981B7439CE8FB33CB4CD20CD28CCD26E661FF85FDF38085D23B0460E887DE
732F2B1C30A8E32F24B2C6E3E2AC9E3958A5A6ABEDC1D2635A123C0044EADD0D
935F314C247C6B76EAC74C59BA3D95D42E67E229D9D8905597BB351BF74DA40D
48D0914F1751374A93CFDB8F8EE2A7A7E92932D51EFEB49DA59D7BB1D019699E
DE373B2E5E18D7E3366C931362919EF637CF35DF18D036ADA8E2995AC81A53E3
19E7D461C52803EC6678E213D5AE14DB22B1D4668EB6AFEA1BEF4AEEB9CED0A6
443919437D34ABC048D2C55B7171DA4B36AC383039800A77CE4CA4CDD58EF8DE
FAD0F086AC04F9F01459DA246F7BFDBE231F0C8855B5813EC19327C35D940728
2AA8708FCA214D5D53E4F4B1E599AD64678B891BABADEA7EC0B8191F1C26BC65
4A4BFE1DFEECD5C6270946EBBA3CA0F5C25DB381A6A230DEA0A358A4198A9D15
D322D0E3A1C2AF13DFBA3686678068C7E8E1124E64297100F57BCCF02136C824
55FFA8314B682F08AFB15DEA10129E661A6DB44CF794833416612374857C2749
92E09DF08E5B50134F0B5ACCC001CE2150684C85B53FE668A4FFF3CC17DBB184
ECD1B89CD01D6890B252AA43F268FC91EED63E8C0B4E2178983DFCE81A1D029A
8FEDBD129B44918E3CDD886012E233734FF62FF87678068C1DCBC1F040722774
DC375A4454F168369CA602F870A769B31917B744E01BBB872A6F3353E1D93C33
6653ED0F51DBA0DE34235097373CA4583095151642EEE76B6BA6714F37031F5A
D2ECA4875FD02F65D47541F5245588F0CB5933A759342FC460ABF99E014A85CE
3BFF948BC38F3D29FAFBD205400093EBA5C194624B38BE27E09A493BF1DD4399
98956B9896FFBCBBB77FC1B6675F1E428390144B29367ED224EA9E7587453689
EA57A8BB5D117B62A1375D9FD73F090C42DDB86E9F9921E8371D27BF1944B66E
CBB39308FFCE8478F68DC8F26E0EA7B46EE000B06D36DE1D45BD6373DA634C73
461462AE7A16E9D68C89FC57D817F7937DC65201ACD908C7E25A461D4F18ECEE
FC8404A75D6F40879E5AB5E040CF82786A3FCF21AC6882AA6CDF9F4DB476254C
A6DDCF754D7CCCA98A27F18296F065E6FC48BDADF719943CE36E52BCB547D7DA
31643F081FBD60A5D30E9257C5CB229BF1062F8BF360E36273487F9594F3B018
A19F5CB5118755F6C0E3402D99FBA966CC6D1ED120E92E5ED1A18DB98D7221F3
560C1B4B9CF476FC51CEB66917C92471164C66F3D48147C9203379F0097F2A06
51027C502B5B2C96661BFAB76306551A4241F84983856E13A52B77CE7024B472
EC3A789EC4C742532003D6D81AA8AE5FBBF48F18D310030C96E1A107BC0179FC
9A7C0228324798DBD55BD35D410AA32A9C3915C895AEAA659D6459E509E9A2E9
30F74CA51272D71A4C9CADB54AE44E2FC6A4344AE8D5D20A70F315D9EA388A6B
1EE30E0F23A0BD9B12BF9ACFEBF0657351C41A461DD7047501B5B5CED4DEE56F
38762BE1F699E81A1FBD0336A14046A947F0A252682B4E941AA8BF70036A7888
7ED4C00C7721A383F73A66AE33FB4C028E5CEE2E5B8C0EFC0F46483B5DD62283
4AB339FC03CE0DFA171D750F806AF9531D21E6714F3FE38E1F1DB29A6E6D1CA7
B0AD076BD5943CBBE91316CE4E7C49A391146B8EDB9C4D8C08FB2573A217FD75
633D33416508BF3F67AA772AB8333CF00DDAD41411C18B9402DBBB5CFF8FE434
0BF894B2017354BEB6EDF6306CA116B2F3B08E3722DE166D32CC2786F21EEE86
95BC0A2D179A0298A85142F0C77D5010A8328BD2BBFBAA43B93B6CE18C3733F8
B547F051562ED5A6856A53063AA7E7137877A5632EDB7D5D2DC3FC1F214DCB3B
A4579B3729AA67119F55FEE0ACB3E06A2B468EEFBBEDE28E109C1055785EC62F
253D382F7625137FBB52696D344F845477E37B733A989C724C2EE67A382A21A1
E40A9669EE57B0359B63BFB34A97FF7ED694E5BF9774528E86881F97C6D1FBA7
6DDBD70BBBE5A81DD0DC39B8B5ED12F741F52ACFC1375DB1F41C700AD1E96DEF
F4E82DF77B16949AE746D7CBCED9A5C73EE7E2D2315FD6633A6A242F75058B60
ABDA426597F76E7CFF3A8EE8EEABDFA0F3EB9A859E3AFCFD6B05B5812BBB2881
2F1598228F95C08B6AF93A785D07E94519A5A6BBE219B241292CACC29F962FEC
8BD168347FB13496CCE36F954EA283B41B70687DF92BCF247AB1C29C7FD5E73C
E4456415E205E8F8E4B854427C67E14DCF9D9149A4442A4971D60A584F6BCC13
AF19863508BE4FF96A012CCFEAFB6467FA0C51BD16A8C7662C2B51F7503B48B0
B6E09B0769AA60E748C7DD8DB7B3FC52B14D92D2E1013050EDA09904926EFDD9
0CADE5B0A186D8C9D89BD6A6000C2060B6BFD1D0AC50D487A04F5DBC7BE52687
953E7C41EA5AE33E720EAB6C0C35C9AFE932241C19B24CEA94660F924A31F338
6692F08B2C16CA111701D64C9A1FD8AADDBD4C8D374D70D264E972EA9227133F
9E7D2A870B1DD6E04A9A80F13F0B21FC96FEC1B2458245F431E92AB4E1A7FE4B
29DC554296AF9C654DA29B5506CC29EE6F5BA4E7E6B8304D0EE4F6D2991E4E0A
32E14C9ACD2147DCA2728A200AB65A44B03707B09FACF642431DDBA184593434
1D02E2593390E4802F5DBF1C5B52C78C7098033CAE12D96730E5263C32B61A5F
4BF8E70097E84F416670F28F4522F8F7C7244D32D2BF38222E5BC026A2DE8D62
063F260B0C4E59B4A049B1944AA50531F5E7CA6841AB81EF8C32250D5A3F214E
8730C7EB3CD622E193764515778D6F3AF763215B1203D96046824183334994F0
2C46E88E317C4B8DF912CD1A011E110107946AB7CB67BD85D31BE25EBC0C754A
5E4A9CC49FC813549F35A257D473761E6BA6AA999BE01E6D6030175D07A1194D
F73D59312537D49A1BC067FC0CB9673FF089DA8E7DE517E3875C435C52BD160A
CA450A0A12F5EEDBB615FDC405FE4BFF8EF4BD7DF5A982072913A0D3F843924E
D6C9EE79D70EDCF1A7CA9FC9AD3061B0075BBC8F194CC6CD6116987758894EF9
0E0561384EE4561558279B3A4D7827D1BAA0F84713AC0724B5C43C7720345B67
5908310CC7EA7E22DA8B2CBF0D13732B70196176E5658CFACB6A26A3DDAADAAA
38B9875918F76FB05649ECE16C57C03CA26AEDAAA71F71A0B94C9042D6054BF5
25786C349452174612CA4A30DF146016C6CDDF46FE756290D2AB042B63AAC85D
47845C0EB7934E4948FFB379963EC2D3DE330FFE23DBCDEE06260E0D0EFBDB5D
271EAE132C54FF6D022ABAC044B566203ADF27CD4FBC02014CF83DA4F0E8E396
0ED6D61D427EBB4971CFEF8C7286251D2F3440482AACE1C7EC25A4B6D0D0FBA5
04D732A3B32E874CC7B87F407246BCAB94E55A45B6DD2360A1050A1F76BF2218
B19E3AEDF2E39D16F31F0F433CD652DD9F05E50585EFFA912558AEB958D9299D
00086943AF59CB2076D9262006AB6D503F243562398C78FA8D65368BA341847B
A18842558F528DAEB8F1CD867195E5BB6EE8E51890B23B955F7DA902E8DC09DD
9DD02D19B77DDA83B25D852BFBA170DD6EA1E5060D734CA8B28BFC9C4A181600
5F873AD37501BE0FB46364BDADE2ECE81A53E6BC4337A98EA2AF24DF6AB608BE
B36EBD5CE77E0BFFC93BAF751764BE11412F53D7905B9DE8BD0B50A853BF81AF
AC410144642B864C60E00957FDDD7B91F582DD7687CED21F096009A14A7C7B51
2AD8BC570D2EF44865C5EF88368C8899B8243B92B0016D411C36D21E581DA140
18413FCD40B28E66B7BB832ECCB0BFD9B6063F53095F6F340FC8DB9874E2D0A8
41B1DF5E1C3D718EA7E49677CE42EC43CD5406BE24ED04DE96B79E1AAFFC09AB
5B9AE26650BA7492A2CB3D7943229F30AED0216AAD0B053CD5B7E540700A6E90
E2A79FAC92BEB1C56F212053CB4208FF7D2E5911B079CD540161DD7FE61850B5
B758DDD0309993199C511DA6CFD6E8E0534FCE15A8EC58A07CFFBBAB0B6F645A
6A590AA230DC4C3EC6141A6BCEACC9817BEA3DDD782AEA21667F675C35788044
AE5FA544D003BB1150E412B6A622E3A3EF54C7413A565E6B3AB06468DCE41636
85DEE56C1EB1B30C14607402D6E1698C5F291E1CD062DFB7C9AC4AE9098CBAB2
184FBAAEE9B7B03DB354233AB12C79E2AE007C001A7E54F631B5735E4FA6A2DA
0FF3D9B753628DA37B2ED141B415D53B40B1DC70BA668589E8BBAF973E6D4131
842A65298A67E3A218AD9D710A64F949F5EC4BC8C1070DB673BB15466D60E249
F40D102DE53664059334C3AA4C0E8224737388B1C6532B8423E4A0B6427D0E09
54D6C73D5B86C7D305294EE546F78C99EBCF7BFC636FE52115426DC4BDE0D34E
647EBF48EA0A114AA194EE87ACED84637EF70229AF60FEAB61DE2DD0E90134BD
D1B2EFD4551C16C157CCBB77DB98361B249E8A5070F052BBC2AE97FC8068FA16
042D09A28746809BFC01B8A4759B039F1480721D22C798703BF4BF7718E0384A
195BBB273827E3A5440C9965ABADA84D6CA90B0EA6FA682D67B2AFB341A2E40C
AEA3971F02EF74BA9A071703B7D73152340E70A9FBA026E72A5CA1E61835D300
961E2DFD5CD638D759CD61DA0B04CA079EEC03CDC64CD4D75E4606C059D1E56E
DDDDAC0A196E6E76C20C38953FB15A56A51B5ABCFB48180118BA1EA80F7162D0
78011734718506253D7123D618594615CF2E67F4017A8F7AE0E7966D192947E1
C2B595DE7B5F4FC5F946EB4E3F6653DBA8A923C6CAC0512F7C71F602E701622E
50AB2365E9663B0D7CEC2D37BB8656A5DC0502E8F4FD061AB3DFF3667FC1891E
C63E84F5A9F33B2B212273759B288B7FD5E629527D46A4EB535C6C5AD4A94506
D6F66D31F4E64D014218F834698B0A2052714BFDBE1B9DD7573D0967FF082E09
F5B4E9428F0C8410DDE3586D5BB736F8870E64E024A466640A884FEB08015908
5AEABBD36437F1954FF4E4B509F5114C63BCAF7F31F20BCBBB2D9E7857F32CFF
316B225321DD53C45FB324DFFC1C131C1F8B1BF64E5975AC89E089B6C71FBEA7
75876E868BC89680916AB07B0D53ACB7EA42991C023899848206B36C9804BD6E
5A8F088BB08BD179379F7D65973AD16301756071C50D742C29DCF9384D6392E2
6F6C359F6131679768C3CD6921D2E61E0C31D2753876A8329AECE64E7396576C
0059EBEB8FCF32A286AC71980621FFC8D17589C9C08493B9B835B4FAD9148F61
5A083F0BCBA7548AC5CA46DBE613335C35633722D95BEABB56CC7920EF6FE6DA
AE9A24323076A971A496B9B71715491F587C438C7B0EAD2FCA4ADA77D3007964
B6493C3B2EB0CF36D9964256942BAE540BFA154C87C5EFF41B19F87510ED1482
1F09955914DB072E4A509DBD5B95BBC8333737EC1049C3D830B1ED15FB112601
20D877040FB1D718768584298CB7D54139656DD31E921BAAC3BC0A592FDC0D9A
FF31E8D3A7916946DBC89EDB74ED7306878BB6C4FC4F8AA68C2D4C3AE78CF72F
15AF741EDFB43712754F0671DB083F4FAB93B64E06C98B079EC9BC2A59900A4D
4D4ED4E44B375948DE41E000489879C5ECA842F14771E30C9CE4C65514A5828D
543B8321E5BFD525AEA526C16EFB98FC13B451A602E0DF4D64B9C505A9C38AA2
6405DC100CD1635D638FA92991E64401BB06B93B5200B3C756B7F823FECABBBC
46E9112840B36514CF5ECBF1B347C84E2052D6F3564FDB055E540178F05AAA51
3A9062D5A05A1D25E86CD39086A2D612B8EBC7D8992E5EAFA561DB080E478BFC
E252ED55485E4649AE977254EB526E626E8600FC3E7D61AA3B68384E32B6A1C4
1C0BEBB6838978E4A1880F90D6CC138E1B30198F67DF4F8CBF71F45170A026D5
043CC1A7E1F6F53F9FB8FDCB8C35C2DA3F6F54623FFFA7F9099771816E716327
AB434B9422D3A6228797BB6248319F541F83AD4CB4C90324A6673C37E5BC3B6E
5077552E3DBBACDC89768589BE76133901689B9C644A42E6BB540340450E4FE8
2EB0FD94056CF6605F03C37362935746A63A12F79109C97DDC7248ADB05CD0CA
C222BEFC81A0008959DBA001BB062123AED7A6AB397B1A4472572B9D7937A4EA
6A919E1337FAF3264A20198BAF60EA1B780955110C6995BE653FEA4AA7A2A820
36AEEEA036BC203194F43B36870E7E64BDB88E50584239B41E2B3784066F5A5E
EBADCA7702D9E34F49BD99050FA5C44B1A65B9127AC1B759F7487EA7875C2180
D784FD6A81592E4A01316A29DBA31E977A144394A10462802525D7C3EDA9D19D
0DCAE786DFF2258BE681880DDF742769C6AF466C9E74B61E82BA6F2F8BE3A3DB
26981BA1CED42B141915F482D497B60C96DDF2508C49BCE46330464549A20104
60463A7F347DDF69E22C04549A2C67C23571B821A7DB43C3CE500633701B2E2B
713FE08457DD01D9CE2FB5D56B47E1CBDC420D1541740FEBADA0C6E28E144847
76A61CB98F2B46E92DFA1C6C2D1E81745200049B64225C2B8D93EA1B621CCC7A
1DF23CD1834805104DB5759D2D70C7D7DA9B273B1328F97873BA3F56B7891D75
2EEC2BE5E64A747D374748DEEB07A405DD1B761FBD17886F58FFDB83480B80BC
A9C1A45875A277241538BD70D852855733FC2821394189FF6ED12DFA7B618512
29040E4F52C62A0F83081C24F085CE38909A393520FA03D2EDAE6B451C3BCB78
BBDAF18840E05BCF92A6A808B2C2BC3779CFBD5A4D75DF50CB122C3825DE53C2
06B0DBCC8053F04F51C14F4F5DAF8A88C4DC944376083B2DD7189DCB8C571E24
2FD3B0EBE67FF5C7DE2A82A7813BF719A552AC4400282ABC10557A0652670F92
4C6CFA6D325F6A3D69CBFDD0324A9BB13367FCE1626B9FDF065ACEA21BE42A05
EF1CF7674C4A33E86D02BE9D3D0E6BB752AA65273A88B0BFB3F1C6E3D9771C6D
FF45A385788AA554734DE038CF4AC89AE3F742167B1376326DD226EF9846C33D
8B5233CC24165E0D4095CA82C11B34F9492D90680EEDF2A27A05C0511477397D
8800294AFD34825A2BC6B59C3C31C573CEF519278F611F5B44AD72A716EE499F
7AA7D621DB64DA500A1FEE176A33D4DD689D7A4722DCC59B2EF7BC364C10A419
4B6335BBD71BDAC21D1DDBCC83B60B76BF77C8E729FBD5243B4B152D769BCC5A
73B24DD1B3BB62330FBD6E1F1159F32115CB62E9866C2EB31B885267E77FD166
8E884BF89A93A94F41452077982BB15A9416FDD23D41B20AFCDC8887F6EB6050
979E6BA19BE25E231050D55B94BB1EC48A6F98FFD9693051185AB5DD762BD2BE
C980A39E8BA8D89BDF118418B48CC27E303FC882C45655BD6A87F82A9B0B7FBD
1C16DFB3123820319B40AEB3C496AAC0B368DE2AE811F6D6726E9EC24A1D7EC2
5DED7E99DDC766216C6D213EBEA18D5C45F8BB9695CC2CFD95023203484491D7
3D70207527005F713BF97A3406FB61D1915043FA7B872A767A421ADE0656CA97
1C4A34CC4ABF57774924F99E5E59D84C48772877306B5AC62E662C83DDE69AE9
5F13917AE2221BD31884A67D971B018BB7F7749469E8F45A8286420A10D0D1DE
F3C99376315040BAC8C65659A13C4CBB35486F57623F9F3C1811E80B21634E84
38E631C48BBE1C367E2C54A7D669DF5BCC1216886B89457902741B871CDDD11B
198C46AE6488836CE96E8BB8634DDF54CF21096D04D7118D6BF8EA3D82BAA053
A355A9D080026DF03520489EC15E7BCA1D9E070DC964548A5FDA03EC995129DD
80E5E976B64AB8E5E75A7EA1DA671E65F70A62C1F47DBA7100AE5115407A1FBD
58F8AAB66F756562B4A20A277EE0BB74E305815B12BFA16A4F865254DC4FD69E
2597A4CBEB474CAEBC34F45445D0C21DE8303EC2FD2DA26375DF573E50F49F54
A55847E3305C6EDC77BF73F759305EABCB73DBD305A69E6AC5BB208E3CEEEEB5
0A11E2811C9CADB54AE44E2FC6D325E86A7CCBBED6679AB17C563848A9A3210D
A37504D8985F544539FEFA935B802DBA3F39B61F69CFFDF765828CBB2576AB20
04690C6BE37F2021CD86422286FC177245EB634DD5DF84232AC2A69EB5FD7D11
5CB6F0293DFB3389DD94497B572C3B2A010DA81621B33254DAC7DC9F7D21D153
A56AB135E3F558817EE8D5BAF95D944D88E82A26963D07D748A7D1510D509244
BE4E52EBF953165EDACFAA9106B72FD9DA1909F3BD53E0EE325204D7621C78FC
5CE6CFD00E924809EF5F38944863516B1C688CE787EFAB2C3C08F3AA38FC9743
F598E800C3E68E280067FD5B133594EC5136970B4F9B36F73F82034D0B4AD4AC
6FC526679A73D1C264EFC606DA74D25D965F89F0156986F47917C66C7B9AFD0A
58E4BA3600733B51CE738940E0ED59AF16CC0A3987A9748B2D3410D19439E482
37911453E47F8099B17E72E7D6AA2C4AE32546FAFDAD0BC2A506F69906ECD642
744C912BAE2C0D0CECEF0F667BCFE274CB52B4E914FC04B7E71D0BB1DD0E65C4
4DDC8DE6EE76B3A98EB6C575AFACA8AC73D997C48763D41231AD088E61815BA0
D589518434BE9752E4B15956A171AD001BCAACD3ECDDBB7C57171F5C72D1A178
EC12E8AA4D8392DEF782F4698C29F8C95B6B6EF413B76D303D89FF97EB7C54D5
DD66777C47D40707EB6612EF33A54D23A4E0DD01A2CADED22616C3EDB2BEC90C
FE9F87509F138331B41160D37028607DC944FE95F61C0B95CD24F35381E60FD1
B88FC4A4FA2E41842C07B4719ADAFF25F5C4E3D418DAF9E5744080F98C3D7F99
9A71E34F7DD2E55EE432543BD79C7B70C5AABDC9607BC997F44E591DA7696E12
2BD13CD45048789BE20BB38F712B15AF23BBEA5ABC33B70E67D25E836DD7066B
DDE88D2154A8F563940FBC018F44E80CA16D50A808F368A26B74394B049452B7
534E02C10F5323242BF336E065DF71A898FDA362EA25FE9FA1E7096B0E8F195E
85A94E60E77B2B5BE6FC84C20C855F5C75CF54EC13629D019D94DEB539B756E1
2586792AE5AC2E58BF100A31787FDB0F35ABC9640D69D544B0B82B6DDD4DC93D
634EAF4C1A47D869C2A448938958FE9A62B1EEFC0DFE6CDAFEE3D02D2F9197EC
5221382A92F49F936E90E3A6966211D6EF9FBE586A54E40437FF0038C56BD1FD
889EBB6B3EA8FE525C515D106A2199F33921912308EE90AECCF76A300EED5227
D5B07A01258812D3074C41893459C50AB746D41A04EDB8E7E1F7728CCF8C375A
7845674F1AFEE8F18FD08E7B3B0460AC4D52164DEA4B31AA7DAB50DF131ACB44
A34DE21571C8F897A3B1D23DBEF12ABD9D7CE361F88A2B55B3832E9BA4E7A4EE
CD472D7536686E73FB596F2A74851C8617BEDA82C8192D1D7C767E44EBA12F54
5533852CDCEEEFF00D8649F2868EC52EDE61B72F9C8EC904F9B5F6B21788C91C
86124DE20B58133BC73F013FF7BFD88AF285A3680D2B87DA8ACFC7EB5FCFEAD8
AF1AAAA57C04A8FA81406F2653510E4645616EBDDB0E34F4EEE140C891ECE932
75A3DAC3496D2ACE9C63D74F95792B28DC9BE01E86D622100BC4F14B99244125
7B03362FECCB58F1004411957AAF9C33D3F1913071DB0E3AF79BC99A620CA6E7
B65FE8DFBEDF204A91E1D4406877D7A651613580254EC24C14F1F3333B17124D
2437E54B0EDBE6D809647D091455815D8F7986F6013FC43746042B3FE900A7DE
AD963BEB1C14901BA4583C6870EE9E4D5B2FC25CFF7E453FFF5AFC65829CEE27
DEB400F272D854EBFF8F25CD718151C53D223A411FC719F4390767ABEEA1F865
3C2ABD5042FBB229C405DAC95467ABF9FA7371186ECA3D2F062637B25AEF0ECD
F6D939F4060A9B2794180F7533130C31ED8EE87F5ED7E76D332F8221AF9A7803
F64B1C9D8F49E3BE97E7C2983470FC5A9B85036E6972C030B1926619B1B937F6
325169FE3836B09ABFA0848C8843A60DC51FE41F47B95F987A4A3F921AAC23AB
192F8F2F1B5868F5C52E0A634E2D4274DD24E742608129C825D98EAF88984C14
285EC1DDC6C7422DD09CDB4B7DF109DB021E372EF8F0624D629692F817DCE1BA
46D125EE5CBCCD1366941BE42D72C12122DD54F68F85A4D50C9434AB91F771A4
3A238F434CFB044DF60E68B023385A6B9CE9935CE23C401A45712337397279F2
A450639013F87DD7E4F24F9E2A82FC866EFD47F56F6B3CB10EB6F7E806E51B29
474F5FF04802A3458F6629C3A5CCB847F5560BDD6D0822E029DC948446E6C561
04ABC61294DE7757D5E93EAAB970DBFD0F4733FD21360E5D36AAD180CDF441BB
5F62E1DC8EDFA151D3333F282E4770738877175D3B653FC3DBDF760C0D2608EF
3BCD3D3394DD2972008E79D1F3E208CC55942B57E632808C0D3BAE1247F764D8
435543A26CB89B3478FAB7895D90AC79C9DB433F228FEFF0FA22F2D6A4827909
7C9958F9467400AD0CB6F6CCEAD910D8B47B38704DCD37822B66FD58535F8DF4
548A119639E3DDEE1D8F6AC08C7F4FAC07903DBC9E5CDFC1B0EA8AD158F294B1
9BF6D28926D2CDA84C88D1625F660D47398D399F6115AA2341CB26D64865446F
A0B0320EFF003CD198BEEBC27A19B768119E49452AA0BEA1624D06397DDE2F38
4FD189E5136ECE4999D5855AD554E8F34620FE9AAEC1BF737CE861DA45FE0335
B6EF780BD59AF90F11EA2EE0E96A025E3838708EB224BA8C95D17668EFA613FB
85C8B391FE883E542E21D3CE981716AE63C498D75ED414D78F5A949D8340AF67
C28CD45D563FA75F295C7466B497075C20AEBCF90B12B85C3FFE3E0565D594A4
924276BEC5501D7CC705D399EDE47B804E4A39159E00C9984A663913C8A0BD6F
40AC489BE91B69059D9B51FBC66181B02AA7C8321E479C1FACBAD6D853D21049
9EE275043E9B70092151C6946B5154C9207D2C8648A5470915CF34A3C00F03DE
7AB28AB010DB0715331A091B4B48EAD9483257AFF9B04D08E9F5437820F9B14C
C64FDDC47DC8D7AD29D494AFCE64C1080F1DF29E15C418E45E893E662ECA455B
CC81CD4E38BAD444D125976749AEAFA8DA24A59F7B31EB76342A2E0BAEF71872
95EBD56063FDCC47019E5ADA5730FE26DD67C70C77F886D302BC98DAFB5481FE
1ABDBA26588082039A41DB1D1E6FE384099F4F1F58ACD0893C41BE4D4C70658C
126FB8BBDF1AAFE533764E69BB2AB1AB03146FAE0F0F7EFA429ED8A88178C8BD
2117A94A65D60D2312DD94E01C55A167B9E60432D85EC1433A8CF0BC7DF1ED5D
706EEBED8AD1F0C1A3A22B9D33A792358EF303D411A1FEFED70223935EEBEF0C
8B47F2AD9C7AFBC9A733C934D6E3E319D96D10FB3BC02927174C9AA3E0DDE695
77451D8317DA3D264DE12653B7A17FF15347E3F042F4865100E2D9558AE85014
516DE73640E183143BFA26C4AE8C230712EAC9F8D195D8A5436BFA3DC9BEC95A
9838F7CF48C6B949518D8723EB27DCDFF84DA3EA74C24E96EF39B922B57C847E
34463FE6404E5111776FF740EBF2570287B6B4D813C83588E3520F905D5E8B1E
C20DE16EA19EB3CB423F14400140BE966DDEA7C7CD8AA8A6E40521DEAD473FF8
34C0CDF3691E63FFF6B999DFC1EFDC32D55A53F9B3145C7983B964C73A06535D
570702C0C98A9F59BEDFE42880ED9DDB9796D403009D60E675AAA76C9A019A98
67C7D3BF827B8FAB90BF62591444F934A8247ECB1BBC1B62812808AFA57F312A
85D7288BB40746EDA0665ED968371521CC0D649455480F9CA0CAF8B50F24B65D
EB626217303F1A7EAE2BC730F233D6EE10BE2A9263453EFB94028ADC39355DFC
478BE5DF03BCA0B145425F620C506A57B72A77E33F43ECE5040BC81A1FEBFDBF
45EC24302CCF6D051283BE4CCD43A6B8F257F45E2BD15254FAAE8B6075BEFD2B
B230CA74121EAD269F7FBB61505EBE3B7A4B5AEDF00E2F9B23F08E0E43B2A65D
09AEAF55F7AD329D8448A63B7CAD7AA7B301CAED44E148AD4C1A3E8023944331
EC4138DB8E6C693896B55CAACE2997A187895211EF56E0B52BF905503C7FE5C9
2C689FE1EDFC7480CB69B414C2C157A1A66E75CBF719605652EE98BFC9CCC098
BE3F5CFC30134F882139E6E4A5C873D5E528F1EBDF7FFEC9C84CAFC5E774B4AD
5096844429BD3B5BEFE53B5DD27676D9BAA6ED4233906D12B21D26D1577D8084
00EEAC20419C48B8DB3B5B8ACE599F5517C3E5C774568D137B65976AE4412F8B
F642004AB11407BBD1CC526FAC455D873AE8A133DC9997C542976D6289C85C3F
6755678C873733FC951D140545BC32B8E2550C67F280A44F0F38356E1893FD28
9E4193B2DD2D99578AD1F7705706C2CC9B31633BD329787D2827AAD02CE40032
9A5247D4E4C805F921A4E0750CA2DE8A92CBE333F8B960BBE7E5210FE43A3B23
A435B2553590B0890E280671008E6C3F4464450C8BCE653EFED4EAABBEDDA6BF
EBF797FC382F08E1B5A315D41DF00071372054BEC4BE47E477C98C3DBF96D228
940D31EBC7CB8553B3F87A3F73BEABD6311F6E83135A00939FA08401050ACE00
759BE4A096051F94C19A8B25B677FD6B341C7269A3E0DC8F23FA8A0387850C38
5903B44994C476503D0C78CE7119296670EEA02CD22BC4A16D3277C011BFD362
CEA734E43C24EA05C4FC4D9C36085C3148A06B4732302A5CD2738A7E0DD8E2CA
C9FF1CB4D124C5AE65B4CC8CF1AC380B12A1D9D559E704B564674A1DEB316819
9987EE90E08DC1B5D337757356A722453648A702234B27765A5E327B65AF8EBB
E1FBB29D2306695FF6C538BC658CDA7F3C0672AA9F8F5229E5C6281A8170ACFE
7F835020C0B6F26ECB2F692F5E13C23B47D1DAA96FF9076AF1D846FDCE30EA28
BB52CB57BC88B456962D4052D29DCAF70E04C53BF7BE954B68488F18796610E6
7A92A9A1C15CE6FFED3D8E2539A28B6657AF0AE3BEDC4A0631A104D01F30E078
8151E6F64419878B6645CA3DD6DFDB9833B967FEB6E4306169D53D706AF77D34
85D1B28363AFAFC8F6A17228670A2C5E09913395669CF7A9F85FFA049910657E
E1246AEE68E5DB19B16E7F23745213E91080F2E4532408B16B8A9E411202777B
1A1038DBBE29A2C5D0FE85F94AA5E371864D00428B948C47BB3C6593EF151986
1D954BA230A1933C866ED47D6C834BE0E793FEB733E22334AD93440FE14CCE60
820B9142377251C0FBD3CBB7EFBF3279F9AB8DD584A3A39208FFB213C60B801F
E37B36D293D2ED4D282DABDD55A00762C0268817D91EB83A2520AD846E2CC414
BAF2F07699F7F82D823DEADF6894C24487255232D46AA1E0F46543CBAF83D624
1AC406FD9200A30425498EC327001A5553083B187058BE75564C6D70C8108169
6F8972B7B45D252573B442AF0D2340235A62D46B1E3650221AF92F547421A3CB
38242A6B756ACCC198944BF1F362A301C3308EAE97B70A2CE268B87F05503E91
28B8C5BAE75C8D3562A8A2945C1992A52C99EF23B52E9E0D9C07029277C06DD5
AFA8797DFCDE5F593E1FD1996532D2030A5D42F35D836DF665601F9CCA9749E4
CFFDA87B3D9ABC2F8153C8ABFAA13C8DD482360E1CC6AFCD3C802EB2DBA86474
AFB38B514C4570FCB8A3606377E7AAF4642530BE4E1147552C1469FBB37AACC3
AFC5368162235D52577099EB7D423F33310B8676DC68E608BA809EB2B0DC6251
A0BD71469DFBC51620D5136EF4A423769AC1E6F5CED7578300C9FFA3C127624B
DC52EA23E835B894C5B5CAE33D0324A447FB7BEFD310D87113C2D01EA2C8B40D
9EAE7B8424E841E712F9ABF3E65B416566B524E034B23E91AF91ABA226524309
87864966C02484590F6E8F4A98B6796091F7AA4F053637AE76AE310F0BDADF25
C545B00E4E7198F0AE164DA4B42F3A76A778F9778B3B89E5C88BB67501273695
E4264DE0EB26C369D292F7F3D6BD33C2646171BE84DDD410701A75C35629670E
7047C5E047E68630F23F28BF38875143BD84360A789B6AC70B5AB146C056295D
0853664A302023019D1A118B8490CEF258E3BD1B7B76D9305B2D1AD3F54BE6D3
18AB37B5B318590D8655AE6E3E0569932B5606A8890CB0CA83D4BC22D3ACEBEB
C2775F27DCEF7D37421067054B7BD06B8ADADF0CA15800B3925381D3D8E51031
F870E074C71773D3C75548830FAF23D80569B41493CB755DC1AEBFAF903DD25E
E07FA82AB0DDDDC284EF7803EE8F20FF876771EDA87ABA35FDB503EC876A1613
478866C8D810B3A64D602C998287F10C791B4CE8638D8B6A3D92295B1399AD1D
3222458078139756D14E4545059B7BA496294C54048B5F4B503E20835979E9C5
FD2A79C237B0E80FBF13519D52CFC1598FCB28ACF70E3926E88EAC9034F4F5F8
9F3DF411D8C23048927C4F8CF8B14A420D40D9DB2D01777E62E99335E4C3AC59
4CE5E68AEBB5AB33D0CFDA8045C46AD75BA4079D422DA74326F498D5E57C6CAA
8D728820EC4B209763098CB08965D29506E2E73BCC15871D549F18C555DCD66E
F7085DFDEF6535F97077CF648B3D93E9F54302BF7623707343F421A69762FDE7
DD4E81C15EF8D14639C85D5AEBFB6B5CD33E6F32645299DF9C014BFE696CE283
A684DACF919F6BD343775D26E252C78983F8F6946398D1FF2BEACFF94DC2E5BB
60ED949C3B96C4610247323D4730AF7B2DD5722DD3DA6DF8CC92F86E8ED4AEF9
B73FB3F983F725BA8089151CA0ABCE261611D35E26B9260033D104EC5317FDD8
B99EC7D79BD276D13EC2827ABD84F05842A5BEEADEE5F76CA45A4A90D56B0703
459AB86601851AE014D1EDA879AAA3886E5E50DAB550A19BD41DBF5E04B74845
5DB280B75D7A8D0E0685CF7761923F634A252613B3ECA9061BD7693802AB1A97
BDC7429C9A167C562AA14509D942955BC1D40AA2F394D49CADF1C230FA5350BD
2B6674E344C68B8F1D452A32BE229C2ADC034431CC614BE964DE494F9F2E1A3A
8267FBEFCE3805DE29CB1C53988CD8B44DDFA7DAAACD881613405B957C569372
1373232F553CA7869D483630521526B3D3CD1C26C456AE1736DC6328884C3D8B
2C8498D9CF72FD4D401DC4D3D219557F9F19D319588E984D70C431EC78DB8DB5
BC1D40A7E7B1D7A918EF6B215F1D99C5A0CBE814046BD3EB5D6BFECD2436C1D3
A083794A2F678E42D90B6A75C798B4ABB79EB742248314048647DB3ECDC050E3
D40573C04535DA1088EE39F96498A1B8E0A25038D8B25149ED9F89979926E15F
817B1CC6DDE82321AD5256D1B8229780C2DE0F166709B495016DCC5598D704D2
1CEC202DEA92BFC7866986C1349AEA7FF68469D2DBFB8A41F2EC4478B5C23F4D
EBF9B75314A6183A3B31D5096C5B4C0C3BF96EE94FD92B80D8314C00FFEA3557
DC1DB761D533F64EF612185503A104BB8E31E0F10C237ACE5AA9CCBBE09D3D86
3C8005FA795471444594DE82D7623C1B17F33A8FE594E2944365B00E2CF2D96E
B80218F020062DEC21028B203BAD876D2BD05FF5A137E7CA635203CBB93E5446
65A2C1E3E792C061940B118F3F3D37AF9F59A929641FE65F9AEE5770B8AC2AD3
2DB290F0F40FD1C21F81EB4B9725283EB237B20C4D0693CAF3BA313EB8E19693
6D5365056778DA21B57BE0C36771AB480EA04798980B53586FE292FEE57E6B32
0F37C079943C3938FC74536DBD7C705D2A5D45E80191DE73071FEDABC5C1DF85
771D85895CC7BFF4850CC55C92B9CCD865102ED4B1EAC2C2249A21AE831242AB
BA8937AC1E9C85C4F69AA14F2C658D726449F80A8E09945B8D6399F62A36FCE7
99402C42062C992292DBECB4490190271BF3B96A6DE9939275C2983ECACDD29B
B7C42A90A88280FC65E264C6B3F60857B841D46E3ED431169421513C35DA23E0
D6C0AB28F10A840A4482B9F57D38209D39B14A9F350D55DE5A82B245763EE110
DB2901AB21423B4EE1AA9D117204DB908C9F1379D3AE4DEC979BDF4DF93A6AB4
282117AF73B465F110B095973D9D0476926080880361A787549E911A7CC79C91
9F5F3686827851993E71C58A803694F48E052AC91EEA33EFCFB3D763064FD1D1
32F54F04CA98A48BFA0D54DDF0F05A2EF4314869BE1C04F3CE70F9868D53BF46
6A4C5052C3A00C6F31A5EA5BA64C3EEF659A4264AA1593D79A37A86A6199E6EF
7A8D98707E055D9BA83C1564E15275439C42F3E44C56B25E15D6B373F6E7C07E
95B8B54927807B607ABBEFB2C0C66A93AF51BE7603A5C9CF651C85930064A9CA
56C9296D51DC464DD88B0E44D8693A32CBF5EAA5C5A52C5A5888EF5A34F0D94D
4D2A289C4E5EE5712A644AD712979914A80CFED6BDBF8A07F5A5AFE6670367E6
7FCCF6489652E02880B0F4AA32932F62327EAAFF63690EF83194131B54748FA4
61618EF665379C35AE84CCF085257A3762792AD855E7DDFA32A0A2D8E0B8999D
44AE696C8DC72E0960747CBE3DB19ACDCC3245E8AC307BFE8F3B5DC837D12F4B
AD1D4C93065E58224EE0B2F343A1794271BEC1FD7DA7787902E1B986E5628023
B94CB9696638F2CAF5039AF6DE6B8D918B33ACAC9C7D63542DE8C04A448F36C7
D987193847377E620D20FF4402234BF914E93EA090A4747A9983D1815DA9791E
FA92542ABAD4C09B233C855A5D8A109C32199E9428C170247C14DC7D9A6316AE
D7F7640997D69D813930E434C567F34C53ECD8EFF34D61943D45855120545D70
FAA893FB9EE331FE516589EDF221984EDE549D45323F8E243B78BC90AB2AF9D0
4169DEFDB0F079C192DDE748E2143D56FA6CDEDE22CE52CA63D8C22039FDD439
28D0766D904B295663D62BA3D1836F7E280B061DF8F0FB903CA051AB9733FC3F
D1178BFF6A7AA10E0D29F3B17C0334FA3FECEA55A7B2D04D7B6B7BEA4508842F
F39C5863F5591BC12BC4
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: Dingbats
%!PS-AdobeFont-1.0: Dingbats 001.005
%%CreationDate: Tue Oct 19 1999
% Copyright URW Software, Copyright 1997 by URW
% URW Software, Copyright 1997 by URW
% See the file COPYING (GNU General Public License) for license conditions.
% As a special exception, permission is granted to include this font
% program in a Postscript or PDF file that consists of a document that
% contains text to be displayed or printed using this font, regardless
% of the conditions or license applying to the document itself.
12 dict begin
/FontInfo 10 dict dup begin
/version (001.005) readonly def
/Notice (URW Software, Copyright 1997 by URW. See the file COPYING (GNU General Public License) for license conditions. As a special exception, permission is granted to include this font program in a Postscript or PDF file that consists of a document that contains text to be displayed or printed using this font, regardless of the conditions or license applying to the document itself.) readonly def
/Copyright (Copyright URW Software, Copyright 1997 by URW) readonly def
/FullName (Dingbats ) readonly def
/FamilyName (Dingbats) readonly def
/Weight (Regular) readonly def
/ItalicAngle 0.0 def
/isFixedPitch false def
/UnderlinePosition -72 def
/UnderlineThickness 36 def
end readonly def
/FontName /Dingbats def
/PaintType 0 def
/WMode 0 def
/FontBBox {-1 -143 981 819} readonly def
/FontType 1 def
/FontMatrix [0.001 0.0 0.0 0.001 0.0 0.0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 110 /a73 put
readonly def
currentdict end
currentfile eexec
D9D66F633B846A989B9974B0179FC6CC445BC2C03103C68570A7B354A4A280AE
6FBF7F9888E039AB60FCAF852EB4CE3AFEB979D5EA70FDE44A2AE5C8C0166C27
BF9665EEA11C7D2329C1A211DD26BB372BE5822F5EA70D99EB578C7BEFD44CDF
045A363056E5E1CC51525EA6FC061DCEBB337208EFF729802376A2801424F670
0E7E6397B28F15BC10B40012B0A3EAEB2693E8F7F627C4C9C7C6C5BFF105C1E4
1B2B9E8F09253B76040D268B80719E1B3F5A55AB737CF9024F3D038DF9A0002D
8FB689C5F5000C3ADDAFE55EDCBC4E54B36A58190743E32FDCA7A24B64F5E7F9
DC901DE44A25E99E322B3D3CBC10C0412B0531B14E81134FD1DEC47BCB7514E4
64E7550B900404A017C92336BC792744F6F38904282AFE8C998D4B9DB7893830
A6A01872E9D6AABF66C4B08716A39BD9E5ACC0641E506B70430524E780517E59
81EAECFCF9798A634318B8D160438435B65CC6910E609F13A4963AEF2B2540DA
DDD64E0E1D15EFDD5D36D4FCD9E4D81E21D52784DD3DBB741AB5FC052F481B1A
A701AB81CF4EB85075726F3FEC0872C02EBF4D62F5DFB8990C1A0CC8161F83A2
D01108B6C4AEC3845BB4F61288F733429B7B558A225D582AC04BEBF127E8DB14
B59F027502AF59E46E0063B792D35B2DA4EE7DC3F2A64DB325318C1CB1A57504
3527B10BDC733305E18032A64A1002439BE13D163AEE778CAAF5A7A8D00CCCCA
673B8FA9A99551594E85F21580733527E4E19743F4C932D443625DB353CA959B
FBB3BC7996F1F3559E8738D7B3FF1FC8AAFD28CE8C9CDF3CC10A8E7DCE003893
8BB497D690310A0380F290601BE482029578B45097DBD56F52352D7F931A1A1C
735A74CA33FC62A04E1D1E1B023877B96EA2AE6E5E42682E9F4BABD109F039E3
CDCC6B0F9404DA157F91B61905B34C39BD0543872FEBA04FADF1DD613E1E9822
560851385E512B3754A099D21B332D2C9547EEE2B94EBC03B2D954DE0D64D28B
5C0305C968BF1EA14529BE16F9E7F147B08D71B9332ABB7B5EF1B8B60A8D19F5
22B497164EA1A20E17E9B45FE94A09D54FA74709C83B0824F96BC972F4FD728A
B8E7926039EA6587B515F5CA7573D7BFDD954B8056CE466542BC9EC45D3743F4
45B27B34656D355AF01FCCBB3BD7A5041E460D7F1783EAAB8031B74D4C0353A9
FFEDFCBFC3351159D29DFEB6C2C499FF8DC9E25EF7CBA2F89A078F4689E6FC4C
AA83E5E08BDCC9745DA9C17EBAAAD74BE406A863A79523292425ABE49DC95854
12EC9027FFAB4AB5B577F0B60D0EEABFD1C0DEAA4412BC17B5F06637AA0B5F20
A3A1EBA78F
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: SFTT1440
%!FontType1-1.0: SFTT1440 0.3
%%CreationDate: Wed Sep 12 2001
% Copyright (c) 2001 Vladimir Volovich <vvv@vsu.ru>.
% See the file COPYING (GNU General Public License) for license conditions.
% Converted from METAFONT EC/TC and LH fonts:
% ectt1440, tctt1440, latt1440, lbtt1440, lctt1440, rxtt1440.
11 dict begin
/FontInfo 6 dict dup begin
/version (0.3) def
/FullName (Computer Modern Typewriter) def
/FamilyName (Computer Modern) def
/ItalicAngle 0 def
/isFixedPitch true def
/Weight (Medium) def
end readonly def
/FontName /SFTT1440 def
/Encoding StandardEncoding def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/FontBBox{-198 -360 1322 830}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052BD0CE60552BD63101D7CDBEEF5B11
69C468645FE4ED1AF2541AA0770C1DCF81623DE0ECDF49F2B522618F650CE6CB
CC8C21885DD61AF8A523AA677EAEDDFA51A1F9B1885EEE0456196D634E04EF89
F17499DAD982502ACC349B9EEAAE4A71A73D1147318C60A8BAC10510DE90D8D3
F46E47295D27129A5AFE0C65E22BAD10D06885A2EE623FF8E1D90287A083E00C
EF25195F68A2A98170E4875AA0E2F461BA11E7AC15F01C3384F89075B25B2605
942C0A2CECA9A7B578D31EAB935BE7B9AB3ADC0F524C109CEDC6C957EC56766C
0FC50BFC16A9442F5E255F3B0A67EE59204698AB70A1A39761E9B16DD89BB0F3
B2DCDF661B96C1C95C934AB9466827D2E4AC2F341B8CC4A08AB82A5D1E25B865
E925740538369BD1FAFD3AF962D17D14899B1BAD67B780B2D06D6D6743CEACB9
A77A234354E7767050119B9EE47F033B8B3AD59BC17B84C3B929265ECEB12176
454594C17B4C8A9BE7CFDB06CAE1B189B7B72FA023F2F671095CA1679D71C627
40DDA7EE2E28EB5EC2FDB5C3E7625957CC0E3A3C3B73AC83C9DE1D5A518FFF23
8574169741CE3B3072645A77AFB34B51BBDB1837E3AF6A87C797CAE6CF629E6F
6D119DC288B8F677CE902835CE4ED0A7C36DA80C9F603A02954CA4A6D076077E
2639D83223A67AEF5DB2441A5532A92DCD25E71754D9818209554A1EFFAB67E3
CF943E08C3D96A72AF21FB53833DB1BFAEA5114B26176EF010A668A52F51FDA5
2E38F9D4D04B61171AB0CD257959478FF07F00DF56EE8D81F3050FB06A89EA5B
C139158918EA5FF9DBAE24E6C0BF43756897D90415CA50A11524BA26208E1F6C
42214B6B770372677D70A5E8066B2E8739F1F984A5AA4EE9AFAF71F910FACE8B
CF9C09ED54B41C3B766FB50DE37EE623E776A03F642F5DE48C54ACD94E8981CF
212062AADABEFA00C5DD426FF193765CC7D529C5CD0B04770721ACC2E3B933FB
9303AC091282500AC83C341395E1D1F66C28E1A26493A8749133170C639E26F1
AC16061D6ABE9390480D1713F12C8C66FBFB9B17F2D3ABC3376E66BE5B6EE537
71E4B122317B63C68B319D25C1885DE9717E289BAA75ACDE52103F177732C9A8
C04AC209B87C1A79399593D71AEEEEABC20A07045E0B917121910B323E0DF559
F1BD8534B9E1E5A858242AC7138493DB18023D6EBB4A777A20B95D30B0E75D74
A63FE53BE4195419994ECD7F3EDB1C6D604D2DAB62A7F35277DB7CAEA62F6390
BC183FDA56CB2264C6E68C1271FC8201ABE068BAE528F1FEB29551BD89557FB4
E93ABC3BFD992B4E33E2413B40ED1694EF30BC56937475729140022D651196BB
DE507C5A3AFFC72CCFA459695257B80AD9F009CAE2AB48E6DC94003C96C3C084
F337D1C6D7903A16C05ABEF9B26ECBE9850679C6432910D17628FE5E0B5AEA47
19416C1A033982EBEA90A8DC713E8D3640E5C49023DEBF9510FCABB4488B685B
409A71857C0D132FADD456B5527E6A7D1D4D704A37D7210FCA39310DC9A361F1
507C3A19688B13072B68051F4DD428AC33494382F3074C4B4777F1C77ABF8356
F948109B636C03E483A80D47A4826930854328C4F204946097D6971616F961E9
C9893FB3A327429914C49507E9B2B1E296511B7AE4A29BE18BD500A8618765F6
AE4E1B7F464D6EEE29D1C95ACC05C55B6413AD615EA3F4B083070829D28A7E2F
2BFB090D6AAC60237B15635878BB1D08740818CE822A819B26D8C6D64C5179A1
F26394E04FA7C76FA67A739DDED783A0838DB6526E8B0F436CFEDAEEC0A70B2B
6B8185A53B96E199F7C78ECA9E22092502FED05106F6C77FB558D0AAF789A880
5F8D76F15B408436836F18B8C97D9FA6F817BCC780D626D45748E4706358075F
2E4A71E3C9B220B5E6B8FEDF0C4A956DF880533805B6584D650E6DD3C29D5D48
DC25E7655ABB0DF560192460E15A24E346EBA38FA28BD1898015D6B1E5C5F2A4
948ABE9F972A8B9FC2FEB59CDED7502E91FD725FB14853F2FF4AE3376D3D64D6
510F745BACC2338B943718ACFFAF4410331B1C35BAD67708C11F159E368FB62F
312B70A2DAE2CAB0755BC232FF70C182723B4C029C48A86C82B81D81D021A2F8
D90C46A814BE6CB518B59E217CE5F72FF6A8AB1EB9055752E47AB491ABA63FB7
7C9BCD14563A3EEA4286599176FA4A01325BA2E2DEC971A1C610911617561890
369543ABA641F1BB55E3D8320420F84DC9A92313C2DC924DA4AD92096160F3B8
F2684A2B97DAEBE12E9FD441015C20F8A2C7CB3897A0AD0CFE9A4DC6C58341B6
BA6B0C13DCBDA998E515B71495BC7419E45EC848D38C513F51A101AE6C9E8318
8D1E699181BBFEC620EA347214C80F6A8F8CFE1C66B3D3442EBEA550D41586A9
4C06850A0654E87AA569458C45E48DAFAA5694FCA0EF07702B77EA8B33D637DC
AA45A1C8EE4943DC71A99594087A0AF3051EEEE6A7ABD86471DFCE34761BDF08
1F4D7682B171399D7BE340C7F804400B355B7EB6C4C2F669ED0788C65B1E7744
4A47088EE18C410ED9FB49C0B5A4984E5D647BD429ABF0F18DA4AABE9E1A5F98
225AE09B67F975C42E572C3DC31C24AD166CB50CDFD4D3106079A36D18771FD0
2C7C4063A664E935D36524CA174E99FDD20199A6BE1B66A836E6020C8EBFBF39
E02C41F57EFCB8D869370DCA747CC217F9F56E46E64F881ED3DE8F547DDFAC06
AE408A9A28F6C25663484FF61BA993CD7AF7809BFA083EF443EEFE9F33E25E55
3C452C28B918B0DC5CAA1FDAE2084913296F40CB947372ECB27BC27CDC3C7D53
65CEFCFA6B0B8197DEFEEF9D5A420CD682143D312E1A631F6C028D065B8B0570
F2748A38AB25F852C6F41A040E216DF93857B20F68545C4A69B44864CD60AC87
9F572DB804C4E79164183D306AE7369DE4871932EA5AB43AD5580EAE6F3FD014
5DD758276C2B7EBCD0F0F2B3AAD35F95636ECBDE1F41966C6DB96035CD52B8F7
89FA966924C075B734BA4D1015233A6D79FF164824C75CB605EB4B1A15DF82CB
5F80CAED733812FAFAC971AA607A9CF032A8B829A2EC4D219FD964D4FB01E622
0B001753615B62AEF4154AA985454E2578A3A6F7307357F153D860191F771F86
276E67F0A2260FBE6350D0FD40212CDDC05431C183B68045723EDF58B357DC34
9736A2012C82EB20AFF7B171B8CDD1896E3E262B67A927614E835F51E63E09DB
93FA942EF08B0FA02140AB3E76B9EA470066F368AC30020B1E36510ED4C08D8B
C4FB8CF818CEEBD9E34C683CB22A4A4E517F6503AD5891807FEA14D6BEAD2A9B
22FB6BEF2419CF3219DFBAA276C5247993397F57E0509776BAA98682D940369E
1D74F535D8F0F5EE31567AEC3B435F9429500FDE501A6BFC2B6C277DA72202B8
44E94471D7B013476335D13FFC5E3EA77B92EF2249B814E45E92C768C402C962
93B1020FA985DDB2E479949562C02D9C5F08D66485DA3089D6F69379EF71E58F
E0907A8737B566F6B661885A88D88ADBCFBF2490A0D62EAEFF156B5828234241
2C2654197F24C1A63D06208281FEEDE827FA730AFCF7D7AD660B63578B3BDD77
FCA1F040AFAEC0F233CBF9A86CEC90A5A709059DBD54651EF8D1752B10CBD559
D5AA9876BB2A13CF73ED7DBF0814C7DDCEC1B3C150DE28C2A48AEC3F2E8C6CEF
5324368469291881F2FAFDC224A00F4F2D3BD77C5AC2AD916D34EF79D1C6DB84
F0F04D7D461ECBABF97E2C3BF076B385414429C43AD6E3025CBD099C17623723
5DCF9D0CDE1D91BA212DF83F18F9D95A5174F5856DB02D336DEFA83E93DA1A17
4ECD0112ECDCBEC86456F4E10714A065BB301FE487671763A89B4E985905AA8F
76AFA0DA33C0AC62AC54735AC334CAF988CB321570A99412D0A69C377DDE8850
B36BFDE0D3BF7A096CC1FA00C510884D5E3C60EE1AB3AB802B68C5A1646A92A9
48F6F4D25AD81AC221A5B141769E12657A1454811BC4F07D472065512BBAB355
5B265576EF3D7BB9142314C9139965CB3278F5B04342C31193F41312B267B4BB
D96830A117E1D7438EE2F583C4A5F9AAFE4CD039BB409BEEA853134A80E6545F
CCB487FDEBB3F1C6C05B4E7C010291DDD57653DE0EDC53DE2EBB82AD16E86C74
2DC9DF53FFD4BAB643823B86B43A188CFEA5FDEE7BEA9D73FB46342B1E5B65FA
EEE38858C26485FC184E9FB4C87B0A5BC4CB56F6FB109AFAF835F63ABA500988
E44D4DB3EA483C4C81188DAB869AA3B809140DF390A3E41DC064A3C4B0448C48
52F2D5209525947CFBD1D90A82EEFC504A5FF30149E31B81233E5473E7FA6FB9
A7320E2C7D0B0D2DC0B0A629F10E88312F693375972144CC946DE8CD4ACDC0E0
FC2710406B45F007493B930E8999EF056F964BA51EF2A9AC9EFA16753001850B
D31A8B4A860E8905F26FB3BD65221227AE1BC097F8AA27964E3947C2E40B3E0A
CE5CF71C5BCB844581496F02ABF538912FDE178403A99FB2F7CF29946AA34D10
C0D2161C45AB766F00CC145096B54FF6E5BDA1A741023CFBEFAF9C2C4EB04A12
6C2BA2487ED8E6E56B49BE01B43A032F0A9D572910AE98FA9E1A765785DB9575
AEE82EB17F9C66FD03384DEAEB5769D7E4EC36A3114C7928B8B7946ED0791FA4
8E0A6A70129C0CC25CCB4A2E5473AD7D630B86BFB0E4A139547489D17D3FD0DB
D46B705C9E57DFC14760B602535D1A845501DCD89054ABCDF5A64BCF82C547CE
1DA4EEEB128E9E92D448473BE822E395763A5E35CA9CD00616B52F78245AB388
22032CC946CC83B647E54B05D3357D4A893A5AEDC240BE42AFC36C9721FF3C78
CDB36CFA524EAA49A624819A95488DD5A3CC69C76B1CB5E278059ED070EB99F2
77CBAEEA8FF2024BD70454E95EFAEA5FF6706DE79084042531BF4843719A6D33
B0AD544D9C57675573A04C63C81A889E9E2EA7C796D7FFB0FE9DF0A9C0032E11
D8E8DF94FEE7440A64DAC8E53BE444E65664EC52070597073759A48CC4F213E9
3DB6744127FA667ED142E5F9427A43398C0478B42E778F947D6F52481694A663
60C26935AA8F1F8D9C3FC0CAFF1AE7A307C2A9C76DDFF027863F5EEC17A1974E
FC835AC95B1DE4B1918542A9F09EC52455A35F2D1EDFFA0A7B7FC7036812216B
D5B31B1E20178C57EE7176B8F9194B302D289A49754B9778F949763B2D68BDEA
255789E9AFF54087A0A87B8EE2DFB49CAD1A5E9DD530C14E03FE5BDBF8AA429D
32392D317A087D13527EB8E0BE0D8C70324795007691AAB4112C993E88A7B7F3
76744F93E19577174833DB89C4892DD310965D3F3A00A3687778934FB42DCBD4
6CBB1F7436193EAAD4CA63E8497ECBCFD6F391312DCA73C63CB78531889D8D13
F6B24282C90BDBE389CED19053B5C28C44EE23999C93D6CBC3E324A8EAAEC488
9CA582BD7A09B9063FB7DB71C5E8BCAC8F773034EA57481F43E4FC476647E915
F5E76C8C14C41330942FD866CF9D1439C4F6BBAB247327BF9C8C32CB50200B01
7B730DD2D6ED2B86B32A496AA47764358D7D6BFD1AA5CF9717130F86A3D4B669
BC65C9545DAEE6F8EF279F679A26FC98D6539494804E8D6A4D18C9770F7AA5F0
9D532FF5C6D1379227E263311346F61D290E01C2CAD9EEF9A4DC60FB182399B2
E0F13C4D3F2E73491C6915AE90F7B49BE82175AE419A2BFC5D7B41960A13E886
A3459E58C36D52E687626550E9AC0D78CF9DD52DB0D2C9E86FD716E43E86C129
B2E6EB8B2C8FE43CD00F55ED01D5BB76C8C72E140B0B836371FF83844FDD629A
0FE81EC5E02ABC6F0AAE5F86D4FB80D7D65C125A4D3D3DCD0F76CCFFABD9AB51
04A0881247865F4F1E64D8E2AEE754C1C045AD5AC2F89B38D7C875E95DF937A0
7A7F447B947AB2AC6F3AA6FC470AB52A32C06826464A63F7E8A7A8D02952DAD2
A612217FD8008B916E0C5873A0738EBDF04155DCBA608737DE5042A594AF6889
EB98763BAD3B4AFE5BE076D56E48647905DC47D2048997CDEE53D385E9EA55F3
7E5483790A523DF8B8C4D530ABE8C8C33D8120EE9245779AD6DB3421F78DF2CC
DDA1DA5931F895D3B8A46EFC1D1F684B53A76824E0BB5EC027B625599C061C2F
8EDFDA9F95542D5E464A50EB910F0F68AE5AAB53E39DE6AF78759170BCF642BC
C245856D4CAE26AAC25D9B9F7853589C5427FC5AF2EFF5620309096E21A74697
3C2FDF7CB4E7C800058488C29EE432D172AF86488817BF82D908BF63F64AC402
9B061E7525EEF4860182E848E6112C25D4A30616FD824A2C1941F1EE7BAB4085
4F94CF20233C100307218B1558184CF236FA2093E2E087BD3B657417B1B0BB31
66E27C44A22F44FFD0BD03F279D4C279D4D20917F07849156596D297D1599AF9
8436A0B7B8F42C1E276657BC10237BD4CDCBC9484772E1DB73567FEED3A092EC
BA7C89826CCBE140330A8324998B80FC8AFBFBDB7BA6E90FD9B600E8B0F68ECD
EF39E431384FA1269022BB0C5D4FEBA843AAC818578EB4A5B62CF4A942B84CF3
2A34F84B4BB4DC63A29B0887B77FFA336F406CC91C048711EF040ED868BB7DC0
EA3FDE819120E8E0C42B085B651272753E04311775DE97A802E45496D7CA41D1
19016C5812D6AA3AEA7CBFAA34A1162819A48CD3F4A06EFD453E7574D949072C
7DAA9CA7DD5C6CB080662C6F9417D29C763182C883B8C3C15E7A7FBB1855488E
B557CA68B81A3628270A3D93F44D7FCD0058380771E4D415EE314143DCE6B389
149BA88CC4EC4A8D4C16FFFEEB22E19FE2512E9B8C79F6B4BE4F03735DA41A94
409CA6FA9B2DA220432DCCC3FFE6CC804CEEC9FEFF583F3874144821781DDE65
520F564E8FF99757520B845147DF0967A2E0D894C2668BB22745BE4E223BF905
F72EAF4E043A642D66A703F49D25C98CF9E0F884EB1D93F7C2B324AA1CB6A27B
445F83F39366C83113CD8629E5E4797F31CF6C2D709DDC52E527C49A2BEBFBAB
666A8C88D3FDD179F26B3D26D7F6678EB8AAF1DA240DD3891B9AC573D700BD10
D96C3925BEC767398F60296513355287B884AEC0FB30ACFF6B035E156903B461
EE317C630B86BFB0E4A139547489D17D3FD36C0BDA819BA80BDE93087ED3F805
09D10A4142FED225CD51518B1582311FF2EE1316304881199F972689806EBBBD
1341553FD88454B9C31FE2F900C2CCFF1FC5A9A0E5E0C44D4DAD087639203084
CEA25DED422E0EDADB0A69B38E393AD2EECBB62160EDBB0474CDD52BC8191D69
FD489E5A3830CDCF582659449C3B2F07027ED594D5FF033724D76DAFC9F485D6
43F072963A85D4F8227773A4DEF096899FC367C91F65268DE077F06FF36AE0B4
01D89637AEACC51EF77879A0795DBB4CEC361178D68FE73154A62141A81422AA
8D21F15E4F04996803D956EB21B67531C9C750BE37AE380E3D2BE056D20AEC2C
BF69BFB97B90B56765ACD02A788EDB101CFD1512D1E8AD26188AD664FCF5A444
2342FFBBE52BA91478D7E6F4C52474900823BF588B3AC56F758F1264209486B3
CFFA939A40584603C39E8716F2467336487D54CF0E03511BBCE3CEB9443F06D7
532DA36B397807F32FB7D05438BCC522EDB685275504172B73E3FA13A90E6DE7
ED2240162552A519D6732F31F21E6D1D548CA102491761824187198C18CA3916
1E36F0735DBB56FE1FC9CA36D18D610387406EA4A91E28921CBC70A8B18414A1
0D24B105850CC1A175AB640A05921DB1E246059AB1B9200E56880907B95C3B5A
5C24670D5455CD145F6E7FD7F167A26E948276D785EC5E73A7DAEF59F579B581
7BE29EE499F65E1FBDF08F586559540106FFB7EF1010AB5E002FE0DCB3A72541
37B5F3EB2A24A96E4DD5EFFF05EAB31373A11A24A734A66C7C7C4999A09D5AD4
28839BBCB9A8AA095A438D4BA37A9E5EDD235ABBD982EFFB7FC9969D616A2AE8
C69D2C5A04B467685CD40050000302382C61D87C901C9AE6411CAE31F437881D
084930052FCEEC02E9A22E86A6907942EDADEFC166DFD533388227350E33E05F
DDC56731E5396C42826342FD195C86B03A5465612881CF976171BF1CCF0D46F8
6DEB29877C718D28AA6D2A7266B675F1192BD43895723F609835D9DDE69F7069
65E71016AFE4CD49A71C70404136575C56E24E948DC18136C7E7711B193B7A40
5B99CA16D74355B2A737E1E6A5A3EF0D932B5562AAADEA47A84706696878E089
3F2792251D60C307BDB22C77464C7DBE670DE5545EAD4181FF988A654DF848F0
AF78C87A6C4BE242BDCDF8259CA101C52F7A0D2C52BB162B13A1AA83EE25EC6A
A6E4BDF30E85B8AAA41771838AE4803200BEDFFB821193F194519129638E2FBA
EB5ACFD9AD1AE1C89D12241F2AFA3A9044DAD4334BAD986CC6A85AFC9CB5BCA8
D1892E952ACE33A4924F79EAB379AAA6563E105CAE13BA614FABFFAD4A252062
4C54D922F59B1106352A8D7F43F3D5990938649166565D6229624A03B4E31224
50D625FE73C7C6D9241505A22078A72A2F43816BDAE9EF687FD5D3B0A5A3FAB3
255F89CAF1DABBA08A2036CBB1D714DF8ED2259395F9FCF7BD8CA76E491C7FF2
84C9914245F7BEB06A424C4108964CCE33BB76902C3E3196A1B01D891A10396D
015EECB388EAA1FD45E073C08A376F8397E5CE7C2018A6A43203AE3201FDDFE3
626D69771EA7238BBC09F3067A7B5F6C00160FC392915F3B984023BA4E204FFE
948579C9829E4B23EBEB76456B69DDC859E2CA7CAD9AFC940C68CD10DCA26859
8300E899519F544FF258B084EB2A7B29AC753ED719B369C5544D3EBF05C343C1
9C499E5A62B12C5D44A4A87F68BB02B1D90BC4DBF7669E6F25277EF472938F52
2CCEA4ECA2B2C0C3CBA20A2A0E2867E7305A0836C5C69A4C171B08BC9028FB63
65221E676C8465DA3DA767EEC302D5EAA9A91BC8F616A8DB6024137E0BCE9FB5
44638888E512ED42BBB9D848A0E4D1F55CD6D908D37DC63A400DF83BC5B26FF7
7B53795F75CE0F6AC17757C5794778DA94221F86D0AC744EDA3374CB56665BC2
9946668808C10B7A087496601B096849FC64F654300FD11A4BCAB97DA3AFFCD7
BDB349F0E346EE3163EC34C3F7364B2E1B9C29855919DD7B273CDDE46536EAEB
A93B71D79F2C3381DEEEC6913AE1C75765E27708A923BC4439192C8F1040AE13
8A82F67CE344E7BBB5C262114518CBA39D1A7B83EC7F71765318AE3209864263
EC9EC6DBF02AF8ECC424EFCFA0DB2EDB45E13804E9684970C8B7C079684D4AE4
0855E052CE11CDBA4DC9F1318E794ED89C47409E478B58C03661C45F16A0507B
A401006CCFEBD0E262E6F0C8504B9086609FFC1EEC83BB567580E44BEAC062F8
FE26A02632ECDFD0BF913BB314B775E6EFA0CBDF19C5B1D5CCDA05012FE4B035
80C36A691DC2BA91ABBDD22B7AD9FF1B92301138EEDA8862526DD5D6425E39AC
1E067BB075FCB2C0FA01B983205706DE0E521E1C27ACE35F91C0E1BC5DE74F38
2E55C530282353C3C6ED09FA7F552934737BC4E43784090D9BD75A0FEA6FEE94
FCC2384EEC35FE44A402E06902887B4732C6880E7587020F108C8E0D4A3F0C3C
E8A596C083AF6B175818C1245DAD144F2E458549AC2C0A8964FC6F72B423E662
106CAECCB3A1376C22465F9A65E4C9E9432B3DB333A7EC7677A67D7D718C6AC0
03084D6BB74CAAE026042862429506F565D12B536C53C1E1F0C8656742401BF3
764FBA0E66BEFD41F70B377620FA28E28FE313E448FB954363ECAC0B240B1969
CEA6609C9C9B8C394A4E7E37890ADBE9650012480360955F1A89A13F291DBFF6
312093F1A693C457CB98BD6EB94B276EC000852A744AADC8BA2C0BDB767F4ED1
C3AE796FD9B24ADBFF7B81F7D60DEDF31E90D58B886EF6E773BDED23DB0D3ABB
1552D8BAF3F96D3986AB3B9CC0976A7C3F8ED61F45057A305793733A64D2D13D
77773600FBB67F546C1D4B98BE2815F6DABBD28430DB5A7848563BC68B8BF95F
40966FC84869E259C4A30DFDD3C03FCE12B7620D9F4DBA7BF095B2FC7E795571
6AC9C1B17CA48A5B488FD3F521FAD448F7C55E6DD283F1D286A4701A23775E31
6D9D27F68F2914E571E293F3C2E66BCB38289197BA0595847A3D68D9C8F38D87
FC29214611C32D2AE1AE3195B99D7D856EF3B2F56CA5E42BB2215DCDE0CB89A9
3A813AB558B99F8EF56ED5B37C591EEF9C2D63AB04558C40C14681BAD30D6516
9D1D02B7DBE1B514EAD5C8185DB2AF798810E2D7051C4AA45D2F0BFC9BCBF13C
510956DD3C8503B34C9F165E4550B85DEF5D8696B4AA36E5E6E4B61A562F1481
E33617824C1C2F4D025709D28EECB76E417615A4E49C1EBABE4CF1D17E12E6C6
6A69F9D407063443EF9D7B2909DB0590413C9DDAE67CE87D7951A233803E87B2
91F94D0DF206A192DA3CA61BAB9C801481CDF494C2B2530976FE020781065DB3
350D240836B73644014C5410E81DE9D9628412B1724431E969F0052C9016918D
92C0F4A2ED31221E17B9169B9CFE8D25F3D84D7928EB4E2FC01560D751E4BC3C
F6D06C968CBCDB24C77A87DAB05B34FB5BD5C904B9A441625B445622CD520C69
B21715F5B8AEEAFB7F8644983D6AA6061835C6618E1F8E80EB28FC471CADD358
92E7E070442A67F220C8A485CD0B57789B0E963B2BBF75219ED782C88901DD8A
FEC69861BFF6E74C23EA07681C391F7CE5A071F026D77A9782DBB30F18098C4B
E329121F4F6C1759E48E36BBC45FB55B56AC0355C8BE7E8CF0C029F1F1BCACDA
AFB55D926CCE1077C9D30FC064CC6CB30C552FF987F29E56717F73674677043C
D7A203D903D4E6AF5B38C362FDDF541E5A2B076F4D900B7264D9CA78B4F29F97
0967AC551A3C5BC2DF46E64A4B4AC7C6C2C0E2F133DD294C2FAA9D5468582DCA
44D3498593E505B0F7643FC3CFED4F69BC02D52410FE3DD02AF8AE1AF1AE7B36
24DF3026FF8C6CCA0A3916CB5422762DAF07B534B75E7AEF02FC4EB7630DBC03
4AFD58DE55DC9892FBF5A18E58B9F7007224B90689B5A2A9B53230B0D079751C
1499FB2855B2624CCDBB9FFF2B0CCAEFF0EA766F15C3E11CA368F1D6A566C548
B0EA81CE67BFFA2F19E41E22C2614EFC317B39D8D464B6D59D491A75894FFA03
88348A17C76AB0CBDFE5D1F5A39810ACA8C41E715D99E1525018C8CE4E092033
C7B24A6AA9B5158FFF45142C28553F31DEA0E7B467FB6963B9A9EE74E5308AB2
84EA563D7B55A3C4A84DC4C15F6CAF9BEB82145A0224A50FD4C5B19AD7A581B7
F0F2A7A0FE38D3A0188E2B0960C970E765FC178582A7A78D7EBFC8DF520FE29F
BBF7503E4F55B32C48661B93CA8F5D672102DAD3B96831B7DFC926AD11B1833D
17805B28F070BB63950EC9D47008BC8746D99CB33BACA7EF1C4F8FF8BB184407
E5C5F772BA8972725A7335712B4544B4C291C2E68FA939FA3C50CF5FA0C948B5
CBF292CDD6CBE2D7C555F849CB46EE4E8F5FB66A509F55C87865C661F589080F
AE0448D2C90C16785E0F24B3E70E8959857A5B2D52B817FB061CA0D9FC5A4640
990DA80BEBFED5865D649F954FCC87ADF3FC71121DFC892A6501C887D9930BDE
A39D2A1C3562C848FC3DD66FFFF9032676BEAC7EC956D8249E2C0118515480E3
F72187D83B605BB3B0BAFAD125CFCE43E7F7718BC35C7F5A2A4695140DEF7D40
88D3F2082D570A1DC7EA0A0DB4364702511AAE614F190DC57F6E778DEBE09A77
458971940605942165A6E8E0BF1E51A58E505C7CA0E8673C20A29B95367B24BB
816A3B6DA4AFFAEECAE648B69A407356222628BD156C286C0FA38C2194EFB85B
BD1B0EA10AD850BA51704D965AD7A4ACD4AC2A7C63CA9BAE1A9B31BE82236C7C
3E65D88A06A8FB02CC451ABA497FCF85FDAB0BAEB8A636FE4BFCBA1F74E59045
747E0DC82681692C9ADBB1289515F5618E255701E36917429FA80959392DB9CD
0398C35E5363E6A30DB8597B7493CCC06EC6B59F4712F7DCD7C983AB5B84AFB1
ED342AF400984CF20E99E0DA6D8042B7B5E3462B8C46CCC25D2502A5B81A3266
22C31D8B7BCB9D11817CA511C049713F1B33B860C715CB71601B929F863F9AA3
BD84F90083F551597F0B1E039D75B1EB9C13A19D55BC8A10A1898135EC2602A4
3710B3CD5BEE983987246EB760ABE7B9F002E0E963A85D37889376D26BE2AF9A
AC3A55BAFE149D7E22C10FB99F32B8EF8DA28CD46FF8A18BB0BE7BC493C29413
C3904DCC78BAB6906E6CA20BDCF4FD673B6BC9E3805AD723E66ABAC687845150
CCD8BD778BF64F17C926F274F8846625D4B999890A486D2A1DB12CFFDC622E31
A0B0D64394266A07C62E44B6249125EA311F492954C529A18E59169C9858F625
993A92B6632692740A2EC458E20DFF453FE2BF2E1C37EE309A9FA01AF880B3F9
33376F249BCAAC5D6ADB536D49069FDD216819E3C86A6D4BC140001D85B56048
466F94C69E4728E8FE7C25EA4711AB32F15930EF89656E64E8E61B416F171494
88C3BD38D2A17BC2C6F10580BCAC90536A2DDF4348C7ABB0EF573AFFAFCC2BBB
6E3D0FC052357EE0E668886402A0A87FC99CD16A31A59798023FE7A0A34BE8A8
52676FACDB0D8ED26DC201EB476BAD923D4B098E970851AE078A351B4CDE8CFD
794FF0AABEE2EAB70BDB3A8E51CA55B73D746E3C2575BE392EF94E3EA3004D6D
37C029109F8EB8A3E9D4B610D6EC4895627F0054C4D79175F8BD2B47EC2E02F3
C72F91FE562C57E0EFB46BD6D3D605B7966A19934FC75AC5480EB49A520ADE82
26E7D8CBBCF374D6D56D472602C227A9D4EBD5E32C525FA84325465E105C11FD
D07D23E2F105BBCE9F4842912858B901456855C9C93474AFDFF570CFFBFB9EF2
E73CD8A742E6FFA12DAA8B828EA0B5C87DEDF27CFD603C275A1F76EA85420F34
3080BE57AF5E1A194F88BB05F956B6DB0EE696FA118DA27A9F321B44C350EF24
54B9673FB763DACE83E44F3CAC5974F8E7444CEE8D8229B93E8A597F177401E5
B657D0F23D6E1B51551C93E9882F3847AECB8733097E65D13F6BB15B45EE9FA7
5E2E1733E5D59642181250655C45B8A0E597F729DA02D0CC1CE868C2229D1F77
45CB403DA84B7C1CB190F60B4F3A5889CA429749C8113E8C4451865DAA18284B
979CEC35A116FE258854BF1E7E171BE67C38AAC6952E4726BE6369BB375C1A43
6ADD4FBC5B5194C17332C814CA49A3065A79629D390EF7866EC8739B89585CFB
130158EFB1586B501DCDC9933F203BF8846B57ADCB5A230B890A316A03181FC3
9871EC8653EFB4B9C8B9A0EBDC8749DFD2E340EF4BCABA71B9D519C1DB00CB48
ACD8D7FB99F12852FB997A60E05D2F158A774184F2471881D19E1C29E1A347A0
46A5C53D8CEF3E568B092638E44CE1AD5AB361137C2A878E540A07D9E50E9DE7
F7457192E2F0B7C3D09E55BD9605795E6ECFE69F6BE291A76563C3F47A516387
2D62EFD8A662A92B968DEE000405AAF9B80ECC6BEC36A07C5006ED4CC2966D1E
6DF77D4A4B7B5C60CD5984EB3455EAAE5A65B22E682CD0BF3F8B3DCE45DB6198
59259F19F9A26EA1E41461E861B914BFD2C9E1DA366BBAC341B1721D931A2AA9
EDD644E1F3D065E8BA71AA7A9C4F1F0EA6473D0E76DFED27FA148D0C19C7AB91
20987649FA1754F54A0F7D9BFD5B5F9C18B7D725751821C8FEE0E6B47F11A672
505296CABC741A68097B60E1B128CFB889E44CCC2713D86BF55ACA0006409C6C
D100DD7C66CE6F1B457BA89C4DBFFA7C1270E4C6BECBDF4634A2486C0C4E1D85
20DA8477454B3C680F90A7486D974A71CD624056E130B30845DE7F9B0D7A5E03
B4F0C741F29E3F42483CBE4855BAA0ABCC95DAAFABCB9D04D794FCC21481D93E
7E4BF059F11DB6D2BEDFFE88F8BCC7AD4E66F57125ABDD35FF17DCD7B8E9C468
5E4D9172E112B026C5A0CDA8F4C7FEE84C427176D702F305661CACB672261524
625EDC0414187852E1B58D88BBC246E1FDC16AD0B3F60BA1D126B3B7F0508B26
BD4B075B8A212CC7282AC16CD4E11826EC6D1BF0D3D7F69020B67DF3D797E853
2F4236443C7BD5364B1D5B995969A0201D628A92169B8B91A83E9FCCEEC6FEB8
C912510535A83D944E41D2BF4AF6B55B69A02DBC99B3C2484B071CA1862057AC
415C4389DC543A0BC2E94489E6D6A894E178E2818F7F76EC845171BAD91EF847
322F4B6CBCF01FE8DAC9077C5F5DA7088995397CD5A25F3767DDE167F368E66F
83EA24A58E80466A7538C67B91BE2D2DB38A40431007B9D33D6AD3777D15E083
08220151CE88070D539F5A13E3370708E6CDD62EB5BC80C4597AABAC62DB68D4
A002851FCE51F1F740FB715E15A5B244B294B5D9B2843FEC4838DFE2BAF6E347
45916CF64EFF4AFBB11739CC049C5A0DF42EB1166D91B00C285773343D986458
BCA02A30BD76B5E4C68B7017762C6C36383668DB3FB5638BA429F0449428493C
659C9A92A95D3020EC756F18E1EE86B0449805D5F3C375EDC58C72FE198EEB6E
803766325FAA1A2AC063F61C9FD18749200505DCCB313584AB3A708D2BE2CA04
0DB1B387FDC96D5431816E2F77FEDF4EFDC50DE921F8AC4855E1E06CAFC0480B
3867B61593E9D6AD11191D5E07401C36C3D584F2C42D6EBA722B7693BE034322
C052851549D972AE0546947ADF148D4D8FA65D54D64729080712C6A913F84F8E
2A5CDCA376CBB71A2D43FDE56BCE6DA677FC50638BB1994192B265D5A302F240
6254E8263B96774699950556DFBBF4AEC7882B7A0C7218B758B440A718174809
E3C057C10FDA8B73C4896A84B57EDFA00EDA06D6961CC682212B95191C6917E6
488BF7469089612BC578D3C40367BFEACE2BD3CB1EC9398900960AA875C4A020
C1F9CBE45876DDBC0DDDECA8A527E83A17CEEFBED225048037E3C1B6D3DA1BD5
154861F7FF37D89A47251F5B90A8BD1EC74E1260B501406238ECDB963E3E020F
3236A910E28B6780E13016347362FBBE66274A01D20807FC273BF5C6948E2207
4AF3396461685D08D1D6FAFDC9F1B21095A28DE532E794EF161D53506F33B0E0
C86BEE448A02ED1ADFC0859512C893BE2C8473128444B7229834B7611B3E225F
DA60794518DA443D86627866A781B785C4E0CB2E7A571D93862682E10483AF93
D9CB22452D028F4FCCB16CD2AA662E20F4C6AFC1072A1A22806FF5981001BF08
58C1C93F5F80478B53FA279A2849F1B27A651471769DD1804359FAF4F138B5F2
8995B7EF9F615EDCC9947F32A4037E9DDA5A95C556F72F4036E9CBCA5A92C0AC
D7D0A9575761B5FD4B315E4118D72B226157D704958946A2577B594C63EDBA2F
9770270993CF9706F7674FC839A896ACFF1619ACB6B6796F09EB3A7F9275A5FF
B5ACEF12302357E7007869BAC57B97156C9B653BB5283FFC13B77777E8799F33
FC9278A73EA2F589A01A3A95D848521EA555A3A3E80398BCCDCB31D08249027D
050C909E925629FEECD28CEC3ED28FE9AE5B795DCE254C454882C503D49FCD50
08E8448ADB78D43BCCAEFE775002A6216C7E7FBE7E1C068357E9FCFAADD58588
82767F0EED1B7F516E66E830DB5BF97339DE634BCA38D1B9CA046038DB8ABB1E
CE934E9940366A0DB25F6E9A17B88A59FBBA2855AA62E260D893C887BE20DB2E
10B4D2510894E39EC9D5C2056F48E6010AF5C14C143E2320B1F0298F4DDA3998
A97E5862A9B1F1A1E4230C4A0A0099D7F18E6CC93BE0E687CB44B3582AF9C2D2
69BB47AC7FF3482845D902B1685A9561E9CCA75EE0BF719061BB46D4AEB903E0
93F2182F5521CF63FC68DAE2E98D7DDC8EFA3F3FF9D0B3E960E1FDFA988DC6EC
1AD70D9CE80FB773C52D9F9CC4136302B073719ADA7E874E35306D53CB87CD3D
E08AA4F174F5B552B088036FEB6243D1944C3799AF4259817EFC1E7C7240C3FE
B61D52F5F0DF3BEEA62D063C94AAF47044979686C12ECEA34352ABC4AF461D43
11FF54A7BE1BC4B68373229C952900990A1F03633FD3F9453F98FF1A4C687915
C964CD3960CFCE04E06DCB2A628481282E0F6CF621B41C6DE0AD92E4D5CC98EA
14CB6939F13BE6A94F273E0AA2AB60EB84893B8FEB3DA6E677008430FD153C80
8D550E0D00ED43E67633AC39BCA169B6BE3080BA17FA3D0567ACC81C1F89A101
6CD7C00A7D1A78D50E363B81CF19262AF6A41943CABDD035FDFED3075C326873
FA855BB6B662D72586F2EE505C0B4A3C2EFE1FE9298A802378F9854755B29154
A47B6B18BF04439C64448022D5EB7A5527A212C90AF62C813A55A7C3A855481B
F776A87F5EB2D25B52262FDE6AAE4A8B7760829319C95757E2535B62E7D46769
AE7A9A282337B5562C6F7E91445A56FB5838C01C595EE7FE0A326975EDA25F4A
8D50BBA2179A8D9F5BA54449CA24011B3E5090DCD04103D1A6086DFCD18E4EB4
43921A2AF79A91B8323310732369D1C4D48364F8273880ED40DACA3BC49CA8E4
EB6F7C7F9187B69F15DDE7B3A9E1899E31E5EDCDDC0B32CBF8276BA3438BA3EE
2016856057A7E195B8B580B1803BD635C05ADF3F99F27D9C937E3572CA2033CE
401D65D7B1BFAB94328CF3E83FA537E3BF94DB35DC72C38B4024C04AAD3E7D1B
6A9D5A0C7A3A0D977C5D57FCD85957A0D594AFF8C5983204E35FF643E7BFE830
2FF2BD47F248425FB9EF266573BAD759588B3A47FFFB9D60DC983D0B6208CEEF
6735CD0181C4C75D7F9CA6811E5EF31ECD686A274C89E24C9D77AB27C75A6D60
66D0E23D2D1460913E0D2A460918BB2F373389276174E792C362F03ED1D0B929
D0D7A5F74356B6F0F93491F6DDD81DFC79896CC8B8F6622793C79F90D618E75E
DA40EB8FF9E08D97BE29E9C332C74A8D49844BA58D991CC9B3B1267AA8087514
B546B2C0AB206549DBF565560DBF90604F676753484E25E6441550C278B547A4
D83149EBF2B09F035FC6B18D103B0988F3E22DF4FBA47892FE18726D87607CD5
98BCC5FD627D7B6159917E2B91F0FDDD8F2063EAF15D3796443D57214930544E
0D5283C7C7C10C9D80FEA829258652E30577E1755181847AAE058FA887D70F09
172730B6FAFB4DCFC2427795E8E9B8B1F735002940A318A5A2799B7B43867CD9
CEE24CD6532E87B80601C005BCB2C94093D449C83C1576B49CE7F512A91AB369
B615D706D85DAB27885183DCF5BF4810292783D4B6B449E0181D69369D0ED646
51C3177FA2DD1773781961236903C73070642C7047AD32314BD3E91B7943786F
20C0C3C72A429BDC8A8965A1D8FAB89293B2E9CA6883724289DA4E41C883119F
F0E94FE09C433044CDE2689ECBDF01ED106305D1E21C4E0E6313E016DE207833
4906C1EFFC190712A99048DCC32990EF70D672F0EF5AA6A18CC726786CF65173
F77DFD57D62B52EEAC0947BFA033F8F4DA39D7A73C7B544D650C916BCC846FCE
DD445FAD9F901D26B74C078F18BB960E7A5157F5AC9A678220537F8A383C1141
F75F770CC48317ACD72DAD53A48FAAFB8B546F7C26AF23496D88825D77CD73F5
D76E7DE461D8EF9E157567538894F9FE3919CB75C2FDB7E810D7C7DD6EE2C5B3
549725090BFC15BC61EFD959E669C559052A1D6C5A8FC9F0B9B47D3138F766C1
934856E3686A6DB5A46287612F12ADBAB1D276DFA20B63613DACA60BF707C666
AE25059657CAA08CC9F7E971ECBCFF6620881723BB9D667ABD0148DDAF1A67EE
9AEE712EE7D048D564C8D315AEB1EC2805E1C56021824F358061AE4098710C7B
E793A424D9CBF883966D005B6FFF950A4911CF4FE9B3F72118A73CDDB01EA1C7
DED45F128280E2DFAE672DE94BF4743C8ACF765712D191D61BC95804D2014ADE
39CA8DAC192C2787656CD453294007F048BA5042BE5459B26B502C1D7057ED63
36562197C2C12BF63A091BDFF30CF05BE4B5F309D748F2A53ED0299C1C298DAD
B076C7768EB11C681D4497E178FDB324B183025F00B5953133A589C0DD6CAA64
E66BD66272E9569E6BACF8DFB0CEC46511F8831522D40754E1E1505BBA2D1762
B1EB83030FDA23E27CF8A50C1FF299364225EBDBBBCE8234B59A6A1CDF1557A7
0C45448B17C101F62C24FA3BC408C471AD74BB3F953956644E79D3210E34B853
353B32E93CFFBB1FCF91B2B32E7385F50CF4641D3A1AB86FD743A622DDA8BF97
6202FDD67275C2DF4457AC73B3EDC9D29D6ED4F1646CD219C1DFFF18D9C56F7C
45265A68D76F7427FAB702BB29CFF35076683AA718EE09AF09D6417112A5D3EE
9D7A0D757CBF5CAC4771CDDDD851139B2F24AC5C1155FA56D6417018D07F5C50
F0FCEB58755CBBC07BA247725470BD1C9ECFECD00EB33818B6A9696D4C6959FA
29D4BF218F3A1AACAD73E82B508A71B8300D623DE874E432CA685A08ECB175BE
A5DDED324AFF021C1AD4D106EEB85412A76E0E2284841A8684BA13A9443EF623
E7D5FFE9C54590D3C969B13C634E811A45DE2A9C7AA1B2105085D145175A79DA
BE52DCBBDE08DA3E91D7106741D2E133389BB0DED8F9F13D71CA46A1BD339906
E6333848C9632E26D48B9B1CFF5F6AA060CEA042816BA913B9EAA503A523692F
6043E7D20B08126101BFEA75B3678FA870C7A34102DC43A42B366483C87D5F45
5E267E39F45158FEBE4C97FD158A86473D40C5B35743E5DC9DF901777E2348D0
31D5556EAFE397ACC1B898DA81CBF6702057D971DC24C2F805F7A0245CDC2B28
DEBC35E0A305DBBD2E87DDE05F2B3BA4FBCBF4964CCA0BA2027EB23DE8F34ACE
35C73E85EA6FD386F879FA1B1F3F3E075B7A38C041C81488C790B244C88799A4
6780A0B33EFFF3F8410CA250EED4242B5BA8825AA806F322C4F1ABC8CE1843BB
CC7A54DB67CC9D03F2118A0B36300177F10D97307153E8975CFE2A95052CD04D
ABAC6A8F1673DC3FEDA12B9E0EAD4109CFC65AAF3206BE4DBCAAA29B2A905CB7
7862F53B8B701561BF6E2EB8422362C3F55E022E5EA546340243E3EBF611EB67
754A92D017D5EAED0B27561CCD5C67E18F5D39D0AE0CBDD9C928948EE6D41477
0D3C7A1D1828643E8ED21E1D23A4250A264F739AFBE36D6772E5E77B88943D08
A9DD8F34DAFC08D9B041E6633782C083E83AD740116515D93F50A4B25DC267FD
4FD85A94445D399DFBF4C4C26AD9BBDB5FBE49719EB45FC02DD63F80DF647C6A
BBC5923C7F62D79CEAEB076BF271B4E43B65AABFC0150CC333FF7D1B72C58835
7473FC3A46F0409A11D91E6578A8082A9925B856AF11DEDF31797AD1277312BB
C3799D4947A331CCC6DA18992CA8AA2783E843F966C2E03FE3F2FEB1B90B29D3
E3A1CD8A96F07191972D44CA969A3C93FB95D880A41CF2F9D6EBFECAB2F1BF8D
6EB6EEEA11347884B675E7B4EF44E3CBB18AB7784A38A53B51C843C7EDE15916
8E000077DDDB73DCD861431F97C255A3D98AD42A23283407962BE6A1F8F0AE6C
6DBFE5334AF90B9186BF1467DA72310645FFD23A88EF3CB54A0922CB205354C4
8D07DA18C8BB7B6723A3D82DE994DDD8295C846272F1FE19EC53331D24CD52AD
A3685236C90F8F8F457E60BC9EBFE668BD5E6F52F81A6C8B690C7F0A634E2D42
74DC71733F916D7684F3BAB22F1745D8620387C3457C4ABCB03C2791F3A8045D
C239D4F08488B326A91647D59D83757DA586B08EA633F9177051B666261366AC
491EB93BA3604F3C816B644D77648C799EADEB641E165132019F2983107A59B8
3B29BE85D1DF5608504E49D02667139019CFFB51BB55A87A5E5F71F27E9B4E46
1ED59DBDBCC87A394A0C43EDE3CAB7C14588D1F092F34533C9C6ED10D80F1E22
75A1642C7AA6688C4F785962F8AE10E5439CE2C968B9E0A399DDE7FB9F0655D9
34233CD5EAE31ADA442C7A595578445DF35E902FD0BB89B5E469FDBC4831EF07
5D3641731043CF58B697053B59020B7C6753F0E1A4656E90C77DC50966B9A282
8F7F4C43DCAB22E27BDC90B832C1F9581424C1B79068140E38055E358D495493
978227C412860BE8D809D760A7AB40F922F120AE7AC511570C24D2A0C36363A3
B14E0B3ABE1043EC5FA3939A2F969D2949345DBD2BFED533A9D02A95473DA76D
687B027B12724F288E7D6446F0DD57E55A6D529B10FDAF908C30C2D6526E5009
E38BCC2AA857C6FF5EC8AB3556D2D45C17A3B9C578B15B5319DAB230E72A2625
B57FFED3F632FDC097B19799AB467656428BA38A2DED6DC273D4A01C93D5B7A5
33AFD690A5EA2C36FC3CD9E2F9A394B5C5F04513E3A92A7EB1B28C05A69D87D2
C3D31B9F378BDBFB4DB60AF269030FA1497AF9743921AF5E3F56E090230CFB9A
9B546D438967C2CFDFC77C8DBA9BF281C3CD8A7E93CFEB09E83D3E036A9F892C
BA72E990EA238946E567FEE4D90AD814A5B57239835490FC25A1C1215183569D
364C73DD9168D6D4F2D9077EBC356F851A12E7F9EFBC93928021F6D15E33681F
DC9C9C0A6243BE5849C61F4D0E4ECF9FFD37B7DEE70F16AAD2FDCA92BC85A230
37BD321C43B2CBC32511D668F859928989263FE709EC38CDCD9224FFED2804B3
EFC25B60E41B71D30A9B886A4898A70D95B165E060B5F87B424549B374A007B7
F81DDF5DDE271331E7E6A88711D839C0776E14CF9C88CB71E860E0C18889212E
0CE535F58F5AE00F69D36AB61EA348E24A55E261E03E7AFE2BCBB6159BD9F1E6
BE7C500F34B97F68A42ED5D52804F08C2A7F0236D0498B8D3264DF633027B4C5
9E58E980187731E5FC0D82E3C7A820ABB6816D9A6FB80B29817A25C002DEE1D9
FEF371F1A97E6C0F8E2B1464EE07EE9CA8CD4BBE2B76F03AF839F7B3F64411CA
191390B99D7D856EF3B2F56CA5E42BB2215661B118C26E10F395C72CF231995D
772337372A505F30503EF61601B6895D47D5DDF484AC2ADFEE300FB82F765DCF
B91E4FDCAA615EA9CFE98CB28540C286265666F059F5C83DDA7A43F320006C35
7D6EDA1AA0D91DB59841FBB33246F317D2FAFB17DCAE007623ABB6816D9A6FB8
0B29817A25C002DEE1DAAD3DD184D290857D6FEAB6317195AF31CE675EEA79C1
5C755B7DA8081BEE082E102F98D610DC5BFFA477D2AAF14D7C62B15DCD4C79CE
B28F129535655C5E9E97172263AE452AF9798A871C8708C2EF80C5220FFBD61E
59DC7686C2E5D368D899BB113B860B57FC7968254EC5A7216DC053A354718283
EF179EB93DF8FC387EE8848EEAE0C2119F40F6F41F8A7214380FEFA5B6AE7B07
A5EE2D300711E187F3B9949ADD65CA6F816E510C8BBEA87DBF06DFE56AC88BA4
381C928317B8703D58E34D3C040AC44C8BA89DC744D606412AA618A7C6C55F79
507D6589A7820134824A241557A841C2ECA06426653F45885DDB5D0F88FC7EB0
64FA0A0015F92972A36B5544316352A0BF74AAEB4BF68FD9DB023C1055FB5B60
865AF755B71B0669C335CA9A03223359F45D49BE8ED3038CB56A98A23F9AEC65
A475AF4E7F58C3A06FD49A55CBD906D779FE5EBE3C8094FE273727B47EB3D7F4
91385112D368489DD77E35AC11C09A4ECEC0DC0649677554F5C92248C9015F01
91DC546DA31CC1C39F06A3DA5BE4DB748679AD5647B87FF3DF5150EFDD70F669
29E3EBAE54CB428D3B01E47E3913EF77E6448E040D68CD6D383B9D93F1C8C056
96A24DBA88565D0625DBBC9A1CF693BB088373851A0855F6C418B2525AB9BB4E
D5CF4DF4BED62AE20551845A3706D054440C27EFDC4203173246B58EF4993A3F
771B82134D1EAB291645748307DE1610FF9D3A31F2025D5F415853C4A4BB7C93
5C447A1AE613D5A315F51917E45B1BA4732E96DFAA2FD813624414EBEEC2A70F
11669B511D8639D3DFE4433D31237662EFD86572036D02E2FB520AF9A9092E29
1F617F1E8ACCBED54FC17804F491AB14744A93581C5B4EC953B2E30731F730BC
90A2D4217212BEC2113010BE6DEA027C700519410D86F381339F962837568328
A3228B4946E68E3104984E4F217DF97EE708E78C118D43A76D58265D65764A0D
B0D085EA16E37643AFFAADDDB31DE4EDC960AFC2EDB8C1D7374260E9C0DB7049
564E7FE1F9020A2EA8744C5E50BB36FAD2C0CBF1361C05E59443622A96522575
D99ACB3486A9DD952D790E32BA259FC90208267C516DC25F585B73508E9A2894
5C79F938E57107E1BA565292AFBB7FF25E58A7D3395D53A731F040B287504006
1417CF9FD91AF50B07FDA08036D112D8D8C2504C368D6F820D6F5E2072D2FBC5
D75A7FC59B0CE548FF99FABADE0ADDFA699CB13BB94C81695FC27A5F36600207
A2AE54386011A6EFB0DCABC8350F7CF094AE79594D5BDE7B8DC4C5D868CA8277
25373AFDD25534FE57C583A3009B72251B29EC64D72D8385E649DD2020416EF6
B88B1F7EC48203436172B02F088194ADED24A5FEA1848B62A16237CF967FEE2B
8FFE4D9819E929B93AB90CB9C15859CDC7CBFF5FA1E8927837F1F8DFC31AE31F
8C52A342A6E49D9FBCB26AD548F07DFC738AED5848F5DC56C94B18A58D6713B8
4ECBE93CFDC036735EF7A4BA2B00B39B1CC0CE374DE46DFD74F85D8FC06BC69C
7DE521A29AB9F1CD7C3CCFDC0B7D9F13FEBBE645E902D65904949EF86D5C5A10
43CBF3E4C8BBE248254D481C30929438757B5DFA7CE49B563FD1F82721B4ADEE
BEA1E478EBF5015DA904366B90644779F2079A401A69392660EF00AB49D75A59
EAA199C3802CA8C73258346B5D568D9717B3688E9D3C926253A1F1C38D203E83
70392322B60ABEE429FB069948595F3E481BD61474104C3CBD3D29031466E74B
0DB598FEB167885D1E3CEF42513361C9C81E7775503E10022B1AC3DE4B0D654D
2401E520C427F10C97C108BF11FA2BA670109D1D42200C1F18DF045687C516B3
9A19897CF6952CB2951CA96E9EC79B8447DA380B0EBE7F4DEDB7C58D0F35D3D8
A42C0A08C4D252EEB7091443BCA512BED90F03DC4316CF30CCD13E71BB2C0D00
68D230FC3F11D35F01C8C0659E9E359E1CF381BA06F53A700169B907D4770BBE
CF012E4F5BE88FDA352953349AD16FD26E69069F73BAD96B899ABA517812730C
8E5B7CACD356944BBF51C1EA66FF016E85F1F3B25D41D5D5849EBD6FCA28A0EC
128DBA3D5427137E8EFF765ECEF51700FA5A82CA24A5F74B981853C84DAB1D5D
37A84327B703B9E085C7AB14FB9BBB39FA9A927966A736E3620D02BAED840C49
16CEE5800381200CC97A0D090E5F37B5BBA3A164E2395FB8D69CE96AFE1471D4
85F51EB89C3B30DCFA044CC984418398A374BC48FCC14358D2D4AE9039EDBF9C
A91F154525491830230A208B42E705A1884E15ACA3B2D4425A0C4ABDA4CC9FD9
2775AFE80A3F9775EC5DCC9309CCB8F4ADEEA3FAE09F2507B0B9E0720EF4E624
B011360BE287F4123848CAC097A52CA325F82FF35FDF93C9E210B18E56DCC449
4C076A2A46C308B15A58D71A67D8EEF14FB9ABE3EC3977A0BA6A227410AD30A1
A35E168F2D8A2C8C066BF6EB944BA5B1BA22E733B3ED82108FE391030C5FC24A
138FC47F6449DA745CA17B553529873C6396084ACD314667654C7B7B16433C9F
844B3349EC411621E2E549F00F59BF60277BC898CACC15DA6F5A9C5E0ADD9E18
FD22D835601E2F8ACB2AB8BC321229C67D5BB03220ED55F342604AC1A4DB880D
095A7ED5A9F186F6E02C3374B8967F7257E124AA2B26F9B2867D2B00E75E83E1
7B88AB50F1B9862B5B029A6C729A95578FE386BBD0254C94AB34AA8D3D190AC9
A6022EA2E47BAE8D2F637C2B99301494149746086820B990FB970705DAB8816B
14A3BA5E41B5BA06E19A379F0FF7E8549C065BFA6B4DFA01B0F4C485F48F9ADC
720460B2830C1028E059DCB169A8DC8487FA7D881070B7BB0A870C3BC8E1ECC4
6D1395E393A8DBD856899AB0902F05027585BDE9D35FC85D7E94AF21AF58EF42
B44E85858C669666ACD1366E775F2BD229E2BF835FFCACE711A8BE1AE06231CE
E08BB604A73CEB72AFD5A3521085B1D51046E41ACD846B025A3282017CFE598D
2D1EBB8E68E9F78860F1F9DEAD4C81F8D2385EA0E7B6104CE0C5DED18048B694
684125A38F9C2563183AEFBB1270035946404C7C15114A38DE860AB45205F5B3
FA8A0D0886AB859B92CEC751FD89016F6BBF7AE7E4D06999E267BA9C089855E7
64C4E473A9C71796AC89A533B00BD9B60260BCE1C9238EB07CA1AA37B4C915E2
5A8179B29AF1156B5FE386447A8970CEF4A3CEADD4EFE91D35DF7673D161C715
4C219881ED6CCA71B402F789C228277C6FC4CF80D0EFEA6C5BBCF9471A58ED5F
7F4508DAB3A4522D0B8F81AED807A5ACB2A57DCEA9747733BD3C0DF71184DFF5
B7354FC6366EC4C081AF2E0955E1D3C7D283209476ACC1A7912313796ED89F98
4EBE333D82F9E85A6037DE6979B1636092FD7FA01C210F648A0B9354067076F8
8B3EC7115E8FD3E99033081FEE7F85E61AEB6C0969EBBD99A9A411AD92B38146
A143DA3687323F8E46CB87DED2565B82F9CABC2D1BDE12429B638D9B1D78B782
89293D0E0A5D8F42D9F6778FB8611A227ED15174F96DB394BB0283C6EC61BA0F
2F0A95C93A0F98132580DC2E7AE4B24F24DC8168F47232C0BACE9598AE666205
8C3D006BB070F413E946598C7502DF04E86B1797B6F81CB076D4861E88FD750D
5E05776A25EB4676DDA48FC93B66B4260E49A626257570F7A5281F4761B0D1C7
6B2DB4CC937F0597693B20BC5258423413063807F682F4B739E5304E22CDA2B7
02F2E464EB8F990380A012BC1C5B90FA3611FF1212BE6D2CAE7E32EB47232F3C
E2B32A76A2C4C1F2F5268E697E7AEB9C77529C2712381D61E30A73EEC8B21F34
58DD227E69A9E9155A369298F71F31B506F4B5E57FEF5AE3BF501709F4E57075
B9EB5BA31FC1D303684C2AB3CA80BF787FBAA3043842D5E055B2F7D3AB9C7E7F
BF26F3A2E161FB636D98810F4232493FC91B8F1B356C0EB3F52E502A69FA29BE
10097E832F7DBE008CF0C786A050778446BE2C2206C9F10461A8DDB6F3F80CEB
871078D5621D11C403EEE634A5785F0F963AC7313301E2304C204721E875A042
E9FF3F5E364D960F714FC31B8B2719E31A0F0EF6716CA4AE79E51AB084E5507C
66A1BD8F939A4E5240000BD4D17370D210ABB3785C6FAE9A725497DB9B12C600
5B93C22DEE01EAE0AE6E9CC4EF31C97421979FAC9DB56118C8785F8C37926897
24B6324E02F2BBDB66342BCD0E9BD9000FF23382BA61D52114D3DA727300DADB
A506F4B9E4828C9B8F62D5A281666960D12EB39C989C6666DB9F9E33A4491F21
9480D7CD327CB21BDDAB978F9BCC9C6302749F1930671A59FD25A2C86B8C168C
AC6D44274454E4AA7CA6641BF66635663629765E30D632FCE69B4CA1DA2816DF
10662D5E5D29C18C4BB4813D92340F73F747ABCE7A979667738E9CAB0E678571
2A03EC350379EB6FFEC6920E023452097D4B6CA6524C0BDAB16D74B8F8F28DF3
EEA1A63C3B29AA63305BC482AA7552B02BB080926F9826725409A073F81A6308
DB0525E61CF68C89F471FFAC047CB1E103DD35DC762C859BDF354256DAF36A5D
D43FDB9C87E92DDC5E0D571E447192E2F0B7C3D09E55BD9605795E6ECBAE245A
8A52478F197D96F3AEF7B3423A172B649F49DAFA6110993BDA1DFB2F24F7BC44
E0B3F4E5B4D6882F3093F5E85631B99351BAC3C14DE1D47D4DA10F444615933F
29CDF026EB71FD5214B5F1C30736D6FAE715E2DFD2F64C7B3B0ABC1EA137B0B9
0AA85F50C050921854111757DE4F478441A52A2D5DA610408294D3E72E283571
D07333E6D3F737A27FAF9AB7A3BF0ECE3393F93062070CE4AEAB1E4868B8F194
F87D81283D2AF2AC1CE372984ECEA0E37FD0CE325E1BB08E3BBF359E31BBF799
38BA67178FDC91A3C3F84571E2AD42E2BB229D402881F24A9CD16DE59FAE4BEC
C6E0369FBB3904E0E51A6E7DC11B95954B10C7D3E55F65BF2FD0934F8805F373
35669160CADB900DC43E618EFC62C0F7DEB01D457704F17C4A3FE2B2C6FB2346
B44985C92EE8E5D4D27F66E30BAD26EAFF1A51A0519C863CFCF41E4BD4B1E305
3CEC6AAF187DF70F2F7207CD2BD221BB041EBDC5543BFB4627BAC95868EF7352
2A4ED633EA5A66593342783F59D168DA6031E445F889CB21063CC971FB1E0D4B
A0042A777AD11B35676124B0FC8B92B37E736BBFA3E8112B67C5D28461BB5CFC
BDE18F40D39847DACB1F10AE1D12B05C6BF7EDB02C0858751DF4584EE9B29434
C31269196ABDA884F54D66ADFFC21A73701A36CB9926CEE95503A1AB31A8E2BB
5C885DA8AC95B5C361C205B1CF363D965F07FF04C44A4DC3F39584F07395ADC9
0004A02598ADD5C721EA3901B55BF11C472570732DACE2E77E20A152356771D3
3852AD5FFD1B83E2308B297A2F0345683C7598990B5288EBFA21BBC85A7C2CA3
95BCCDF91AA918766C82A978B7313CB3B7DBD187213CD6C5785A4D900B71104E
317383E87A562D0210296BA621CC1F7945FCC1147FFA1DD5C2ACEF48D4BE9B7E
C2113DCBD52BEFE6009223C277E6B0E3E71CBD4239EEA0D3899DE43555C47457
063F409D065EAED9FECDCF279F550AFEECAE2699AEFC4CD1BAB40A0A1F959805
0E503B19BA44C1F374A32C4DD6C7254B2196278532E36D0490827DEAB840570E
7D62A9C9F66CBB2D4A521C91F96B32977B4AC035F37D978479FE0DFE0DAF702F
2FB73C68390100F6CB233E29161110020767B5AABE20CB5620D01602B364C070
10B5F178CB8C6CC3FA201A9C997D4E73D4B3B36ECAF512EEA86A2039E8D30FFF
BDE175B5987E90268D1732B7A75B1FC81D6B9BDF74EF6E320AB25C8D75EBC928
DA66E93B971695814F3CFEA49177478278ACBF74DD710936055C837B3F273F35
AC0133B7D936A776CAF7EAF2F56DCF2767A7327E49C3A5FAE6DC51EB23CD6DDE
6CD9FB522CF6DAF0C88E6BA33FDEDC1E2D2BA0DCD47B47523D4C87FBDC3B872A
DB914D50642DBF74F84D8A3E88840F5C12D91FE68158CA53371C701061124702
8F04B48C13A4745D552CDC9E19483FBE4813E1F3B1D72527A53EBF53D8D282F3
4B152327A911FCAA68088B63669EF26D6720BBA5EC42CF7F0AF2B6FEDC072DCA
BF52B6BFD6CCA3A222556396616E6E55456DEAD954565AF8A2590AAEFC846D00
4D2DA38C110B0F69B053A1EAC90278B8AE446ABBB751053D4B80F1266B60BD8E
8DE59349F07C18994FF414A27305C80B1329E92389932AB8463247F1E67332FF
61B89500C27591C967E682605CE4ECBBDFBE4482AEDC13CD05EBF332F2D4BD16
E7A7653F532238190F8162E573A67E1BB58F9B007F734B9778F949763B2D68BD
EA255789E9A7673A732DB14F2538861E40915252EA75E6FDA5017F526FFA4221
83DAB388A92A7B5F77CFCE9F2158F0E17E460C12486A7658A9015CA01EE3EDCA
D61976E7D3A90E401AB64F51DB01E87D26281DD04FD6E8F38DDCF804353D5967
5CCCD85BFBBBA94E6093310CB0E76F4BC5266766228C3B70D746BB6683BB18DF
86BE7A0E79553AFF147DD5A48D67C0D2737CE83866B12F442B678502E7C5A1EF
0B1C42169287DA401A57937475729140022D651196BBDE507C529F5C5D00A2CB
5F5E287D4C7399E3BB738100CFA6D0FE70ED2CFDDEABD773BD2C99763982B9C7
89194D0868E003DE18BE594B65D769B3A236E802F1F79C68EA7009B2081C4DE6
8DA24D6FCD440A00461078C14376C827664C531D62133697B341D04A4052704C
B324B0007B7A1577BF4CABBC706A929EBC90C0E77E0EFA3303F3A7DFD7880AB8
29B8B472A70259B3722BC7E23CB12C36612D0E9F1DC7BE4C83A070BA9974E893
2E2A992D4D8CF7E1385139E26F85DC7AD36AF64FBE7E007910667A3F47EF629B
617D04EAE51DCD3118FD80F95CE121CA495921558333A83805640C5D11312C76
192227BB3D4C2B33799C8D4F87A3ACF4630A7BA2B09B2E41948C25033C1C5DBE
6F9AB834ECB4EA7205334FC9EFC84868AD49E3E103D4CBFDD0B02B8A24532F9B
5B95A4D9B7310834A0C6D28258580471B9A02F00D1697E844D9A5F91CF1C5C95
71FB18714EDE7725C8D642D169A4530407EA3E85FD1E138775FB392C60E40979
EC3B8DA085AA0F47B446420B3F219204CA439B28FA933136B0164AB17269EF51
EFC4332560056DAF20C3307E856186CF1BA6EB7BB451424C1BA029E716AEA2E1
6FFA5A475B876CCE429431325AF04BE29A49E5F081BBAFD83E00FC1AE70BAB44
9BE5CCF75860E73572CA7C2A2A430B35F8E44D3F4D5D6F9E1555F31A6EBC1AF7
26AC41413ECB7E4D69D2D9C00EC73685E5EFDD00A2D56B6C3E39B5E645FF01BC
597924769EAC0B9EB57DB079B845ABE81EDCFCB0F58303CC9470B9A1A8866990
838A8596254E937C1433925724B1EE2502B955CAD748A7D7AC1DFA68CA49491C
C1CA5DF75A45EE4D2FC29A8F6F881832191A5704CF691DAA85EC4C4EAB921F55
D7112C867DB50C6489E07458583101D973F4968630BB9FEB0543015F06CA5583
D635189EDBC7EFCA176624BC52285BFA2944925DDAFFCE9A496C86706B8107F5
3BA5D6D7BA108E17E044E936CE0269AC33D2FC5D972E122870305D23D85B1D21
5753B007CEB7A37F75F42829137A027937F12B78D4C35D3B49240A3714056C2E
B891C506C7AA9A47B69C9C0A965B53D8EC0D91766436B75EC5B3C0E326E0B564
2B13B481BC86FEADDE5507E1D03D9328B13028441D5EEDF753D98DE208137F2D
A6C2155EF62A003CFFF22CB3EE03841E657F371630324ABEEDEE9C2DAE7E6D24
8BBFEF50AAAE92FE0A3B205BF693D7A84A6ED30F700841CB1B6DAF5FCF940825
4D3E3089F5BC891653DA647555AC31C809C50E4D2421E438D41D58EEEA312302
A6913EDA0CB2580456A55E17CB51F702E1B63C28B47C3625AAE4CEA6C3F956DD
94E39433AAC87401AC1BB01EE4E713340C110924EB5CA9CEB548E54EA57F452E
3896BCA6B351CBF61493FDA6856DCBD0EEC148FF48843F8A757D99EFC66DD858
0236D0ACD74368BDA94FA15FFBA55DB8D7050D67EA83DAA0E0C0072623C19171
EF2D509F710753C9AC13F612CEE32F8F7A5578440F8FF8B79F77C6BD16D11D72
C90BE04D553812A64548721482503D5D4BE2F02258D5BF200E0186CB857A20E0
5E027F34F3FD5F1B62E7C08FE64DBF2CBB674BEBA51316281FE59FD806894A72
61C714D6D08320955591279D0B24D3BCB773D068EC79AF7D8937A92C097E5F9D
A482AFB2D1E1A0E97003661CD4E3E9710565DE42233EA6AD853268D738F1178E
4E432013030605F7BED34BF377544FD3222CA452944DF5BD79C2277C7B67D8C7
AAAB31ECE4273BFF14BB6E61BAFB497EAAA779D5BB48642225DF28C8245885FE
B908544B922A95BEDDF797FE68D98B9C96AC4411B5239532329525E2698279AD
86998912BCBBD6669F2D31C6DF4954D108F79DCCC296009E826E0F3FAAA93915
5D3A2EF8F75D2B074BE3AB5458A80D65A02791DBAADA26A7159562865AAA81C1
F2588E2ADE4ED9682F6127939404CE3F29F788410B7AE271C4BA3955DD501A1E
6B6B303FD70C99E4963E6ACA131F5A67795B4D2921744DCB14534ED336D13DD4
6EE180E4B230734610B7FC39191954A6EEE713D22A147E3E46421A87832FFD2F
70E8F9F3EB231547157887116428238CEDDCA78E8314EDC6B44B38419853AA2B
02A445008B38619E6B853487B44A558277C28E939AED5C59459E230067967A1A
30825A14E1BF708CDFD2AD852E07E4A52B755B7F28F3436972E1A7DB4EF36F5A
DE6E0E23B879D5C01AC6298A742CB9F041E04E084BBAC89EE6102DF5FB249A07
431EAFE27409C518350E43BDA1712B6862AB7675BF17FB58DA05268C115D06F7
3B91A2ED426944B879E23DDA5BEB557EF4B58EF85794BAAEE4BF03E66F3D8752
F33AC3659C56C59A0D58EA90EB13B8823D098739020A9DA242BAB1C3A23B5301
D2364F8C7CEBDC40EA140CDEC195884677488AADC0EA8D0258AA3B8A1EC03FBC
5BA7E86AC4896D4759511101BE279FDAF309F24B757895A22D923DFD1F592C3F
727B5D756E04CC485B2C6795F0B067535AC80C18F244ABE9F2A95589EBFEC1F9
E0CFA91ED6C8AE5AD609C29290665D47326BB6C360FEE676E9585380AB3606D0
2E175BE5F822C9C27F168D5FB6FFFC5B17C0E5ADC13215189E7D53064D95ADD7
23779B3785014DEE635D5877F272C28FC98B80B7E29E117F3FC37A12C37A9C51
6294150AB0E31839256D7C37F3C680CFEE01BB99A9B46A51BB71E2305961546D
03197809867CF27D46C4948EFCB479E2AA74FB19848F1FB5D2DDDC3E9EA0D111
E24E53A4E5CD765910D873104EFA71C12CA38B7C913E652ED54D152F20F66214
A44CC595B1A65B307745CD251241D37FCFBAEEAC2F3D03D8C73B57005BB8BBBF
2D4F2EC6D39E1A353528F8BA58B7A6758805020CD06DD8F6B7A8B3DC811710D2
89CB886250C6E38D9166EC9DF07F17F78B9A3BF371BBE3389D6FD23930ADB09C
411A066FEADD0AE5D68E7BF615434F97E9C1E1DD0FDA709E28B0CC902AC496BF
60CAB25046C9D1484A7B9D4B5B7107D7767313BAABE734D5F26726D00B51637E
A4398D7C933ECE36AAA99F30DE4303E332701DE5C7462019E156931929482064
AC769099DD2922DBD687C5903BE77A1BE6833654E9EE09572D626753966EBEC7
60DD8AFB23800FE765588418BB870560EE259425AAA94E1C117DE5698648AB03
B1C43A1BADA6B0E9C2D116C54D8C92A93895432B247889B1A74F4CA486F843B9
7D661DE96EF8FBB6F6CFA84355B31A1547777B9F73B670724E73FF6FA77AEF7F
1A90C8ED1C1EDFE4F1ED15903AD36C6E5D017999504EF5C2F31FE00916E21780
FDBBE018681773CA2DB3E6981EE6EE433BFB983FFFB467E8CC94E9C5088DF3CB
F03E8F82751D22AC73C702A6ACAB3F5429DF1D1F956A66AB0CB3FFA4ADC55134
D6C9CBE0B4749A9040A77F70E2F7AF75A9C4479DEA20D0F7A2E03D2191D7B771
371E38BE3C5B672FB1196EB628E2245335476CBB237E3B75F60105C9FAB4F9ED
679CF7F57835C6A9AB0AF465C4743930B880A0A866AACC25156E7C9E670A6B41
C42A3713EE410836E554E546AF87FB2294CED2711B509B43E04E3594EB9F42EB
72B8335620B286DFC810D0768AC6EDA065A7AA978EAB699629BC24A0CEE402F7
E7C6C02C45290463BA3ACB372827FB9E9CB3002CF3B730F9A1736ABF85CF7789
C5144BA8FDBCC3CF50E047FD2E21B50CF06046ADED6163E5F6768CA7DBF7C904
EA0AE52B6F0D18A3200CE6EF83FDD0BF702F324DB9AB283FBF8B18B50927FCC3
73459E2ADF492710943849278F266355B53BFBC71E3B0E711FD1C11C3E5BD9E8
56B0BE3B0EE230EAC958D2AF1850460012665D3C57BC396592A3BED346F5E3B3
B427009EF772001BDC4D70FD0630C8BDBBCBB555455CF4453FA1C14B1C56B57D
9B81298397A999B0DC13E4DCD2C3930FD7B93A2B117B89B32FE6AF7BFF531A13
698F1B1F9A7D91DCA2CF2489A458DFCAB589C673821151EDB9FD02115FB97A72
C9E12F730A0A4309F5887A8410DB642506CA8F10F428FA66A573D5921153CDBA
8362916C03024DCB563E1B9D016A5C9B6183D629A45297A64279E4372C6FE2F6
4B01DE1C7A043D641688E6823542CC1C9998FF96A8BF6BB4ADE8597EDE31D6E8
6078CB2F20355B03D55C1C5EAC207117FD59E971959880C9E6C27089AD1E4BB2
0A939092A4ECD87F64668976FFEFDD8A351F7A3AC2753BBC094D19CE5E38C560
3CA69EB4A86F1A2FFD549C727AF6337B3D0683165418B18E0AEE8CEF75E2F5CF
EFA884B450A900268E6AC3FDDD8D70B88F5AF3EB2D0CF63179FD979A6D31395C
03FE6684D0250A3F4E8F7883EDF612804751B6243414C3C91E65CAA66A191C5B
B9E65049D89F34F7A86FAC1A282A39D6F71EF5093FB4D88258CD43F240FB907D
DEB2C3A8AAE2F27EBC06F2A4C104BCBE7F78617D8C5AC99A8F752E15F91E7439
FA50C16A56AD4819E16300BFCD0E116AFE2FC52E41825EA5664F1980F9DE6864
C2724FEDFDF590A44AB5CB3BCC56B1675CA53BC071041435062AB2147EC1C662
C77686873F9EC82DC26616F7C772F0EC44CCF4FC7CEF92A8F415F6DA12BBB4C0
E092A96EA9208881B90574609E5FB78F97E0BE31D25B35938799F52B4BAB5D03
CA20EF0F3E3E10E1EED469072AA38003E76CB0E8C03A123D67AF057810A25A7A
2E6CAF2EBAF7C2136C9607AA0E17E17D49FC630C5A7CEB5E2FEC3CD61CF2D191
D8AABCF3D9AB4C977EF1E04021DC5BC92B97226EBCC140831E6EAADCD1999D2C
2592CA7236DA4150B1334B1B0EE1CA9A5850ED7310A28C2DF8B24DF38B374D60
6F87AF5924A91647D5772CFF8EC3373B0073913D2746693AEC7FF3DD0EEB482B
CAC3195AB49AF822AE2AC5C4E52085A6253C950993EAF166DE8067B8B129D146
A626554E3CA9FABCB113C234BBE15CB03AD337B58ECFB5981A71ACAAC7D32ABE
498256090D22A2A8F3A48B7A1984500C95A1F33D519D328BA811F14FF20F9DE5
41E7B5B42C2AC85ADF7251A10A9174AB4D3257044492AEB5B341F2F73909A6C9
2CD08F14F4F4A63989BB9938011929A3D65731D05710680FE3CAD56C26E22509
7AB9058B895F9D7AB28E6414244CA4C07B0DF648E21EA69161741ACA2AADBAE8
6A8816E1A0EE4E7804EE3EF3230468E666925A239B0D401DED3C8BDCCB5F9DFB
D06FE75274F690310AFBDC64E8D9D56E77EE38698E8E754E0089434663F9C257
3068823E91FAAC2E3DF0DAE4F90F09F669E9BB8CF57F593402A6BDA0CAB44ED1
ECC6D7A8992630619E30BBC6DCF0E3B4F24F52DDAC06DEDCB6B478517B198F96
6E4F78D49ED0EB2D4D5F4248D12F5F5E9B4B0E0027D05D5F40EFDF0EB7331CEF
79A831D32FCE9143E1CCE8C529EC7D5B5DC83DFA36A6469EE46991E4DF57E690
FC64AF463950A2F8538F59457FF06313BF0832F57C671CC87AB8965232412E63
8FD22994CB3649B8D7E43C762BA16E71F3002744725B41F85472D70059A77832
6E6E3E6A672AF6E4C90F0A7EC2325945289E083E7F7F9388EC213BF627F2D395
097134299B0F26B5D5D75D16914C7C014EC7A46FB4CA0E6C57CF52AB448F27A6
685EA71955D4231E53F63BE924510D0D309CCAD0A64E530A57412E932DBAC0CC
88A26729C0C09D1C87FA6C8E7D5910B84C475036E165B65839E1446A2507FD78
0C48254AA2E2100238C3925106C905CAE1199DFBA4E0C7603D47575E474460AE
C90AFF6AFDBEF1B222811BA220DDAF15885B389CA71291D0337B9DE9DC1DB969
AA846AEE119A17C206BCA26E8145A40613501E483BBEDDEF0E7745E89DCEB308
024AC059ABBFCB62535528AE81911F639E61290144258DD0AB8CAFBAAFDB3E29
CA8C488D820EEBAD098590836AB4DA9BD6B3E6BE9CEF775DD0BD0F3161A3649B
AB7AEA5D176759611B0C22667997C68B7B3325120DC8EF6FE8E6434F0451BF16
BA0067B464E154896F06D06BCBD1668E102175A103B20865F1FF7F7ACB0D80B9
BAB541DBB2A7EFDBA2C3D92EFD7DB8137F078FB8CBDC0483FD3F3F8328F868DC
CC5C1C070A6CBE78EEBD6526D25E1E6A0A5DC91BEDA0457757932112594345E5
90E7A07D2B53E8BB7B9F0AF732590C7551036E60C9A3285A116DFD66C8C34AAA
8A71D4CDE06A2BD09CEEB746FE2C4C6B5677A981D3E32C2AD3ED0021055DEEE4
00AC0AFA9EC45FA45869498AC74575147C0C3939BF3ACB4301291F5E0DBA7007
5EF5E8FA086CE6CCBAE89C3C47D2E20550D448BFDA56211D88E1B051F135D2B4
FC9D57A77FA4448A06ACDE98ABC751E7496F2CBAD087AE6C85A197E9707E7331
51CAD639A0844FCDBDEDE37900A20F87C555DB2FEBF82ADB86B57DA5B70CB7B5
CFB01731D1A6725243909AAEFB2F8AA28F17CD61EFE9E538673DC1B8FAF1B33A
3CCE7BE0328F25809F09535929346E49FD6EE779789343A637BE915854AD5ED3
963F6547861CAD3B828E9A
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
TeXDict begin 52099151 39074365 2000 8000 8000 (build/sample.dvi)
@start /Fa 245[3677 7[3965 2[{}2 5508.23 /CMR17 rf /Fb
234[2976 2976 20[{}2 3825.65 /CMSY10 rf /Fc 214[1355
1355 40[{}2 3825.65 /CMR17 rf /Fd 205[1107 1[1107 48[{}2
2213.92 /CMR10 rf /Fe 194[2428 4[1561 2[1561 1[1561 1561
1561 1561 4[2428 1[1214 1214 29[2254 7[2428 2[{}12 3188.04
/CMR12 rf /Ff 139[1127 3[1567 1501 1863 2730 5[1495 1539
1447 1[1343 14[1830 4[2386 16[2428 2[867 867 58[{}14
3188.04 /CMMI12 rf /Fg 24[1543 3[1785 115[1801 1744 4[794
3[1718 32[2120 13[1929 1757 1734 5[787 18[1795 27[{
 AutoEnc_sjpjw4ssg32e5kzaeiwtqme4ud ReEncodeFont }12
3188.04 /UniversalisADFStd-Bold rf /Fh 176[4385 79[{}1
5508.23 /CMSY10 rf /Fi 144[3112 5[1372 3013 3096 36[3184
20[2247 45[{ AutoEnc_sjpjw4ssg32e5kzaeiwtqme4ud ReEncodeFont }6
5508.23 /UniversalisADFStd-BoldItalic rf /Fj 145[1553
51[723 58[{}2 2656.7 /CMMI12 rf /Fk 144[1301 2[723 4[1301
52[1301 1301 1301 4[2023 1[1012 1012 40[{}9 2656.7 /CMR12
rf /Fl 145[2236 7[1846 2[1612 14[2196 25[1041 58[{}5
3825.65 /CMMI12 rf /Fm 22[2314 1[2034 3[2415 2415 105[2218
1[2213 2342 1198 1887 1671 2415 2424 2470 2374 3687 983
2[983 2374 2415 1299 2314 2415 2034 2424 2415 11[2737
7[3545 13[1896 16[1001 1648 983 16[2424 9[1791 1805 16[{
 AutoEnc_sjpjw4ssg32e5kzaeiwtqme4ud ReEncodeFont }34
4591.67 /UniversalisADFStd-Regular rf /Fn 12[2058 9[1928
112[1848 2[1951 998 1572 1393 2012 2020 2058 1978 3072
819 2[819 1978 2012 1083 1928 2012 1695 2020 2012 19[2953
1741 6[1882 5[1580 16[834 1373 17[2020 27[{
 AutoEnc_sjpjw4ssg32e5kzaeiwtqme4ud ReEncodeFont }29
3825.65 /UniversalisADFStd-Italic rf /Fo 12[2594 8[2475
2[2222 3[2571 110[1373 2071 3[2594 2512 4[1143 3[2475
2576 2167 1[2571 18[2888 8[2452 3053 2718 1[2792 13[2622
2539 1602 2[1134 18[2585 27[{
 AutoEnc_sjpjw4ssg32e5kzaeiwtqme4ud ReEncodeFont }23
4591.67 /UniversalisADFStd-Bold rf /Fp 30[1677 108[832
1310 1160 2[1715 1648 2560 682 2[682 1648 1677 1[1607
1677 1412 1683 1677 12[1655 3[1569 11[2002 2[1824 6[692
12[1145 45[{ AutoEnc_sjpjw4ssg32e5kzaeiwtqme4ud ReEncodeFont }22
3188.04 /UniversalisADFStd-Italic rf /Fq 176[2538 22[1771
5[2125 16[3188 11[2480 21[{}5 3188.04 /CMSY10 rf /Fr
145[1685 110[{}1 2213.92 /Dingbats rf /Fs 198[755 760
618 753 676 723 715 675 422 777 48[{
 AutoEnc_sjpjw4ssg32e5kzaeiwtqme4ud ReEncodeFont }10
1328.35 /UniversalisADFStd-Regular rf /Ft 138[1355 5[1429
2[569 1[569 1[1374 2[1339 1397 43[1520 5[1350 845 1554
48[{ AutoEnc_sjpjw4ssg32e5kzaeiwtqme4ud ReEncodeFont }11
2656.7 /UniversalisADFStd-Regular rf /Fu 137[1618 6[1618
1618 1618 1618 2[1618 1[1618 1[1618 1618 1618 1618 1618
32[1618 17[1618 46[{ T1Encoding ReEncodeFont }14 3188.04
/SFTT1440 rf /Fv 10[1715 1[1715 9[1607 1[1412 3[1677
1[1677 102[1400 1725 1540 1[1537 1626 832 1310 1160 1677
1683 1715 1648 2560 682 1[682 682 1648 1677 902 1607
1677 1412 1683 1677 3[854 1[858 3[2487 2[1655 1594 1591
1[1569 2388 1919 1[1451 1776 889 685 2[1415 1569 2002
1808 1[1824 6[692 4[1623 1[1715 1620 1014 1865 1[695
1145 682 16[1683 9[1243 1253 16[{
 AutoEnc_sjpjw4ssg32e5kzaeiwtqme4ud ReEncodeFont }60
3188.04 /UniversalisADFStd-Regular rf /Fw 12[1501 11[1286
3[1488 110[794 1198 3[1501 1453 4[662 5[1254 1[1488 18[1671
12[1615 65[{ AutoEnc_sjpjw4ssg32e5kzaeiwtqme4ud ReEncodeFont }12
2656.7 /UniversalisADFStd-Bold rf /Fx 5[2985 4[3112 1[3112
8[2969 2[2666 3[3085 106[2864 1[2798 2985 1647 2484 2187
1[3090 3112 3013 4649 1377 2[1372 1[3096 1[2969 3090
2600 3090 3085 12[3123 4[4291 3465 4[1361 3[2941 1[3261
3184 3349 37[3101 27[{ AutoEnc_sjpjw4ssg32e5kzaeiwtqme4ud ReEncodeFont }
33 5508.23 /UniversalisADFStd-Bold rf end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 8000dpi
TeXDict begin
%%BeginPaperSize: Screen
/setpagedevice where
{ pop << /PageSize [594 792] >> setpagedevice }
if
%%EndPaperSize
 @landscape end
%%EndSetup
%%Page: 1 1
TeXDict begin @landscape 1 0 bop 8000 4901 a
SDict begin [/Producer (dvips + Distiller)/Title ()/Subject ()/Creator
(LaTeX with powerdot class)/Author ()/Keywords () /DOCINFO pdfmark
end
 8000 4901
a 8000 4901 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 8000 4901 a 0.12158 0.21176 0.33725 TeXcolorrgb
Black 0 TeXcolorgray -8000 54901 a
 /pssetRGBcolor /setrgbcolor load def /pssetCMYKcolor /setcmykcolor
load def /pssetGraycolor /setgray load def
 -8000 54901 a -8000
54901 a
tx@Dict begin  gsave STV CP T /ps@rot 0 def grestore  end
 -8000 54901 a -8000 54901 a
tx@Dict begin  gsave STV CP T /ps@refangle 0.  def grestore  end
 -8000 54901 a
0.12158 0.21176 0.33725 TeXcolorrgb -8000 54901 a
SDict begin [/PageMode /UseNone/Page 1/View [/Fit] /DOCVIEW pdfmark
end
 -8000
54901 a -8000 54901 a
SDict begin [/CropBox [0 0 594 842] /PAGES pdfmark end
 -8000 54901 a -8000 54901 a
SDict begin [ {Catalog}<<>> /PUT pdfmark end
 -8000
54901 a -8000 54901 a
SDict begin H.S end
 -8000 54901 a -8000 54901 a
SDict begin 17 H.A end
 -8000
54901 a -8000 54901 a
SDict begin [/View [/XYZ H.V]/Dest (Doc-Start) cvn /DEST pdfmark end
 -8000 54901 a -8000 54901 a
SDict begin [/Count 0/Dest (slide.2) cvn/View [/XYZ null null null]/Title
(Introdu\347\343o) /OUT pdfmark end
 -8000
54901 a -8000 54901 a
SDict begin [/Count 0/Dest (slide.3) cvn/View [/XYZ null null null]/Title
(Conte\372do) /OUT pdfmark end
 -8000 54901 a -8000 54901 a
SDict begin [/Count 4/Dest (slide.4) cvn/View [/XYZ null null null]/Title
(Conceito de Efici\352ncia) /OUT pdfmark end
 -8000
54901 a -8000 54901 a
SDict begin [/Count 0/Dest (slide.5) cvn/View [/XYZ null null null]/Title
(Complexidade) /OUT pdfmark end
 -8000 54901 a -8000 54901 a
SDict begin [/Count 0/Dest (slide.6) cvn/View [/XYZ null null null]/Title
(Efici\352ncia I) /OUT pdfmark end
 -8000
54901 a -8000 54901 a
SDict begin [/Count 0/Dest (slide.7) cvn/View [/XYZ null null null]/Title
(Efici\352ncia II) /OUT pdfmark end
 -8000 54901 a -8000 54901 a
SDict begin [/Count 0/Dest (slide.8) cvn/View [/XYZ null null null]/Title
(Efici\352ncia III) /OUT pdfmark end
 -8000
54901 a -8000 54901 a
SDict begin [/Count 8/Dest (slide.9) cvn/View [/XYZ null null null]/Title
(Nota\347\343o Assint\363tica) /OUT pdfmark end
 -8000 54901 a -8000 54901 a
SDict begin [/Count 0/Dest (slide.10) cvn/View [/XYZ null null null]/Title
(Big-oh O) /OUT pdfmark end
 -8000
54901 a -8000 54901 a
SDict begin [/Count 0/Dest (slide.11) cvn/View [/XYZ null null null]/Title
(Big-oh O) /OUT pdfmark end
 -8000 54901 a -8000 54901 a
SDict begin [/Count 0/Dest (slide.12) cvn/View [/XYZ null null null]/Title
() /OUT pdfmark end
 -8000
54901 a -8000 54901 a
SDict begin [/Count 0/Dest (slide.13) cvn/View [/XYZ null null null]/Title
() /OUT pdfmark end
 -8000 54901 a -8000 54901 a
SDict begin [/Count 0/Dest (slide.14) cvn/View [/XYZ null null null]/Title
() /OUT pdfmark end
 -8000
54901 a -8000 54901 a
SDict begin [/Count 0/Dest (slide.15) cvn/View [/XYZ null null null]/Title
() /OUT pdfmark end
 -8000 54901 a -8000 54901 a
SDict begin [/Count 0/Dest (slide.16) cvn/View [/XYZ null null null]/Title
(Observa\347\365es) /OUT pdfmark end
 -8000
54901 a -8000 54901 a
SDict begin [/Count 0/Dest (slide.17) cvn/View [/XYZ null null null]/Title
(Bibliografia consultada) /OUT pdfmark end
 -8000 54901 a -8000 54901 a
tx@Dict begin tx@ovlDict begin InitOL /TheOL (0) def end end
 -8000
54901 a -8000 54901 a
tx@Dict begin tx@ovlDict begin (0) BOL end end
 -8000 54901 a 3099 x @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.0 SLW 0.12158 0.21176 0.33725  setrgbcolor   0. true 0.0 0.0 397.48499
298.11374 .5 Frame  gsave 0.12158 0.21176 0.33725  setrgbcolor  1.
.setopacityalpha  fill  grestore end
 
@endspecial -8000 58000 a
tx@Dict begin { 198.7425 14.90659 } PutCoor PutBegin  end
 -8000 58000 a
0 TeXcolorgray -5377 w @beginspecial 340 @llx 278 @lly
461 @urx 321 @ury 484 @rwi @clip @setspecial
%%BeginDocument: license.ps
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 8.0
%%AI8_CreatorVersion: 13.0.1
%%For: (Alex Roberts) ()
%%Title: (by-nc-sa.eps)
%%CreationDate: 3/27/08 4:26 PM
%%BoundingBox: 340 278 461 321
%%HiResBoundingBox: 340.5 278.5 460.5 320.5
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%DocumentSuppliedResources: procset Adobe_level2_AI5 1.2 0
%%+ procset Adobe_ColorImage_AI6 1.3 0
%%+ procset Adobe_Illustrator_AI5 1.3 0
%%+ procset Adobe_cshow 2.0 8
%%+ procset Adobe_shading_AI8 1.0 0
%AI5_FileFormat 4.0
%AI3_ColorUsage: Color
%AI3_IncludePlacedImages
%AI7_ImageSettings: 1
%%CMYKProcessColor: 0.74902 0.678431 0.670588 0.901961 ([Registration])
%%AI6_ColorSeparationSet: 1 1 (AI6 Default Color Separation Set) 
%%+ Options: 1 16 0 1 1 1 0 0 0 0 1 1 1 18 0 0 0 0 0 0 0 0 -1 -1 0 0 0 0 1 0 0 0 0 1 0 0 0 0 0 1 2 3 4
%%+ PPD: 1 21 0 0 60 45 2 2 1 0 0 1 0 0 0 0 0 0 0 0 -1 -1 () 
%AI3_Cropmarks: 340.5 278.5 460.5 320.5
%AI3_TemplateBox: 400.5 299.5 400.5 299.5
%AI3_TileBox: 112 -56 688 678
%AI3_DocumentPreview: Macintosh_ColorPic
%AI5_ArtSize: 800 600
%AI5_RulerUnits: 6
%AI5_ArtFlags: 0 0 0 1 0 0 1 0 0
%AI5_TargetResolution: 800
%AI5_NumLayers: 1
%AI8_OpenToView: -381 756 1 1566 923 26 0 0 73 75 0 0
%AI5_OpenViewLayers: 7
%%PageOrigin:0 0
%AI7_GridSettings: 48 8 48 8 1 0 0.8 0.8 0.8 0.9 0.9 0.9
%AI9_Flatten: 1
%AI12_CMSettings: 00.MS
%AI7_Thumbnail: 128 48 8
%%BeginData: 9390 Hex Bytes

%0000330000660000990000CC0033000033330033660033990033CC0033FF
%0066000066330066660066990066CC0066FF009900009933009966009999
%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66
%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333
%3333663333993333CC3333FF3366003366333366663366993366CC3366FF
%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99
%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033
%6600666600996600CC6600FF6633006633336633666633996633CC6633FF
%6666006666336666666666996666CC6666FF669900669933669966669999
%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33
%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF
%9933009933339933669933999933CC9933FF996600996633996666996699
%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33
%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF
%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399
%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933
%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF
%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC
%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699
%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33
%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100
%000011111111220000002200000022222222440000004400000044444444
%550000005500000055555555770000007700000077777777880000008800
%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB
%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF
%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF
%524C45A8FD7DF827A8F8275258527D5258527D5258527D5258527D525852
%7D5258527D5258527D5258527D5258527D5258527D5258527D5258527D52
%58527D5258527D5258527D5258527D5258527D5258527D5258527D525852
%7D5258527D5258527D5258527D5258527D5258527D5258527D5258527D52
%58527D5258527D5258527D5258527DF8F8F852A87D837DA87D837DA87D83
%7DA87D837DA87D847DA87D847DA87D837DA87D837DA87D837DA87D837DA8
%7D837DA87D837DA87DA87DA883A87DA87D837DA87D837DA87D837DA87D83
%7DA87D837DA87DA87DA883A87DA87D837DA87D837DA87D837DA87D837DA8
%7D837DA87DA87DA883A87DA87D837DA87D837DA87D837D7DF8F8FD127D83
%FD207DFD0552585883FD147D52522D5252585883FD147D52522D52527D7D
%83FD0A7D52F8F852A87D837D837D837D837D837DA87D835858FD05272D2D
%7D7DA87D847D837D837D837D837D837D837D837D837DA87D522727FD05F8
%27277D7DA87D837D837D837D837D837D837DA8585204FD06F827277D7DA8
%7D837D837D837D837D837D837DA85252FD07F827527D7DA87D837D837D83
%7D7DF8F8FD0C7D837D5227FD0AF827277D7D83FD0F7D8352FD0CF8275883
%FD0B7D8327FD0CF82D7D83FD0C7D27FD0CF8527D83FD067D52F8F858837D
%837D7D7D837D7D7DA85227FD0FF8277DA87D7D7D837D7D7D837D7D7D837D
%8327F8F8F8277D7DA8A8A87D52F8F8F82752A87D7D7D837D7D7D837D7D27
%F8F8F8277DFD04A87D27F8F8F8277DA87D7D7D837D7D7D837D7DFD04F827
%7DFD04A85227F8F8F8277DA87D7D7D837D7DF8F8FD0B7D27FD06F8272752
%52522727FD06F85283FD0C7D27F8F8F87DFD08FFA827F8F8F85283FD087D
%04F8F8277DFD08FFA8F8F8F8275883FD087DF8F8F8277DFD08FF7DF8F8F8
%27FD067D52F8F858A87D837D837D837D8327FD04F8277DA8FD07FFA85227
%FD04F852A87D837D837D837D837DA82DF8F827A8FD04FF5227A8FD04FF52
%F8F8277DA87D837D837DA827F8F852FD05FFA87DFD05FF52F8F8277D837D
%837D837D8427F8F852FD0CFF27F8F8527D837D837D7DF8F8FD087D8327FD
%04F87DFD0CFFA852FD04F85283FD087D52F8F827A8FD04FF7DF8F8F8FD05
%FF52F8F827FD057D832DF8F852FD06FF27F8FD06FF52F8F852FD057D8327
%F8F852FD06FF7DA8A8FD05FF27F8F8527D7D7D8352F8F852A87D7D7D837D
%A827FD04F8A8FD0FFF7DFD04F852A87D837D7D7D837D27F8F8A8FD05FF52
%F8F8F8FD06FF27F8F8FD047D847D27F827FD06FFA852F8A8FD06FF27F8F8
%FD047DA858F8F827FD04FFA827F8F8F82727FD05FFF8F8F8FD057DF8F859
%FD057D8352FD04F8A8FD11FF7DFD04F858FD067D52F8F852FD07FF27277D
%FD07FFF8F8F8837D7D7D52F8F8F8527DFFFFFF52FD05F852FD04FFA8F8F8
%27837D7D7D27F8F8A8FFFFFF7DFD08F8A8FFFFFF7DF8F827837D7D52F8F8
%52A87D837DA87D27F8F8F8A8FD13FF7DF8F8F82D7D847D837DA827F8F8FD
%06FFA8FD057DFD06FF7DF8277D837DA827FD05F827A852FD06F852FD05FF
%52F8277D837D7DF8F852FFFFFFA827F8F8F8525227F8F8F8FD04FF27F827
%7D837D7DF8F8FD067D52F8F8F87DFD15FF52F8F8F859FD057D27F852FD05
%FFA8FD06F852FD05FFA8F8F8527D7D52F8F85227FD07F8A8FF5252A8FD05
%FF7DF8F87D7D7D52F8F8A8FFFFFF7DF8F8F8A8FFFFA827F8F852FFFFFF52
%F8F87D7D7D52F8F858837D837D7DF8F8F852FD17FF27F8F827A87D837D7D
%F8F87DFD05FF7DFD06F852FD06FFF8F827A87D52F8F8A8FF7D52FD05F87D
%A8FD09FFF8F852A87D52F827FD04FF27F8F827FD04FF7DF8F827FFFFFFA8
%F8F852A87D7DF8F8FD047D8327F8F8F8A8FD17FF52F8F8F8587D7D8352F8
%F8A8FD05FF7DFD06F827FD06FF27F8277D832DF8F8FD04FFA827FD05F852
%A8FD06FFA827F8527D8327F8F8FFFFFF7DF8F8F827FD04FFA8F8F8F8A8FF
%FFA8F8F8527D7D52F8F858A87DA87D27F8F852FD05FF7D52275252FD05FF
%7D5227527DFD05FFF8F8F8527D837D58F8F8A8FD05FF7DFD06F852FD06FF
%27F827A87D52F827FD06FFA852FD05F852A8FD05FF27F827A87D2EF852FD
%04FFA8F827FD05FFA8F8F8F87DFFFFFFF8F852A87D7DF8F8FD057DF8F8F8
%7DFD04FF52FD06F8A8FFFFFD06F827FD04FF27F8F827837D8352F8F8A8FD
%05FF7DFD06F827FD06FF27F8277DA82DF8F8FD09FF5227FD04F827A8FFFF
%FF27F8527DA827F827FD05FFA8FD06FFA8F8F8F8A8FFFFA8F8F8527D8352
%F8F852A87D8352F8F8F8A8FFFFFF52F8F8F82727F8F8F8FF27F8F8272727
%F8F852FFFFFF7DF8F827FD047DF8F87DFD05FFA827FD05F87DFD06FFF8F8
%27A87D52F8F8A8FD0AFF52FD05F8277DFFF8F852A87D52F827FD04FF7DA8
%7DA8FD04FF7DF8F8F8A8FFFFA8F8F852837D7DF8F8597D7D7D52F8F8F8FF
%FFFFA8F8F8F852FFFF52F8A87DF8F8F8A8FFA82727A8FFFFFFA8F8F8F87D
%7D7D58F8F852FD07FF27F8F8F8A8FD06FFA8F8F8527D7D52F8F87DFD05FF
%A827A8FFFF52F8F827FD07F8527D7D2EF8F8A8FFFFFF27F8F827FD04FF52
%F8F827FFFFFF52F8F87D7D7D52F8F852A87DA852F8F852FFFFFFA8F8F8F8
%FD06FF7DF8F852FFFFFFA8FD05FFA8F8F8277D837DA827F827FD07FF27F8
%F8F8A8FD06FF7DF8F858A87D83F8F827FD05FFF8F8F85227F8F827A8A827
%FD04F8277D837D7DF8F852FFFFFF7DF8F8F87DFFA87DF8F8F87DFFFFFF52
%F8277D837D7DF8F8FD047D52F8F827FFFFFF7DF8F827FD06FF27F8F87DFD
%09FFA8F8F8F8FD047D52F8F87DFD06FF27F8F8F8A8FD06FF27F8F8FD047D
%52F8F8A8FFFFFFA852FD06F87DFFFFFF7D52F8F827837D7D7D27F827A8FF
%FFFF27FD08F852FFFFFFA8F8F827A87D7D52F8F858837DA852F8F852FFFF
%FFA8F8F8F8FD06FF52F8F852FD09FFA8F8F8F87D837D837D27F827FD06FF
%27F8F8F8A8FD05FF7DF8F8527D837D8352F8F852FD05FFA87D27F87DA8FD
%05FF52F8F87D7D837DA852F8F852FD04FF27FD06F852FD04FF27F8F87D7D
%837D7DF8F8FD047D52F8F827FFFFFFA8F8F8F87DFFFFA852FF52F8F827FF
%FFFF7D52FD04FFA8F8F8F8FD057D27F8F852FD05FF27F8F8F8A8FD04FF7D
%F8F827FD067D27F8F852FD06FF27F8FD06FF7DF8F827FD067DF8F8F87DFD
%04FF5252F82727A8FD04FF52F8F852FD047D52F8F858A87DA852F8F827FD
%04FF27F8F8277DA827F827A8F8F8F852A87DF8F852FFFFFF7DF8F8277DA8
%7D837DA827F8F852FD04FF27F8F827A8FFFFFF7DF8F8F852A87D837D837D
%83F8F8F87DFD05FFA852FD05FF7DF8F8277DA87D837D837D7DF8F8F8A8FD
%0CFF52F8F8277D837D837D7DF8F8FD057DF8F8F8A8FFFFFFA8FD07F852FF
%7DFD07F8A8FFFFFF52F8F827FD077DF8F8F827A8FFFFFFA8FFA8FFFFFF52
%F8F8F82DA8FD087DF8F8F852A8FD09FF52F8F8F85284FD077D58F8F8F852
%FD09FFA827F8F8F852837D7D7D8352F8F852A87D837D27F8F852FD04FFA8
%27FD04F87DFFFFFF7DFD04F827A8FD04FF27F8F8527D7D7D83FD047D27F8
%F8F852A8A8FFFFFFA87D27F8F8F852A87D837D7D7D83FD047DF8F8F82752
%A8A8FFFFFFA87DF8F8F82752A87D837D7D7D837D7D7D59F8F8F82752A8FD
%04FF7D52F8F8F8277DA87D83FD047DF8F859FD047D27F8F827A8FD05FFA8
%A87DFFFFFFA8FFFFFF7DA8A8FD05FF7DF8F8F85283FD087D27FD06F827FD
%06F85283FD0C7D27FD06F827FD05F8275283FD0C7DFD05F827F827FD05F8
%275883FD067D52F8F852A87D837D7DF8F8F87DFD17FF52F8F8F8A87D837D
%837D837D837DA85227FD09F8527DA87D837D837D837D837D837D837D8352
%27FD08F827527DA87D837D837D837D837D837D837D7D2E27FD07F8212758
%7DA87D837D837D837D7DF8F8FD067D27F8F8F8FD16FF7DF8F8F852FD0E7D
%52FD04275252FD127D837D7D2DFD04275252FD127D837D7DFD0527525283
%FD0A7D52F8F858837D837D8452F8F8F827FD15FFF8F8F8277D837D837D7D
%7D837D7D7D837D7D7DA87D847DA87D837D837D7D7D837D7D7D837D7D7D83
%7D7D7D837D837DA87D847DA87D837D837D7D7D837D7D7D837D7D7D837D7D
%7D837D837DA87D847DA87D837D837D7D7D837D7D7D837D7DF8F8FD047D83
%7D7D27F8F8F852FD13FFFD04F852837D7D7D837D7D7D837D7D7D837D7D7D
%837D7D7D837D7D7D837D7D7D837D7D7D837D7D7D837D7D7D837D7D7D837D
%7D7D837D7D7D837D7D7D837D7D7D837D7D7D837D7D7D837D7D7D837D7D7D
%837D7D7D837D7D7D837D7D7DA852F8F8527D527D52837D83FD04F852FD11
%FF27F8F8F827A87D7D527D5258527D5258527D5258527D5258527D525852
%7D5258527D5258527D5258527D5258527D5258527D5258527D5258527D52
%58527D5258527D5258527D5258527D5258527D5258527D5258527D525852
%7D5258527D5252FD07F852837D7DFD04F827FD0EFFA8FD04F8277D7D8427
%FD5FF8277D837D7DFD05F87DA8FD09FFA852FD04F8277D7DA852FD61F82D
%FD047DFD06F8277D7DA8A8A87D7D27FD05F8277D7D8358FD63F8527DA87D
%7D27FD08F827FD07F82752A87DA87D27FD0BF8527DA87D7DF8527D52F8F8
%52A8FD0EF827A852F8F87D52F8F852A8A87D27FD0FF852A8FF7D27F8F8F8
%7D7D27FD16F852FD047D5227FD0DF82752A87D7D7D27FD0CF8A8FFA8A8FF
%A8F8FFA8F8F8FFA8FD0EF852FFFFF8F8A8FFF852FFFF7DFFA8FD0EF827FF
%A87DFFA8F8F852FFFF27FD17F8527DA87DA87D7D2727FD07F8272D7D7D83
%7DA87D27FD0DF8A8A8F8F8A8FFF852FF52A8FF27FD0EF827FFFFA8F8A8A8
%F8A8FFF8F852FF27FD0DF852FF52F827A8F8F87DFFFF7DFD18F82758837D
%7D7D837D7D52525258527D7D83FD047D52FD0FF87DFF7DA8FF52F8F87DFF
%FF7DFD0FF827FFA8FF277DA827FF52FD12F827A8FFA852F8F8F8FF527DA8
%FD19F82752837DA87D837DA87DA87DA87D837DA87D7D27FD10F8A8FF7D7D
%FFA8F8F852FFFFFD10F827FF52FD04A852FF7DF8F8F827FD0FF8277DFFFF
%FFF852FF5252FF27FD1BF85252837D7D7D837D7D7D837D7D5227FD12F87D
%FFF8F852FF27F8F8FF7DFD10F827FF52F8FFFFA8F8FF7DF8F852FF52FD0D
%F8527DF8F852FF527DFFA8FFFF7DFD1DF82752527D527D587D5252FD15F8
%A8FF7D7DFFFF27F827FFA8FD10F827FF52F87DFFA8F852FF7D7DFFFFFD0E
%F852FF7D52A8FF52FF7D2727A8FF27FD3BF852A8A8FFA852F8F8F8A852FD
%10F827A852F827A87DF8F852FFFFA827FD0FF852FFA8FF2752A827F8F827
%FF27FD59F827FD07F827FD13F827FD95F852FD7F27FD7FFFFF
%%EndData
%%EndComments
%%BeginProlog
%%BeginResource: procset Adobe_level2_AI5 1.2 0
%%Title: (Adobe Illustrator (R) Version 5.0 Level 2 Emulation)
%%Version: 1.2 0
%%CreationDate: (04/10/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /Adobe_level2_AI5 26 dict dup begin
	put
	/packedarray where not
	{
		userdict begin
		/packedarray
		{
			array astore readonly
		} bind def
		/setpacking /pop load def
		/currentpacking false def
	 end
		0
	} if
	pop
	userdict /defaultpacking currentpacking put true setpacking
	/initialize
	{
		Adobe_level2_AI5 begin
	} bind def
	/terminate
	{
		currentdict Adobe_level2_AI5 eq
		{
		 end
		} if
	} bind def
	mark
	/setcustomcolor where not
	{
		/findcmykcustomcolor
		{
			(AI8_CMYK_CustomColor)
			6 packedarray
		} bind def
		/findrgbcustomcolor
		{
			(AI8_RGB_CustomColor)
			5 packedarray
		} bind def
		/setcustomcolor
		{
			exch 
			aload pop dup
			(AI8_CMYK_CustomColor) eq
			{
				pop pop
				4
				{
					4 index mul
					4 1 roll
				} repeat
				5 -1 roll pop
				setcmykcolor
			}
			{
				dup (AI8_RGB_CustomColor) eq
				{
					pop pop
					3
					{
						1 exch sub
						3 index mul 
						1 exch sub
						3 1 roll
					} repeat
					4 -1 roll pop
					setrgbcolor
				}
				{
					pop
					4
					{
						4 index mul 4 1 roll
					} repeat
					5 -1 roll pop
					setcmykcolor
				} ifelse
			} ifelse
		}
		def
	} if
	/setAIseparationgray
	{
		false setoverprint
		0 setgray
		/setseparationgray where{
			pop setseparationgray
		}{
			/setcolorspace where{
				pop
				[/Separation (All) /DeviceCMYK {dup dup dup}] setcolorspace
				1 exch sub setcolor
			}{
				setgray
			}ifelse
		}ifelse
	} def
	
	/gt38? mark {version cvr cvx exec} stopped {cleartomark true} {38 gt exch pop} ifelse def
	userdict /deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt put
	userdict /level2?
	systemdict /languagelevel known dup
	{
		pop systemdict /languagelevel get 2 ge
	} if
	put
/level2ScreenFreq
{
 begin
		60
		HalftoneType 1 eq
		{
			pop Frequency
		} if
		HalftoneType 2 eq
		{
			pop GrayFrequency
		} if
		HalftoneType 5 eq
		{
			pop Default level2ScreenFreq
		} if
 end
} bind def
userdict /currentScreenFreq  
	level2? {currenthalftone level2ScreenFreq} {currentscreen pop pop} ifelse put
level2? not
	{
		/setcmykcolor where not
		{
			/setcmykcolor
			{
				exch .11 mul add exch .59 mul add exch .3 mul add
				1 exch sub setgray
			} def
		} if
		/currentcmykcolor where not
		{
			/currentcmykcolor
			{
				0 0 0 1 currentgray sub
			} def
		} if
		/setoverprint where not
		{
			/setoverprint /pop load def
		} if
		/selectfont where not
		{
			/selectfont
			{
				exch findfont exch
				dup type /arraytype eq
				{
					makefont
				}
				{
					scalefont
				} ifelse
				setfont
			} bind def
		} if
		/cshow where not
		{
			/cshow
			{
				[
				0 0 5 -1 roll aload pop
				] cvx bind forall
			} bind def
		} if
	} if
	cleartomark
	/anyColor?
	{
		add add add 0 ne
	} bind def
	/testColor
	{
		gsave
		setcmykcolor currentcmykcolor
		grestore
	} bind def
	/testCMYKColorThrough
	{
		testColor anyColor?
	} bind def
	userdict /composite?
	1 0 0 0 testCMYKColorThrough
	0 1 0 0 testCMYKColorThrough
	0 0 1 0 testCMYKColorThrough
	0 0 0 1 testCMYKColorThrough
	and and and
	put
	composite? not
	{
		userdict begin
		gsave
		/cyan? 1 0 0 0 testCMYKColorThrough def
		/magenta? 0 1 0 0 testCMYKColorThrough def
		/yellow? 0 0 1 0 testCMYKColorThrough def
		/black? 0 0 0 1 testCMYKColorThrough def
		grestore
		/isCMYKSep? cyan? magenta? yellow? black? or or or def
		/customColor? isCMYKSep? not def
	 end
	} if
 end defaultpacking setpacking
%%EndResource
%%BeginProcSet: Adobe_ColorImage_AI6 1.3 0
userdict /Adobe_ColorImage_AI6 known not
{
	userdict /Adobe_ColorImage_AI6 53 dict put 
} if
userdict /Adobe_ColorImage_AI6 get begin
/initialize { 
	Adobe_ColorImage_AI6 begin
	Adobe_ColorImage_AI6 {
		dup type /arraytype eq {
			dup xcheck {
				bind
			} if
		} if
		pop pop
	} forall
} def
/terminate { end } def
currentdict /Adobe_ColorImage_AI6_Vars known not {
	/Adobe_ColorImage_AI6_Vars 41 dict def
} if
Adobe_ColorImage_AI6_Vars begin
	/plateindex -1 def
	/_newproc null def
	/_proc1 null def
	/_proc2 null def
	/sourcearray 4 array def
	/_ptispace null def
	/_ptiname null def
	/_pti0 0 def
	/_pti1 0 def
	/_ptiproc null def
	/_ptiscale 0 def
	/_pticomps 0 def
	/_ptibuf 0 string def
	/_gtigray 0 def
	/_cticmyk null def
	/_rtirgb null def
	/XIEnable true def
	/XIType 0 def
	/XIEncoding 0 def
	/XICompression 0 def
	/XIChannelCount 0 def
	/XIBitsPerPixel 0 def
	/XIImageHeight 0 def
	/XIImageWidth 0 def
	/XIImageMatrix null def
	/XIRowBytes 0 def
	/XIFile null def
	/XIBuffer1 null def
	/XIBuffer2 null def
	/XIBuffer3 null def
	/XIDataProc null def
	/XIColorSpace /DeviceGray def
	/XIColorValues 0 def
	/XIPlateList false def
end
/ci6colorimage /colorimage where {/colorimage get}{null} ifelse def
/ci6image systemdict /image get def
/ci6curtransfer systemdict /currenttransfer get def
/ci6curoverprint /currentoverprint where {/currentoverprint get}{{_of}} ifelse def
/ci6foureq {
	4 index ne {
		pop pop pop false
	}{
		4 index ne {
			pop pop false
		}{
			4 index ne {
				pop false
			}{
				4 index eq
			} ifelse
		} ifelse
	} ifelse
} def
/ci6testplate {
	Adobe_ColorImage_AI6_Vars begin
		/plateindex -1 def
		/setcmykcolor where {
			pop
			gsave
			1 0 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 1 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 1 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 0 1 setcmykcolor systemdict /currentgray get exec 1 exch sub
			grestore
			1 0 0 0 ci6foureq { 
				/plateindex 0 def
			}{
				0 1 0 0 ci6foureq { 
					/plateindex 1 def
				}{
					0 0 1 0 ci6foureq {
						/plateindex 2 def
					}{
						0 0 0 1 ci6foureq { 
							/plateindex 3 def
						}{
							0 0 0 0 ci6foureq {
								/plateindex 5 def
							} if
						} ifelse
					} ifelse
				} ifelse
			} ifelse
			pop pop pop pop
		} if
		plateindex
 end
} def
/ci6concatprocs {
	/packedarray where {
		pop dup type /packedarraytype eq 2 index type
		/packedarraytype eq or
	}{
		false
	} ifelse
	{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		_proc1 aload pop
		_proc2 aload pop
		_proc1 length
		_proc2 length add
		packedarray cvx
	}{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		/_newproc _proc1 length _proc2 length add array def
		_newproc 0 _proc1 putinterval
		_newproc _proc1 length _proc2 putinterval
		_newproc cvx
	} ifelse
} def
/ci6istint {
	type /arraytype eq 
} def
/ci6isspot {
	dup type /arraytype eq {
		dup length 1 sub get /Separation eq
	}{
		pop false
	} ifelse
} def
/ci6spotname {
	dup ci6isspot {dup length 2 sub get}{pop ()} ifelse
} def
/ci6altspace {
	aload pop pop pop ci6colormake
} def
/ci6numcomps {
	dup /DeviceGray eq {
		pop 1
	}{
		dup /DeviceRGB eq {
			pop 3
		}{
			/DeviceCMYK eq {
				4
			}{
				1
			} ifelse
		} ifelse
	} ifelse
} def
/ci6marksplate {
	dup /DeviceGray eq {
		pop plateindex 3 eq
	}{
		dup /DeviceRGB eq {
			pop plateindex 5 ne
		}{
			dup /DeviceCMYK eq {
				pop plateindex 5 ne
			}{
				dup ci6isspot {
					/findcmykcustomcolor where {
						pop
						dup length 2 sub get
						0.1 0.1 0.1 0.1 5 -1 roll
						findcmykcustomcolor 1 setcustomcolor
						systemdict /currentgray get exec
						1 ne
					}{
						pop plateindex 5 ne
					} ifelse
				}{
					pop plateindex 5 ne
				} ifelse
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colormake {
	dup ci6numcomps
	exch 1 index 2 add 1 roll
	dup 1 eq {pop}{array astore} ifelse
	exch
} def
/ci6colorexpand {
	dup ci6spotname exch
	dup ci6istint {
		ci6altspace
		exch 4 1 roll
	}{
		1 3 1 roll
	} ifelse
} def
/ci6colortint {
	dup /DeviceGray eq {
		3 1 roll 1 exch sub mul 1 exch sub exch
	}{
		dup /DeviceRGB eq {
			3 1 roll {1 exch sub 1 index mul 1 exch sub exch} forall pop 3 array astore exch
		}{
			dup /DeviceCMYK eq {
				3 1 roll {1 index mul exch} forall pop 4 array astore exch
			}{
				3 1 roll mul exch
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colortocmyk {
	dup /DeviceGray eq {
		pop 1 exch sub 0 0 0 4 -1 roll 4 array astore
	}{
		dup /DeviceRGB eq {
			pop aload pop _rgbtocmyk 4 array astore
		}{
			dup /DeviceCMYK eq {
				pop
			}{
				ci6altspace ci6colortint ci6colortocmyk
			} ifelse
		} ifelse
	} ifelse
} def
/ci6makeimagedict {
	7 dict begin
		/ImageType 1 def
		/Decode exch def
		/DataSource exch def
		/ImageMatrix exch def
		/BitsPerComponent exch def
		/Height exch def
		/Width exch def
	currentdict end
} def
/ci6stringinvert {
	0 1 2 index length 1 sub {
		dup 2 index exch get 255 exch sub 2 index 3 1 roll put
	} for
} def
/ci6stringknockout {
	0 1 2 index length 1 sub {
		255 2 index 3 1 roll put
	} for
} def
/ci6stringapply {
	0 1 4 index length 1 sub {
		dup
		4 index exch get
		3 index 3 1 roll
		3 index exec
	} for
	pop exch pop
} def
/ci6walkrgbstring {
	0 3 index
	dup length 1 sub 0 3 3 -1 roll {
		3 getinterval {} forall
		5 index exec
		3 index
	} for
	
	 5 {pop} repeat
} def
/ci6walkcmykstring
{
	0 3 index
	dup length 1 sub 0 4 3 -1 roll {
		4 getinterval {} forall
		
		6 index exec
		
		3 index
		
	} for
	
	5 { pop } repeat
	
} def
/ci6putrgbtograystr
{
	.11 mul exch
	
	.59 mul add exch
	
	.3 mul add
	
	cvi 3 copy put
	
	pop 1 add
} def
/ci6putcmyktograystr
{
	exch .11 mul add
	
	exch .59 mul add
	
	exch .3 mul add
	
	dup 255 gt { pop 255 } if
	
	255 exch sub cvi 3 copy put
	
	pop 1 add
} def
/ci6rgbtograyproc {	
	Adobe_ColorImage_AI6_Vars begin 
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putrgbtograystr load exch
		ci6walkrgbstring
 end
} def
/ci6cmyktograyproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putcmyktograystr load exch
		ci6walkcmykstring
 end
} def
/ci6separatecmykproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		
		XIBuffer3
		
		0 2 index
		
		plateindex 4 2 index length 1 sub {
			get 255 exch sub
			
			3 copy put pop 1 add
			
			2 index
		} for
		pop pop exch pop
 end
} def
	
/ci6compositeimage {
	dup 1 eq {
		pop pop image
	}{
		/ci6colorimage load null ne {
			ci6colorimage
		}{
			3 1 roll pop
			sourcearray 0 3 -1 roll put
			3 eq {/ci6rgbtograyproc}{/ci6cmyktograyproc} ifelse load
			image
		} ifelse
	} ifelse
} def
/ci6knockoutimage {
	gsave
	0 ci6curtransfer exec 1 ci6curtransfer exec
	eq {
		0 ci6curtransfer exec 0.5 lt
	}{
		0 ci6curtransfer exec 1 ci6curtransfer exec gt
	} ifelse
	{{pop 0}}{{pop 1}} ifelse
	systemdict /settransfer get exec
	ci6compositeimage
	grestore
} def
/ci6drawimage {
	ci6testplate -1 eq {
		pop ci6compositeimage
	}{
		dup type /arraytype eq {
			dup length plateindex gt {plateindex get}{pop false} ifelse
		}{
			{
				true
			}{
				dup 1 eq {plateindex 3 eq}{plateindex 3 le} ifelse
			} ifelse
		} ifelse
		{
			dup 1 eq {
				pop pop ci6image
			}{
				dup 3 eq {
					ci6compositeimage
				}{
					pop pop
					sourcearray 0 3 -1 roll put
					/ci6separatecmykproc load
					ci6image
				} ifelse
			} ifelse
		}{
			ci6curoverprint {
				7 {pop} repeat
			}{
				ci6knockoutimage
			} ifelse
		} ifelse
	} ifelse
} def
/ci6proctintimage {
	/_ptispace exch store /_ptiname exch store /_pti1 exch store /_pti0 exch store /_ptiproc exch store
	/_pticomps _ptispace ci6numcomps store
	/_ptiscale _pti1 _pti0 sub store
	level2? {
		_ptiname length 0 gt version cvr 2012 ge and {
			[/Separation _ptiname _ptispace {_ptiproc}] setcolorspace
			[_pti0 _pti1] ci6makeimagedict ci6image
		}{
			[/Indexed _ptispace 255 {255 div _ptiscale mul _pti0 add _ptiproc}] setcolorspace
			[0 255] ci6makeimagedict ci6image
		} ifelse
	}{
		_pticomps 1 eq {
			{
				dup
				{
					255 div _ptiscale mul _pti0 add _ptiproc 255 mul cvi put
				} ci6stringapply
			} ci6concatprocs ci6image
		}{
			{
				dup length _pticomps mul dup _ptibuf length ne {/_ptibuf exch string store}{pop} ifelse
				_ptibuf {
					exch _pticomps mul exch 255 div _ptiscale mul _pti0 add _ptiproc
					_pticomps 2 add -2 roll
					_pticomps 1 sub -1 0 {
						1 index add 2 index exch
						5 -1 roll
						255 mul cvi put
					} for
					pop pop
				} ci6stringapply
			} ci6concatprocs false _pticomps
			/ci6colorimage load null eq {7 {pop} repeat}{ci6colorimage} ifelse
		} ifelse
	} ifelse
} def
/ci6graytintimage {
	/_gtigray 5 -1 roll store
	{1 _gtigray sub mul 1 exch sub} 4 1 roll
	/DeviceGray ci6proctintimage
} def
/ci6cmyktintimage {
	/_cticmyk 5 -1 roll store
	{_cticmyk {1 index mul exch} forall pop} 4 1 roll
	/DeviceCMYK ci6proctintimage
} def
/ci6rgbtintimage {
	/_rtirgb 5 -1 roll store
	{_rtirgb {1 exch sub 1 index mul 1 exch sub exch} forall pop} 4 1 roll
	/DeviceRGB ci6proctintimage
} def
/ci6tintimage {
	ci6testplate -1 eq {
		ci6colorexpand
		3 -1 roll 5 -1 roll {0}{0 exch} ifelse 4 2 roll
		dup /DeviceGray eq {
			pop ci6graytintimage
		}{
			dup /DeviceRGB eq {
				pop ci6rgbtintimage
			}{
				pop ci6cmyktintimage
			} ifelse
		} ifelse
	}{
		dup ci6marksplate {
			plateindex 5 lt {
				ci6colortocmyk plateindex get
				dup 0 eq ci6curoverprint and {
					7 {pop} repeat
				}{
					1 exch sub
					exch {1 0}{0 1} ifelse () ci6graytintimage
				} ifelse
			}{
				pop exch {0}{0 exch} ifelse 0 3 1 roll () ci6graytintimage
			} ifelse
		}{
			ci6curoverprint {
				8 {pop} repeat
			}{
				pop pop pop
				{pop 1} 0 1 () /DeviceGray ci6proctintimage
			} ifelse
		} ifelse
	} ifelse
} def
/XINullImage {
} def
/XIImageMask {
	XIImageWidth XIImageHeight false
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	imagemask
} def
/XIImageTint {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	XIType 3 eq XIColorValues XIColorSpace ci6tintimage
} def
/XIImage {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	false XIChannelCount XIPlateList ci6drawimage
} def
/XG {
	pop pop
} def
/XF {
	13 {pop} repeat
} def
/Xh {
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		/XIImageMatrix exch def
		0 0 moveto
		XIImageMatrix concat
		XIImageWidth XIImageHeight scale
		
		/_lp /null ddef
		_fc
		/_lp /imagemask ddef
 end
} def
/XH {
	Adobe_ColorImage_AI6_Vars begin
		grestore
 end
} def
/XIEnable {
	Adobe_ColorImage_AI6_Vars /XIEnable 3 -1 roll put
} def
/XC {
	Adobe_ColorImage_AI6_Vars begin
		ci6colormake
		/XIColorSpace exch def
		/XIColorValues exch def
 end
} def
/XIPlates {
	Adobe_ColorImage_AI6_Vars begin
		/XIPlateList exch def
 end
} def
/XI
{
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		cvi dup
		256 idiv /XICompression exch store
		256 mod /XIEncoding exch store
		pop pop
		/XIChannelCount exch def
		/XIBitsPerPixel exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		pop pop pop pop
		/XIImageMatrix exch def
		XIBitsPerPixel 1 eq {
			XIImageWidth 8 div ceiling cvi
		}{
			XIImageWidth XIChannelCount mul
		} ifelse
		/XIRowBytes exch def
		XIEnable {
			/XIBuffer3 XIImageWidth string def
			XICompression 0 eq {
				/XIBuffer1 XIRowBytes string def
				XIEncoding 0 eq {
					{currentfile XIBuffer1 readhexstring pop}
				}{
					{currentfile XIBuffer1 readstring pop}
				} ifelse
			}{
				/XIBuffer1 256 string def
				/XIBuffer2 XIRowBytes string def
				{currentfile XIBuffer1 readline pop (%) anchorsearch {pop} if}
				/ASCII85Decode filter /DCTDecode filter
				/XIFile exch def
				{XIFile XIBuffer2 readstring pop}
			} ifelse
			/XIDataProc exch def
			
			XIType 1 ne {
				0 setgray
			} if
			XIType 1 eq {
				XIImageMask
			}{
				XIType 2 eq XIType 3 eq or {
					XIImageTint
				}{
					XIImage
				} ifelse
			} ifelse
		}{
			XINullImage
		} ifelse
		/XIPlateList false def
		grestore
 end
} def
end
%%EndProcSet
%%BeginResource: procset Adobe_Illustrator_AI5 1.3 0
%%Title: (Adobe Illustrator (R) Version 8.0 Full Prolog)
%%Version: 1.3 0
%%CreationDate: (3/7/1994) ()
%%Copyright: ((C) 1987-1998 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5_vars 112 dict dup begin
put
/_?cmyk false def
/_eo false def
/_lp /none def
/_pf
{
} def
/_ps
{
} def
/_psf
{
} def
/_pss
{
} def
/_pjsf
{
} def
/_pjss
{
} def
/_pola 0 def
/_doClip 0 def
/cf currentflat def
/_lineorientation 0 def
/_charorientation 0 def
/_yokoorientation 0 def
/_tm matrix def
/_renderStart
[
/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0
] def
/_renderEnd
[
null null null null /i1 /i1 /i1 /i1
] def
/_render -1 def
/_shift [0 0] def
/_ax 0 def
/_ay 0 def
/_cx 0 def
/_cy 0 def
/_leading
[
0 0
] def
/_ctm matrix def
/_mtx matrix def
/_sp 16#020 def
/_hyphen (-) def
/_fontSize 0 def
/_fontAscent 0 def
/_fontDescent 0 def
/_fontHeight 0 def
/_fontRotateAdjust 0 def
/Ss 256 string def
Ss 0 (fonts/) putinterval
/_cnt 0 def
/_scale [1 1] def
/_nativeEncoding 0 def
/_useNativeEncoding 0 def
/_tempEncode 0 def
/_pntr 0 def
/_tDict 2 dict def
/_hfname 100 string def
/_hffound false def
/Tx
{
} def
/Tj
{
} def
/CRender
{
} def
/_AI3_savepage
{
} def
/_gf null def
/_cf 4 array def
/_rgbf 3 array def
/_if null def
/_of false def
/_fc
{
} def
/_gs null def
/_cs 4 array def
/_rgbs 3 array def
/_is null def
/_os false def
/_sc
{
} def
/_pd 1 dict def
/_ed 15 dict def
/_pm matrix def
/_fm null def
/_fd null def
/_fdd null def
/_sm null def
/_sd null def
/_sdd null def
/_i null def
/_lobyte 0 def
/_hibyte 0 def
/_cproc null def
/_cscript 0 def
/_hvax 0 def
/_hvay 0 def
/_hvwb 0 def
/_hvcx 0 def
/_hvcy 0 def
/_bitfont null def
/_bitlobyte 0 def
/_bithibyte 0 def
/_bitkey null def
/_bitdata null def
/_bitindex 0 def
/discardSave null def
/buffer 256 string def
/beginString null def
/endString null def
/endStringLength null def
/layerCnt 1 def
/layerCount 1 def
/perCent (%) 0 get def
/perCentSeen? false def
/newBuff null def
/newBuffButFirst null def
/newBuffLast null def
/clipForward? false def
end
userdict /Adobe_Illustrator_AI5 known not {
	userdict /Adobe_Illustrator_AI5 100 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/initialize
{
	Adobe_Illustrator_AI5 dup begin
	Adobe_Illustrator_AI5_vars begin
	/_aicmykps where {pop /_?cmyk _aicmykps def}if
	discardDict
	{
		bind pop pop
	} forall
	dup /nc get begin
	{
		dup xcheck 1 index type /operatortype ne and
		{
			bind
		} if
		pop pop
	} forall
 end
	newpath
} def
/terminate
{
 end
 end
} def
/_
null def
/ddef
{
	Adobe_Illustrator_AI5_vars 3 1 roll put
} def
/xput
{
	dup load dup length exch maxlength eq
	{
		dup dup load dup
		length 2 mul dict copy def
	} if
	load begin
	def
 end
} def
/npop
{
	{
		pop
	} repeat
} def
/hswj
{
	dup stringwidth 3 2 roll
	{
		_hvwb eq { exch _hvcx add exch _hvcy add } if
		exch _hvax add exch _hvay add
	} cforall
} def
/vswj
{
	0 0 3 -1 roll
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			dup cstring stringwidth 5 2 roll
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			4 -1 roll sub exch
			3 -1 roll sub exch
		}
		{
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			_fontHeight sub
		} ifelse
	} cforall
} def
/swj
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hswj } { vswj } ifelse
} def
/sw
{
	0 0 0 6 3 roll swj
} def
/vjss
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			5 index setmatrix stroke
			grestore
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			gsave
			2 index false charpath
			6 index setmatrix stroke
			grestore
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjss
{
	4 1 roll
	{
		dup cstring
		gsave
		false charpath currentpoint
		5 index setmatrix stroke
		grestore
		moveto
		_sp eq
		{
			5 index 5 index rmoveto
		} if
		2 copy rmoveto
	} cforall
	6 npop
} def
/jss
{
	_lineorientation 0 eq { hjss } { vjss } ifelse
} def
/ss
{
	0 0 0 7 3 roll jss
} def
/vjsp
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			false charpath
            currentpoint
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			2 index false charpath
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjsp
{
    4 1 roll
    {
        dup cstring
        false charpath
        _sp eq
        {
            5 index 5 index rmoveto
        } if
        2 copy rmoveto
    } cforall
    6 npop
} def
/jsp
{
	matrix currentmatrix
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/sp
{
    matrix currentmatrix
    0 0 0 7 3 roll
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/pl
{
	transform
	0.25 sub round 0.25 add exch
	0.25 sub round 0.25 add exch
	itransform
} def
/setstrokeadjust where
{
	pop true setstrokeadjust
	/c
	{
		curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll curveto
	} def
	/V
	/v load def
	/y
	{
		2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		lineto
	} def
	/L
	/l load def
	/m
	{
		moveto
	} def
}
{
	/c
	{
		pl curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll pl curveto
	} def
	/V
	/v load def
	/y
	{
		pl 2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		pl lineto
	} def
	/L
	/l load def
	/m
	{
		pl moveto
	} def
} ifelse
/d
{
	setdash
} def
/cf
{
} def
/i
{
	dup 0 eq
	{
		pop cf
	} if
	setflat
} def
/j
{
	setlinejoin
} def
/J
{
	setlinecap
} def
/M
{
	setmiterlimit
} def
/w
{
	setlinewidth
} def
/XR
{
	0 ne
	/_eo exch ddef
} def
/H
{
} def
/h
{
	closepath
} def
/N
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			_eo {eoclip} {clip} ifelse /_doClip 0 ddef
		} if
		newpath
	}
	{
		/CRender
		{
			N
		} ddef
	} ifelse
} def
/n
{
	N
} def
/F
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _pf grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _fc
			/_doClip 0 ddef
		}
		{
			_pf
		} ifelse
	}
	{
		/CRender
		{
			F
		} ddef
	} ifelse
} def
/f
{
	closepath
	F
} def
/S
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _ps grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			_ps
		} ifelse
	}
	{
		/CRender
		{
			S
		} ddef
	} ifelse
} def
/s
{
	closepath
	S
} def
/B
{
	_pola 0 eq
	{
		_doClip 1 eq
		gsave F grestore
		{
			gsave S grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			S
		} ifelse
	}
	{
		/CRender
		{
			B
		} ddef
	} ifelse
} def
/b
{
	closepath
	B
} def
/W
{
	/_doClip 1 ddef
} def
/*
{
	count 0 ne
	{
		dup type /stringtype eq
		{
			pop
		} if
	} if
	newpath
} def
/u
{
} def
/U
{
} def
/q
{
	_pola 0 eq
	{
		gsave
	} if
} def
/Q
{
	_pola 0 eq
	{
		grestore
	} if
} def
/*u
{
	_pola 1 add /_pola exch ddef
} def
/*U
{
	_pola 1 sub /_pola exch ddef
	_pola 0 eq
	{
		CRender
	} if
} def
/D
{
	pop
} def
/*w
{
} def
/*W
{
} def
/`
{
	/_i save ddef
	clipForward?
	{
		nulldevice
	} if
	6 1 roll 4 npop
	concat pop
	userdict begin
	/showpage
	{
	} def
	0 setgray
	0 setlinecap
	1 setlinewidth
	0 setlinejoin
	10 setmiterlimit
	[] 0 setdash
	/setstrokeadjust where {pop false setstrokeadjust} if
	newpath
	0 setgray
	false setoverprint
} def
/~
{
 end
	_i restore
} def
/_rgbtocmyk
{
	3
	{
		1 exch sub 3 1 roll
	} repeat
	3 copy 1 4 1 roll
	3
	{
		3 index 2 copy gt
		{
			exch
		} if
		pop 4 1 roll
	} repeat
	pop pop pop
	4 1 roll
	3
	{
		3 index sub
		3 1 roll
	} repeat
	4 -1 roll
} def
/setrgbfill
{
	_rgbf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_rgbf aload pop setrgbcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/setrgbstroke
{
	_rgbs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_rgbs aload pop setrgbcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/O
{
	0 ne
	/_of exch ddef
	/_lp /none ddef
} def
/R
{
	0 ne
	/_os exch ddef
	/_lp /none ddef
} def
/g
{
	/_gf exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/G
{
	/_gs exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/k
{
	_cf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_cf aload pop setcmykcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/K
{
	_cs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_cs aload pop setcmykcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xa
{
	_?cmyk {
		3 npop k
	}{
		setrgbfill 4 npop
	} ifelse
} def
/XA
{
	_?cmyk {
		3 npop K
	}{
		setrgbstroke 4 npop
	} ifelse
} def
/Xs
{
	/_gf exch ddef
	5 npop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setAIseparationgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XS
{
	/_gs exch ddef
	5 npop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setAIseparationgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xx
{
	exch
	/_gf exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XX
{
	exch
	/_gs exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/x
{
	/_gf exch ddef
	findcmykcustomcolor
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/X
{
	/_gs exch ddef
	findcmykcustomcolor
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/XK
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		K
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		XA
	} ifelse
} def
/Xk
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		k
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		Xa
	} ifelse
} def
/A
{
	pop
} def
/annotatepage
{
userdict /annotatepage 2 copy known {get exec} {pop pop} ifelse
} def
/XT {
	pop pop
} def
/Xt {
	pop
} def
/discard
{
	save /discardSave exch store
	discardDict begin
	/endString exch store
	gt38?
	{
		2 add
	} if
	load
	stopped
	pop
 end
	discardSave restore
} bind def
userdict /discardDict 7 dict dup begin
put
/pre38Initialize
{
	/endStringLength endString length store
	/newBuff buffer 0 endStringLength getinterval store
	/newBuffButFirst newBuff 1 endStringLength 1 sub getinterval store
	/newBuffLast newBuff endStringLength 1 sub 1 getinterval store
} def
/shiftBuffer
{
	newBuff 0 newBuffButFirst putinterval
	newBuffLast 0
	currentfile read not
	{
	stop
	} if
	put
} def
0
{
	pre38Initialize
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff endString eq
			{
				cleartomark stop
			} if
			shiftBuffer
		} loop
	}
	{
	stop
	} ifelse
} def
1
{
	pre38Initialize
	/beginString exch store
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff beginString eq
			{
				/layerCount dup load 1 add store
			}
			{
				newBuff endString eq
				{
					/layerCount dup load 1 sub store
					layerCount 0 eq
					{
						cleartomark stop
					} if
				} if
			} ifelse
			shiftBuffer
		} loop
	} if
} def
2
{
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			endString eq {
				cleartomark stop
			} if
		}ifelse
	} loop
} def
3
{
	/beginString exch store
	/layerCnt 1 store
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			dup beginString eq
			{
				pop /layerCnt dup load 1 add store
			}
			{
				endString eq
				{
					layerCnt 1 eq
					{
						cleartomark stop
					}
					{
						/layerCnt dup load 1 sub store
					} ifelse
				} if
			} ifelse
		}ifelse
	} loop
} def
end
userdict /clipRenderOff 15 dict dup begin
put
{
	/n /N /s /S /f /F /b /B
}
{
	{
		_doClip 1 eq
		{
			/_doClip 0 ddef _eo {eoclip} {clip} ifelse
		} if
		newpath
	} def
} forall
/Tr /pop load def
/Bb {} def
/BB /pop load def
/Bg {12 npop} def
/Bm {6 npop} def
/Bc /Bm load def
/Bh {4 npop} def
end
/Lb
{
	6 npop
	7 2 roll
	5 npop
	0 eq
	{
		0 eq
		{
			(%AI5_BeginLayer) 1 (%AI5_EndLayer--) discard
		}
		{
			
			/clipForward? true def
			
			/Tx /pop load def
			/Tj /pop load def
			
			currentdict end clipRenderOff begin begin
		} ifelse
	}
	{
		0 eq
		{
			save /discardSave exch store
		} if
	} ifelse
} bind def
/LB
{
	discardSave dup null ne
	{
		restore
	}
	{
		pop
		clipForward?
		{
			currentdict
		 end
		 end
		 begin
					
			/clipForward? false ddef
		} if
	} ifelse
} bind def
/Pb
{
	pop pop
	0 (%AI5_EndPalette) discard
} bind def
/Np
{
	0 (%AI5_End_NonPrinting--) discard
} bind def
/Ln /pop load def
/Ap
/pop load def
/Ar
{
	72 exch div
	0 dtransform dup mul exch dup mul add sqrt
	dup 1 lt
	{
		pop 1
	} if
	setflat
} def
/Mb
{
	q
} def
/Md
{
} def
/MB
{
	Q
} def
/nc 4 dict def
nc begin
/setgray
{
	pop
} bind def
/setcmykcolor
{
	4 npop
} bind def
/setrgbcolor
{
	3 npop
} bind def
/setcustomcolor
{
	2 npop
} bind def
currentdict readonly pop
end
/XP
{
	4 npop
} bind def
/XD
{
	pop
} bind def
end
setpacking
%%EndResource
%%BeginResource: procset Adobe_cshow 2.0 8
%%Title: (Writing System Operators)
%%Version: 2.0 8
%%CreationDate: (1/23/89) ()
%%Copyright: ((C) 1992-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_cshow 14 dict dup begin put
/initialize
{
	Adobe_cshow begin
	Adobe_cshow
	{
		dup xcheck
		{
			bind
		} if
		pop pop
	} forall
 end
	Adobe_cshow begin
} def
/terminate
{
currentdict Adobe_cshow eq
	{
 end
	} if
} def
/cforall
{
	/_lobyte 0 ddef
	/_hibyte 0 ddef
	/_cproc exch ddef
	/_cscript currentfont /FontScript known { currentfont /FontScript get } { -1 } ifelse ddef
	{
		/_lobyte exch ddef
		_hibyte 0 eq
		_cscript 1 eq
		_lobyte 129 ge _lobyte 159 le and
		_lobyte 224 ge _lobyte 252 le and or and
		_cscript 2 eq
		_lobyte 161 ge _lobyte 254 le and and
		_cscript 3 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript 25 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript -1 eq
		or or or or and
		{
			/_hibyte _lobyte ddef
		}
		{
			_hibyte 256 mul _lobyte add
			_cproc
			/_hibyte 0 ddef
		} ifelse
	} forall
} def
/cstring
{
	dup 256 lt
	{
		(s) dup 0 4 3 roll put
	}
	{
		dup 256 idiv exch 256 mod
		(hl) dup dup 0 6 5 roll put 1 4 3 roll put
	} ifelse
} def
/clength
{
	0 exch
	{ 256 lt { 1 } { 2 } ifelse add } cforall
} def
/hawidthshow
{
	{
		dup cstring
		show
		_hvax _hvay rmoveto
		_hvwb eq { _hvcx _hvcy rmoveto } if
	} cforall
} def
/vawidthshow
{
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			-90 rotate
			0 _fontRotateAdjust rmoveto
			cstring
			_hvcx _hvcy _hvwb _hvax _hvay 6 -1 roll awidthshow
			0 _fontRotateAdjust neg rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			exch _hvay sub exch _hvax sub
			2 index _hvwb eq { exch _hvcy sub exch _hvcx sub } if
			3 2 roll
			cstring
			dup stringwidth pop 2 div neg _fontAscent neg rmoveto
			show
			moveto
		} ifelse
	} cforall
} def
/hvawidthshow
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hawidthshow } { vawidthshow } ifelse
} def
/hvwidthshow
{
	0 0 3 -1 roll hvawidthshow
} def
/hvashow
{
	0 0 0 6 -3 roll hvawidthshow
} def
/hvshow
{
	0 0 0 0 0 6 -1 roll hvawidthshow
} def
currentdict readonly pop end
setpacking
%%EndResource
%%BeginResource: procset Adobe_shading_AI8 1.0 0
%%Title: (Adobe Illustrator 8 Shading Procset)
%%Version: 1.0 0
%%CreationDate: (12/17/97) ()
%%Copyright: ((C) 1987-1997 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /Adobe_shading_AI8 10 dict dup begin put
/initialize {
	Adobe_shading_AI8 begin
	Adobe_shading_AI8 bdprocs
	Mesh /initialize get exec
} def
/terminate {
	currentdict Adobe_shading_AI8 eq {
	 end
	} if
} def
/bdprocs {
	{
		dup xcheck 1 index type /arraytype eq and {
			bind
		} if
		pop pop
	} forall
} def
/X! {pop} def
/X# {pop pop} def
/Mesh 40 dict def
Mesh begin
/initialize {
	Mesh bdprocs
	Mesh begin
		/emulate? /AI8MeshEmulation where {
			pop AI8MeshEmulation
		}{
			systemdict /shfill known not
		} ifelse def
 end
} def
/bd {
	shadingdict begin
} def
/paint {
	emulate? {
	 end
	}{
		/_lp /none ddef _fc /_lp /none ddef
		
		/AIColorSpace AIColorSpace tocolorspace store
		/ColorSpace AIColorSpace topsspace store
		
		version_ge_3010.106 not systemdict /setsmoothness known and {
			0.0001 setsmoothness
		} if
		
		composite? {
			/DataSource getdatasrc def
			Matrix concat
			currentdict end
			shfill
		}{
			AIColorSpace makesmarks AIPlateList markingplate and not isoverprint and {
			 end
			}{
				/ColorSpace /DeviceGray store
				/Decode [0 1 0 1 0 1] store
				/DataSource getplatesrc def
				Matrix concat
				currentdict end
				shfill
			} ifelse
		} ifelse
	} ifelse
} def
/shadingdict 12 dict def
shadingdict begin
	/ShadingType 6 def
	/BitsPerCoordinate 16 def
	/BitsPerComponent 8 def
	/BitsPerFlag 8 def
end
/datafile null def
/databuf 256 string def
/dataptr 0 def
/srcspace null def
/srcchannels 0 def
/dstchannels 0 def
/dstplate 0 def
/srctodstcolor null def
/getplatesrc {
	/srcspace AIColorSpace store
	/srcchannels AIColorSpace getnchannels store
	/dstchannels 1 store
	/dstplate getplateindex store
	/srctodstcolor srcspace makesmarks {
		dstplate 4 eq {
			{1 exch sub}
		}{
			{srcspace tocmyk 3 dstplate sub index 1 exch sub 5 1 roll 4 {pop} repeat}
		} ifelse
	}{
		{srcchannels {pop} repeat 1}
	} ifelse store
	/datafile getdatasrc store
	/rdpatch168 load DataLength () /SubFileDecode filter
} def
/getdatasrc {
	/rdcmntline load /ASCII85Decode filter
} def
/rdpatch168 {
	/dataptr 0 store
	49 rdcount
	4 {
		dup {pop srcchannels getint8} if
		dup {pop srctodstcolor dstchannels putint8 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdpatch3216 {
	/dataptr 0 store
	97 rdcount
	4 {
		dup {pop srcchannels getint16} if
		dup {pop srctodstcolor dstchannels putint16 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdcount {
	dup 0 gt {
		datafile databuf dataptr 4 -1 roll getinterval readstring
		exch length dataptr add /dataptr exch store
	}{
		true
	} ifelse
} def
/getint8 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 255 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint8 {
	dup dataptr add /dataptr exch store
	dataptr exch
	{
		1 sub exch
		255 mul cvi
		databuf 2 index
		3 -1 roll put
	} repeat
	pop
} def 
/getint16 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 256 mul datafile read} if
		dup {pop add 65535 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint16 {
	dup 2 mul dataptr add /dataptr exch store
	dataptr exch
	{
		2 sub exch
		65535 mul cvi dup
		256 idiv databuf 3 index 3 -1 roll put
		256 mod databuf 2 index 1 add 3 -1 roll put
	} repeat
	pop
} def 
/srcbuf 256 string def
/rdcmntline {
	currentfile srcbuf readline pop
	(%) anchorsearch {pop} if
} def
/getplateindex {
	0 [cyan? magenta? yellow? black? customColor?] {{exit} if 1 add} forall
} def
/aicsarray 4 array def
/aicsaltvals 4 array def
/aicsaltcolr aicsaltvals def
/tocolorspace {
	dup type /arraytype eq {
		mark exch aload pop
		aicsarray 0 3 -1 roll put
		aicsarray 1 3 -1 roll put
		dup aicsarray 2 3 -1 roll put
		gettintxform aicsarray 3 3 -1 roll put
		counttomark aicsaltvals 0 3 -1 roll getinterval /aicsaltcolr exch store
		aicsaltcolr astore pop pop
		aicsarray
	} if
} def
/subtintxform {aicsaltcolr {1 index mul exch} forall pop} def
/addtintxform {aicsaltcolr {1 sub 1 index mul 1 add exch} forall pop} def
/gettintxform {
	/DeviceRGB eq {/addtintxform}{/subtintxform} ifelse load
} def
/getnchannels {
	dup type /arraytype eq {0 get} if
	colorspacedict exch get begin Channels end
} def
/makesmarks {
	composite? {
		pop true
	}{
		dup dup type /arraytype eq {0 get} if
		colorspacedict exch get begin MarksPlate end
	} ifelse
} def
/markingplate {
	composite? {
		pop true
	}{
		dup type /arraytype eq {
			dup length getplateindex gt {getplateindex get}{pop false} ifelse
		} if
	} ifelse
} def
/tocmyk {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToCMYK end
} def
/topsspace {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToPSSpace end
} def
/colorspacedict 5 dict dup begin
	/DeviceGray 4 dict dup begin
		/Channels 1 def
		/MarksPlate {pop black?} def
		/ToCMYK {pop 1 exch sub 0 0 0 4 -1 roll} def
		/ToPSSpace {} def
 end def
	/DeviceRGB 4 dict dup begin
		/Channels 3 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop _rgbtocmyk} def
		/ToPSSpace {} def
 end def
	/DeviceCMYK 4 dict dup begin
		/Channels 4 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop} def
		/ToPSSpace {} def
 end def
	/Separation 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			/findcmykcustomcolor where {
				pop dup 1 exch ToCMYK 5 -1 roll 1 get
				findcmykcustomcolor 1 setcustomcolor
				systemdict /currentgray get exec
				1 ne
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {} def
 end def
	/Process 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			isCMYKSep? {
				1 exch ToCMYK 4 array astore getplateindex get 0 ne 
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {
			4 array copy dup 0 /Separation put
		} def
 end def
end def
/isoverprint {
	/currentoverprint where {pop currentoverprint}{_of} ifelse
} def
/version_ge_3010.106 {
   version {cvr} stopped {
      pop
      false
   }{
      3010.106 ge
   } ifelse
} def
end
end
defaultpacking setpacking
%%EndResource
%%EndProlog
%%BeginSetup
userdict /_useSmoothShade false put
userdict /_aicmykps true put
userdict /_forceToCMYK true put
Adobe_level2_AI5 /initialize get exec
Adobe_cshow /initialize get exec
Adobe_ColorImage_AI6 /initialize get exec
Adobe_shading_AI8 /initialize get exec
Adobe_Illustrator_AI5 /initialize get exec
%AI3_BeginRider
currentpacking true setpacking
setpacking
%AI3_EndRider
%AI5_Begin_NonPrinting
Np
%AI8_PluginGroupInfo
(Adobe Path Blends) (Adobe Blends Plugin) (LiveBlends.aip)
%AI8_PluginGroupInfo
(Adobe Tracing Object) (Tracing) (TracingSuite.aip)
%AI8_PluginGroupInfo
(Adobe Scatter Brush Tool) (Adobe Scatter Brush Plugin) (ScatterBrushTool.aip)
%AI8_PluginGroupInfo
(Adobe Scatter Brush Tool) (Adobe Scatter Brush Plugin) (ScatterBrushTool.aip)
%AI8_PluginGroupInfo
(Adobe PatternOnPath Brush Tool) (Adobe Pattern Brush Plugin) (ArtBrushTool.aip)
%AI8_PluginGroupInfo
(Adobe PatternOnPath Brush Tool) (Adobe Pattern Brush Plugin) (ArtBrushTool.aip)
%AI8_PluginGroupInfo
(Adobe ArtOnPath Brush Tool) (Adobe Art Brush Plugin) (ArtBrushTool.aip)
%AI8_PluginGroupInfo
(Adobe ArtOnPath Brush Tool) (Adobe Art Brush Plugin) (ArtBrushTool.aip)
%AI8_PluginGroupInfo
(Adobe Calligraphic Brush Tool) (Adobe Calligraphic Brush Plugin) (CalligBrushTool.aip)
%AI8_PluginGroupInfo
(Adobe Flare Plugin) (Flare) (Flare.aip)
%AI8_PluginGroupInfo
(Adobe Symbolism) (Adobe Symbolism) (ParticleSystem.aip)
%AI8_PluginGroupInfo
(Adobe Deform Plugin) (Adobe Envelope Plugin) (Envelope and Warp.aip)
%AI8_PluginGroupInfo
(Pathfinder Suite) (Adobe Compound Shape) (PathFinderS.aip)
%AI8_PluginGroupInfo
(Adobe Planar Group) (Adobe Live Paint Plugin) (Live Paint.aip)
%AI5_End_NonPrinting--
%AI5_BeginPalette
0 0 Pb
0.74902 0.678431 0.670588 0.901961 ([Registration]) 0 Xs
([Registration])
Pc
PB
%AI5_EndPalette
%%EndSetup
%AI5_BeginLayer
1 1 1 1 0 0 1 0 79 128 255 0 50 Lb
(svg2759) Ln
0 A
u
U
u
u
0 O
0.34902 0.231373 0.305882 0 0.666667 0.698039 0.670588 Xa
0 J 0 j 1 w 4 M []0 d
0 XR
343.9082 320.0474 m
457.2617 319.8457 L
458.8457 319.8457 460.2617 320.0806 460.2617 316.6855 C
460.123 279.3564 L
341.0474 279.3564 L
341.0474 316.8242 L
341.0474 318.4985 341.2095 320.0474 343.9082 320.0474 C
f
*u
1 D
0.74902 0.678431 0.670588 0.901961 0 0 0 Xa
458.2539 320.5 m
342.7476 320.5 L
341.5083 320.5 340.5 319.4917 340.5 318.2529 C
340.5 279.0068 L
340.5 278.7266 340.7271 278.5 341.0073 278.5 C
459.9922 278.5 L
460.2734 278.5 460.5 278.7266 460.5 279.0068 C
460.5 318.2529 L
460.5 319.4917 459.4922 320.5 458.2539 320.5 C
f
0 D
342.7476 319.4849 m
458.2539 319.4849 L
458.9326 319.4849 459.4844 318.9321 459.4844 318.2529 C
459.4844 302.4565 459.4844 291.0322 V
376.9282 291.0322 L
373.9023 285.5615 368.0718 281.8467 361.3809 281.8467 c
354.6885 281.8467 348.8599 285.5586 345.8359 291.0322 C
341.5151 291.0322 L
341.5151 302.4565 341.5151 318.2529 Y
341.5151 318.9321 342.0684 319.4849 342.7476 319.4849 C
f
*U
u
0 0 0 0 1 1 1 Xa
375.0225 300.9487 m
375.0269 293.4189 368.9258 287.3125 361.3955 287.3066 C
353.8657 287.3027 347.7573 293.4033 347.7524 300.9321 C
347.7524 300.938 347.7524 300.9429 347.7524 300.9487 C
347.7476 308.4785 353.8491 314.5854 361.3789 314.5903 C
368.9102 314.5947 375.0181 308.4946 375.0225 300.9653 C
375.0225 300.96 375.0225 300.9541 375.0225 300.9487 C
f
u
*u
0.74902 0.678431 0.670588 0.901961 0 0 0 Xa
372.4717 312.0532 m
375.4946 309.0303 377.0068 305.3281 377.0068 300.9487 c
377.0068 296.5684 375.521 292.9063 372.5493 289.9609 C
369.3955 286.8594 365.6685 285.3086 361.3672 285.3086 c
357.1187 285.3086 353.4561 286.8457 350.3813 289.9219 C
347.3052 292.998 345.7676 296.6729 345.7676 300.9487 c
345.7676 305.2236 347.3052 308.9253 350.3813 312.0532 C
353.3784 315.0776 357.041 316.5894 361.3672 316.5894 c
365.7471 316.5894 369.4478 315.0776 372.4717 312.0532 C
f
1 D
352.4165 310.0195 m
349.8604 307.4375 348.582 304.4136 348.582 300.9448 c
348.582 297.4766 349.8477 294.4775 352.377 291.9492 C
354.9077 289.4189 357.9189 288.1543 361.4141 288.1543 c
364.9087 288.1543 367.9463 289.4316 370.5288 291.9873 C
372.9805 294.3613 374.2061 297.3457 374.2061 300.9448 c
374.2061 304.5166 372.96 307.5483 370.4688 310.0391 C
367.9785 312.5288 364.96 313.7744 361.4141 313.7744 c
357.8677 313.7744 354.8672 312.5225 352.4165 310.0195 C
f
0 D
359.1431 302.4702 m
358.7529 303.3218 358.1689 303.748 357.3882 303.748 c
356.0103 303.748 355.3213 302.8198 355.3213 300.9644 c
355.3213 299.1084 356.0103 298.1816 357.3882 298.1816 c
358.2988 298.1816 358.9487 298.6328 359.3389 299.5381 C
361.25 298.5215 L
360.3389 296.9023 358.9722 296.0928 357.1504 296.0928 c
355.7451 296.0928 354.6196 296.5234 353.7744 297.3848 C
352.9282 298.2461 352.5049 299.4351 352.5049 300.9487 c
352.5049 302.4365 352.9414 303.6172 353.813 304.4922 C
354.6846 305.3667 355.7715 305.8042 357.0732 305.8042 c
358.9995 305.8042 360.3774 305.0449 361.2119 303.5288 C
359.1431 302.4702 L
f
368.1338 302.4702 m
367.7427 303.3218 367.1689 303.748 366.4141 303.748 c
365.0078 303.748 364.3042 302.8198 364.3042 300.9644 c
364.3042 299.1084 365.0078 298.1816 366.4141 298.1816 c
367.3262 298.1816 367.9648 298.6328 368.3286 299.5381 C
370.2822 298.5215 L
369.373 296.9023 368.0083 296.0928 366.1895 296.0928 c
364.7861 296.0928 363.6636 296.5234 362.8184 297.3848 C
361.9751 298.2461 361.5518 299.4351 361.5518 300.9487 c
361.5518 302.4365 361.9805 303.6172 362.8389 304.4922 C
363.6953 305.3667 364.7861 305.8042 366.1123 305.8042 c
368.0347 305.8042 369.4116 305.0449 370.2427 303.5288 C
368.1338 302.4702 L
f
*U
U
/AdobeObjectMatrix (1.000000 0.000000 0.000000 1.000000 -289.615692 99.065300) XT
U
/AdobeObjectMatrix (0.872921 0.000000 0.000000 0.872921 50.125359 143.214401) XT
u
0 0 0 0 1 1 1 Xa
392.2637 316.0137 m
398.1943 316.0137 403.002 311.2065 403.002 305.2764 c
403.002 299.3457 398.1943 294.5391 392.2637 294.5391 c
386.3325 294.5391 381.5244 299.3457 381.5244 305.2764 c
381.5244 311.2065 386.3325 316.0137 392.2637 316.0137 c
f
u
1 D
0.74902 0.678431 0.670588 0.901961 0 0 0 Xa
395.3716 308.3833 m
395.3716 308.7974 395.0356 309.1323 394.6221 309.1323 C
389.8794 309.1323 L
389.4658 309.1323 389.1304 308.7974 389.1304 308.3833 C
389.1304 303.6406 L
390.4531 303.6406 L
390.4531 298.0244 L
394.0479 298.0244 L
394.0479 303.6406 L
395.3716 303.6406 L
395.3716 308.3833 L
395.3716 308.3833 L
f
0 D
392.251 313.001 m
393.1465 313.001 393.873 312.2744 393.873 311.3789 c
393.873 310.4829 393.1465 309.7568 392.251 309.7568 c
391.355 309.7568 390.6284 310.4829 390.6284 311.3789 c
390.6284 312.2744 391.355 313.001 392.251 313.001 c
f
U
*u
1 D
392.2358 317.1074 m
389.0244 317.1074 386.3052 315.9868 384.0796 313.7451 C
381.7964 311.4263 380.6548 308.6816 380.6548 305.5127 c
380.6548 302.3442 381.7964 299.6187 384.0796 297.3379 C
386.3633 295.0586 389.0825 293.918 392.2358 293.918 c
395.4287 293.918 398.1963 295.0674 400.5381 297.3672 C
402.7441 299.5508 403.8467 302.2661 403.8467 305.5127 c
403.8467 308.7598 402.7246 311.5034 400.48 313.7451 C
398.2354 315.9868 395.4878 317.1074 392.2358 317.1074 c
f
0 D
392.2656 315.0215 m
394.8979 315.0215 397.1318 314.0928 398.9697 312.2378 C
400.8286 310.4023 401.7578 308.1602 401.7578 305.5127 c
401.7578 302.8462 400.8477 300.6333 399.0283 298.875 C
397.1123 296.9805 394.8579 296.0342 392.2656 296.0342 c
389.6719 296.0342 387.4365 296.9707 385.5596 298.8457 C
383.6826 300.7202 382.7441 302.9424 382.7441 305.5127 c
382.7441 308.0835 383.6924 310.3247 385.5889 312.2378 C
387.4087 314.0928 389.6338 315.0215 392.2656 315.0215 c
f
*U
U
u
*u
0 0 0 0 1 1 1 Xa
388.9014 287.752 m
389.2168 287.752 389.5049 287.7246 389.7646 287.6689 C
390.0249 287.6133 390.248 287.5225 390.4346 287.3955 C
390.6201 287.2695 390.7637 287.1006 390.8662 286.8906 C
390.9683 286.6797 391.0195 286.4219 391.0195 286.1113 c
391.0195 285.7773 390.9438 285.5 390.7915 285.2783 C
390.6401 285.0547 390.415 284.873 390.1182 284.7305 C
390.5278 284.6133 390.8335 284.4082 391.0352 284.1133 C
391.2373 283.8193 391.3379 283.4648 391.3379 283.0508 c
391.3379 282.7168 391.2729 282.4277 391.1431 282.1836 C
391.0127 281.9395 390.8374 281.7402 390.6172 281.5859 C
390.3975 281.4307 390.1465 281.3164 389.8647 281.2422 C
389.5825 281.168 389.2935 281.1309 388.9951 281.1309 C
385.7793 281.1309 L
385.7793 287.752 L
388.9014 287.752 L
388.9014 287.752 L
f
1 D
388.7148 285.0742 m
388.9751 285.0742 389.1885 285.1367 389.3555 285.2598 C
389.5234 285.3828 389.6069 285.583 389.6069 285.8604 c
389.6069 286.0146 389.5786 286.1416 389.5234 286.2402 C
389.4668 286.3389 389.3931 286.416 389.2998 286.4717 C
389.207 286.5273 389.1001 286.5664 388.98 286.5869 C
388.8584 286.6084 388.7334 286.6191 388.603 286.6191 C
387.2388 286.6191 L
387.2388 285.0742 L
388.7148 285.0742 L
f
388.8003 282.2637 m
388.9429 282.2637 389.0786 282.2773 389.209 282.3057 c
389.3389 282.334 389.4531 282.3809 389.5532 282.4443 C
389.6523 282.5098 389.731 282.5977 389.79 282.709 C
389.8481 282.8203 389.8784 282.9629 389.8784 283.1357 c
389.8784 283.4746 389.7822 283.7178 389.5903 283.8633 C
389.3979 284.0078 389.1436 284.0801 388.8281 284.0801 C
387.2388 284.0801 L
387.2388 282.2637 L
388.8003 282.2637 L
f
*U
0 D
391.5952 287.752 m
393.2275 287.752 L
394.7783 285.1367 L
396.3203 287.752 L
397.9443 287.752 L
395.4849 283.6719 L
395.4849 281.1309 L
394.0254 281.1309 L
394.0254 283.709 L
391.5952 287.752 L
f
U
u
438.9404 282.7676 m
439.0215 282.6133 439.127 282.4883 439.2598 282.3926 c
439.3926 282.2959 439.5479 282.2246 439.7275 282.1787 C
439.9063 282.1318 440.0908 282.1094 440.2832 282.1094 c
440.4121 282.1094 440.5508 282.1191 440.6992 282.1416 C
440.8467 282.1631 440.9854 282.2051 441.1152 282.2676 C
441.2441 282.3281 441.3516 282.4141 441.4395 282.5225 C
441.5254 282.6299 441.5684 282.7676 441.5684 282.9346 c
441.5684 283.1143 441.5117 283.2588 441.3965 283.3701 C
441.2832 283.4824 441.1328 283.5742 440.9482 283.6484 C
440.7637 283.7227 440.5527 283.7871 440.3184 283.8438 C
440.084 283.8994 439.8457 283.9609 439.6055 284.0293 C
439.3574 284.0918 439.1172 284.167 438.8828 284.2559 C
438.6484 284.3457 438.4375 284.4619 438.252 284.6045 C
438.0684 284.7461 437.918 284.9238 437.8047 285.1367 C
437.6895 285.3506 437.6328 285.6094 437.6328 285.9121 c
437.6328 286.252 437.7051 286.5469 437.8496 286.7979 C
437.9951 287.0479 438.1855 287.2568 438.4199 287.4248 C
438.6543 287.5918 438.9199 287.7148 439.2168 287.7949 C
439.5137 287.876 439.8105 287.916 440.1055 287.916 c
440.4531 287.916 440.7852 287.877 441.1025 287.7988 C
441.4199 287.7227 441.7031 287.5957 441.9502 287.4238 C
442.1973 287.25 442.3936 287.0293 442.5391 286.7598 C
442.6836 286.4902 442.7559 286.1641 442.7559 285.7813 C
441.3438 285.7813 L
441.3311 285.9785 441.29 286.1426 441.2188 286.2715 C
441.1484 286.4023 441.0547 286.5039 440.9375 286.5781 C
440.8203 286.6523 440.6865 286.7051 440.5361 286.7354 C
440.3857 286.7666 440.2207 286.7822 440.042 286.7822 c
439.9258 286.7822 439.8086 286.7695 439.6914 286.7451 C
439.5742 286.7207 439.4688 286.6777 439.373 286.6152 C
439.2773 286.5527 439.1992 286.4766 439.1377 286.3828 C
439.0762 286.29 439.0449 286.1729 439.0449 286.0313 c
439.0449 285.9004 439.0703 285.7949 439.1191 285.7158 C
439.168 285.6348 439.2656 285.5605 439.4111 285.4922 c
439.5566 285.4248 439.7568 285.3564 440.0127 285.2891 c
440.2695 285.2207 440.6055 285.1328 441.0186 285.0293 C
441.1416 285.0039 441.3135 284.959 441.5313 284.8936 C
441.751 284.8281 441.9688 284.7266 442.1855 284.584 C
442.4014 284.4404 442.5879 284.25 442.7461 284.0127 C
442.9033 283.7754 442.9814 283.4707 442.9814 283.0986 c
442.9814 282.7959 442.9219 282.5146 442.8047 282.2539 c
442.6875 281.9941 442.5127 281.7695 442.2813 281.582 C
442.0488 281.3926 441.7617 281.2461 441.418 281.1416 C
441.0762 281.0352 440.6787 280.9834 440.2266 280.9834 c
439.8613 280.9834 439.5078 281.0293 439.1641 281.1182 C
438.8213 281.209 438.5186 281.3496 438.2559 281.541 C
437.9932 281.7334 437.7852 281.9785 437.6289 282.2754 C
437.4746 282.5723 437.4004 282.9248 437.4072 283.334 C
438.8203 283.334 L
438.8203 283.1113 438.8594 282.9219 438.9404 282.7676 c
f
*u
447.1465 287.752 m
449.623 281.1309 L
448.1113 281.1309 L
447.6094 282.6055 L
445.1328 282.6055 L
444.6133 281.1309 L
443.1475 281.1309 L
445.6523 287.752 L
447.1465 287.752 L
f
1 D
447.2295 283.6924 m
446.3945 286.1201 L
446.375 286.1201 L
445.5137 283.6924 L
447.2295 283.6924 L
f
*U
U
u
0 D
413.0176 287.752 m
415.7852 283.3105 L
415.8008 283.3105 L
415.8008 287.752 L
417.166 287.752 L
417.166 281.1309 L
415.71 281.1309 L
412.9531 285.5645 L
412.9355 285.5645 L
412.9355 281.1309 L
411.5684 281.1309 L
411.5684 287.752 L
413.0176 287.752 L
f
422.6953 285.9883 m
422.6094 286.1279 422.5 286.25 422.3711 286.3555 C
422.2402 286.46 422.0938 286.543 421.9297 286.6006 C
421.7656 286.6602 421.5938 286.6895 421.416 286.6895 c
421.0879 286.6895 420.8086 286.626 420.5801 286.499 C
420.3506 286.373 420.166 286.2031 420.0234 285.9893 C
419.8809 285.7754 419.7773 285.5332 419.7129 285.2617 C
419.6475 284.9902 419.6152 284.709 419.6152 284.418 c
419.6152 284.1396 419.6475 283.8691 419.7129 283.6074 C
419.7773 283.3438 419.8809 283.1074 420.0234 282.8975 C
420.166 282.6875 420.3506 282.5195 420.5801 282.3926 c
420.8086 282.2656 421.0879 282.2021 421.416 282.2021 c
421.8594 282.2021 422.209 282.3379 422.459 282.6104 C
422.709 282.8828 422.8623 283.2412 422.918 283.6865 C
424.3281 283.6865 L
424.291 283.2725 424.1953 282.8975 424.041 282.5645 C
423.8867 282.2285 423.6816 281.9453 423.4277 281.709 C
423.1748 281.4727 422.8779 281.2939 422.5371 281.1699 C
422.1973 281.0449 421.8232 280.9834 421.416 280.9834 c
420.9082 280.9834 420.4512 281.0713 420.0459 281.248 C
419.6416 281.4238 419.2988 281.668 419.0205 281.9756 C
418.7422 282.2852 418.5273 282.6494 418.3789 283.0664 C
418.2305 283.4844 418.1563 283.9336 418.1563 284.418 c
418.1563 284.9121 418.2305 285.3711 418.3789 285.7949 c
418.5273 286.2188 418.7422 286.5889 419.0205 286.9043 C
419.2988 287.2197 419.6416 287.4668 420.0459 287.6465 C
420.4512 287.8262 420.9082 287.916 421.416 287.916 c
421.7803 287.916 422.125 287.8633 422.4492 287.7578 C
422.7744 287.6523 423.0654 287.499 423.3213 287.2969 C
423.5781 287.0967 423.79 286.8477 423.957 286.5508 c
424.124 286.2539 424.2285 285.9121 424.2725 285.5293 C
422.8623 285.5293 L
422.8379 285.6963 422.7813 285.8496 422.6953 285.9883 C
f
U
u
455.0801 305.5195 m
455.084 299.6743 450.3486 294.9316 444.502 294.9277 C
438.6563 294.9238 433.9141 299.6582 433.9102 305.5049 C
433.9102 305.5088 433.9102 305.5146 433.9102 305.5195 C
433.9063 311.3643 438.6416 316.1064 444.4863 316.1108 C
450.333 316.1152 455.0742 311.3799 455.0801 305.5352 C
455.0801 305.5293 455.0801 305.5249 455.0801 305.5195 C
f
u
*u
1 D
0.74902 0.678431 0.670588 0.901961 0 0 0 Xa
444.4189 317.1143 m
441.207 317.1143 438.4873 315.9932 436.2627 313.7524 C
433.9795 311.4331 432.8369 308.6885 432.8369 305.5195 c
432.8369 302.3501 433.9795 299.6255 436.2627 297.3447 C
438.5449 295.0645 441.2646 293.9238 444.4189 293.9238 c
447.6113 293.9238 450.3789 295.0742 452.7207 297.373 C
454.9258 299.5576 456.0293 302.2729 456.0293 305.5195 c
456.0293 308.7656 454.9082 311.5103 452.6621 313.7524 C
450.418 315.9932 447.6699 317.1143 444.4189 317.1143 c
f
0 D
444.4473 315.0269 m
447.0801 315.0269 449.3145 314.0996 451.1533 312.2441 C
453.0107 310.4087 453.9395 308.168 453.9395 305.5195 c
453.9395 302.8525 453.0303 300.6401 451.2109 298.8809 C
449.2949 296.9873 447.04 296.041 444.4473 296.041 c
441.8555 296.041 439.6191 296.9785 437.7422 298.8525 C
435.8662 300.7271 434.9277 302.9487 434.9277 305.5195 c
434.9277 308.0898 435.875 310.3315 437.7715 312.2441 C
439.5908 314.0996 441.8164 315.0269 444.4473 315.0269 c
f
*U
439.2793 307.1553 m
439.7412 310.0732 441.7949 311.6328 444.3691 311.6328 c
448.0703 311.6328 450.3271 308.9468 450.3271 305.3652 c
450.3271 301.8696 447.9258 299.1553 444.3105 299.1553 c
441.8242 299.1553 439.5967 300.6855 439.1914 303.6895 C
442.1133 303.6895 L
442.2002 302.1304 443.2129 301.5811 444.6582 301.5811 c
446.3066 301.5811 447.377 303.1118 447.377 305.4512 c
447.377 307.9072 446.4521 309.2061 444.7158 309.2061 c
443.4434 309.2061 442.3447 308.7437 442.1133 307.1553 C
442.9629 307.1611 L
440.6631 304.8613 L
438.3633 307.1611 L
439.2793 307.1553 L
f
U
/AdobeObjectMatrix (1.000000 0.000000 0.000000 1.000000 -23.952101 -89.729622) XT
U
/AdobeObjectMatrix (0.624995 0.000000 0.000000 0.624995 152.298706 316.932800) XT
u
0 0 0 0 1 1 1 Xa
429.1299 305.519 m
429.1348 299.561 424.3076 294.7305 418.3506 294.7246 C
412.3926 294.7207 407.5586 299.5464 407.5547 305.5039 C
407.5547 305.5088 407.5547 305.5142 407.5547 305.519 C
407.5498 311.4766 412.377 316.3086 418.334 316.3135 C
424.292 316.3174 429.126 311.4912 429.1299 305.5347 C
429.1299 305.5303 429.1299 305.5239 429.1299 305.519 C
f
*u
0.74902 0.678431 0.670588 0.901961 0 0 0 Xa
418.3271 317.1143 m
421.5781 317.1143 424.3262 315.9932 426.5703 313.7524 C
428.8164 311.5103 429.9385 308.7656 429.9385 305.519 c
429.9385 302.2729 428.835 299.5576 426.6299 297.373 C
424.2871 295.0742 421.5205 293.9238 418.3271 293.9238 c
415.1738 293.9238 412.4541 295.0645 410.1719 297.3447 C
407.8877 299.624 406.7461 302.3501 406.7461 305.519 c
406.7461 308.6885 407.8877 311.4331 410.1719 313.7524 C
412.3965 315.9932 415.1152 317.1143 418.3271 317.1143 c
f
1 D
409.3555 308.6343 m
409.0088 307.6563 408.8359 306.6177 408.8359 305.519 c
408.8359 302.9487 409.7744 300.7271 411.6514 298.8516 C
413.5283 296.9785 415.7637 296.041 418.3564 296.041 c
420.9492 296.041 423.2041 296.9873 425.1191 298.8809 C
425.7598 299.501 426.2891 300.1768 426.7031 300.9092 C
422.332 302.856 L
422.0371 301.3848 420.7256 300.3921 419.1406 300.2754 C
419.1406 298.4873 L
417.8086 298.4873 L
417.8086 300.2754 L
416.5088 300.29 415.251 300.8228 414.2891 301.6641 C
415.8867 303.2739 L
416.6563 302.5503 417.4248 302.2251 418.4746 302.2251 c
419.1563 302.2251 419.9102 302.4912 419.9102 303.3779 c
419.9102 303.6914 419.7881 303.9102 419.5967 304.0742 C
418.4912 304.5669 L
417.1143 305.1797 L
416.4336 305.4829 415.8564 305.7393 415.2773 305.9971 C
409.3555 308.6343 L
f
418.3564 315.0269 m
415.7246 315.0269 413.5 314.0996 411.6807 312.2441 C
411.1855 311.7446 410.7549 311.2227 410.3887 310.6777 C
414.8223 308.7046 L
415.2227 309.9341 416.3906 310.6802 417.8086 310.7632 C
417.8086 312.5513 L
419.1406 312.5513 L
419.1406 310.7632 L
420.0576 310.7188 421.0625 310.4673 422.0547 309.6997 C
420.5313 308.1338 L
419.9688 308.5322 419.2588 308.813 418.5488 308.813 c
417.9727 308.813 417.1582 308.6367 417.1582 307.9131 c
417.1582 307.8022 417.1953 307.7046 417.2627 307.6187 C
418.7461 306.9585 L
419.749 306.5107 L
420.3916 306.2246 421.0039 305.9531 421.6113 305.6821 C
427.5537 303.0371 L
427.75 303.8154 427.8477 304.6431 427.8477 305.519 c
427.8477 308.168 426.9189 310.4087 425.0625 312.2441 C
423.2236 314.0996 420.9883 315.0269 418.3564 315.0269 c
f
*U
U
/AdobeObjectMatrix (1.146822 0.000000 0.000000 1.146822 -85.924637 166.153000) XT
U
/AdobeObjectMatrix (0.993781 0.000000 0.000000 0.993670 -437.123352 -74.436913) XT
U
LB
%AI5_EndLayer--
%AI3_BeginCrops
userdict /AI3_noCropMarks known not {
0 A
u
u
0 D
0 R
0 G
0 J 0 j 0.5 w 4 M []0 d
0 XR
331.5 278.5 m
304.5 278.5 L
S
340.5 269.5 m
340.5 242.5 L
S
U
u
331.5 320.5 m
304.5 320.5 L
S
340.5 329.5 m
340.5 356.5 L
S
U
u
469.5 320.5 m
496.5 320.5 L
S
460.5 329.5 m
460.5 356.5 L
S
U
u
469.5 278.5 m
496.5 278.5 L
S
460.5 269.5 m
460.5 242.5 L
S
U
U
} if
%AI3_EndCrops
%%PageTrailer
gsave annotatepage grestore showpage
%%Trailer
Adobe_Illustrator_AI5 /terminate get exec
Adobe_shading_AI8 /terminate get exec
Adobe_ColorImage_AI6 /terminate get exec
Adobe_cshow /terminate get exec
Adobe_level2_AI5 /terminate get exec
%%EOF

%%EndDocument
 @endspecial 0.12158 0.21176 0.33725 TeXcolorrgb -8000
58000 a
tx@Dict begin  PutEnd  end
 -8000 58000 a -8000 58000 a
SDict begin [ {ThisPage}<</Trans << /S /Replace >> >> /PUT pdfmark
end
 -8000 58000 a -8000
58000 a
SDict begin H.S end
 -8000 58000 a -8000 58000 a
SDict begin 17 H.A end
 -8000 58000 a -8000
58000 a
SDict begin [/View [/XYZ H.V]/Dest (slide.1) cvn /DEST pdfmark end
 -8000 58000 a -8000 58000 a
tx@Dict begin { 59.62032 208.6787 } PutCoor PutBegin  end
 -8000 58000 a
0.74902 0.98431 0.78824 TeXcolorrgb 0.89804 0.2902 0.2706
TeXcolorrgb 4071 x Fx(T)-689 b(eor)-61 b(ia)1818 b(da)g(Comple)-132
b(xidade)-8000 65171 y Fw(No)-37 b(t)-32 b(a\347\343o)877
b(As)-37 b(sint)-64 b(\363)-88 b(tic)-64 b(a)p 0.74902 0.98431 0.78824
TeXcolorrgb 0.74902 0.98431 0.78824 TeXcolorrgb 25059
75310 a Fv(P)-92 b(r)-159 b(of)-48 b(.)1116 b(Diego)956
b(Noble)p 0.89804 0.2902 0.2706 TeXcolorrgb 19622 80446
a
SDict begin H.S end
 19622 80446 a 0.89804 0.2902 0.2706 TeXcolorrgb
0.74902 0.98431 0.78824 TeXcolorrgb -708 x Fu(diegovnoble@gmail.com)p
0.89804 0.2902 0.2706 TeXcolorrgb 0.89804 0.2902 0.2706
TeXcolorrgb 53600 77790 a
SDict begin H.R end
 53600 77790 a 53600 79738 a
SDict begin [/H /I/Border [0 0 0]BorderArrayPatch/Color [0 1 1]/Action
<</Subtype/URI/URI(mailto:diegovnoble@gmail.com)>>/Subtype /Link H.B
/ANN pdfmark end

53600 79738 a 0.74902 0.98431 0.78824 TeXcolorrgb 32182
87908 a Ft(12)796 b(de)i(julho)e(de)h(2018)p 0.74902 0.98431 0.78824
TeXcolorrgb 0.12158 0.21176 0.33725 TeXcolorrgb -8000
58000 a
tx@Dict begin  PutEnd  end
 -8000 58000 a 0.12158 0.21176 0.33725 TeXcolorrgb
0.12158 0.21176 0.33725 TeXcolorrgb eop end
%%Page: 2 2
TeXDict begin @landscape 2 1 bop 0.12158 0.21176 0.33725
TeXcolorrgb 8000 4901 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 8000 4901 a 0.12158 0.21176 0.33725
TeXcolorrgb 0.12158 0.21176 0.33725 TeXcolorrgb -8000
54901 a
tx@Dict begin tx@ovlDict begin InitOL /TheOL (0) def end end
 -8000 54901 a -8000 54901 a
tx@Dict begin tx@ovlDict begin (0) BOL end end
 -8000 54901 a 3099
x @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.0 SLW 1 1 1  setrgbcolor   0. true 0.0 0.0 397.48499 298.11374 .5
Frame  gsave 1 1 1  setrgbcolor  1. .setopacityalpha  fill  grestore
end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0.89804 0.2902 0.2706  setrgbcolor  /ArrowA { moveto } def
/ArrowB { } def  [ 377.60951 268.30054 19.87546 268.30054   /Lineto
/lineto load def 0  setlinejoin false Line  gsave 0.8 SLW 0.89804 0.2902
0.2706  setrgbcolor  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial -8000 58000 a
SDict begin [ {ThisPage}<</Trans << /S /Wipe >> >> /PUT pdfmark end
 -8000 58000 a
-8000 58000 a
SDict begin H.S end
 -8000 58000 a -8000 58000 a
SDict begin 17 H.A end
 -8000 58000
a -8000 58000 a
SDict begin [/View [/XYZ H.V]/Dest (slide.2) cvn /DEST pdfmark end
 -8000 58000 a -8000 58000 a
tx@Dict begin { 19.87546 274.26408 } PutCoor PutBegin  end
 -8000 58000
a 0.89804 0.2902 0.2706 TeXcolorrgb 532 x Fx(Intr)-198
b(odu\347\343o)p 0.12158 0.21176 0.33725 TeXcolorrgb
-8000 58000 a
tx@Dict begin  PutEnd  end
 -8000 58000 a -8000 58000 a
tx@Dict begin { 391.52295 4.47151 } PutCoor PutBegin  end
 -8000 58000
a -675 w Fs(2)-8000 58000 y
tx@Dict begin  PutEnd  end
 -8000 58000 a -8000 58000
a
tx@Dict begin { 19.87546 259.35748 } PutCoor PutBegin  end
 -8000 58000 a -8000 68225 a
tx@Dict begin tx@ovlDict begin (1) BOL end end
 -8000 68225 a 0.12158 0.21176 0.33725
TeXcolorrgb -8000 68225 a
tx@Dict begin tx@ovlDict begin (0) BOL end end
 -8000 68225 a 0.12158 0.21176 0.33725
TeXcolorrgb 2445 x Fr(n)p 0.12158 0.21176 0.33725 TeXcolorrgb
3188 w Fv(Analisar)958 b(algor)-45 b(itmos)958 b(signi\033c)-99
b(a)958 b(de)-41 b(t)-51 b(er)-45 b(minar)957 b(os)g(r)-156
b(ecur)-96 b(sos)-3127 74433 y(comput)-38 b(acionais)958
b(que)e(o)h(algor)-45 b(itmo)958 b(r)-156 b(equer)956
b(conf)-73 b(or)-45 b(me)958 b(o)-3127 78197 y(t)-38
b(amanho)957 b(da)f(entr)-131 b(ada)957 b(aument)-38
b(a.)p 0.12158 0.21176 0.33725 TeXcolorrgb -8000 86610
a Fq(!)957 b Fv(O)f(obje)-41 b(tiv)-89 b(o)956 b(dest)-38
b(a)957 b(aula)f(\351)g(\020concr)-156 b(e)-41 b(tiz)-77
b(ar\021)958 b(est)-38 b(a)956 b(ideia)h(de)f(an\341-)-8000
90374 y(lise.)-3024 90374 y
tx@Dict begin tx@ovlDict begin (1) BOL end end
 -3024 90374 a -8000 94137
a Fq(!)h Fv(Es)-51 b(se)956 b(\351)g(pas)-51 b(so)958
b(inicial)g(par)-131 b(a)957 b(compr)-156 b(eender)957
b(o)g(conceit)-48 b(o)957 b(de)-8000 97901 y Fp(tr)-124
b(at)-38 b(abilidade)p Fv(.)-8000 58000 y
tx@Dict begin  PutEnd  end
 -8000 58000
a 0.12158 0.21176 0.33725 TeXcolorrgb 0.12158 0.21176 0.33725
TeXcolorrgb eop end
%%Page: 3 3
TeXDict begin @landscape 3 2 bop 0.12158 0.21176 0.33725
TeXcolorrgb 8000 4901 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 8000 4901 a 0.12158 0.21176 0.33725
TeXcolorrgb 0.12158 0.21176 0.33725 TeXcolorrgb -8000
54901 a
tx@Dict begin tx@ovlDict begin InitOL /TheOL (0) def end end
 -8000 54901 a -8000 54901 a
tx@Dict begin tx@ovlDict begin (0) BOL end end
 -8000 54901 a 3099
x @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.0 SLW 1 1 1  setrgbcolor   0. true 0.0 0.0 397.48499 298.11374 .5
Frame  gsave 1 1 1  setrgbcolor  1. .setopacityalpha  fill  grestore
end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0.89804 0.2902 0.2706  setrgbcolor  /ArrowA { moveto } def
/ArrowB { } def  [ 377.60951 268.30054 19.87546 268.30054   /Lineto
/lineto load def 0  setlinejoin false Line  gsave 0.8 SLW 0.89804 0.2902
0.2706  setrgbcolor  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial -8000 58000 a
SDict begin [ {ThisPage}<</Trans << /S /Wipe >> >> /PUT pdfmark end
 -8000 58000 a
-8000 58000 a
tx@Dict begin { 19.87546 274.26408 } PutCoor PutBegin  end
 -8000 58000 a 0.89804 0.2902 0.2706 TeXcolorrgb
532 x Fx(Intr)-198 b(odu\347\343o)p 0.12158 0.21176 0.33725
TeXcolorrgb -8000 58000 a
tx@Dict begin  PutEnd  end
 -8000 58000 a -8000 58000 a
tx@Dict begin { 391.52295 4.47151 } PutCoor PutBegin  end

-8000 58000 a -675 w Fs(2)-8000 58000 y
tx@Dict begin  PutEnd  end
 -8000 58000 a
-8000 58000 a
tx@Dict begin { 19.87546 259.35748 } PutCoor PutBegin  end
 -8000 58000 a -8000 68225 a
tx@Dict begin tx@ovlDict begin (1) BOL end end
 -8000 68225
a 0.12158 0.21176 0.33725 TeXcolorrgb -8000 68225 a
tx@Dict begin tx@ovlDict begin (0) BOL end end
 -8000
68225 a 0.12158 0.21176 0.33725 TeXcolorrgb 2445 x Fr(n)p
0.12158 0.21176 0.33725 TeXcolorrgb 3188 w Fv(Analisar)958
b(algor)-45 b(itmos)958 b(signi\033c)-99 b(a)958 b(de)-41
b(t)-51 b(er)-45 b(minar)957 b(os)g(r)-156 b(ecur)-96
b(sos)-3127 74433 y(comput)-38 b(acionais)958 b(que)e(o)h(algor)-45
b(itmo)958 b(r)-156 b(equer)956 b(conf)-73 b(or)-45 b(me)958
b(o)-3127 78197 y(t)-38 b(amanho)957 b(da)f(entr)-131
b(ada)957 b(aument)-38 b(a.)p 0.12158 0.21176 0.33725
TeXcolorrgb -8000 86610 a Fq(!)957 b Fv(O)f(obje)-41
b(tiv)-89 b(o)956 b(dest)-38 b(a)957 b(aula)f(\351)g(\020concr)-156
b(e)-41 b(tiz)-77 b(ar\021)958 b(est)-38 b(a)956 b(ideia)h(de)f
(an\341-)-8000 90374 y(lise.)-8000 94137 y Fq(!)h Fv(Es)-51
b(se)956 b(\351)g(pas)-51 b(so)958 b(inicial)g(par)-131
b(a)957 b(compr)-156 b(eender)957 b(o)g(conceit)-48 b(o)957
b(de)-8000 97901 y Fp(tr)-124 b(at)-38 b(abilidade)p
Fv(.)-8000 58000 y
tx@Dict begin  PutEnd  end
 -8000 58000 a 0.12158 0.21176 0.33725
TeXcolorrgb 0.12158 0.21176 0.33725 TeXcolorrgb eop end
%%Page: 4 4
TeXDict begin @landscape 4 3 bop 0.12158 0.21176 0.33725
TeXcolorrgb 8000 4901 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 8000 4901 a 0.12158 0.21176 0.33725
TeXcolorrgb 0.12158 0.21176 0.33725 TeXcolorrgb -8000
54901 a
tx@Dict begin tx@ovlDict begin InitOL /TheOL (0) def end end
 -8000 54901 a -8000 54901 a
tx@Dict begin tx@ovlDict begin (0) BOL end end
 -8000 54901 a 3099
x @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.0 SLW 1 1 1  setrgbcolor   0. true 0.0 0.0 397.48499 298.11374 .5
Frame  gsave 1 1 1  setrgbcolor  1. .setopacityalpha  fill  grestore
end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0.89804 0.2902 0.2706  setrgbcolor  /ArrowA { moveto } def
/ArrowB { } def  [ 377.60951 268.30054 19.87546 268.30054   /Lineto
/lineto load def 0  setlinejoin false Line  gsave 0.8 SLW 0.89804 0.2902
0.2706  setrgbcolor  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial -8000 58000 a
SDict begin [ {ThisPage}<</Trans << /S /Wipe >> >> /PUT pdfmark end
 -8000 58000 a
-8000 58000 a
SDict begin H.S end
 -8000 58000 a -8000 58000 a
SDict begin 17 H.A end
 -8000 58000
a -8000 58000 a
SDict begin [/View [/XYZ H.V]/Dest (slide.3) cvn /DEST pdfmark end
 -8000 58000 a -8000 58000 a
tx@Dict begin { 19.87546 274.26408 } PutCoor PutBegin  end
 -8000 58000
a 0.89804 0.2902 0.2706 TeXcolorrgb 532 x Fx(Cont)-66
b(e\372do)p 0.12158 0.21176 0.33725 TeXcolorrgb -8000
58000 a
tx@Dict begin  PutEnd  end
 -8000 58000 a -8000 58000 a
tx@Dict begin { 391.52295 4.47151 } PutCoor PutBegin  end
 -8000 58000 a -715
w Fs(3)-8000 58000 y
tx@Dict begin  PutEnd  end
 -8000 58000 a -8000 58000 a
tx@Dict begin { 19.87546 259.35748 } PutCoor PutBegin  end
 -8000
58000 a 0.89804 0.2902 0.2706 TeXcolorrgb -8000 81011
a
SDict begin H.S end
 -8000 81011 a 0.89804 0.2902 0.2706 TeXcolorrgb -60
x Fo(Conceit)-55 b(o)1517 b(de)e(E\033ci\352ncia)p 0.89804 0.2902 0.2706
TeXcolorrgb 36820 77558 a
SDict begin H.R end
 36820 77558 a 36820 80951 a
SDict begin [/Color [1 0 0]/H /I/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (slide.4) cvn H.B /ANN pdfmark end

36820 80951 a 0.12158 0.21176 0.33725 TeXcolorrgb 0.89804 0.2902 0.2706
TeXcolorrgb -8000 88603 a
SDict begin H.S end
 -8000 88603 a 0.89804 0.2902 0.2706
TeXcolorrgb -1010 x Fo(No)-64 b(t)-55 b(a\347\343o)1517
b(As)-64 b(sint)-110 b(\363)-152 b(tic)-110 b(a)p 0.89804 0.2902 0.2706
TeXcolorrgb 31585 84383 a
SDict begin H.R end
 31585 84383 a 31585 87593 a
SDict begin [/Color [1 0 0]/H /I/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (slide.9) cvn H.B /ANN pdfmark end

31585 87593 a 0.12158 0.21176 0.33725 TeXcolorrgb -8000
58000 a
tx@Dict begin  PutEnd  end
 -8000 58000 a 0.12158 0.21176 0.33725 TeXcolorrgb
0.12158 0.21176 0.33725 TeXcolorrgb eop end
%%Page: 5 5
TeXDict begin @landscape 5 4 bop 0.12158 0.21176 0.33725
TeXcolorrgb 8000 4901 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 8000 4901 a 0.12158 0.21176 0.33725
TeXcolorrgb 0.12158 0.21176 0.33725 TeXcolorrgb -8000
54901 a
tx@Dict begin tx@ovlDict begin InitOL /TheOL (0) def end end
 -8000 54901 a -8000 54901 a
tx@Dict begin tx@ovlDict begin (0) BOL end end
 -8000 54901 a 3099
x @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.0 SLW 1 1 1  setrgbcolor   0. true 0.0 0.0 397.48499 298.11374 .5
Frame  gsave 1 1 1  setrgbcolor  1. .setopacityalpha  fill  grestore
end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0.89804 0.2902 0.2706  setrgbcolor  /ArrowA { moveto } def
/ArrowB { } def  [ 377.60951 268.30054 19.87546 268.30054   /Lineto
/lineto load def 0  setlinejoin false Line  gsave 0.8 SLW 0.89804 0.2902
0.2706  setrgbcolor  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.0 SLW 0.12158 0.21176 0.33725  setrgbcolor   0. true 0.0 0.0 397.48499
298.11374 .5 Frame  gsave 0.12158 0.21176 0.33725  setrgbcolor  1.
.setopacityalpha  fill  grestore end
 
@endspecial
-8000 58000 a
SDict begin [ {ThisPage}<</Trans << /S /Wipe >> >> /PUT pdfmark end
 -8000 58000 a -8000 58000 a
SDict begin H.S end
 -8000 58000
a -8000 58000 a
SDict begin 17 H.A end
 -8000 58000 a -8000 58000 a
SDict begin [/View [/XYZ H.V]/Dest (slide.4) cvn /DEST pdfmark end
 -8000 58000
a -8000 58000 a
tx@Dict begin { 198.7425 163.96346 } PutCoor PutBegin  end
 -8000 58000 a 0.89804 0.2902 0.2706 TeXcolorrgb
-34882 62650 a Fx(Conceit)-66 b(o)1817 b(de)g(E\033ci\352ncia)p
0.12158 0.21176 0.33725 TeXcolorrgb -8000 58000 a
tx@Dict begin  PutEnd  end
 -8000
58000 a -8000 58000 a
tx@Dict begin { 391.52295 4.47151 } PutCoor PutBegin  end
 -8000 58000 a -723 w Fs(4)-8000
58000 y
tx@Dict begin  PutEnd  end
 -8000 58000 a -8000 58000 a
tx@Dict begin { 19.87546 259.35748 } PutCoor PutBegin  end
 -8000 58000 a -8000
58000 a
tx@Dict begin  PutEnd  end
 -8000 58000 a 0.12158 0.21176 0.33725 TeXcolorrgb
0.12158 0.21176 0.33725 TeXcolorrgb eop end
%%Page: 6 6
TeXDict begin @landscape 6 5 bop 0.12158 0.21176 0.33725
TeXcolorrgb 8000 4901 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 8000 4901 a 0.12158 0.21176 0.33725
TeXcolorrgb 0.12158 0.21176 0.33725 TeXcolorrgb -8000
54901 a
tx@Dict begin tx@ovlDict begin InitOL /TheOL (0) def end end
 -8000 54901 a -8000 54901 a
tx@Dict begin tx@ovlDict begin (0) BOL end end
 -8000 54901 a 3099
x @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.0 SLW 1 1 1  setrgbcolor   0. true 0.0 0.0 397.48499 298.11374 .5
Frame  gsave 1 1 1  setrgbcolor  1. .setopacityalpha  fill  grestore
end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0.89804 0.2902 0.2706  setrgbcolor  /ArrowA { moveto } def
/ArrowB { } def  [ 377.60951 268.30054 19.87546 268.30054   /Lineto
/lineto load def 0  setlinejoin false Line  gsave 0.8 SLW 0.89804 0.2902
0.2706  setrgbcolor  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial -8000 58000 a
SDict begin [ {ThisPage}<</Trans << /S /Wipe >> >> /PUT pdfmark end
 -8000 58000 a
-8000 58000 a
SDict begin H.S end
 -8000 58000 a -8000 58000 a
SDict begin 17 H.A end
 -8000 58000
a -8000 58000 a
SDict begin [/View [/XYZ H.V]/Dest (slide.5) cvn /DEST pdfmark end
 -8000 58000 a -8000 58000 a
tx@Dict begin { 19.87546 274.26408 } PutCoor PutBegin  end
 -8000 58000
a 0.89804 0.2902 0.2706 TeXcolorrgb 532 x Fx(Comple)-132
b(xidade)p 0.12158 0.21176 0.33725 TeXcolorrgb -8000
58000 a
tx@Dict begin  PutEnd  end
 -8000 58000 a -8000 58000 a
tx@Dict begin { 391.52295 4.47151 } PutCoor PutBegin  end
 -8000 58000 a -676
w Fs(5)-8000 58000 y
tx@Dict begin  PutEnd  end
 -8000 58000 a -8000 58000 a
tx@Dict begin { 19.87546 259.35748 } PutCoor PutBegin  end
 -8000
58000 a -8000 74566 a
tx@Dict begin tx@ovlDict begin (1) BOL end end
 -8000 74566 a 0.12158 0.21176 0.33725
TeXcolorrgb -8000 74566 a
tx@Dict begin tx@ovlDict begin (0) BOL end end
 -8000 74566 a 0.12158 0.21176 0.33725
TeXcolorrgb 2934 x Fr(n)p 0.12158 0.21176 0.33725 TeXcolorrgb
0.89804 0.2902 0.2706 TeXcolorrgb 4592 w Fn(Encontr)-149
b(ar)1147 b(algor)-46 b(itmos)1149 b(e\033cient)-57 b(es)1148
b(par)-149 b(a)1147 b(solucio-)-1723 83035 y(nar)g(pr)-184
b(oblemas)1148 b(comput)-46 b(acionais.)p 0.12158 0.21176 0.33725
TeXcolorrgb 0.12158 0.21176 0.33725 TeXcolorrgb -8000
90562 a Fm(Mas)1378 b(o)g(que)g(\351)f(\020)p 0.89804 0.2902 0.2706
TeXcolorrgb Fn(e)-69 b(x)-130 b(ecut)-46 b(ar)1148 b(r)-149
b(apidament)-57 b(e)p 0.12158 0.21176 0.33725 TeXcolorrgb
Fm(\021?)-8000 58000 y
tx@Dict begin  PutEnd  end
 -8000 58000 a 0.12158 0.21176 0.33725
TeXcolorrgb 0.12158 0.21176 0.33725 TeXcolorrgb eop end
%%Page: 7 7
TeXDict begin @landscape 7 6 bop 0.12158 0.21176 0.33725
TeXcolorrgb 8000 4901 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 8000 4901 a 0.12158 0.21176 0.33725
TeXcolorrgb 0.12158 0.21176 0.33725 TeXcolorrgb -8000
54901 a
tx@Dict begin tx@ovlDict begin InitOL /TheOL (0) def end end
 -8000 54901 a -8000 54901 a
tx@Dict begin tx@ovlDict begin (0) BOL end end
 -8000 54901 a 3099
x @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.0 SLW 1 1 1  setrgbcolor   0. true 0.0 0.0 397.48499 298.11374 .5
Frame  gsave 1 1 1  setrgbcolor  1. .setopacityalpha  fill  grestore
end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0.89804 0.2902 0.2706  setrgbcolor  /ArrowA { moveto } def
/ArrowB { } def  [ 377.60951 268.30054 19.87546 268.30054   /Lineto
/lineto load def 0  setlinejoin false Line  gsave 0.8 SLW 0.89804 0.2902
0.2706  setrgbcolor  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial -8000 58000 a
SDict begin [ {ThisPage}<</Trans << /S /Wipe >> >> /PUT pdfmark end
 -8000 58000 a
-8000 58000 a
SDict begin H.S end
 -8000 58000 a -8000 58000 a
SDict begin 17 H.A end
 -8000 58000
a -8000 58000 a
SDict begin [/View [/XYZ H.V]/Dest (slide.6) cvn /DEST pdfmark end
 -8000 58000 a -8000 58000 a
tx@Dict begin { 19.87546 274.26408 } PutCoor PutBegin  end
 -8000 58000
a 0.89804 0.2902 0.2706 TeXcolorrgb 532 x Fx(E\033ci\352ncia)1817
b(I)p 0.12158 0.21176 0.33725 TeXcolorrgb -8000 58000
a
tx@Dict begin  PutEnd  end
 -8000 58000 a -8000 58000 a
tx@Dict begin { 391.52295 4.47151 } PutCoor PutBegin  end
 -8000 58000 a -753 w Fs(6)-8000
58000 y
tx@Dict begin  PutEnd  end
 -8000 58000 a -8000 58000 a
tx@Dict begin { 19.87546 259.35748 } PutCoor PutBegin  end
 -8000 58000 a -8000
75185 a
SDict begin H.S end
 -8000 75185 a -8000 75185 a
SDict begin 25 H.A end
 -8000 75185 a -8000
75185 a
SDict begin [/View [/XYZ H.V]/Dest (defn.1) cvn /DEST pdfmark end
 -8000 75185 a 0.12158 0.21176 0.33725 TeXcolorrgb
Fo(De\033ni\347\343o)1517 b(1.)p 0.12158 0.21176 0.33725
TeXcolorrgb 1147 w Fm(Um)1377 b(algor)-64 b(itmo)1379
b(\351)e(e\033cient)-73 b(e)1378 b(se,)-8000 80720 y(quando)h
(implement)-55 b(ado,)1378 b(e)-78 b(x)-152 b(ecut)-55
b(a)1378 b(r)-188 b(apida-)-8000 86255 y(ment)-73 b(e)1378
b(par)-188 b(a)1379 b(inst\342ncias)f(r)-225 b(eais)1378
b(como)g(en-)-8000 91790 y(tr)-188 b(ada.)-8000 58000
y
tx@Dict begin  PutEnd  end
 -8000 58000 a 0.12158 0.21176 0.33725 TeXcolorrgb
0.12158 0.21176 0.33725 TeXcolorrgb eop end
%%Page: 8 8
TeXDict begin @landscape 8 7 bop 0.12158 0.21176 0.33725
TeXcolorrgb 8000 4901 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 8000 4901 a 0.12158 0.21176 0.33725
TeXcolorrgb 0.12158 0.21176 0.33725 TeXcolorrgb -8000
54901 a
tx@Dict begin tx@ovlDict begin InitOL /TheOL (0) def end end
 -8000 54901 a -8000 54901 a
tx@Dict begin tx@ovlDict begin (0) BOL end end
 -8000 54901 a 3099
x @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.0 SLW 1 1 1  setrgbcolor   0. true 0.0 0.0 397.48499 298.11374 .5
Frame  gsave 1 1 1  setrgbcolor  1. .setopacityalpha  fill  grestore
end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0.89804 0.2902 0.2706  setrgbcolor  /ArrowA { moveto } def
/ArrowB { } def  [ 377.60951 268.30054 19.87546 268.30054   /Lineto
/lineto load def 0  setlinejoin false Line  gsave 0.8 SLW 0.89804 0.2902
0.2706  setrgbcolor  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial -8000 58000 a
SDict begin [ {ThisPage}<</Trans << /S /Wipe >> >> /PUT pdfmark end
 -8000 58000 a
-8000 58000 a
SDict begin H.S end
 -8000 58000 a -8000 58000 a
SDict begin 17 H.A end
 -8000 58000
a -8000 58000 a
SDict begin [/View [/XYZ H.V]/Dest (slide.7) cvn /DEST pdfmark end
 -8000 58000 a -8000 58000 a
tx@Dict begin { 19.87546 274.26408 } PutCoor PutBegin  end
 -8000 58000
a 0.89804 0.2902 0.2706 TeXcolorrgb 532 x Fx(E\033ci\352ncia)1817
b(II)p 0.12158 0.21176 0.33725 TeXcolorrgb -8000 58000
a
tx@Dict begin  PutEnd  end
 -8000 58000 a -8000 58000 a
tx@Dict begin { 391.52295 4.47151 } PutCoor PutBegin  end
 -8000 58000 a -618 w Fs(7)-8000
58000 y
tx@Dict begin  PutEnd  end
 -8000 58000 a -8000 58000 a
tx@Dict begin { 19.87546 259.35748 } PutCoor PutBegin  end
 -8000 58000 a -8000
74694 a
SDict begin H.S end
 -8000 74694 a -8000 74694 a
SDict begin 25 H.A end
 -8000 74694 a -8000
74694 a
SDict begin [/View [/XYZ H.V]/Dest (defn.2) cvn /DEST pdfmark end
 -8000 74694 a 0.12158 0.21176 0.33725 TeXcolorrgb
Fo(De\033ni\347\343o)1517 b(2.)p 0.12158 0.21176 0.33725
TeXcolorrgb 1339 w Fm(Um)1377 b(algor)-64 b(itmo)1379
b(\351)f(e\033cient)-73 b(e)-8000 80229 y(se,)1378 b(qualit)-55
b(ativ)-110 b(ament)-73 b(e)1378 b(e)g(em)g(seu)f(pior)h(c)-142
b(aso,)-8000 85764 y(t)-73 b(em)1378 b(um)g(desempenho)h(super)-64
b(ior)1378 b(a)g(um)f(al-)-8000 91298 y(gor)-64 b(itmo)1379
b(de)f(f)-106 b(or)-230 b(\347)-142 b(a-brut)-55 b(a.)-8000
58000 y
tx@Dict begin  PutEnd  end
 -8000 58000 a 0.12158 0.21176 0.33725 TeXcolorrgb
0.12158 0.21176 0.33725 TeXcolorrgb eop end
%%Page: 9 9
TeXDict begin @landscape 9 8 bop 0.12158 0.21176 0.33725
TeXcolorrgb 8000 4901 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 8000 4901 a 0.12158 0.21176 0.33725
TeXcolorrgb 0.12158 0.21176 0.33725 TeXcolorrgb -8000
54901 a
tx@Dict begin tx@ovlDict begin InitOL /TheOL (0) def end end
 -8000 54901 a -8000 54901 a
tx@Dict begin tx@ovlDict begin (0) BOL end end
 -8000 54901 a 3099
x @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.0 SLW 1 1 1  setrgbcolor   0. true 0.0 0.0 397.48499 298.11374 .5
Frame  gsave 1 1 1  setrgbcolor  1. .setopacityalpha  fill  grestore
end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0.89804 0.2902 0.2706  setrgbcolor  /ArrowA { moveto } def
/ArrowB { } def  [ 377.60951 268.30054 19.87546 268.30054   /Lineto
/lineto load def 0  setlinejoin false Line  gsave 0.8 SLW 0.89804 0.2902
0.2706  setrgbcolor  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial -8000 58000 a
SDict begin [ {ThisPage}<</Trans << /S /Wipe >> >> /PUT pdfmark end
 -8000 58000 a
-8000 58000 a
SDict begin H.S end
 -8000 58000 a -8000 58000 a
SDict begin 17 H.A end
 -8000 58000
a -8000 58000 a
SDict begin [/View [/XYZ H.V]/Dest (slide.8) cvn /DEST pdfmark end
 -8000 58000 a -8000 58000 a
tx@Dict begin { 19.87546 274.26408 } PutCoor PutBegin  end
 -8000 58000
a 0.89804 0.2902 0.2706 TeXcolorrgb 532 x Fx(E\033ci\352ncia)1817
b(III)p 0.12158 0.21176 0.33725 TeXcolorrgb -8000 58000
a
tx@Dict begin  PutEnd  end
 -8000 58000 a -8000 58000 a
tx@Dict begin { 391.52295 4.47151 } PutCoor PutBegin  end
 -8000 58000 a -760 w Fs(8)-8000
58000 y
tx@Dict begin  PutEnd  end
 -8000 58000 a -8000 58000 a
tx@Dict begin { 19.87546 259.35748 } PutCoor PutBegin  end
 -8000 58000 a -8000
77548 a
SDict begin H.S end
 -8000 77548 a -8000 77548 a
SDict begin 25 H.A end
 -8000 77548 a -8000
77548 a
SDict begin [/View [/XYZ H.V]/Dest (defn.3) cvn /DEST pdfmark end
 -8000 77548 a 0.12158 0.21176 0.33725 TeXcolorrgb
Fo(De\033ni\347\343o)1517 b(3.)p 0.12158 0.21176 0.33725
TeXcolorrgb 1145 w Fm(Um)1377 b(algor)-64 b(itmo)1379
b(\351)e(e\033cient)-73 b(e)1378 b(se)-8000 83082 y(o)g(seu)g(t)-73
b(empo)1378 b(de)g(e)-78 b(x)-152 b(ecu\347\343o)1379
b(\351)f(polinomial.)67029 83082 y
tx@Dict begin tx@ovlDict begin (1) BOL end end
 67029 83082 a 0.89804 0.2902 0.2706
TeXcolorrgb -8000 91274 a Fn(Mas)1149 b Fl(n)1922 89886
y Fk(100)7083 91274 y Fn(\351)e(melhor)h(que)g Fl(n)31829
89886 y Fk(1+0)p Fj(:)p Fk(02\(log)476 b Fj(n)p Fk(\))47267
91274 y Fn(?)p 0.12158 0.21176 0.33725 TeXcolorrgb -8000
58000 a
tx@Dict begin  PutEnd  end
 -8000 58000 a 0.12158 0.21176 0.33725 TeXcolorrgb
0.12158 0.21176 0.33725 TeXcolorrgb eop end
%%Page: 10 10
TeXDict begin @landscape 10 9 bop 0.12158 0.21176 0.33725
TeXcolorrgb 8000 4901 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 8000 4901 a 0.12158 0.21176 0.33725
TeXcolorrgb 0.12158 0.21176 0.33725 TeXcolorrgb -8000
54901 a
tx@Dict begin tx@ovlDict begin InitOL /TheOL (0) def end end
 -8000 54901 a -8000 54901 a
tx@Dict begin tx@ovlDict begin (0) BOL end end
 -8000 54901 a 3099
x @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.0 SLW 1 1 1  setrgbcolor   0. true 0.0 0.0 397.48499 298.11374 .5
Frame  gsave 1 1 1  setrgbcolor  1. .setopacityalpha  fill  grestore
end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0.89804 0.2902 0.2706  setrgbcolor  /ArrowA { moveto } def
/ArrowB { } def  [ 377.60951 268.30054 19.87546 268.30054   /Lineto
/lineto load def 0  setlinejoin false Line  gsave 0.8 SLW 0.89804 0.2902
0.2706  setrgbcolor  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial -8000 58000 a
SDict begin [ {ThisPage}<</Trans << /S /Wipe >> >> /PUT pdfmark end
 -8000 58000 a
-8000 58000 a
tx@Dict begin { 19.87546 274.26408 } PutCoor PutBegin  end
 -8000 58000 a 0.89804 0.2902 0.2706 TeXcolorrgb
532 x Fx(E\033ci\352ncia)1817 b(III)p 0.12158 0.21176 0.33725
TeXcolorrgb -8000 58000 a
tx@Dict begin  PutEnd  end
 -8000 58000 a -8000 58000 a
tx@Dict begin { 391.52295 4.47151 } PutCoor PutBegin  end

-8000 58000 a -760 w Fs(8)-8000 58000 y
tx@Dict begin  PutEnd  end
 -8000 58000 a
-8000 58000 a
tx@Dict begin { 19.87546 259.35748 } PutCoor PutBegin  end
 -8000 58000 a -8000 77548 a
SDict begin H.S end
 -8000 77548
a -8000 77548 a
SDict begin 25 H.A end
 -8000 77548 a -8000 77548 a
SDict begin [/View [/XYZ H.V]/Dest (defn.3) cvn /DEST pdfmark end
 -8000 77548
a 0.12158 0.21176 0.33725 TeXcolorrgb Fo(De\033ni\347\343o)1517
b(3.)p 0.12158 0.21176 0.33725 TeXcolorrgb 1145 w Fm(Um)1377
b(algor)-64 b(itmo)1379 b(\351)e(e\033cient)-73 b(e)1378
b(se)-8000 83082 y(o)g(seu)g(t)-73 b(empo)1378 b(de)g(e)-78
b(x)-152 b(ecu\347\343o)1379 b(\351)f(polinomial.)p
0.89804 0.2902 0.2706 TeXcolorrgb -8000 91274 a Fn(Mas)1149
b Fl(n)1922 89886 y Fk(100)7083 91274 y Fn(\351)e(melhor)h(que)g
Fl(n)31829 89886 y Fk(1+0)p Fj(:)p Fk(02\(log)476 b Fj(n)p
Fk(\))47267 91274 y Fn(?)p 0.12158 0.21176 0.33725 TeXcolorrgb
-8000 58000 a
tx@Dict begin  PutEnd  end
 -8000 58000 a 0.12158 0.21176 0.33725 TeXcolorrgb
0.12158 0.21176 0.33725 TeXcolorrgb eop end
%%Page: 11 11
TeXDict begin @landscape 11 10 bop 0.12158 0.21176 0.33725
TeXcolorrgb 8000 4901 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 8000 4901 a 0.12158 0.21176 0.33725
TeXcolorrgb 0.12158 0.21176 0.33725 TeXcolorrgb -8000
54901 a
tx@Dict begin tx@ovlDict begin InitOL /TheOL (0) def end end
 -8000 54901 a -8000 54901 a
tx@Dict begin tx@ovlDict begin (0) BOL end end
 -8000 54901 a 3099
x @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.0 SLW 1 1 1  setrgbcolor   0. true 0.0 0.0 397.48499 298.11374 .5
Frame  gsave 1 1 1  setrgbcolor  1. .setopacityalpha  fill  grestore
end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0.89804 0.2902 0.2706  setrgbcolor  /ArrowA { moveto } def
/ArrowB { } def  [ 377.60951 268.30054 19.87546 268.30054   /Lineto
/lineto load def 0  setlinejoin false Line  gsave 0.8 SLW 0.89804 0.2902
0.2706  setrgbcolor  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.0 SLW 0.12158 0.21176 0.33725  setrgbcolor   0. true 0.0 0.0 397.48499
298.11374 .5 Frame  gsave 0.12158 0.21176 0.33725  setrgbcolor  1.
.setopacityalpha  fill  grestore end
 
@endspecial
-8000 58000 a
SDict begin [ {ThisPage}<</Trans << /S /Wipe >> >> /PUT pdfmark end
 -8000 58000 a -8000 58000 a
SDict begin H.S end
 -8000 58000
a -8000 58000 a
SDict begin 17 H.A end
 -8000 58000 a -8000 58000 a
SDict begin [/View [/XYZ H.V]/Dest (slide.9) cvn /DEST pdfmark end
 -8000 58000
a -8000 58000 a
tx@Dict begin { 198.7425 163.96346 } PutCoor PutBegin  end
 -8000 58000 a 0.89804 0.2902 0.2706 TeXcolorrgb
-31743 62650 a Fx(No)-77 b(t)-66 b(a\347\343o)1817 b(As)-77
b(sint)-132 b(\363)-182 b(tic)-132 b(a)p 0.12158 0.21176 0.33725
TeXcolorrgb -8000 58000 a
tx@Dict begin  PutEnd  end
 -8000 58000 a -8000 58000 a
tx@Dict begin { 391.52295 4.47151 } PutCoor PutBegin  end

-8000 58000 a -755 w Fs(9)-8000 58000 y
tx@Dict begin  PutEnd  end
 -8000 58000 a
-8000 58000 a
tx@Dict begin { 19.87546 259.35748 } PutCoor PutBegin  end
 -8000 58000 a -8000 58000 a
tx@Dict begin  PutEnd  end
 -8000 58000
a 0.12158 0.21176 0.33725 TeXcolorrgb 0.12158 0.21176 0.33725
TeXcolorrgb eop end
%%Page: 12 12
TeXDict begin @landscape 12 11 bop 0.12158 0.21176 0.33725
TeXcolorrgb 8000 4901 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 8000 4901 a 0.12158 0.21176 0.33725
TeXcolorrgb 0.12158 0.21176 0.33725 TeXcolorrgb -8000
54901 a
tx@Dict begin tx@ovlDict begin InitOL /TheOL (0) def end end
 -8000 54901 a -8000 54901 a
tx@Dict begin tx@ovlDict begin (0) BOL end end
 -8000 54901 a 3099
x @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.0 SLW 1 1 1  setrgbcolor   0. true 0.0 0.0 397.48499 298.11374 .5
Frame  gsave 1 1 1  setrgbcolor  1. .setopacityalpha  fill  grestore
end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0.89804 0.2902 0.2706  setrgbcolor  /ArrowA { moveto } def
/ArrowB { } def  [ 377.60951 268.30054 19.87546 268.30054   /Lineto
/lineto load def 0  setlinejoin false Line  gsave 0.8 SLW 0.89804 0.2902
0.2706  setrgbcolor  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial -8000 58000 a
SDict begin [ {ThisPage}<</Trans << /S /Wipe >> >> /PUT pdfmark end
 -8000 58000 a
-8000 58000 a
SDict begin H.S end
 -8000 58000 a -8000 58000 a
SDict begin 17 H.A end
 -8000 58000
a -8000 58000 a
SDict begin [/View [/XYZ H.V]/Dest (slide.10) cvn /DEST pdfmark end
 -8000 58000 a -8000 58000 a
tx@Dict begin { 19.87546 274.26408 } PutCoor PutBegin  end
 -8000 58000
a 0.89804 0.2902 0.2706 TeXcolorrgb 532 x Fi(Big-oh)1818
b Fh(O)p 0.12158 0.21176 0.33725 TeXcolorrgb -8000 58000
a
tx@Dict begin  PutEnd  end
 -8000 58000 a -8000 58000 a
tx@Dict begin { 391.52295 4.47151 } PutCoor PutBegin  end
 -8000 58000 a -1199 w Fs(10)-8000
58000 y
tx@Dict begin  PutEnd  end
 -8000 58000 a -8000 58000 a
tx@Dict begin { 19.87546 259.35748 } PutCoor PutBegin  end
 -8000 58000 a -8000
66782 a
SDict begin H.S end
 -8000 66782 a -8000 66782 a
SDict begin 17 H.A end
 -8000 66782 a -8000
66782 a
SDict begin [/View [/XYZ H.V]/Dest (defn.4) cvn /DEST pdfmark end
 -8000 66782 a 0.12158 0.21176 0.33725 TeXcolorrgb
Fg(De\033ni\347\343o)1053 b(4.)p 0.12158 0.21176 0.33725
TeXcolorrgb 0.89804 0.2902 0.2706 TeXcolorrgb 1454 w
Fn(Limit)-57 b(e)1147 b(as)-61 b(sint)-92 b(\363)-107
b(tico)1149 b(super)-46 b(ior)p 0.12158 0.21176 0.33725
TeXcolorrgb 956 w Ff(T)434 b Fe(\()p Ff(n)p Fe(\))956
b Fv(\351)-8000 70546 y Ff(O)87 b Fe(\()p Ff(f)340 b
Fe(\()p Ff(n)p Fe(\)\))956 b Fp(se)1032 b Fv(e)-54 b(xist)j(em)956
b(const)-38 b(ant)-51 b(es)957 b Ff(c)1600 b(>)f Fe(0)956
b Fv(e)g Ff(n)47737 71024 y Fd(0)50555 70546 y Fq(\025)1598
b Fe(0)956 b Fv(t)-38 b(al)957 b(que)-8000 74309 y Fq(8)p
Ff(n)887 b Fq(\025)e Ff(n)1749 74787 y Fd(0)2967 74309
y Fv(,)956 b(\351)h(o)f(c)-99 b(aso)957 b(que)p 0.89804 0.2902 0.2706
TeXcolorrgb 956 w Fl(T)520 b Fc(\()p Fl(n)p Fc(\))1062
b Fb(\024)h Fl(c:f)408 b Fc(\()p Fl(n)p Fc(\))p 0.12158 0.21176 0.33725
TeXcolorrgb Fv(.)45989 74309 y
tx@Dict begin tx@ovlDict begin (1) BOL end end
 45989 74309 a -8000 80730
a Fv(Diz)-99 b(emos)957 b(nest)-51 b(e)957 b(c)-99 b(aso)957
b(que)f Ff(T)434 b Fe(\()p Ff(n)p Fe(\))956 b Fv(\351)g(limit)-38
b(ada)957 b(super)-45 b(ior)g(ment)-51 b(e)958 b(por)-8000
84493 y Ff(f)340 b Fe(\()p Ff(n)p Fe(\))p Fv(.)-8000
101360 y

 -8000 101360 a -8000 101360 a


 pgfo

 save

 0.12158 0.21176 0.33725 setrgbcolor

 0.3985 pgfw

 save

 /pgffc{0.12158 0.21176 0.33725 setrgbcolor}def

 1.0 .pgfsetfillopacityalpha

 0.0 4.25198 moveto

 0.0 52.12215 lineto

 0.0 54.47049 1.90364 56.37415 4.25198 56.37415 curveto

 352.15016 56.37415 lineto

 354.4985 56.37415 356.40215 54.47049 356.40215 52.12215 curveto

 356.40215 4.25198 lineto

 356.40215 1.90364 354.4985 0.0 352.15016 0.0 curveto

 4.25198 0.0 lineto

 1.90364 0.0 0.0 1.90364 0.0 4.25198 curveto

 closepath

 gsave pgffc pgffill grestore newpath

 restore

 save

 /pgffc{0.74902 0.98431 0.78824 setrgbcolor}def

 1.0 .pgfsetfillopacityalpha

 1.41731 4.25198 moveto

 1.41731 33.63857 lineto

 354.98483 33.63857 lineto

 354.98483 4.25198 lineto

 354.98483 2.68643 353.71571 1.41731 352.15016 1.41731 curveto

 4.25198 1.41731 lineto

 2.68643 1.41731 1.41731 2.68643 1.41731 4.25198 curveto

 closepath

 gsave pgffc pgffill grestore newpath

 restore

 save

 1.0 .pgfsetfillopacityalpha

 save

 [1.0 0.0 0.0 1.0 15.5907 41.11848 ] concat

 pgfs


 1 TeXcolorgray
1 TeXcolorgray -8000 101360 a Fv(Ex)-105 b(emplo)p 1
TeXcolorgray 0.12158 0.21176 0.33725 TeXcolorrgb -8000
101360 a


 pgfr

 restore

 restore

 save

 1.0 .pgfsetfillopacityalpha

 save

 [1.0 0.0 0.0 1.0 15.5907 13.50792 ] concat

 pgfs


 0.12158 0.21176 0.33725 TeXcolorrgb -8000 101360
a Ff(T)434 b Fe(\()p Ff(n)p Fe(\))885 b(=)h(10)p Ff(n)708
b Fe(+)h(8)p Ff(;)531 b(f)340 b Fe(\()p Ff(n)p Fe(\))886
b(=)f Ff(n)26775 100203 y Fd(2)27993 101360 y Ff(;)531
b(c)887 b Fe(=)e(5)p Ff(;)531 b(n)39756 101838 y Fd(0)41860
101360 y Fe(=)885 b(2)p 0.12158 0.21176 0.33725 TeXcolorrgb
-8000 101360 a


 pgfr

 restore

 restore

 newpath

 restore

 pgfc


 -8000 58000 a
tx@Dict begin  PutEnd  end
 -8000 58000 a 0.12158 0.21176 0.33725
TeXcolorrgb 0.12158 0.21176 0.33725 TeXcolorrgb eop end
%%Page: 13 13
TeXDict begin @landscape 13 12 bop 0.12158 0.21176 0.33725
TeXcolorrgb 8000 4901 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 8000 4901 a 0.12158 0.21176 0.33725
TeXcolorrgb 0.12158 0.21176 0.33725 TeXcolorrgb -8000
54901 a
tx@Dict begin tx@ovlDict begin InitOL /TheOL (0) def end end
 -8000 54901 a -8000 54901 a
tx@Dict begin tx@ovlDict begin (0) BOL end end
 -8000 54901 a 3099
x @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.0 SLW 1 1 1  setrgbcolor   0. true 0.0 0.0 397.48499 298.11374 .5
Frame  gsave 1 1 1  setrgbcolor  1. .setopacityalpha  fill  grestore
end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0.89804 0.2902 0.2706  setrgbcolor  /ArrowA { moveto } def
/ArrowB { } def  [ 377.60951 268.30054 19.87546 268.30054   /Lineto
/lineto load def 0  setlinejoin false Line  gsave 0.8 SLW 0.89804 0.2902
0.2706  setrgbcolor  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial -8000 58000 a
SDict begin [ {ThisPage}<</Trans << /S /Wipe >> >> /PUT pdfmark end
 -8000 58000 a
-8000 58000 a
tx@Dict begin { 19.87546 274.26408 } PutCoor PutBegin  end
 -8000 58000 a 0.89804 0.2902 0.2706 TeXcolorrgb
532 x Fi(Big-oh)1818 b Fh(O)p 0.12158 0.21176 0.33725
TeXcolorrgb -8000 58000 a
tx@Dict begin  PutEnd  end
 -8000 58000 a -8000 58000 a
tx@Dict begin { 391.52295 4.47151 } PutCoor PutBegin  end

-8000 58000 a -1199 w Fs(10)-8000 58000 y
tx@Dict begin  PutEnd  end
 -8000 58000
a -8000 58000 a
tx@Dict begin { 19.87546 259.35748 } PutCoor PutBegin  end
 -8000 58000 a -8000 66782 a
SDict begin H.S end
 -8000 66782
a -8000 66782 a
SDict begin 17 H.A end
 -8000 66782 a -8000 66782 a
SDict begin [/View [/XYZ H.V]/Dest (defn.4) cvn /DEST pdfmark end
 -8000 66782
a 0.12158 0.21176 0.33725 TeXcolorrgb Fg(De\033ni\347\343o)1053
b(4.)p 0.12158 0.21176 0.33725 TeXcolorrgb 0.89804 0.2902 0.2706
TeXcolorrgb 1454 w Fn(Limit)-57 b(e)1147 b(as)-61 b(sint)-92
b(\363)-107 b(tico)1149 b(super)-46 b(ior)p 0.12158 0.21176 0.33725
TeXcolorrgb 956 w Ff(T)434 b Fe(\()p Ff(n)p Fe(\))956
b Fv(\351)-8000 70546 y Ff(O)87 b Fe(\()p Ff(f)340 b
Fe(\()p Ff(n)p Fe(\)\))956 b Fp(se)1032 b Fv(e)-54 b(xist)j(em)956
b(const)-38 b(ant)-51 b(es)957 b Ff(c)1600 b(>)f Fe(0)956
b Fv(e)g Ff(n)47737 71024 y Fd(0)50555 70546 y Fq(\025)1598
b Fe(0)956 b Fv(t)-38 b(al)957 b(que)-8000 74309 y Fq(8)p
Ff(n)887 b Fq(\025)e Ff(n)1749 74787 y Fd(0)2967 74309
y Fv(,)956 b(\351)h(o)f(c)-99 b(aso)957 b(que)p 0.89804 0.2902 0.2706
TeXcolorrgb 956 w Fl(T)520 b Fc(\()p Fl(n)p Fc(\))1062
b Fb(\024)h Fl(c:f)408 b Fc(\()p Fl(n)p Fc(\))p 0.12158 0.21176 0.33725
TeXcolorrgb Fv(.)-8000 80730 y(Diz)-99 b(emos)957 b(nest)-51
b(e)957 b(c)-99 b(aso)957 b(que)f Ff(T)434 b Fe(\()p
Ff(n)p Fe(\))956 b Fv(\351)g(limit)-38 b(ada)957 b(super)-45
b(ior)g(ment)-51 b(e)958 b(por)-8000 84493 y Ff(f)340
b Fe(\()p Ff(n)p Fe(\))p Fv(.)-8000 101360 y

 -8000 101360
a -8000 101360 a


 pgfo

 save

 0.12158 0.21176 0.33725 setrgbcolor

 0.3985 pgfw

 save

 /pgffc{0.12158 0.21176 0.33725 setrgbcolor}def

 1.0 .pgfsetfillopacityalpha

 0.0 4.25198 moveto

 0.0 52.12215 lineto

 0.0 54.47049 1.90364 56.37415 4.25198 56.37415 curveto

 352.15016 56.37415 lineto

 354.4985 56.37415 356.40215 54.47049 356.40215 52.12215 curveto

 356.40215 4.25198 lineto

 356.40215 1.90364 354.4985 0.0 352.15016 0.0 curveto

 4.25198 0.0 lineto

 1.90364 0.0 0.0 1.90364 0.0 4.25198 curveto

 closepath

 gsave pgffc pgffill grestore newpath

 restore

 save

 /pgffc{0.74902 0.98431 0.78824 setrgbcolor}def

 1.0 .pgfsetfillopacityalpha

 1.41731 4.25198 moveto

 1.41731 33.63857 lineto

 354.98483 33.63857 lineto

 354.98483 4.25198 lineto

 354.98483 2.68643 353.71571 1.41731 352.15016 1.41731 curveto

 4.25198 1.41731 lineto

 2.68643 1.41731 1.41731 2.68643 1.41731 4.25198 curveto

 closepath

 gsave pgffc pgffill grestore newpath

 restore

 save

 1.0 .pgfsetfillopacityalpha

 save

 [1.0 0.0 0.0 1.0 15.5907 41.11848 ] concat

 pgfs


 1 TeXcolorgray 1 TeXcolorgray -8000
101360 a Fv(Ex)-105 b(emplo)p 1 TeXcolorgray 0.12158 0.21176 0.33725
TeXcolorrgb -8000 101360 a


 pgfr

 restore

 restore

 save

 1.0 .pgfsetfillopacityalpha

 save

 [1.0 0.0 0.0 1.0 15.5907 13.50792 ] concat

 pgfs


 0.12158 0.21176 0.33725 TeXcolorrgb
-8000 101360 a Ff(T)434 b Fe(\()p Ff(n)p Fe(\))885 b(=)h(10)p
Ff(n)708 b Fe(+)h(8)p Ff(;)531 b(f)340 b Fe(\()p Ff(n)p
Fe(\))886 b(=)f Ff(n)26775 100203 y Fd(2)27993 101360
y Ff(;)531 b(c)887 b Fe(=)e(5)p Ff(;)531 b(n)39756 101838
y Fd(0)41860 101360 y Fe(=)885 b(2)p 0.12158 0.21176 0.33725
TeXcolorrgb -8000 101360 a


 pgfr

 restore

 restore

 newpath

 restore

 pgfc


 -8000 58000 a
tx@Dict begin  PutEnd  end
 -8000 58000
a 0.12158 0.21176 0.33725 TeXcolorrgb 0.12158 0.21176 0.33725
TeXcolorrgb eop end
%%Page: 14 14
TeXDict begin @landscape 14 13 bop 0.12158 0.21176 0.33725
TeXcolorrgb 8000 4901 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 8000 4901 a 0.12158 0.21176 0.33725
TeXcolorrgb 0.12158 0.21176 0.33725 TeXcolorrgb -8000
54901 a
tx@Dict begin tx@ovlDict begin InitOL /TheOL (0) def end end
 -8000 54901 a -8000 54901 a
tx@Dict begin tx@ovlDict begin (0) BOL end end
 -8000 54901 a 3099
x @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.0 SLW 1 1 1  setrgbcolor   0. true 0.0 0.0 397.48499 298.11374 .5
Frame  gsave 1 1 1  setrgbcolor  1. .setopacityalpha  fill  grestore
end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0.89804 0.2902 0.2706  setrgbcolor  /ArrowA { moveto } def
/ArrowB { } def  [ 377.60951 268.30054 19.87546 268.30054   /Lineto
/lineto load def 0  setlinejoin false Line  gsave 0.8 SLW 0.89804 0.2902
0.2706  setrgbcolor  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial -8000 58000 a
SDict begin [ {ThisPage}<</Trans << /S /Wipe >> >> /PUT pdfmark end
 -8000 58000 a
-8000 58000 a
SDict begin H.S end
 -8000 58000 a -8000 58000 a
SDict begin 17 H.A end
 -8000 58000
a -8000 58000 a
SDict begin [/View [/XYZ H.V]/Dest (slide.11) cvn /DEST pdfmark end
 -8000 58000 a -8000 58000 a
tx@Dict begin { 19.87546 274.26408 } PutCoor PutBegin  end
 -8000 58000
a 0.89804 0.2902 0.2706 TeXcolorrgb 532 x Fi(Big-oh)1818
b Fh(O)p 0.12158 0.21176 0.33725 TeXcolorrgb -8000 58000
a
tx@Dict begin  PutEnd  end
 -8000 58000 a -8000 58000 a
tx@Dict begin { 391.52295 4.47151 } PutCoor PutBegin  end
 -8000 58000 a -845 w Fs(11)-8000
58000 y
tx@Dict begin  PutEnd  end
 -8000 58000 a -8000 58000 a
tx@Dict begin { 19.87546 259.35748 } PutCoor PutBegin  end
 -8000 58000 a -8000
58000 a
tx@Dict begin tx@ovlDict begin (1) BOL end end
 -8000 58000 a 0.12158 0.21176 0.33725 TeXcolorrgb
-8000 58000 a
tx@Dict begin tx@ovlDict begin (0) BOL end end
 -8000 58000 a 0.12158 0.21176 0.33725 TeXcolorrgb
0.12158 0.21176 0.33725 TeXcolorrgb 0.12 0.21 0.34 TeXcolorrgb
41033 82586 a Ff(T)434 b Fe(\()p Ff(n)p Fe(\))p 0.90 0.29 0.27
TeXcolorrgb 36311 65175 a Ff(c:f)340 b Fe(\()p Ff(n)p
Fe(\))3601 99910 y @beginspecial 50 @llx 50 @lly 302
@urx 238 @ury 2520 @rwi @setspecial
%%BeginDocument: big.eps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: big.tex
%%Creator: gnuplot 5.0 patchlevel 3
%%CreationDate: Sun Jun 10 17:34:55 2018
%%DocumentFonts: 
%%BoundingBox: 50 50 302 238
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following true/false flags may be edited by hand if desired.
% The unit line width and grayscale image gamma correction may also be changed.
%
/Color true def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Level3 false def
/Rounded false def
/ClipToBoundingBox false def
/SuppressPDFMark false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/Gamma 1.0 def
/BackgroundColor {-1.000 -1.000 -1.000} def
%
/vshift -73 def
/dl1 {
  10.0 Dashlength userlinewidth gnulinewidth div mul mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength userlinewidth gnulinewidth div mul mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/doclip {
  ClipToBoundingBox {
    newpath 50 50 moveto 302 50 lineto 302 238 lineto 50 238 lineto closepath
    clip
  } if
} def
%
% Gnuplot Prolog Version 5.1 (Oct 2015)
%
%/SuppressPDFMark true def
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/g {setgray} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray textshow grestore} {textshow} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray textshow grestore} {textshow} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray textshow grestore} {textshow} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
3.8 setmiterlimit
% Classic Line colors (version 5.0)
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default dash patterns (version 5.0)
/LTB {BL [] LCb DL} def
/LTw {PL [] 1 setgray} def
/LTb {PL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [2 dl1 3 dl2] LC1 DL} def
/LT2 {PL [1 dl1 1.5 dl2] LC2 DL} def
/LT3 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC3 DL} def
/LT4 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [4 dl1 2 dl2] LC5 DL} def
/LT6 {PL [1.5 dl1 1.5 dl2 1.5 dl1 1.5 dl2 1.5 dl1 6 dl2] LC6 DL} def
/LT7 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC8 DL} def
/SL {[] 0 setdash} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
  clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
dup 2 lt
	{/InterpretLevel1 true def
	 /InterpretLevel3 false def}
	{/InterpretLevel1 Level1 def
	 2 gt
	    {/InterpretLevel3 Level3 def}
	    {/InterpretLevel3 false def}
	 ifelse }
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
%
Level1 SuppressPDFMark or 
{} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (big.tex)
  /Subject (gnuplot plot)
  /Creator (gnuplot 5.0 patchlevel 3)
  /Author (dvnoble)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Sun Jun 10 17:34:55 2018)
  /DOCINFO pdfmark
end
} ifelse
%
% Support for boxed text - Ethan A Merritt May 2005
%
/InitTextBox { userdict /TBy2 3 -1 roll put userdict /TBx2 3 -1 roll put
           userdict /TBy1 3 -1 roll put userdict /TBx1 3 -1 roll put
	   /Boxing true def } def
/ExtendTextBox { Boxing
    { gsave dup false charpath pathbbox
      dup TBy2 gt {userdict /TBy2 3 -1 roll put} {pop} ifelse
      dup TBx2 gt {userdict /TBx2 3 -1 roll put} {pop} ifelse
      dup TBy1 lt {userdict /TBy1 3 -1 roll put} {pop} ifelse
      dup TBx1 lt {userdict /TBx1 3 -1 roll put} {pop} ifelse
      grestore } if } def
/PopTextBox { newpath TBx1 TBxmargin sub TBy1 TBymargin sub M
               TBx1 TBxmargin sub TBy2 TBymargin add L
	       TBx2 TBxmargin add TBy2 TBymargin add L
	       TBx2 TBxmargin add TBy1 TBymargin sub L closepath } def
/DrawTextBox { PopTextBox stroke /Boxing false def} def
/FillTextBox { gsave PopTextBox 1 1 1 setrgbcolor fill grestore /Boxing false def} def
0 0 0 0 InitTextBox
/TBxmargin 20 def
/TBymargin 20 def
/Boxing false def
/textshow { ExtendTextBox Gshow } def
%
% redundant definitions for compatibility with prologue.ps older than 5.0.2
/LTB {BL [] LCb DL} def
/LTb {PL [] LCb DL} def
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
doclip
50 50 translate
0.050 0.050 scale
0 setgray
newpath
5.000 UL
LTb
LCb setrgbcolor
[] 0 setdash
5.000 UL
LTb
396 3507 M
396 374 L
4247 0 V
0 3133 R
-4247 0 R
1.000 UP
stroke
0.12 0.21 0.34 C 0.90 0.29 0.27 C 5.000 UL
LTb
LCb setrgbcolor
[] 0 setdash
LTb
5.000 UL
LTb
0.12 0.21 0.34 C 396 374 M
43 12 V
43 13 V
43 13 V
43 14 V
42 14 V
43 16 V
43 17 V
43 18 V
43 20 V
43 22 V
43 24 V
43 24 V
43 25 V
43 23 V
42 21 V
43 18 V
43 14 V
43 8 V
43 1 V
43 -6 V
43 -13 V
43 -20 V
43 -23 V
43 -25 V
42 -24 V
43 -23 V
43 -17 V
43 -11 V
43 -3 V
43 8 V
43 20 V
43 28 V
43 35 V
43 40 V
42 41 V
43 41 V
43 38 V
43 32 V
43 25 V
43 14 V
43 5 V
43 -5 V
43 -11 V
43 -15 V
42 -18 V
43 -18 V
43 -17 V
43 -12 V
43 -7 V
43 2 V
43 10 V
43 17 V
43 23 V
43 27 V
42 31 V
43 32 V
43 34 V
43 32 V
43 31 V
43 28 V
43 24 V
43 21 V
43 18 V
43 16 V
42 14 V
43 12 V
43 11 V
43 11 V
43 10 V
43 11 V
43 11 V
43 11 V
43 14 V
43 15 V
42 18 V
43 21 V
43 24 V
43 27 V
43 32 V
43 37 V
43 41 V
43 45 V
43 48 V
43 51 V
42 54 V
43 55 V
43 56 V
43 58 V
43 58 V
43 57 V
43 58 V
43 57 V
43 57 V
43 57 V
42 57 V
43 57 V
43 56 V
43 57 V
43 56 V
stroke
LTb
LCb setrgbcolor
[] 0 setdash
0.90 0.29 0.27 C 396 374 M
43 2 V
43 2 V
43 3 V
43 2 V
42 3 V
43 3 V
43 4 V
43 4 V
43 4 V
43 5 V
43 5 V
43 6 V
43 7 V
43 6 V
42 7 V
43 7 V
43 6 V
43 7 V
43 6 V
43 6 V
43 6 V
43 5 V
43 5 V
43 6 V
42 5 V
43 6 V
43 7 V
43 7 V
43 8 V
43 10 V
43 10 V
43 12 V
43 13 V
43 14 V
42 16 V
43 16 V
43 19 V
43 19 V
43 21 V
43 22 V
43 24 V
43 26 V
43 27 V
43 29 V
42 31 V
43 33 V
43 35 V
43 38 V
43 40 V
43 43 V
43 46 V
43 49 V
43 53 V
43 57 V
42 62 V
43 67 V
43 72 V
43 79 V
43 84 V
43 92 V
43 97 V
43 101 V
43 104 V
43 104 V
42 102 V
43 98 V
43 94 V
43 86 V
43 77 V
43 67 V
43 58 V
43 56 V
43 59 V
43 65 V
42 78 V
43 96 V
43 118 V
43 145 V
43 179 V
8 40 V
stroke
2.000 UL
LTb
LCb setrgbcolor
[] 0 setdash
5.000 UL
LTb
396 3507 M
396 374 L
4247 0 V
0 3133 R
-4247 0 R
1.000 UP
stroke
stroke
grestore
end
showpage
%%Trailer

%%EndDocument
 @endspecial 0 TeXcolorgray 5556 78355 a
 gsave currentpoint currentpoint translate -270 neg rotate neg exch
neg exch translate
 5556 78355 a
1371 79108 a Ff(tempo)5556 78355 y
 currentpoint grestore moveto
 5556 78355 a 30657
98952 a Ff(n)p 0.90 0.29 0.27 TeXcolorrgb 0.12 0.21 0.34
TeXcolorrgb 0.12158 0.21176 0.33725 TeXcolorrgb 60556
99910 a
SDict begin H.S end
 60556 99910 a 60556 99910 a
SDict begin 17 H.A end
 60556 99910 a 60556
99910 a
SDict begin [/View [/XYZ H.V]/Dest (figure.1) cvn /DEST pdfmark end
 60556 99910 a 0.12158 0.21176 0.33725 TeXcolorrgb
15723 105888 a Fv(F)-35 b(igur)-131 b(a)957 b(1:)p 0
TeXcolorgray 27573 105888 a
SDict begin H.S end
 27573 105888 a 27573 105888
a
SDict begin H.R end
 27573 105888 a 27573 105888 a
SDict begin [/View [/XYZ H.V]/Dest (figure.1) cvn /DEST pdfmark end
 27573 105888 a 0.12158 0.21176 0.33725
TeXcolorrgb Ff(T)434 b Fe(\()p Ff(n)p Fe(\))p Fq(2O)89
b Fe(\()p Ff(f)340 b Fe(\()p Ff(n)p Fe(\)\))p 0.12158 0.21176 0.33725
TeXcolorrgb 0.12158 0.21176 0.33725 TeXcolorrgb -8000
58000 a
tx@Dict begin  PutEnd  end
 -8000 58000 a 0.12158 0.21176 0.33725 TeXcolorrgb
0.12158 0.21176 0.33725 TeXcolorrgb eop end
%%Page: 15 15
TeXDict begin @landscape 15 14 bop 0.12158 0.21176 0.33725
TeXcolorrgb 8000 4901 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 8000 4901 a 0.12158 0.21176 0.33725
TeXcolorrgb 0.12158 0.21176 0.33725 TeXcolorrgb -8000
54901 a
tx@Dict begin tx@ovlDict begin InitOL /TheOL (0) def end end
 -8000 54901 a -8000 54901 a
tx@Dict begin tx@ovlDict begin (0) BOL end end
 -8000 54901 a 3099
x @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.0 SLW 1 1 1  setrgbcolor   0. true 0.0 0.0 397.48499 298.11374 .5
Frame  gsave 1 1 1  setrgbcolor  1. .setopacityalpha  fill  grestore
end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0.89804 0.2902 0.2706  setrgbcolor  /ArrowA { moveto } def
/ArrowB { } def  [ 377.60951 268.30054 19.87546 268.30054   /Lineto
/lineto load def 0  setlinejoin false Line  gsave 0.8 SLW 0.89804 0.2902
0.2706  setrgbcolor  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial -8000 58000 a
SDict begin [ {ThisPage}<</Trans << /S /Wipe >> >> /PUT pdfmark end
 -8000 58000 a
-8000 58000 a
SDict begin H.S end
 -8000 58000 a -8000 58000 a
SDict begin 17 H.A end
 -8000 58000
a -8000 58000 a
SDict begin [/View [/XYZ H.V]/Dest (slide.12) cvn /DEST pdfmark end
 -8000 58000 a -8000 58000 a
tx@Dict begin { 19.87546 274.26408 } PutCoor PutBegin  end
 -8000 58000
a 0.89804 0.2902 0.2706 TeXcolorrgb 532 x Fa(\012)p
0.12158 0.21176 0.33725 TeXcolorrgb -8000 58000 a
tx@Dict begin  PutEnd  end
 -8000
58000 a -8000 58000 a
tx@Dict begin { 391.52295 4.47151 } PutCoor PutBegin  end
 -8000 58000 a -1097 w Fs(12)-8000
58000 y
tx@Dict begin  PutEnd  end
 -8000 58000 a -8000 58000 a
tx@Dict begin { 19.87546 259.35748 } PutCoor PutBegin  end
 -8000 58000 a -8000
73965 a
SDict begin H.S end
 -8000 73965 a -8000 73965 a
SDict begin 17 H.A end
 -8000 73965 a -8000
73965 a
SDict begin [/View [/XYZ H.V]/Dest (defn.5) cvn /DEST pdfmark end
 -8000 73965 a 0.12158 0.21176 0.33725 TeXcolorrgb
Fg(De\033ni\347\343o)1053 b(5.)p 0.12158 0.21176 0.33725
TeXcolorrgb 0.89804 0.2902 0.2706 TeXcolorrgb 1108 w
Fn(Limit)-57 b(e)1147 b(as)-61 b(sint)-92 b(\363)-107
b(tico)1149 b(inf)-84 b(er)-46 b(ior)p 0.12158 0.21176 0.33725
TeXcolorrgb 955 w Ff(T)434 b Fe(\()p Ff(n)p Fe(\))956
b Fv(\351)g Fe(\012\()p Ff(f)340 b Fe(\()p Ff(n)p Fe(\)\))-8000
77729 y Fp(se)1032 b Fv(e)-54 b(xist)j(em)956 b(const)-38
b(ant)-51 b(es)957 b Ff(c)1045 b(>)g Fe(0)956 b Fv(e)g
Ff(n)34601 78207 y Fd(0)36863 77729 y Fq(\025)1044 b
Fe(0)956 b Fv(t)-38 b(al)957 b(que)f Fq(8)p Ff(n)1045
b Fq(\025)f Ff(n)62946 78207 y Fd(0)64164 77729 y Fv(,)956
b(\351)g(o)-8000 81492 y(c)-99 b(aso)958 b(que)p 0.89804 0.2902 0.2706
TeXcolorrgb 956 w Fl(T)520 b Fc(\()p Fl(n)p Fc(\))1062
b Fb(\025)g Fl(c:f)408 b Fc(\()p Fl(n)p Fc(\))p 0.12158 0.21176 0.33725
TeXcolorrgb Fv(.)28149 81492 y
tx@Dict begin tx@ovlDict begin (1) BOL end end
 28149 81492 a -8000 87913
a Fv(Diz)-99 b(emos)957 b(nest)-51 b(e)957 b(c)-99 b(aso)957
b(que)f Ff(T)434 b Fe(\()p Ff(n)p Fe(\))956 b Fv(\351)g(limit)-38
b(ada)957 b(inf)-77 b(er)-45 b(ior)g(ment)-51 b(e)959
b(por)-8000 91676 y Ff(f)340 b Fe(\()p Ff(n)p Fe(\))p
Fv(.)-8000 58000 y
tx@Dict begin  PutEnd  end
 -8000 58000 a 0.12158 0.21176 0.33725
TeXcolorrgb 0.12158 0.21176 0.33725 TeXcolorrgb eop end
%%Page: 16 16
TeXDict begin @landscape 16 15 bop 0.12158 0.21176 0.33725
TeXcolorrgb 8000 4901 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 8000 4901 a 0.12158 0.21176 0.33725
TeXcolorrgb 0.12158 0.21176 0.33725 TeXcolorrgb -8000
54901 a
tx@Dict begin tx@ovlDict begin InitOL /TheOL (0) def end end
 -8000 54901 a -8000 54901 a
tx@Dict begin tx@ovlDict begin (0) BOL end end
 -8000 54901 a 3099
x @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.0 SLW 1 1 1  setrgbcolor   0. true 0.0 0.0 397.48499 298.11374 .5
Frame  gsave 1 1 1  setrgbcolor  1. .setopacityalpha  fill  grestore
end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0.89804 0.2902 0.2706  setrgbcolor  /ArrowA { moveto } def
/ArrowB { } def  [ 377.60951 268.30054 19.87546 268.30054   /Lineto
/lineto load def 0  setlinejoin false Line  gsave 0.8 SLW 0.89804 0.2902
0.2706  setrgbcolor  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial -8000 58000 a
SDict begin [ {ThisPage}<</Trans << /S /Wipe >> >> /PUT pdfmark end
 -8000 58000 a
-8000 58000 a
tx@Dict begin { 19.87546 274.26408 } PutCoor PutBegin  end
 -8000 58000 a 0.89804 0.2902 0.2706 TeXcolorrgb
532 x Fa(\012)p 0.12158 0.21176 0.33725 TeXcolorrgb -8000
58000 a
tx@Dict begin  PutEnd  end
 -8000 58000 a -8000 58000 a
tx@Dict begin { 391.52295 4.47151 } PutCoor PutBegin  end
 -8000 58000 a -1097
w Fs(12)-8000 58000 y
tx@Dict begin  PutEnd  end
 -8000 58000 a -8000 58000 a
tx@Dict begin { 19.87546 259.35748 } PutCoor PutBegin  end
 -8000
58000 a -8000 73965 a
SDict begin H.S end
 -8000 73965 a -8000 73965 a
SDict begin 17 H.A end
 -8000
73965 a -8000 73965 a
SDict begin [/View [/XYZ H.V]/Dest (defn.5) cvn /DEST pdfmark end
 -8000 73965 a 0.12158 0.21176 0.33725
TeXcolorrgb Fg(De\033ni\347\343o)1053 b(5.)p 0.12158 0.21176 0.33725
TeXcolorrgb 0.89804 0.2902 0.2706 TeXcolorrgb 1108 w
Fn(Limit)-57 b(e)1147 b(as)-61 b(sint)-92 b(\363)-107
b(tico)1149 b(inf)-84 b(er)-46 b(ior)p 0.12158 0.21176 0.33725
TeXcolorrgb 955 w Ff(T)434 b Fe(\()p Ff(n)p Fe(\))956
b Fv(\351)g Fe(\012\()p Ff(f)340 b Fe(\()p Ff(n)p Fe(\)\))-8000
77729 y Fp(se)1032 b Fv(e)-54 b(xist)j(em)956 b(const)-38
b(ant)-51 b(es)957 b Ff(c)1045 b(>)g Fe(0)956 b Fv(e)g
Ff(n)34601 78207 y Fd(0)36863 77729 y Fq(\025)1044 b
Fe(0)956 b Fv(t)-38 b(al)957 b(que)f Fq(8)p Ff(n)1045
b Fq(\025)f Ff(n)62946 78207 y Fd(0)64164 77729 y Fv(,)956
b(\351)g(o)-8000 81492 y(c)-99 b(aso)958 b(que)p 0.89804 0.2902 0.2706
TeXcolorrgb 956 w Fl(T)520 b Fc(\()p Fl(n)p Fc(\))1062
b Fb(\025)g Fl(c:f)408 b Fc(\()p Fl(n)p Fc(\))p 0.12158 0.21176 0.33725
TeXcolorrgb Fv(.)-8000 87913 y(Diz)-99 b(emos)957 b(nest)-51
b(e)957 b(c)-99 b(aso)957 b(que)f Ff(T)434 b Fe(\()p
Ff(n)p Fe(\))956 b Fv(\351)g(limit)-38 b(ada)957 b(inf)-77
b(er)-45 b(ior)g(ment)-51 b(e)959 b(por)-8000 91676 y
Ff(f)340 b Fe(\()p Ff(n)p Fe(\))p Fv(.)-8000 58000 y
tx@Dict begin  PutEnd  end

-8000 58000 a 0.12158 0.21176 0.33725 TeXcolorrgb
0.12158 0.21176 0.33725 TeXcolorrgb eop end
%%Page: 17 17
TeXDict begin @landscape 17 16 bop 0.12158 0.21176 0.33725
TeXcolorrgb 8000 4901 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 8000 4901 a 0.12158 0.21176 0.33725
TeXcolorrgb 0.12158 0.21176 0.33725 TeXcolorrgb -8000
54901 a
tx@Dict begin tx@ovlDict begin InitOL /TheOL (0) def end end
 -8000 54901 a -8000 54901 a
tx@Dict begin tx@ovlDict begin (0) BOL end end
 -8000 54901 a 3099
x @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.0 SLW 1 1 1  setrgbcolor   0. true 0.0 0.0 397.48499 298.11374 .5
Frame  gsave 1 1 1  setrgbcolor  1. .setopacityalpha  fill  grestore
end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0.89804 0.2902 0.2706  setrgbcolor  /ArrowA { moveto } def
/ArrowB { } def  [ 377.60951 268.30054 19.87546 268.30054   /Lineto
/lineto load def 0  setlinejoin false Line  gsave 0.8 SLW 0.89804 0.2902
0.2706  setrgbcolor  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial -8000 58000 a
SDict begin [ {ThisPage}<</Trans << /S /Wipe >> >> /PUT pdfmark end
 -8000 58000 a
-8000 58000 a
SDict begin H.S end
 -8000 58000 a -8000 58000 a
SDict begin 17 H.A end
 -8000 58000
a -8000 58000 a
SDict begin [/View [/XYZ H.V]/Dest (slide.13) cvn /DEST pdfmark end
 -8000 58000 a -8000 58000 a
tx@Dict begin { 19.87546 274.26408 } PutCoor PutBegin  end
 -8000 58000
a 0.89804 0.2902 0.2706 TeXcolorrgb 532 x Fa(\012)p
0.12158 0.21176 0.33725 TeXcolorrgb -8000 58000 a
tx@Dict begin  PutEnd  end
 -8000
58000 a -8000 58000 a
tx@Dict begin { 391.52295 4.47151 } PutCoor PutBegin  end
 -8000 58000 a -1137 w Fs(13)-8000
58000 y
tx@Dict begin  PutEnd  end
 -8000 58000 a -8000 58000 a
tx@Dict begin { 19.87546 259.35748 } PutCoor PutBegin  end
 -8000 58000 a -8000
58000 a
tx@Dict begin tx@ovlDict begin (1) BOL end end
 -8000 58000 a 0.12158 0.21176 0.33725 TeXcolorrgb
-8000 58000 a
tx@Dict begin tx@ovlDict begin (0) BOL end end
 -8000 58000 a 0.12158 0.21176 0.33725 TeXcolorrgb
0.12158 0.21176 0.33725 TeXcolorrgb 0.12 0.21 0.34 TeXcolorrgb
41033 82586 a Ff(T)434 b Fe(\()p Ff(n)p Fe(\))p 0.55 0.79 0.59
TeXcolorrgb 41033 93030 a Ff(c:f)340 b Fe(\()p Ff(n)p
Fe(\))3601 99910 y @beginspecial 50 @llx 50 @lly 302
@urx 238 @ury 2520 @rwi @setspecial
%%BeginDocument: omega.eps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: omega.tex
%%Creator: gnuplot 5.0 patchlevel 3
%%CreationDate: Sun Jun 10 17:34:55 2018
%%DocumentFonts: 
%%BoundingBox: 50 50 302 238
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following true/false flags may be edited by hand if desired.
% The unit line width and grayscale image gamma correction may also be changed.
%
/Color true def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Level3 false def
/Rounded false def
/ClipToBoundingBox false def
/SuppressPDFMark false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/Gamma 1.0 def
/BackgroundColor {-1.000 -1.000 -1.000} def
%
/vshift -73 def
/dl1 {
  10.0 Dashlength userlinewidth gnulinewidth div mul mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength userlinewidth gnulinewidth div mul mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/doclip {
  ClipToBoundingBox {
    newpath 50 50 moveto 302 50 lineto 302 238 lineto 50 238 lineto closepath
    clip
  } if
} def
%
% Gnuplot Prolog Version 5.1 (Oct 2015)
%
%/SuppressPDFMark true def
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/g {setgray} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray textshow grestore} {textshow} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray textshow grestore} {textshow} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray textshow grestore} {textshow} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
3.8 setmiterlimit
% Classic Line colors (version 5.0)
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default dash patterns (version 5.0)
/LTB {BL [] LCb DL} def
/LTw {PL [] 1 setgray} def
/LTb {PL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [2 dl1 3 dl2] LC1 DL} def
/LT2 {PL [1 dl1 1.5 dl2] LC2 DL} def
/LT3 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC3 DL} def
/LT4 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [4 dl1 2 dl2] LC5 DL} def
/LT6 {PL [1.5 dl1 1.5 dl2 1.5 dl1 1.5 dl2 1.5 dl1 6 dl2] LC6 DL} def
/LT7 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC8 DL} def
/SL {[] 0 setdash} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
  clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
dup 2 lt
	{/InterpretLevel1 true def
	 /InterpretLevel3 false def}
	{/InterpretLevel1 Level1 def
	 2 gt
	    {/InterpretLevel3 Level3 def}
	    {/InterpretLevel3 false def}
	 ifelse }
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
%
Level1 SuppressPDFMark or 
{} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (omega.tex)
  /Subject (gnuplot plot)
  /Creator (gnuplot 5.0 patchlevel 3)
  /Author (dvnoble)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Sun Jun 10 17:34:55 2018)
  /DOCINFO pdfmark
end
} ifelse
%
% Support for boxed text - Ethan A Merritt May 2005
%
/InitTextBox { userdict /TBy2 3 -1 roll put userdict /TBx2 3 -1 roll put
           userdict /TBy1 3 -1 roll put userdict /TBx1 3 -1 roll put
	   /Boxing true def } def
/ExtendTextBox { Boxing
    { gsave dup false charpath pathbbox
      dup TBy2 gt {userdict /TBy2 3 -1 roll put} {pop} ifelse
      dup TBx2 gt {userdict /TBx2 3 -1 roll put} {pop} ifelse
      dup TBy1 lt {userdict /TBy1 3 -1 roll put} {pop} ifelse
      dup TBx1 lt {userdict /TBx1 3 -1 roll put} {pop} ifelse
      grestore } if } def
/PopTextBox { newpath TBx1 TBxmargin sub TBy1 TBymargin sub M
               TBx1 TBxmargin sub TBy2 TBymargin add L
	       TBx2 TBxmargin add TBy2 TBymargin add L
	       TBx2 TBxmargin add TBy1 TBymargin sub L closepath } def
/DrawTextBox { PopTextBox stroke /Boxing false def} def
/FillTextBox { gsave PopTextBox 1 1 1 setrgbcolor fill grestore /Boxing false def} def
0 0 0 0 InitTextBox
/TBxmargin 20 def
/TBymargin 20 def
/Boxing false def
/textshow { ExtendTextBox Gshow } def
%
% redundant definitions for compatibility with prologue.ps older than 5.0.2
/LTB {BL [] LCb DL} def
/LTb {PL [] LCb DL} def
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
doclip
50 50 translate
0.050 0.050 scale
0 setgray
newpath
5.000 UL
LTb
LCb setrgbcolor
[] 0 setdash
5.000 UL
LTb
396 3507 M
396 374 L
4247 0 V
0 3133 R
-4247 0 R
1.000 UP
stroke
0.12 0.21 0.34 C 0.55 0.79 0.59 C 5.000 UL
LTb
LCb setrgbcolor
[] 0 setdash
LTb
5.000 UL
LTb
0.12 0.21 0.34 C 396 374 M
43 12 V
43 13 V
43 13 V
43 14 V
42 14 V
43 16 V
43 17 V
43 18 V
43 20 V
43 22 V
43 24 V
43 24 V
43 25 V
43 23 V
42 21 V
43 18 V
43 14 V
43 8 V
43 1 V
43 -6 V
43 -13 V
43 -20 V
43 -23 V
43 -25 V
42 -24 V
43 -23 V
43 -17 V
43 -11 V
43 -3 V
43 8 V
43 20 V
43 28 V
43 35 V
43 40 V
42 41 V
43 41 V
43 38 V
43 32 V
43 25 V
43 14 V
43 5 V
43 -5 V
43 -11 V
43 -15 V
42 -18 V
43 -18 V
43 -17 V
43 -12 V
43 -7 V
43 2 V
43 10 V
43 17 V
43 23 V
43 27 V
42 31 V
43 32 V
43 34 V
43 32 V
43 31 V
43 28 V
43 24 V
43 21 V
43 18 V
43 16 V
42 14 V
43 12 V
43 11 V
43 11 V
43 10 V
43 11 V
43 11 V
43 11 V
43 14 V
43 15 V
42 18 V
43 21 V
43 24 V
43 27 V
43 32 V
43 37 V
43 41 V
43 45 V
43 48 V
43 51 V
42 54 V
43 55 V
43 56 V
43 58 V
43 58 V
43 57 V
43 58 V
43 57 V
43 57 V
43 57 V
42 57 V
43 57 V
43 56 V
43 57 V
43 56 V
stroke
LTb
LCb setrgbcolor
[] 0 setdash
0.55 0.79 0.59 C 396 374 M
43 37 V
43 37 V
43 36 V
43 36 V
42 33 V
43 32 V
43 30 V
43 28 V
43 25 V
43 21 V
43 19 V
43 15 V
43 13 V
43 10 V
42 9 V
43 7 V
43 5 V
43 6 V
43 4 V
43 5 V
43 5 V
43 6 V
43 6 V
43 6 V
42 6 V
43 6 V
43 7 V
43 7 V
43 8 V
43 7 V
43 8 V
43 8 V
43 8 V
43 7 V
42 7 V
43 6 V
43 6 V
43 5 V
43 4 V
43 3 V
43 1 V
43 1 V
43 -1 V
43 0 V
42 -1 V
43 -1 V
43 -1 V
43 0 V
43 0 V
43 1 V
43 2 V
43 3 V
43 3 V
43 4 V
42 4 V
43 4 V
43 4 V
43 3 V
43 3 V
43 2 V
43 2 V
43 1 V
43 0 V
43 0 V
42 0 V
43 -1 V
43 -1 V
43 -1 V
43 -1 V
43 -1 V
43 -1 V
43 -1 V
43 -1 V
43 0 V
42 0 V
43 0 V
43 1 V
43 1 V
43 2 V
43 2 V
43 3 V
43 3 V
43 3 V
43 4 V
42 4 V
43 3 V
43 4 V
43 3 V
43 2 V
43 2 V
43 1 V
43 1 V
43 0 V
43 0 V
42 0 V
43 -1 V
43 -1 V
43 -1 V
43 -1 V
stroke
2.000 UL
LTb
LCb setrgbcolor
[] 0 setdash
5.000 UL
LTb
396 3507 M
396 374 L
4247 0 V
0 3133 R
-4247 0 R
1.000 UP
stroke
stroke
grestore
end
showpage
%%Trailer

%%EndDocument
 @endspecial 0 TeXcolorgray 5556 78355 a
 gsave currentpoint currentpoint translate -270 neg rotate neg exch
neg exch translate
 5556 78355 a
1371 79108 a Ff(tempo)5556 78355 y
 currentpoint grestore moveto
 5556 78355 a 30657
98952 a Ff(n)p 0.55 0.79 0.59 TeXcolorrgb 0.12 0.21 0.34
TeXcolorrgb 0.12158 0.21176 0.33725 TeXcolorrgb 60556
99910 a
SDict begin H.S end
 60556 99910 a 60556 99910 a
SDict begin 17 H.A end
 60556 99910 a 60556
99910 a
SDict begin [/View [/XYZ H.V]/Dest (figure.2) cvn /DEST pdfmark end
 60556 99910 a 0.12158 0.21176 0.33725 TeXcolorrgb
15606 105888 a Fv(F)-35 b(igur)-131 b(a)958 b(2:)p 0
TeXcolorgray 28062 105888 a
SDict begin H.S end
 28062 105888 a 28062 105888
a
SDict begin H.R end
 28062 105888 a 28062 105888 a
SDict begin [/View [/XYZ H.V]/Dest (figure.2) cvn /DEST pdfmark end
 28062 105888 a 0.12158 0.21176 0.33725
TeXcolorrgb Ff(T)434 b Fe(\()p Ff(n)p Fe(\))p Fq(2)p
Fe(\012\()p Ff(f)340 b Fe(\()p Ff(n)p Fe(\)\))p 0.12158 0.21176 0.33725
TeXcolorrgb 0.12158 0.21176 0.33725 TeXcolorrgb -8000
58000 a
tx@Dict begin  PutEnd  end
 -8000 58000 a 0.12158 0.21176 0.33725 TeXcolorrgb
0.12158 0.21176 0.33725 TeXcolorrgb eop end
%%Page: 18 18
TeXDict begin @landscape 18 17 bop 0.12158 0.21176 0.33725
TeXcolorrgb 8000 4901 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 8000 4901 a 0.12158 0.21176 0.33725
TeXcolorrgb 0.12158 0.21176 0.33725 TeXcolorrgb -8000
54901 a
tx@Dict begin tx@ovlDict begin InitOL /TheOL (0) def end end
 -8000 54901 a -8000 54901 a
tx@Dict begin tx@ovlDict begin (0) BOL end end
 -8000 54901 a 3099
x @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.0 SLW 1 1 1  setrgbcolor   0. true 0.0 0.0 397.48499 298.11374 .5
Frame  gsave 1 1 1  setrgbcolor  1. .setopacityalpha  fill  grestore
end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0.89804 0.2902 0.2706  setrgbcolor  /ArrowA { moveto } def
/ArrowB { } def  [ 377.60951 268.30054 19.87546 268.30054   /Lineto
/lineto load def 0  setlinejoin false Line  gsave 0.8 SLW 0.89804 0.2902
0.2706  setrgbcolor  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial -8000 58000 a
SDict begin [ {ThisPage}<</Trans << /S /Wipe >> >> /PUT pdfmark end
 -8000 58000 a
-8000 58000 a
SDict begin H.S end
 -8000 58000 a -8000 58000 a
SDict begin 17 H.A end
 -8000 58000
a -8000 58000 a
SDict begin [/View [/XYZ H.V]/Dest (slide.14) cvn /DEST pdfmark end
 -8000 58000 a -8000 58000 a
tx@Dict begin { 19.87546 274.26408 } PutCoor PutBegin  end
 -8000 58000
a 0.89804 0.2902 0.2706 TeXcolorrgb 532 x Fa(\002)p
0.12158 0.21176 0.33725 TeXcolorrgb -8000 58000 a
tx@Dict begin  PutEnd  end
 -8000
58000 a -8000 58000 a
tx@Dict begin { 391.52295 4.47151 } PutCoor PutBegin  end
 -8000 58000 a -1145 w Fs(14)-8000
58000 y
tx@Dict begin  PutEnd  end
 -8000 58000 a -8000 58000 a
tx@Dict begin { 19.87546 259.35748 } PutCoor PutBegin  end
 -8000 58000 a -8000
68728 a
SDict begin H.S end
 -8000 68728 a -8000 68728 a
SDict begin 17 H.A end
 -8000 68728 a -8000
68728 a
SDict begin [/View [/XYZ H.V]/Dest (defn.6) cvn /DEST pdfmark end
 -8000 68728 a 0.12158 0.21176 0.33725 TeXcolorrgb
Fg(De\033ni\347\343o)1053 b(6.)p 0.12158 0.21176 0.33725
TeXcolorrgb 0.89804 0.2902 0.2706 TeXcolorrgb 1154 w
Fn(Limit)-57 b(e)1147 b(as)-61 b(sint)-92 b(\363)-107
b(tico)1149 b(estr)-46 b(it)-54 b(o)p 0.12158 0.21176 0.33725
TeXcolorrgb 958 w Ff(T)434 b Fe(\()p Ff(n)p Fe(\))955
b Fv(\351)i Fe(\002\()p Ff(f)340 b Fe(\()p Ff(n)p Fe(\)\))-8000
72492 y Fp(se)1032 b Ff(T)434 b Fe(\()p Ff(n)p Fe(\))956
b Fv(\351)g(t)-38 b(ant)-48 b(o)957 b Ff(O)87 b Fe(\()p
Ff(f)340 b Fe(\()p Ff(n)p Fe(\)\))956 b Fv(quant)-48
b(o)956 b Fe(\012\()p Ff(f)340 b Fe(\()p Ff(n)p Fe(\)\))p
Fv(.)47255 72492 y
tx@Dict begin tx@ovlDict begin (1) BOL end end
 47255 72492 a -8000 78912 a Fv(Diz)-99
b(emos)957 b(nest)-51 b(e)957 b(c)-99 b(aso)957 b(que)f
Ff(T)434 b Fe(\()p Ff(n)p Fe(\))956 b Fv(\351)g(limit)-38
b(ada)957 b(estr)-45 b(it)-38 b(ament)-51 b(e)957 b(por)-8000
82676 y Ff(f)340 b Fe(\()p Ff(n)p Fe(\))p Fv(.)-8000
83473 y
tx@Dict begin tx@ovlDict begin (1) BOL end end
 -8000 83473 a 0.89804 0.2902 0.2706 TeXcolorrgb
0.89804 0.2902 0.2706 TeXcolorrgb 4959 x Fr(n)p 0.89804 0.2902 0.2706
TeXcolorrgb 3188 w Fv(T)-383 b(amb\351m)957 b(conhecido)g(por)h(limit)
-51 b(e)957 b(r)-156 b(estr)-45 b(it)d(o.)p 0.89804 0.2902 0.2706
TeXcolorrgb 0.89804 0.2902 0.2706 TeXcolorrgb -8000 93524
a Fr(n)p 0.89804 0.2902 0.2706 TeXcolorrgb 3188 w Fv(A)956
b(fun\347\343o)h Ff(T)434 b Fe(\()p Ff(n)p Fe(\))956
b Fv(cr)-156 b(esce)957 b(dentr)-159 b(o)957 b(de)f(um)g(f)-61
b(at)-48 b(or)958 b(const)-38 b(ant)-51 b(e)-3127 97288
y(multiplic)-99 b(ado)958 b(por)g Ff(f)340 b Fe(\()p
Ff(n)p Fe(\))p Fv(.)p 0.89804 0.2902 0.2706 TeXcolorrgb
0.12158 0.21176 0.33725 TeXcolorrgb -8000 58000 a
tx@Dict begin  PutEnd  end
 -8000
58000 a 0.12158 0.21176 0.33725 TeXcolorrgb 0.12158 0.21176 0.33725
TeXcolorrgb eop end
%%Page: 19 19
TeXDict begin @landscape 19 18 bop 0.12158 0.21176 0.33725
TeXcolorrgb 8000 4901 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 8000 4901 a 0.12158 0.21176 0.33725
TeXcolorrgb 0.12158 0.21176 0.33725 TeXcolorrgb -8000
54901 a
tx@Dict begin tx@ovlDict begin InitOL /TheOL (0) def end end
 -8000 54901 a -8000 54901 a
tx@Dict begin tx@ovlDict begin (0) BOL end end
 -8000 54901 a 3099
x @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.0 SLW 1 1 1  setrgbcolor   0. true 0.0 0.0 397.48499 298.11374 .5
Frame  gsave 1 1 1  setrgbcolor  1. .setopacityalpha  fill  grestore
end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0.89804 0.2902 0.2706  setrgbcolor  /ArrowA { moveto } def
/ArrowB { } def  [ 377.60951 268.30054 19.87546 268.30054   /Lineto
/lineto load def 0  setlinejoin false Line  gsave 0.8 SLW 0.89804 0.2902
0.2706  setrgbcolor  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial -8000 58000 a
SDict begin [ {ThisPage}<</Trans << /S /Wipe >> >> /PUT pdfmark end
 -8000 58000 a
-8000 58000 a
tx@Dict begin { 19.87546 274.26408 } PutCoor PutBegin  end
 -8000 58000 a 0.89804 0.2902 0.2706 TeXcolorrgb
532 x Fa(\002)p 0.12158 0.21176 0.33725 TeXcolorrgb -8000
58000 a
tx@Dict begin  PutEnd  end
 -8000 58000 a -8000 58000 a
tx@Dict begin { 391.52295 4.47151 } PutCoor PutBegin  end
 -8000 58000 a -1145
w Fs(14)-8000 58000 y
tx@Dict begin  PutEnd  end
 -8000 58000 a -8000 58000 a
tx@Dict begin { 19.87546 259.35748 } PutCoor PutBegin  end
 -8000
58000 a -8000 68728 a
SDict begin H.S end
 -8000 68728 a -8000 68728 a
SDict begin 17 H.A end
 -8000
68728 a -8000 68728 a
SDict begin [/View [/XYZ H.V]/Dest (defn.6) cvn /DEST pdfmark end
 -8000 68728 a 0.12158 0.21176 0.33725
TeXcolorrgb Fg(De\033ni\347\343o)1053 b(6.)p 0.12158 0.21176 0.33725
TeXcolorrgb 0.89804 0.2902 0.2706 TeXcolorrgb 1154 w
Fn(Limit)-57 b(e)1147 b(as)-61 b(sint)-92 b(\363)-107
b(tico)1149 b(estr)-46 b(it)-54 b(o)p 0.12158 0.21176 0.33725
TeXcolorrgb 958 w Ff(T)434 b Fe(\()p Ff(n)p Fe(\))955
b Fv(\351)i Fe(\002\()p Ff(f)340 b Fe(\()p Ff(n)p Fe(\)\))-8000
72492 y Fp(se)1032 b Ff(T)434 b Fe(\()p Ff(n)p Fe(\))956
b Fv(\351)g(t)-38 b(ant)-48 b(o)957 b Ff(O)87 b Fe(\()p
Ff(f)340 b Fe(\()p Ff(n)p Fe(\)\))956 b Fv(quant)-48
b(o)956 b Fe(\012\()p Ff(f)340 b Fe(\()p Ff(n)p Fe(\)\))p
Fv(.)-8000 78912 y(Diz)-99 b(emos)957 b(nest)-51 b(e)957
b(c)-99 b(aso)957 b(que)f Ff(T)434 b Fe(\()p Ff(n)p Fe(\))956
b Fv(\351)g(limit)-38 b(ada)957 b(estr)-45 b(it)-38 b(ament)-51
b(e)957 b(por)-8000 82676 y Ff(f)340 b Fe(\()p Ff(n)p
Fe(\))p Fv(.)-1135 82676 y
tx@Dict begin tx@ovlDict begin (1) BOL end end
 -1135 82676 a -8000 83473
a
tx@Dict begin tx@ovlDict begin (1) BOL end end
 -8000 83473 a 0.89804 0.2902 0.2706 TeXcolorrgb 0.89804 0.2902 0.2706
TeXcolorrgb 4959 x Fr(n)p 0.89804 0.2902 0.2706 TeXcolorrgb
3188 w Fv(T)-383 b(amb\351m)957 b(conhecido)g(por)h(limit)-51
b(e)957 b(r)-156 b(estr)-45 b(it)d(o.)p 0.89804 0.2902 0.2706
TeXcolorrgb 0.89804 0.2902 0.2706 TeXcolorrgb -8000 93524
a Fr(n)p 0.89804 0.2902 0.2706 TeXcolorrgb 3188 w Fv(A)956
b(fun\347\343o)h Ff(T)434 b Fe(\()p Ff(n)p Fe(\))956
b Fv(cr)-156 b(esce)957 b(dentr)-159 b(o)957 b(de)f(um)g(f)-61
b(at)-48 b(or)958 b(const)-38 b(ant)-51 b(e)-3127 97288
y(multiplic)-99 b(ado)958 b(por)g Ff(f)340 b Fe(\()p
Ff(n)p Fe(\))p Fv(.)p 0.89804 0.2902 0.2706 TeXcolorrgb
0.12158 0.21176 0.33725 TeXcolorrgb -8000 58000 a
tx@Dict begin  PutEnd  end
 -8000
58000 a 0.12158 0.21176 0.33725 TeXcolorrgb 0.12158 0.21176 0.33725
TeXcolorrgb eop end
%%Page: 20 20
TeXDict begin @landscape 20 19 bop 0.12158 0.21176 0.33725
TeXcolorrgb 8000 4901 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 8000 4901 a 0.12158 0.21176 0.33725
TeXcolorrgb 0.12158 0.21176 0.33725 TeXcolorrgb -8000
54901 a
tx@Dict begin tx@ovlDict begin InitOL /TheOL (0) def end end
 -8000 54901 a -8000 54901 a
tx@Dict begin tx@ovlDict begin (0) BOL end end
 -8000 54901 a 3099
x @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.0 SLW 1 1 1  setrgbcolor   0. true 0.0 0.0 397.48499 298.11374 .5
Frame  gsave 1 1 1  setrgbcolor  1. .setopacityalpha  fill  grestore
end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0.89804 0.2902 0.2706  setrgbcolor  /ArrowA { moveto } def
/ArrowB { } def  [ 377.60951 268.30054 19.87546 268.30054   /Lineto
/lineto load def 0  setlinejoin false Line  gsave 0.8 SLW 0.89804 0.2902
0.2706  setrgbcolor  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial -8000 58000 a
SDict begin [ {ThisPage}<</Trans << /S /Wipe >> >> /PUT pdfmark end
 -8000 58000 a
-8000 58000 a
tx@Dict begin { 19.87546 274.26408 } PutCoor PutBegin  end
 -8000 58000 a 0.89804 0.2902 0.2706 TeXcolorrgb
532 x Fa(\002)p 0.12158 0.21176 0.33725 TeXcolorrgb -8000
58000 a
tx@Dict begin  PutEnd  end
 -8000 58000 a -8000 58000 a
tx@Dict begin { 391.52295 4.47151 } PutCoor PutBegin  end
 -8000 58000 a -1145
w Fs(14)-8000 58000 y
tx@Dict begin  PutEnd  end
 -8000 58000 a -8000 58000 a
tx@Dict begin { 19.87546 259.35748 } PutCoor PutBegin  end
 -8000
58000 a -8000 68728 a
SDict begin H.S end
 -8000 68728 a -8000 68728 a
SDict begin 17 H.A end
 -8000
68728 a -8000 68728 a
SDict begin [/View [/XYZ H.V]/Dest (defn.6) cvn /DEST pdfmark end
 -8000 68728 a 0.12158 0.21176 0.33725
TeXcolorrgb Fg(De\033ni\347\343o)1053 b(6.)p 0.12158 0.21176 0.33725
TeXcolorrgb 0.89804 0.2902 0.2706 TeXcolorrgb 1154 w
Fn(Limit)-57 b(e)1147 b(as)-61 b(sint)-92 b(\363)-107
b(tico)1149 b(estr)-46 b(it)-54 b(o)p 0.12158 0.21176 0.33725
TeXcolorrgb 958 w Ff(T)434 b Fe(\()p Ff(n)p Fe(\))955
b Fv(\351)i Fe(\002\()p Ff(f)340 b Fe(\()p Ff(n)p Fe(\)\))-8000
72492 y Fp(se)1032 b Ff(T)434 b Fe(\()p Ff(n)p Fe(\))956
b Fv(\351)g(t)-38 b(ant)-48 b(o)957 b Ff(O)87 b Fe(\()p
Ff(f)340 b Fe(\()p Ff(n)p Fe(\)\))956 b Fv(quant)-48
b(o)956 b Fe(\012\()p Ff(f)340 b Fe(\()p Ff(n)p Fe(\)\))p
Fv(.)-8000 78912 y(Diz)-99 b(emos)957 b(nest)-51 b(e)957
b(c)-99 b(aso)957 b(que)f Ff(T)434 b Fe(\()p Ff(n)p Fe(\))956
b Fv(\351)g(limit)-38 b(ada)957 b(estr)-45 b(it)-38 b(ament)-51
b(e)957 b(por)-8000 82676 y Ff(f)340 b Fe(\()p Ff(n)p
Fe(\))p Fv(.)-8000 83473 y
tx@Dict begin tx@ovlDict begin (1) BOL end end
 -8000 83473 a 0.12158 0.21176 0.33725
TeXcolorrgb -8000 83473 a
tx@Dict begin tx@ovlDict begin (0) BOL end end
 -8000 83473 a 0.12158 0.21176 0.33725
TeXcolorrgb 4959 x Fr(n)p 0.12158 0.21176 0.33725 TeXcolorrgb
3188 w Fv(T)-383 b(amb\351m)957 b(conhecido)g(por)h(limit)-51
b(e)957 b(r)-156 b(estr)-45 b(it)d(o.)p 0.12158 0.21176 0.33725
TeXcolorrgb 47990 88432 a
tx@Dict begin tx@ovlDict begin (0) BOL end end
 47990 88432 a 0.12158 0.21176 0.33725
TeXcolorrgb -8000 93524 a Fr(n)p 0.12158 0.21176 0.33725
TeXcolorrgb 3188 w Fv(A)956 b(fun\347\343o)h Ff(T)434
b Fe(\()p Ff(n)p Fe(\))956 b Fv(cr)-156 b(esce)957 b(dentr)-159
b(o)957 b(de)f(um)g(f)-61 b(at)-48 b(or)958 b(const)-38
b(ant)-51 b(e)-3127 97288 y(multiplic)-99 b(ado)958 b(por)g
Ff(f)340 b Fe(\()p Ff(n)p Fe(\))p Fv(.)p 0.12158 0.21176 0.33725
TeXcolorrgb 0.12158 0.21176 0.33725 TeXcolorrgb -8000
58000 a
tx@Dict begin  PutEnd  end
 -8000 58000 a 0.12158 0.21176 0.33725 TeXcolorrgb
0.12158 0.21176 0.33725 TeXcolorrgb eop end
%%Page: 21 21
TeXDict begin @landscape 21 20 bop 0.12158 0.21176 0.33725
TeXcolorrgb 8000 4901 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 8000 4901 a 0.12158 0.21176 0.33725
TeXcolorrgb 0.12158 0.21176 0.33725 TeXcolorrgb -8000
54901 a
tx@Dict begin tx@ovlDict begin InitOL /TheOL (0) def end end
 -8000 54901 a -8000 54901 a
tx@Dict begin tx@ovlDict begin (0) BOL end end
 -8000 54901 a 3099
x @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.0 SLW 1 1 1  setrgbcolor   0. true 0.0 0.0 397.48499 298.11374 .5
Frame  gsave 1 1 1  setrgbcolor  1. .setopacityalpha  fill  grestore
end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0.89804 0.2902 0.2706  setrgbcolor  /ArrowA { moveto } def
/ArrowB { } def  [ 377.60951 268.30054 19.87546 268.30054   /Lineto
/lineto load def 0  setlinejoin false Line  gsave 0.8 SLW 0.89804 0.2902
0.2706  setrgbcolor  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial -8000 58000 a
SDict begin [ {ThisPage}<</Trans << /S /Wipe >> >> /PUT pdfmark end
 -8000 58000 a
-8000 58000 a
SDict begin H.S end
 -8000 58000 a -8000 58000 a
SDict begin 17 H.A end
 -8000 58000
a -8000 58000 a
SDict begin [/View [/XYZ H.V]/Dest (slide.15) cvn /DEST pdfmark end
 -8000 58000 a -8000 58000 a
tx@Dict begin { 19.87546 274.26408 } PutCoor PutBegin  end
 -8000 58000
a 0.89804 0.2902 0.2706 TeXcolorrgb 532 x Fa(\002)p
0.12158 0.21176 0.33725 TeXcolorrgb -8000 58000 a
tx@Dict begin  PutEnd  end
 -8000
58000 a -8000 58000 a
tx@Dict begin { 391.52295 4.47151 } PutCoor PutBegin  end
 -8000 58000 a -1099 w Fs(15)-8000
58000 y
tx@Dict begin  PutEnd  end
 -8000 58000 a -8000 58000 a
tx@Dict begin { 19.87546 259.35748 } PutCoor PutBegin  end
 -8000 58000 a -8000
58000 a
tx@Dict begin tx@ovlDict begin (1) BOL end end
 -8000 58000 a 0.12158 0.21176 0.33725 TeXcolorrgb
-8000 58000 a
tx@Dict begin tx@ovlDict begin (0) BOL end end
 -8000 58000 a 0.12158 0.21176 0.33725 TeXcolorrgb
0.12158 0.21176 0.33725 TeXcolorrgb 0.12 0.21 0.34 TeXcolorrgb
41033 82586 a Ff(T)434 b Fe(\()p Ff(n)p Fe(\))p 0.90 0.29 0.27
TeXcolorrgb 33956 65175 a Ff(c)p Fe(1)p Ff(:f)340 b Fe(\()p
Ff(n)p Fe(\))p 0.55 0.79 0.59 TeXcolorrgb 41033 93030
a Ff(c)p Fe(2)p Ff(:f)g Fe(\()p Ff(n)p Fe(\))3601 99910
y @beginspecial 50 @llx 50 @lly 302 @urx 238 @ury 2520
@rwi @setspecial
%%BeginDocument: tight.eps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: tight.tex
%%Creator: gnuplot 5.0 patchlevel 3
%%CreationDate: Sun Jun 10 17:34:55 2018
%%DocumentFonts: 
%%BoundingBox: 50 50 302 238
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following true/false flags may be edited by hand if desired.
% The unit line width and grayscale image gamma correction may also be changed.
%
/Color true def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Level3 false def
/Rounded false def
/ClipToBoundingBox false def
/SuppressPDFMark false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/Gamma 1.0 def
/BackgroundColor {-1.000 -1.000 -1.000} def
%
/vshift -73 def
/dl1 {
  10.0 Dashlength userlinewidth gnulinewidth div mul mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength userlinewidth gnulinewidth div mul mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/doclip {
  ClipToBoundingBox {
    newpath 50 50 moveto 302 50 lineto 302 238 lineto 50 238 lineto closepath
    clip
  } if
} def
%
% Gnuplot Prolog Version 5.1 (Oct 2015)
%
%/SuppressPDFMark true def
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/g {setgray} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray textshow grestore} {textshow} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray textshow grestore} {textshow} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray textshow grestore} {textshow} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
3.8 setmiterlimit
% Classic Line colors (version 5.0)
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default dash patterns (version 5.0)
/LTB {BL [] LCb DL} def
/LTw {PL [] 1 setgray} def
/LTb {PL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [2 dl1 3 dl2] LC1 DL} def
/LT2 {PL [1 dl1 1.5 dl2] LC2 DL} def
/LT3 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC3 DL} def
/LT4 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [4 dl1 2 dl2] LC5 DL} def
/LT6 {PL [1.5 dl1 1.5 dl2 1.5 dl1 1.5 dl2 1.5 dl1 6 dl2] LC6 DL} def
/LT7 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC8 DL} def
/SL {[] 0 setdash} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
  clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
dup 2 lt
	{/InterpretLevel1 true def
	 /InterpretLevel3 false def}
	{/InterpretLevel1 Level1 def
	 2 gt
	    {/InterpretLevel3 Level3 def}
	    {/InterpretLevel3 false def}
	 ifelse }
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
%
Level1 SuppressPDFMark or 
{} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (tight.tex)
  /Subject (gnuplot plot)
  /Creator (gnuplot 5.0 patchlevel 3)
  /Author (dvnoble)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Sun Jun 10 17:34:55 2018)
  /DOCINFO pdfmark
end
} ifelse
%
% Support for boxed text - Ethan A Merritt May 2005
%
/InitTextBox { userdict /TBy2 3 -1 roll put userdict /TBx2 3 -1 roll put
           userdict /TBy1 3 -1 roll put userdict /TBx1 3 -1 roll put
	   /Boxing true def } def
/ExtendTextBox { Boxing
    { gsave dup false charpath pathbbox
      dup TBy2 gt {userdict /TBy2 3 -1 roll put} {pop} ifelse
      dup TBx2 gt {userdict /TBx2 3 -1 roll put} {pop} ifelse
      dup TBy1 lt {userdict /TBy1 3 -1 roll put} {pop} ifelse
      dup TBx1 lt {userdict /TBx1 3 -1 roll put} {pop} ifelse
      grestore } if } def
/PopTextBox { newpath TBx1 TBxmargin sub TBy1 TBymargin sub M
               TBx1 TBxmargin sub TBy2 TBymargin add L
	       TBx2 TBxmargin add TBy2 TBymargin add L
	       TBx2 TBxmargin add TBy1 TBymargin sub L closepath } def
/DrawTextBox { PopTextBox stroke /Boxing false def} def
/FillTextBox { gsave PopTextBox 1 1 1 setrgbcolor fill grestore /Boxing false def} def
0 0 0 0 InitTextBox
/TBxmargin 20 def
/TBymargin 20 def
/Boxing false def
/textshow { ExtendTextBox Gshow } def
%
% redundant definitions for compatibility with prologue.ps older than 5.0.2
/LTB {BL [] LCb DL} def
/LTb {PL [] LCb DL} def
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
doclip
50 50 translate
0.050 0.050 scale
0 setgray
newpath
5.000 UL
LTb
LCb setrgbcolor
[] 0 setdash
5.000 UL
LTb
396 3507 M
396 374 L
4247 0 V
0 3133 R
-4247 0 R
1.000 UP
stroke
0.12 0.21 0.34 C 0.90 0.29 0.27 C 0.55 0.79 0.59 C 5.000 UL
LTb
LCb setrgbcolor
[] 0 setdash
LTb
5.000 UL
LTb
0.12 0.21 0.34 C 396 374 M
43 12 V
43 13 V
43 13 V
43 14 V
42 14 V
43 16 V
43 17 V
43 18 V
43 20 V
43 22 V
43 24 V
43 24 V
43 25 V
43 23 V
42 21 V
43 18 V
43 14 V
43 8 V
43 1 V
43 -6 V
43 -13 V
43 -20 V
43 -23 V
43 -25 V
42 -24 V
43 -23 V
43 -17 V
43 -11 V
43 -3 V
43 8 V
43 20 V
43 28 V
43 35 V
43 40 V
42 41 V
43 41 V
43 38 V
43 32 V
43 25 V
43 14 V
43 5 V
43 -5 V
43 -11 V
43 -15 V
42 -18 V
43 -18 V
43 -17 V
43 -12 V
43 -7 V
43 2 V
43 10 V
43 17 V
43 23 V
43 27 V
42 31 V
43 32 V
43 34 V
43 32 V
43 31 V
43 28 V
43 24 V
43 21 V
43 18 V
43 16 V
42 14 V
43 12 V
43 11 V
43 11 V
43 10 V
43 11 V
43 11 V
43 11 V
43 14 V
43 15 V
42 18 V
43 21 V
43 24 V
43 27 V
43 32 V
43 37 V
43 41 V
43 45 V
43 48 V
43 51 V
42 54 V
43 55 V
43 56 V
43 58 V
43 58 V
43 57 V
43 58 V
43 57 V
43 57 V
43 57 V
42 57 V
43 57 V
43 56 V
43 57 V
43 56 V
stroke
LTb
LCb setrgbcolor
[] 0 setdash
0.90 0.29 0.27 C 396 374 M
43 2 V
43 2 V
43 3 V
43 2 V
42 3 V
43 3 V
43 4 V
43 4 V
43 4 V
43 5 V
43 5 V
43 6 V
43 7 V
43 6 V
42 7 V
43 7 V
43 6 V
43 7 V
43 6 V
43 6 V
43 6 V
43 5 V
43 5 V
43 6 V
42 5 V
43 6 V
43 7 V
43 7 V
43 8 V
43 10 V
43 10 V
43 12 V
43 13 V
43 14 V
42 16 V
43 16 V
43 19 V
43 19 V
43 21 V
43 22 V
43 24 V
43 26 V
43 27 V
43 29 V
42 31 V
43 33 V
43 35 V
43 38 V
43 40 V
43 43 V
43 46 V
43 49 V
43 53 V
43 57 V
42 62 V
43 67 V
43 72 V
43 79 V
43 84 V
43 92 V
43 97 V
43 101 V
43 104 V
43 104 V
42 102 V
43 98 V
43 94 V
43 86 V
43 77 V
43 67 V
43 58 V
43 56 V
43 59 V
43 65 V
42 78 V
43 96 V
43 118 V
43 145 V
43 179 V
8 40 V
stroke
LTb
LCb setrgbcolor
[] 0 setdash
0.55 0.79 0.59 C 396 374 M
43 37 V
43 37 V
43 36 V
43 36 V
42 33 V
43 32 V
43 30 V
43 28 V
43 25 V
43 21 V
43 19 V
43 15 V
43 13 V
43 10 V
42 9 V
43 7 V
43 5 V
43 6 V
43 4 V
43 5 V
43 5 V
43 6 V
43 6 V
43 6 V
42 6 V
43 6 V
43 7 V
43 7 V
43 8 V
43 7 V
43 8 V
43 8 V
43 8 V
43 7 V
42 7 V
43 6 V
43 6 V
43 5 V
43 4 V
43 3 V
43 1 V
43 1 V
43 -1 V
43 0 V
42 -1 V
43 -1 V
43 -1 V
43 0 V
43 0 V
43 1 V
43 2 V
43 3 V
43 3 V
43 4 V
42 4 V
43 4 V
43 4 V
43 3 V
43 3 V
43 2 V
43 2 V
43 1 V
43 0 V
43 0 V
42 0 V
43 -1 V
43 -1 V
43 -1 V
43 -1 V
43 -1 V
43 -1 V
43 -1 V
43 -1 V
43 0 V
42 0 V
43 0 V
43 1 V
43 1 V
43 2 V
43 2 V
43 3 V
43 3 V
43 3 V
43 4 V
42 4 V
43 3 V
43 4 V
43 3 V
43 2 V
43 2 V
43 1 V
43 1 V
43 0 V
43 0 V
42 0 V
43 -1 V
43 -1 V
43 -1 V
43 -1 V
stroke
2.000 UL
LTb
LCb setrgbcolor
[] 0 setdash
5.000 UL
LTb
396 3507 M
396 374 L
4247 0 V
0 3133 R
-4247 0 R
1.000 UP
stroke
stroke
grestore
end
showpage
%%Trailer

%%EndDocument
 @endspecial 0 TeXcolorgray 5556 78355 a
 gsave currentpoint currentpoint translate -270 neg rotate neg exch
neg exch translate
 5556 78355 a
1371 79108 a Ff(tempo)5556 78355 y
 currentpoint grestore moveto
 5556 78355 a 30657
98952 a Ff(n)p 0.55 0.79 0.59 TeXcolorrgb 0.90 0.29 0.27
TeXcolorrgb 0.12 0.21 0.34 TeXcolorrgb 0.12158 0.21176 0.33725
TeXcolorrgb 60556 99910 a
SDict begin H.S end
 60556 99910 a 60556 99910 a
SDict begin 17 H.A end

60556 99910 a 60556 99910 a
SDict begin [/View [/XYZ H.V]/Dest (figure.3) cvn /DEST pdfmark end
 60556 99910 a 0.12158 0.21176 0.33725
TeXcolorrgb 15472 105888 a Fv(F)-35 b(igur)-131 b(a)957
b(3:)p 0 TeXcolorgray 28023 105888 a
SDict begin H.S end
 28023 105888 a 28023
105888 a
SDict begin H.R end
 28023 105888 a 28023 105888 a
SDict begin [/View [/XYZ H.V]/Dest (figure.3) cvn /DEST pdfmark end
 28023 105888 a
0.12158 0.21176 0.33725 TeXcolorrgb Ff(T)434 b Fe(\()p
Ff(n)p Fe(\))p Fq(2)p Fe(\002\()p Ff(f)340 b Fe(\()p
Ff(n)p Fe(\)\))p 0.12158 0.21176 0.33725 TeXcolorrgb
0.12158 0.21176 0.33725 TeXcolorrgb -8000 58000 a
tx@Dict begin  PutEnd  end
 -8000
58000 a 0.12158 0.21176 0.33725 TeXcolorrgb 0.12158 0.21176 0.33725
TeXcolorrgb eop end
%%Page: 22 22
TeXDict begin @landscape 22 21 bop 0.12158 0.21176 0.33725
TeXcolorrgb 8000 4901 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 8000 4901 a 0.12158 0.21176 0.33725
TeXcolorrgb 0.12158 0.21176 0.33725 TeXcolorrgb -8000
54901 a
tx@Dict begin tx@ovlDict begin InitOL /TheOL (0) def end end
 -8000 54901 a -8000 54901 a
tx@Dict begin tx@ovlDict begin (0) BOL end end
 -8000 54901 a 3099
x @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.0 SLW 1 1 1  setrgbcolor   0. true 0.0 0.0 397.48499 298.11374 .5
Frame  gsave 1 1 1  setrgbcolor  1. .setopacityalpha  fill  grestore
end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0.89804 0.2902 0.2706  setrgbcolor  /ArrowA { moveto } def
/ArrowB { } def  [ 377.60951 268.30054 19.87546 268.30054   /Lineto
/lineto load def 0  setlinejoin false Line  gsave 0.8 SLW 0.89804 0.2902
0.2706  setrgbcolor  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial -8000 58000 a
SDict begin [ {ThisPage}<</Trans << /S /Wipe >> >> /PUT pdfmark end
 -8000 58000 a
-8000 58000 a
SDict begin H.S end
 -8000 58000 a -8000 58000 a
SDict begin 17 H.A end
 -8000 58000
a -8000 58000 a
SDict begin [/View [/XYZ H.V]/Dest (slide.16) cvn /DEST pdfmark end
 -8000 58000 a -8000 58000 a
tx@Dict begin { 19.87546 274.26408 } PutCoor PutBegin  end
 -8000 58000
a 0.89804 0.2902 0.2706 TeXcolorrgb 532 x Fx(Obser)88
b(v)-154 b(a\347\365es)p 0.12158 0.21176 0.33725 TeXcolorrgb
-8000 58000 a
tx@Dict begin  PutEnd  end
 -8000 58000 a -8000 58000 a
tx@Dict begin { 391.52295 4.47151 } PutCoor PutBegin  end
 -8000 58000
a -1176 w Fs(16)-8000 58000 y
tx@Dict begin  PutEnd  end
 -8000 58000 a -8000 58000
a
tx@Dict begin { 19.87546 259.35748 } PutCoor PutBegin  end
 -8000 58000 a -8000 63386 a
tx@Dict begin tx@ovlDict begin (1) BOL end end
 -8000 63386 a 0.12158 0.21176 0.33725
TeXcolorrgb -8000 63386 a
tx@Dict begin tx@ovlDict begin (0) BOL end end
 -8000 63386 a 0.12158 0.21176 0.33725
TeXcolorrgb 2584 x Fr(n)p 0.12158 0.21176 0.33725 TeXcolorrgb
3188 w Fv(Dadas)957 b(duas)f(fun\347\365es)i Ff(g)1388
b Fe(=)1274 b Ff(n)33045 64813 y Fd(2)35219 65970 y Fv(e)957
b Ff(f)1614 b Fe(=)1274 b Ff(n)864 b Fe(+)g(32)p Fv(,)956
b(ano)-54 b(t)-38 b(amos)-3127 69734 y(que)956 b Ff(f)340
b Fe(\()p Ff(n)p Fe(\))p Fq(2)q(O)89 b Fe(\()p Ff(g)114
b Fe(\()p Ff(n)p Fe(\)\))956 b Fv(usando)h(a)f(seguint)-51
b(e)957 b(no)-54 b(t)-38 b(a\347\343o:)1116 b Ff(f)340
b Fe(\()p Ff(n)p Fe(\))1040 b(=)-3127 73497 y Fq(O)89
b Fe(\()p Ff(g)114 b Fe(\()p Ff(n)p Fe(\)\))p Fv(.)p
0.12158 0.21176 0.33725 TeXcolorrgb 9639 73497 a
tx@Dict begin tx@ovlDict begin (0) BOL end end
 9639
73497 a 0.12158 0.21176 0.33725 TeXcolorrgb -8000 78589
a Fr(n)p 0.12158 0.21176 0.33725 TeXcolorrgb 3188 w Fv(Nest)-51
b(e)957 b(c)-99 b(aso,)957 b(lemos)g Ff(f)340 b Fe(\()p
Ff(n)p Fe(\))p 0.89804 0.2902 0.2706 TeXcolorrgb 957
w Fn(\351)p 0.12158 0.21176 0.33725 TeXcolorrgb 956 w
Fq(O)89 b Fe(\()p Ff(g)114 b Fe(\()p Ff(n)p Fe(\)\))957
b Fv(ao)f(in)-73 b(v)-92 b(\351s)956 b(de)g(nos)h(r)-156
b(e-)-3127 82353 y(f)-77 b(er)-45 b(ir)g(mos)960 b(ao)c(sentido)h(de)f
(igualdade)g(usual.)p 0.12158 0.21176 0.33725 TeXcolorrgb
50448 82353 a
tx@Dict begin tx@ovlDict begin (0) BOL end end
 50448 82353 a 0.12158 0.21176 0.33725 TeXcolorrgb
-8000 87445 a Fr(n)p 0.12158 0.21176 0.33725 TeXcolorrgb
3188 w Fv(Ist)-48 b(o)958 b(por)-131 b(que)957 b Fq(O)89
b Fe(\()p Ff(g)114 b Fe(\()p Ff(n)p Fe(\)\))956 b Fv(\351)h(um)f
(conjunt)-48 b(o)958 b(de)e(fun\347\365es)h(que)f(t)-51
b(em)-3127 91209 y(o)957 b(mesmo)g(limit)-51 b(e)956
b(as)-51 b(sint)-80 b(\363)-89 b(tico)959 b(super)-45
b(ior)958 b(que)e Ff(g)114 b Fe(\()p Ff(n)p Fe(\))p Fv(.)p
0.12158 0.21176 0.33725 TeXcolorrgb 58191 91209 a
tx@Dict begin tx@ovlDict begin (0) BOL end end
 58191
91209 a 0.12158 0.21176 0.33725 TeXcolorrgb -8000 96301
a Fr(n)p 0.12158 0.21176 0.33725 TeXcolorrgb 3188 w Fv(P)-194
b(or)38 b(t)-38 b(ant)-48 b(o)957 b Ff(f)340 b Fe(\()p
Ff(n)p Fe(\))957 b Fv(\351)f(uma)g(fun\347\343o)h(que)f(per)38
b(t)-51 b(ence)958 b(a)e(es)-51 b(se)956 b(con-)-3127
100064 y(junt)-48 b(o.)p 0.12158 0.21176 0.33725 TeXcolorrgb
0.12158 0.21176 0.33725 TeXcolorrgb 0.12158 0.21176 0.33725
TeXcolorrgb 0.12158 0.21176 0.33725 TeXcolorrgb -8000
58000 a
tx@Dict begin  PutEnd  end
 -8000 58000 a 0.12158 0.21176 0.33725 TeXcolorrgb
0.12158 0.21176 0.33725 TeXcolorrgb eop end
%%Page: 23 23
TeXDict begin @landscape 23 22 bop 0.12158 0.21176 0.33725
TeXcolorrgb 8000 4901 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 8000 4901 a 0.12158 0.21176 0.33725
TeXcolorrgb 0.12158 0.21176 0.33725 TeXcolorrgb -8000
54901 a
tx@Dict begin tx@ovlDict begin InitOL /TheOL (0) def end end
 -8000 54901 a -8000 54901 a
tx@Dict begin tx@ovlDict begin (0) BOL end end
 -8000 54901 a 3099
x @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.0 SLW 1 1 1  setrgbcolor   0. true 0.0 0.0 397.48499 298.11374 .5
Frame  gsave 1 1 1  setrgbcolor  1. .setopacityalpha  fill  grestore
end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0.89804 0.2902 0.2706  setrgbcolor  /ArrowA { moveto } def
/ArrowB { } def  [ 377.60951 268.30054 19.87546 268.30054   /Lineto
/lineto load def 0  setlinejoin false Line  gsave 0.8 SLW 0.89804 0.2902
0.2706  setrgbcolor  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial -8000 58000 a
SDict begin [ {ThisPage}<</Trans << /S /Wipe >> >> /PUT pdfmark end
 -8000 58000 a
-8000 58000 a
SDict begin H.S end
 -8000 58000 a -8000 58000 a
SDict begin 17 H.A end
 -8000 58000
a -8000 58000 a
SDict begin [/View [/XYZ H.V]/Dest (slide.17) cvn /DEST pdfmark end
 -8000 58000 a -8000 58000 a
tx@Dict begin { 19.87546 274.26408 } PutCoor PutBegin  end
 -8000 58000
a 0.89804 0.2902 0.2706 TeXcolorrgb 532 x Fx(Bibliogr)-176
b(a\033a)1816 b(consult)-66 b(ada)p 0.12158 0.21176 0.33725
TeXcolorrgb -8000 58000 a
tx@Dict begin  PutEnd  end
 -8000 58000 a -8000 58000 a
tx@Dict begin { 391.52295 4.47151 } PutCoor PutBegin  end

-8000 58000 a -1040 w Fs(17)-8000 58000 y
tx@Dict begin  PutEnd  end
 -8000 58000
a -8000 58000 a
tx@Dict begin { 19.87546 259.35748 } PutCoor PutBegin  end
 -8000 58000 a -8000 72090 a
tx@Dict begin tx@ovlDict begin (1) BOL end end
 -8000 72090
a 0.12158 0.21176 0.33725 TeXcolorrgb -8000 72090 a
tx@Dict begin tx@ovlDict begin (0) BOL end end
 -8000
72090 a 0.12158 0.21176 0.33725 TeXcolorrgb 3773 x Fv([1])p
0.12158 0.21176 0.33725 TeXcolorrgb -4167 75863 a
SDict begin H.S end
 -4167
75863 a -4167 75863 a
SDict begin 17 H.A end
 -4167 75863 a -4167 75863 a
SDict begin [/View [/XYZ H.V]/Dest (cite.cormen12) cvn /DEST pdfmark
end
 -4167
75863 a 957 w Fv(Cor)-45 b(men,)957 b(T)-217 b(.,)956
b(Leiser)-96 b(son,)958 b(C.,)e(Riv)-89 b(est,)957 b(R.,)f(and)g(S)-70
b(t)-51 b(ein,)957 b(C.)1309 b Fp(Algor)-38 b(it-)-4167
79627 y(mos:)1116 b(T)-392 b(eor)-38 b(ia)956 b(e)h(P)-89
b(r)-124 b(\341)-41 b(tic)-99 b(a)p Fv(,)956 b(3)g(ed.)1307
b(Else)-54 b(vier)-287 b(,)957 b(2012.)p 0.12158 0.21176 0.33725
TeXcolorrgb -8000 80099 a
tx@Dict begin tx@ovlDict begin (0) BOL end end
 -8000 80099 a 0.12158 0.21176 0.33725
TeXcolorrgb 5948 x Fv([2])p 0.12158 0.21176 0.33725 TeXcolorrgb
-3561 86047 a
SDict begin H.S end
 -3561 86047 a -3561 86047 a
SDict begin 17 H.A end
 -3561 86047
a -3561 86047 a
SDict begin [/View [/XYZ H.V]/Dest (cite.kleinberg05) cvn /DEST pdfmark
end
 -3561 86047 a 956 w Fv(Kleinber)-128
b(g,)958 b(J.,)f(and)g(T)-383 b(ar)-131 b(dos)-64 b(,)958
b(E.)2251 b Fp(Algor)-38 b(ithm)957 b(Design)p Fv(,)g(1)f(ed.)-4167
89811 y(A)-67 b(ddison-)-118 b(W)-182 b(esley,)956 b(2005.)p
0.12158 0.21176 0.33725 TeXcolorrgb 0.12158 0.21176 0.33725
TeXcolorrgb -8000 94071 a
SDict begin H.S end
 -8000 94071 a -8000 94071 a
SDict begin 17 H.A end

-8000 94071 a -8000 94071 a
SDict begin [/View [/XYZ H.V]/Dest (cite.cormen12) cvn /DEST pdfmark
end
 -8000 94071 a -8000 94071
a
SDict begin H.S end
 -8000 94071 a -8000 94071 a
SDict begin 17 H.A end
 -8000 94071 a -8000 94071
a
SDict begin [/View [/XYZ H.V]/Dest (cite.kleinberg05) cvn /DEST pdfmark
end
 -8000 94071 a -8000 58000 a
tx@Dict begin  PutEnd  end
 -8000 58000 a 0.12158 0.21176 0.33725
TeXcolorrgb 0.12158 0.21176 0.33725 TeXcolorrgb eop end
%%Trailer

userdict /end-hook known{end-hook}if
%%EOF
