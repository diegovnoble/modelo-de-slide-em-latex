%!PS-Adobe-2.0
%%Creator: dvips(k) 5.997 Copyright 2017 Radical Eye Software
%%Title: build/sample.dvi
%%CreationDate: Mon Aug  6 23:23:32 2018
%%Pages: 23
%%PageOrder: Ascend
%%Orientation: Landscape
%%BoundingBox: 0 0 594 792
%%DocumentFonts: UniversalisADFStd-BoldCond UniversalisADFStd-Cond
%%+ SFTT1440 UniversalisADFStd-Regular Dingbats CMSY10
%%+ UniversalisADFStd-Italic UniversalisADFStd-Bold CMMI12 CMR12
%%+ UniversalisADFStd-BoldCondIt CMR10 CMR17
%%DocumentPaperSizes: Screen
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine: dvips -P pdf -o build/sample.ps build/sample.dvi
%DVIPSParameters: dpi=8000
%DVIPSSource:  TeX output 2018.08.06:2023
%%BeginProcSet: tex.pro 0 0
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/CharBuilder{save 3 1 roll S A/base get 2 index get S
/BitMaps get S get/Cd X pop/ctr 0 N Cdx 0 Cx Cy Ch sub Cx Cw add Cy
setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx sub Cy .1 sub]{Ci}imagemask
restore}B/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/dir 0 def/dyy{/dir 0 def}B/dyt{/dir 1 def}B/dty{/dir 2 def}B/dtt{/dir 3
def}B/p{dir 2 eq{-90 rotate show 90 rotate}{dir 3 eq{-90 rotate show 90
rotate}{show}ifelse}ifelse}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0
N/Ry 0 N/V{}B/RV/v{/Ry X/Rx X V}B statusdict begin/product where{pop
false[(Display)(NeXT)(LaserWriter 16/600)]{A length product length le{A
length product exch 0 exch getinterval eq{pop true exit}if}{pop}ifelse}
forall}{false}ifelse end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{
BDot}imagemask grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat
{BDot}imagemask grestore}}ifelse B/QV{gsave newpath transform round exch
round exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0
rlineto fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B
/M{S p delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}
B/g{0 M}B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p
-3 w}B/n{p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{
0 S rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: alt-rule.pro 0 0
%!
% Patch by TVZ
% Makes dvips files draw rules with stroke rather than fill.
% Makes narrow rules more predictable at low resolutions
% after distilling to PDF.
% May have unknown consequences for very thick rules.
% Tested only with dvips 5.85(k).
TeXDict begin
/QV {
  gsave newpath /ruleY X /ruleX X
  Rx Ry gt
  { ruleX ruleY Ry 2 div sub moveto Rx 0 rlineto Ry }
  { ruleX Rx 2 div add ruleY moveto 0 Ry neg rlineto Rx }
  ifelse
  setlinewidth 0 setlinecap stroke grestore
} bind def
end

%%EndProcSet
%%BeginProcSet: pstricks.pro 0 0
% $Id: pstricks.pro 698 2017-12-30 19:08:50Z herbert $
%
%% PostScript prologue for pstricks.tex.
%% Version 1.28, 2017/12/30
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%
%
% Define the follwing gs-functions if not known, eg when using distiller
%
systemdict /.setopacityalpha known not {/.setopacityalpha { pop } def } if
systemdict /.setblendmode known not {/.setblendmode { pop } def } if
systemdict /.setshapealpha known not {/.setshapealpha { pop } def } if
%
/tx@Dict 200 dict def 				% the main PSTricks dictionary
tx@Dict begin
/ADict 25 dict def				% The arrow dictionary
/CM { matrix currentmatrix } bind def
/SLW /setlinewidth load def
/CLW /currentlinewidth load def
/CP /currentpoint load def
/ED { exch def } bind def
/L /lineto load def
/T /translate load def
/TMatrix { } def
/RAngle { 0 } def
/Sqrt { dup 0 lt { pop 0 } { sqrt } ifelse } def  % return 0 for negative arguments 
/Atan { /atan load stopped { pop pop 0 } if } def % return 0 if atan not known
/ATAN1 {neg -1 atan 180 sub } def		% atan(x) (only one parameter)
/Div { dup 0 eq { pop } { div } ifelse } def  	% control the division
/Log { dup 1e-20 lt { pop -1e30 }{ log } ifelse } def % control the log
/tan { dup cos abs 1.e-10 lt 
  { pop 1.e10 } 				% return 1.e10 as infinit
  { dup sin exch cos div } ifelse 		% default sin/cos
} def
/Tan { dup sin exch cos Div } def 		% sin(x)/cos(x) x in degrees
/Acos {dup dup mul neg 1 add dup 0 lt {		% arc cos, returns 0 when negative root
  pop pop 0 }{ sqrt exch atan} ifelse } def
/Acos2 { 2 dict begin 
  /x ED /y ED
  y abs 1.0e-20 lt { 1.0e30 } if
  x y div 
  dup dup mul neg 1 add dup 0 lt {		% arc cos needs two values x,y
  pop pop 0 }{ sqrt exch atan} ifelse 
  y 0 lt { 180 add } if
} def
/NET { neg exch neg exch T } def	      	% change coordinate system to the negative one		
/Pyth { dup mul exch dup mul add sqrt } def   	% Pythagoras, expects 2 parameter
/Pyth2 {					% Pythagoras, xA yA xB yB
  3 -1 roll 		% xA xB yB yA
  sub			% xA xB yB-yA
  3 1 roll 		% yB-yA xA xB
  sub			% yB-yA xA-xB
  Pyth } def
/PtoC { 2 copy cos mul 3 1 roll sin mul } def % Polar to Cartesian (origimal)
/PtoCrel { pst@angleunit PtoC } def % Polar to Cartesian with \degrees[??]
/PtoCab { dup cos 4 -1 roll mul 3 1 roll sin mul } def % Polar to Cartesian (Ellipse) a b phi-> x y 
/AnytoDeg { pst@angleunit } def 
/DegtoAny { 1 pst@angleunit div} def
/AnytoRad { AnytoDeg DegtoRad } def 
/RadtoAny { RadtoDeg DegtoAny } def
%
%/Rand { rand 4294967295 div } def		% a real random number
/Rand { rand 2147483447 div } def		% a real random number between 0 and 1
%----------------- hv added 20050516 ---------------
/PiDiv2 1.57079632680 def
/Pi 3.14159265359 def 
/TwoPi 6.28318530718 def
/Euler 2.71828182846 def 
%/e Euler bind def
%
/RadtoDeg { 180 mul Pi div } bind def 		% convert from radian to degrees
/DegtoRad { Pi mul 180 div } bind def 		% viceversa
%
/startGlobal { true setglobal globaldict begin } bind def
/endGlobal { end false setglobal } bind def
/pssetRGBcolor /setrgbcolor load def
/pssetCMYKcolor /setcmykcolor load def
/pssetGraycolor /setgray load def
%
%----------------- hv end---------------------------
/PathLength@ { /z z y y1 sub x x1 sub Pyth add def /y1 y def /x1 x def } def
%
/PathLength { 
  flattenpath /z 0 def 
  { /y1 ED /x1 ED /y2 y1 def /x2 x1 def }
  { /y ED /x ED PathLength@ } 
  {} 
  { /y y2 def /x x2 def PathLength@ }
  /pathforall load stopped { pop pop pop pop } if 
  z 
} def
%
/STP { .996264 dup scale } def			% BP/PT scaling
/STV { SDict begin normalscale end STP  } def	% 
%
/DashLine {
    dup 0 gt
    { /a .5 def PathLength exch div }
    { pop /a 1 def PathLength } ifelse
    /b ED % pattern should fit evenly in b
    dup /X ED % pattern array
    0 get /y ED % length of first black segment
    /z 0 X {add} forall def % length of the full pattern
    %% Computation of the scaling factor as described by van Zandt:
    b a .5 sub 2 mul y mul sub z Div round
    z mul a .5 sub 2 mul y mul add b exch Div
    %%%% scaling factor on stack.
    /z ED %% now, z is the scaling factor
    false % for the length test below
    X { z mul } forall X astore %% modification TN 04-08-07
    %%% Checking whether at least one dash in X has positive length:
    {0 gt or} forall
    { X 1 a sub y mul }
    { [ 1 0 ] 0 }
    ifelse
    setdash stroke
} def
%
/DotLine { 
  /b PathLength def 
  /a ED /z ED /y CLW def 
  /z y z add def 
  a 0 gt { 
    /b b a div def 
  }{ 
    a 0 eq { 
      /b b y sub def 
    }{ a -3 eq { 
      /b b y add def } if 
    } ifelse 
  } ifelse 
  [ 0 b b z Div round Div dup 0 le { pop 1 } if ] 
  a 0 gt { 0 }{ y 2 div a -2 gt { neg }if } ifelse 
  setdash 1 setlinecap stroke 
} def
%
/SymbolLine {   % on stack [ x y x y ...
  counttomark 					% number of elements
  2 div cvi /n ED     				% n pairs
  /YA ED /XA ED					% the start point
  n 1 sub { 
    /YB ED /XB ED
    /XLength XB XA sub def
    /YLength YB YA sub def
    /PAngle YLength XLength Atan def
    /XYLength XLength YLength Pyth def
    %% for negative SymStep we calculate the distance 
    SymStep 0 lt 
      { %XYLength SymStep div abs cvi 
        /nSym SymStep abs cvi def } 
      { /nSym XYLength SymStep div cvi def }
    ifelse
    0.5 setflat
    /Shift Symbol stringwidth pop 2 div def 
    /deltaX XLength nSym div def
    /deltaY YLength nSym div def
    curveticks 
      { XA YA moveto }
      { XA Shift sub YA Shift sub moveto }
    ifelse 
    nSym { 
      gsave 
      curveticks 
        { PAngle 180 sub CorrAngle sub tickAngle add /rotAngle ED  
          currentpoint translate rotAngle rotate 
          0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
          SymbolLinewidth setlinewidth stroke
        }
        { 
          rotateSymbol { PAngle 180 sub CorrAngle sub rotate } if
          Symbol show 
        }
      ifelse 
      grestore 
      deltaX deltaY rmoveto
    } repeat
    /YA YB def /XA XB def
  } repeat 
  curveticks 
    { XA YA moveto }
    { XA Shift sub YA Shift sub moveto }
  ifelse 
  gsave 
  curveticks 
    { PAngle 180 sub CorrAngle sub tickAngle add /rotAngle ED  
      XA YA translate rotAngle rotate 
      0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
      SymbolLinewidth setlinewidth stroke
    }
    { 
      rotateSymbol { PAngle 180 sub CorrAngle sub rotate } if
      Symbol show 
    }
  ifelse 
  grestore
  pop 				% delete the mark symbol
} def
%
/LineFill { % hv ------------ patch 7 -------------
  gsave 
  abs /hatchWidthInc ED
  abs /hatchSepInc ED
  abs CLW add /a ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform pathbbox 
  /y2 ED 
  a Div ceiling cvi /x2 ED /y1 ED 
  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clipType   % must be defined in pstricks.tex: clip -- eoclip 
  newpath 
  2 setlinecap 
  systemdict
  /setstrokeadjust known { true setstrokeadjust } if 
  x2 x1 sub 1 add { 
    x1 a mul y1 moveto 0 y2 rlineto stroke 
    /x1 x1 1 add 
      hatchWidthInc 0 gt { CLW add } if 
    def 
    hatchSepInc 0 gt hatchWidthInc 0 gt or { 
      /a a hatchSepInc add def
      CLW hatchWidthInc add SLW 
    } if
  } repeat 
  grestore 
  pop pop } def
%
/DotFill {%	 on stack: dot radius
  /dotRadius ED
  abs CLW add /a ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform 
  pathbbox % llx lly urx ury of smallest bounding box
  /y2 ED /x2 ED /y1 ED /x1 ED 
  y2 y1 sub a div 2 add cvi /Ny ED
  x2 x1 sub a div 2 add cvi /Nx ED
  clipType   % must be defined in pstricks.tex: clip -- eoclip 
  newpath 
  /yA y1 dotRadius add CLW add def
  /xA0 x1 dotRadius add CLW add def
  Ny {
     /xA xA0 def
     Nx { 
       newpath 
       xA yA dotRadius 0 360 arc 
       SolidDot { gsave fill grestore } if 
       stroke
       xA a add /xA ED
     } repeat
     yA a add /yA ED
  } repeat
  grestore
} def
%
/PenroseFill {%	 on stack: scaling factor
  /Scale ED
%  1 exch div round /penroseFactor ED 
%  a 0 dtransform round exch round exch
%  2 copy idtransform 
%  exch Atan rotate 
%  idtransform pop /a ED 
%  .25 .25 itransform pathbbox 
%  /y2 ED 
%  a Div ceiling cvi /x2 ED /y1 ED 
%  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clip 
  newpath 
gsave
  220 150 translate
  Scale dup scale
  systemdict /setstrokeadjust known { true setstrokeadjust } if 
  /I/S/L/W/G/+/Z/F/E/D[/def/exch/for{E D}/add{s E get mul}
 { Z -36.2001 1 33 }{25 E S rlineto}{/q Z dup q G E q 1 + G}{Z 2 2}]{cvx def}forall
  [0 72 1008 {dup sin E cos }F ]1 setlinejoin/s W{/a W{/b I 10{/i I 4{/m I moveto
  i m +/j I 10{/l Z b m l + G a l G sub s m get div .2 + floor .3 + 25
  mul j l + S rmoveto}F i L j L stroke }F}F}F}F 
  grestore 
%  pop pop 
} def
%
/PenroseFillA {%  on stack: scaling factor, border color, kite color, dart color
  /Scale ED
  Scale dup scale
  /border_colour ED 
  /kite_colour ED 
  /dart_colour ED
  clip 
  newpath 
  gsave
  100 100 translate
  6 
  Scale 1 lt { 1 Scale dup add div mul cvi } if %%%%   Number of iterations
  10					%%%%   Long side length in millimeters
  /border_width { L 0.06 mul }def		%%%%   Choose the scalefactor for the borders
  /L exch 25.4 div 72 mul def		%%%%   Conversion: mm -> inches -> points
  /f{-1 5 sqrt add 2 div}bind def		%%%%   The reciprocal of the golden ratio
  /l{L f mul}bind def			%%%%   Short side length l = L*f
  /Ll{L l add}bind def			%%%%   Ll =  L + l
  /c{36 cos L mul}bind def		%%%%   c  =  L*cos(36)
  /s{36 sin L mul}bind def		%%%%   s  =  L*sin(36)
  /draw_tile { 0 0 moveto c s lineto 0 lineto gsave closepath gsave fill grestore
	     0 setlinewidth stroke grestore border_colour stroke } bind def
  /half_kite { dup dup 0 gt{ 1 sub gsave f f neg scale -36 rotate half_dart
			   Ll 0 translate 144 rotate kite grestore }
	      		 { kite_colour L draw_tile }ifelse
	     pop } bind def
  /half_dart { dup dup 0 gt{ 1 sub gsave f f scale half_kite
			   -144 rotate Ll neg 0 translate half_dart grestore }
	      		 { dart_colour l draw_tile }ifelse
  	     pop } bind def
  /kite{ gsave half_kite 1 -1 scale half_kite grestore }bind def
  border_width setlinewidth  1 setlinejoin  1 setlinecap
%  450 0 translate  
  dup f exch neg exp dup scale
  5 {kite 72 rotate } repeat stroke 
  grestore
} def
%
%
/TruchetFill { %	 on stack: scaling factor
  10 dict begin
  dup dup scale
  1 exch div round /penroseFactor ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform pathbbox 
  /y2 ED 
  a Div ceiling cvi /x2 ED /y1 ED 
  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clip 
  newpath 
  systemdict
  /setstrokeadjust known { true setstrokeadjust } if 
  /ma a neg def
  /ha a 2 div def 
  /mha ha neg def
  /tile { 
    rand dup 2 idiv 2 mul eq { 90 rotate } if
    mha mha moveto ha mha lineto
    ha ha lineto mha ha lineto
%    closepath .1 setlinewidth stroke
    contents
  } def
  /contents{ 
    0 ha moveto ha 0 lineto
    0 mha moveto mha 0 lineto
%    1 setlinewidth stroke
  } def
  /dotiling {
    f ma mul a f a mul { 
      /i exch def
      f ma mul a f a mul { 
        /j exch def
        gsave i j translate
        tile stroke grestore
      } for
    } for
  } def
%
  /f 3 def 
  5 srand dotiling 
  end % local user dict
} def
%
/BeginArrow { 
  ADict begin 			% hold it local, for end see EndArrow
  /@mtrx CM def 
  gsave 
  2 copy T 
  2 index sub neg exch 
  3 index sub exch Atan 
  rotate newpath 
} def
%
/EndArrow { @mtrx setmatrix CP grestore end } def % end the ADict
%
/Arrow { 
  CLW mul add dup 
  2 div /w ED 
  mul dup /h ED 
  mul /a ED 
  { 0 h T 1 -1 scale } if 
  w neg h moveto 
  0 0 L w h L w neg a neg rlineto 
  gsave fill grestore 
} def
%
/ArrowD { % the sides are drawn as curves (hv 20071211)
  CLW mul add dup 
  2 div /w ED 
  mul dup /h ED 
  mul /Inset ED 
  { 0 h T 1 -1 scale } if % changes the direction
% we use y=w/h^2 * x^2 as equation for the control points
% for the coordinates the arrow is seen from top to bottom
% the bottom (tip) is (0;0)
  w neg h moveto % lower left of >
  w 9 div 4 mul neg h 3 div 2 mul
  w 9 div neg       h 3 div  
  0 0 curveto    % tip of >
  w 9 div        h 3 div  
  w 9 div 4 mul  h 3 div 2 mul
  w h curveto % upper left of >
  w neg Inset neg rlineto % move to x=0 and inset
  gsave fill grestore 
} def 
%
/Tbar { 
  CLW mul add /z ED 
  z -2 div CLW 2 div moveto 
  z 0 rlineto stroke 
  0 CLW moveto 
} def
%
/Bracket { 
  CLW mul add dup CLW sub 2 div 
  /x ED mul CLW add /y ED /z CLW 2 div def 
  x neg y moveto 
  x neg CLW 2 div L x CLW 2 div L x y L stroke 
  0 CLW moveto 
} def
%
/RoundBracket { 
  CLW mul add dup 2 div 
  /x ED mul /y ED /mtrx CM def 
  0 CLW 2 div T x y mul 0 ne { x y scale } if 
  1 1 moveto 
  .85 .5 .35 0 0 0 curveto 
  -.35 0 -.85 .5 -1 1 curveto 
  mtrx setmatrix stroke 0 CLW moveto 
} def
%
/SD { 0 360 arc fill } def
%
/EndDot { % DS is the dot size 
  { /z DS def } { /z 0 def } ifelse  	% outer or inner dimen 
  /b ED 				% the color definition
  0 z DS SD 
  b { 0 z DS CLW sub SD } if 
  0 DS z add CLW 4 div sub 
  moveto 
} def
%
/Shadow { [ { /moveto load } { /lineto load } { /curveto load } {
  /closepath load } /pathforall load stopped { pop pop pop pop CP /moveto
  load } if ] cvx newpath 3 1 roll T exec } def
%
/NArray { % holds the coordinates and on top of stack the showpoints boolean
  /showpoints ED 
  counttomark 2 div dup cvi /n ED  	% n 2 div on stack 
  n eq not { exch pop } if		% even numbers of points? delete one
  ] aload /Points ED 
  showpoints not { Points aload pop } if
%    { ] aload /Points ED } 
%    { n 2 mul 1 add -1 roll pop } ifelse	% delete the mark symbol 
} def
%
/Line { 
  NArray n 0 eq not 
    { n 1 eq { 0 0 /n 2 def } if ArrowA /n n 2 sub def 
      n { Lineto } repeat 
      CP 4 2 roll ArrowB L pop pop 
    } if 
} def
%
/LineToYAxis {
  /Ox ED		% Save the x origin value 
  NArray            % all x-y pairs on stack
  n { 2 copy moveto % go to current point
    Ox exch Lineto   % line to y-axis
    pop             % delete old x-value
  } repeat
} def
%
/LineToXAxis{
  /Oy ED		% Save the y origin value 
  NArray		% all x-y pairs on stack
  n 0 eq not
    { n 1 eq { 0 0 /n 2 def } if
      ArrowA
      /n n 2 sub def
      CP 2 copy moveto pop Oy Lineto
      n { 2 copy moveto pop Oy Lineto } repeat
      CP
      4 2 roll
      ArrowB
      2 copy moveto pop Oy
      L
      pop pop } if
} def
%
/Arcto { 
  /a [ 6 -2 roll ] cvx def 
  a r 
  /arcto load stopped { 5 } { 4 } ifelse { pop } repeat 
  a 
} def
%
/CheckClosed { 
  dup n 2 mul 1 sub index eq 2 index n 2 mul 1 add index eq
  and { pop pop /n n 1 sub def } if 
} def
%
/Polygon { 
  NArray n 2 eq { 0 0 /n 3 def } if 
  n 3 lt 
    { n { pop pop } repeat } 
    { n 3 gt { CheckClosed } if 
      n 2 mul -2 roll 
      /y0 ED /x0 ED /y1 ED /x1 ED  
      x1 y1 
      /x1 x0 x1 add 2 div def 
      /y1 y0 y1 add 2 div def 
      x1 y1 moveto 
      /n n 2 sub def 
      n { Lineto } repeat 
      x1 y1 x0 y0 6 4 roll Lineto
      Lineto pop pop closepath } ifelse 
} def
%
/SymbolPolygon {   % on stack [ x y x y ...
  counttomark 					% number of elements
  2 add /m ED
  2 copy m 2 roll				% copy last two
  m 2 div cvi /n ED    				% n pairs
  /YA ED /XA ED					% the start point
  n 1 sub { 
    /YB ED /XB ED
    /XLength XB XA sub def
    /YLength YB YA sub def
    /PAngle YLength XLength Atan def
    /XYLength XLength YLength Pyth def
    /nSym XYLength SymStep Div cvi def
    /Shift Symbol stringwidth pop 2 Div def 
    /deltaX XLength nSym Div def
    /deltaY YLength nSym Div def
    XA Shift sub YA Shift sub moveto 
    nSym { 
      gsave rotateSymbol { PAngle 180 sub CorrAngle sub rotate } if
      Symbol show 
      grestore 
      deltaX deltaY rmoveto
    } repeat
%    XB Shift sub YB Shift sub moveto Symbol show
    /YA YB def /XA XB def
  } repeat 
  pop	% delete the mark symbol
} def
%
/Diamond { 
  /mtrx CM def 
  T rotate 
  /h ED 
  /w ED 
  dup 0 eq { pop } { CLW mul neg 
    /d ED 
    /a w h Atan def 
    /h d a sin Div h add def 
    /w d a cos Div w add def } ifelse 
  mark w 2 div h 2 div w 0 0 h neg w neg 0 0 h w 2 div h 2 div 
  /ArrowA { moveto } def 
  /ArrowB { } def 
  false Line 
  closepath mtrx setmatrix } def
%
/Triangle { 
  /mtrx CM def 
  translate 
  rotate /h ED 2 div /w ED 
  dup CLW mul /d ED 
  /h h d w h Atan sin Div sub def 
  /w w d h w Atan 2 div dup cos exch sin Div mul sub def 
  mark 
  0 d w neg d 0 h w d 0 d 
  /ArrowA { moveto } def 
  /ArrowB { } def 
  false 
  Line 
  closepath 
  mtrx
% DG/SR modification begin - Jun.  1, 1998 - Patch 3 (from Michael Vulis)
% setmatrix } def
  setmatrix pop 
} def
% DG/SR modification end
%
/CCA { 
  /y ED /x ED 
  2 copy y sub /dy1 ED 
  x sub /dx1 ED 
  /l1 dx1 dy1 Pyth def 
} def
%
/CC { 
  /l0 l1 def 
  /x1 x dx sub def 
  /y1 y dy sub def 
  /dx0 dx1 def 
  /dy0 dy1 def 
  CCA 
  /dx dx0 l1 c exp mul dx1 l0 c exp mul add def 
  /dy dy0 l1 c exp mul dy1 l0 c exp mul add def 
  /m dx0 dy0 Atan dx1 dy1 Atan sub 2 div cos abs b exp a mul dx dy Pyth Div 2 div def 
  /x2 x l0 dx mul m mul sub def
  /y2 y l0 dy mul m mul sub def 
  /dx l1 dx mul m mul neg def 
  /dy l1 dy mul m mul neg def 
} def
%
/IC { 
  /c c 1 add def 
  c 0 lt { /c 0 def } { c 3 gt { /c 3 def } if } ifelse 
  /a a 2 mul 3 div 45 cos b exp div def 
  CCA 
  /dx 0 def 
  /dy 0 def 
} def
%
/BOC { IC CC x2 y2 x1 y1 ArrowA CP 4 2 roll x y curveto } def
/NC { CC x1 y1 x2 y2 x y curveto } def
/EOC { x dx sub y dy sub 4 2 roll ArrowB 2 copy curveto } def
/BAC { IC CC x y moveto CC x1 y1 CP ArrowA } def
/NAC { x2 y2 x y curveto CC x1 y1 } def
/EAC { x2 y2 x y ArrowB curveto pop pop } def
%
/OpenCurve { 
  NArray n 3 lt 
    { n { pop pop } repeat } 
    { BOC /n n 3 sub def n { NC } repeat EOC } ifelse 
} def
%
/CurvePath { 
  %% for negative SymStep we calculate the distance 
  SymStep 0 lt { gsave PathLength SymStep div abs /SymStep ED grestore } if
  0.5 setflat
  flattenpath /z 0 def /z0 0 def
  { /y1 ED /x1 ED /y2 y1 def /x2 x1 def 
    x1 Shift sub y1 Shift sub moveto 
    gsave 
    curveticks 
      { x1 y1 translate startAngle rotate 
        0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
        SymbolLinewidth setlinewidth stroke      
      }
      { startAngle rotate Symbol show }
    ifelse 
    grestore /z0 z def }
  { /y ED /x ED PathLength@ z z0 sub SymStep ge {
      x Shift sub y Shift sub moveto 
      gsave 
      curveticks 
        { y yOld sub x xOld sub Atan 180 sub CorrAngle sub /rotAngle ED  
          x y translate rotAngle rotate 
          0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
          SymbolLinewidth setlinewidth stroke
        }
        { 
          rotateSymbol { y yOld sub x xOld sub Atan 180 sub CorrAngle sub rotate } if        
          Symbol show 
        }
      ifelse 
      grestore /z0 z def } if 
    /yOld y def /xOld x def } 
  {} %% the lineto part
  { /y y2 def /x x2 def PathLength@ 
    x Shift sub y Shift sub moveto 
    gsave
    curveticks 
      { y yOld sub x xOld sub Atan 180 sub /rotAngle ED  
        x y translate rotAngle rotate 
        0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
        SymbolLinewidth setlinewidth stroke
      }
      { 
        x Shift sub y Shift sub moveto 
        rotateSymbol { y yOld sub x xOld sub Atan 180 sub CorrAngle sub rotate } if        
        Symbol show 
      }
    ifelse 
    grestore
  }
  pathforall 
%  curveticks 
%   { gsave 
%     x y translate rotAngle rotate 
%     0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
%     SymbolLinewidth setlinewidth stroke grestore
%   } if
  z 
} def
%
/OpenSymbolCurve { 
  OpenCurve
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/AltCurve { 
  { false NArray n 2 mul 2 roll 
    [ n 2 mul 3 sub 1 roll ] aload
    /Points ED 
    n 2 mul -2 roll } 
  { false NArray } ifelse 
  n 4 lt { n { pop pop } repeat } { BAC /n n 4 sub def n { NAC } repeat EAC } ifelse 
} def
%
/AltOpenSymbolCurve { 
  AltCurve
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/ClosedCurve { 
  NArray n 3 lt 
    { n { pop pop } repeat } 
    { n 3 gt { CheckClosed } if 
      6 copy n 2 mul 6 add 6 roll 
      IC CC x y moveto n { NC } repeat 
      closepath pop pop 
    } ifelse 
} def
%
/ClosedSymbolCurve { 
  ClosedCurve
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/CalcBezierSpline {%  Christoph Bersch
  10 dict begin
  /getX { Points exch 2 mul get } def
  /getY { Points exch 2 mul 1 add get } def
  /n Points length 1 sub 2 idiv def
  /GetFirstControlPoints {
    /x n array def
    /tmp n array def
    /b 2 def
    x 0 rhs 0 get b div put
    1 1 n 1 sub {
      /i exch def
      tmp i 1 b div dup 4 1 roll put
      i n 1 sub lt { 4 }{ 3.5 } ifelse exch sub /b exch def
      x i rhs i get x i 1 sub get sub b div put
    } for
    1 1 n 1 sub {
      n exch sub
      dup dup x exch 1 sub 2 copy 6 2 roll
      get 3 1 roll tmp exch get
      exch x exch get mul sub
      put	
    } for
    x
  } def
  % 
  n 1 eq {
    0 getX 2 mul 1 getX add 3 div
    0 getY 2 mul 1 getY add 3 div
    exch dup 3 1 roll 2 mul 0 getX sub
    exch dup 3 1 roll 2 mul 0 getY sub
    [ 0 getX 0 getY 7 3 roll 1 getX 1 getY ] /outPoints exch def
  } {
    /outPoints 6 n mul 2 add array def
    0 1 n {
      dup dup 6 mul dup 1 add
      outPoints exch 5 -1 roll getY put
      outPoints exch 3 -1 roll getX put
    } for
    /rhs n array def
    1 1 n 2 sub {
      rhs exch dup dup getX 4 mul exch 1 add getX 2 mul add put
    } for
    rhs 0 0 getX 1 getX 2 mul add put
    rhs n 1 sub dup getX 8 mul n getX add 2 div put
    GetFirstControlPoints
    1 1 n 2 sub {
      rhs exch dup dup getY 4 mul exch 1 add getY 2 mul add put
    } for
    rhs 0 0 getY 1 getY 2 mul add put
    rhs n 1 sub dup getY 8 mul n getY add 2 div put
    GetFirstControlPoints
    0 1 n 1 sub {
      /i exch def
      2 copy
      i get outPoints 6 i mul 3 add 3 -1 roll put
      i get outPoints 6 i mul 2 add 3 -1 roll put
      2 copy
      i n 1 sub lt {
        i 1 add get i 1 add getY 2 mul exch sub outPoints 6 i mul 5 add 3 -1 roll put
        i 1 add get i 1 add getX 2 mul exch sub outPoints 6 i mul 4 add 3 -1 roll put
      }{
        n 1 sub get n getY add 2 div outPoints 6 n 1 sub mul 5 add 3 -1 roll put
        n 1 sub get n getX add 2 div outPoints 6 n 1 sub mul 4 add 3 -1 roll put
      } ifelse
    } for
    pop pop
  } ifelse
  outPoints
  end
} def
/Spline {
  /showpoints ED
  counttomark 2 div dup cvi /n ED
  n eq not { exch pop } if
  ] /Points ED
  n 1 gt {
    CalcBezierSpline
    mark exch aload pop
    ArrowA
    n 2 sub {
      6 2 roll 4 2 roll curveto
    } repeat
    6 2 roll 4 2 roll ArrowB curveto
  } if
} def
/OpenSymbolSpline {
  Spline
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/SQ { /r ED r r moveto r r neg L r neg r neg L r neg r L fill } def
/ST { /y ED /x ED x y moveto x neg y L 0 x L fill } def
/SP { /r ED gsave 0 r moveto 4 { 72 rotate 0 r L } repeat fill grestore } def
%
/FontDot { 
  DS 2 mul dup 
  matrix scale matrix concatmatrix exch matrix
  rotate matrix concatmatrix exch 
  findfont exch makefont setfont 
} def
%
/Rect { 
  x1 y1 y2 add 2 div moveto 
%  x1 y2 lineto 
%  x2 y2 lineto 
%  x2 y1 lineto
%  x1 y1 lineto 
  x1 y1 lineto  % counter clockwise path
  x2 y1 lineto 
  x2 y2 lineto
  x1 y2 lineto 
  closepath 
} def
%
/OvalFrame { 
  x1 x2 eq y1 y2 eq or 
    { pop pop x1 y1 moveto x2 y2 L } 
    { y1 y2 sub abs x1 x2 sub abs 2 copy gt 
      { exch pop } { pop } ifelse 
      2 div exch { dup 3 1 roll mul exch } if 
      2 copy lt { pop } { exch pop } ifelse
      /b ED 
      x1 y1 y2 add 2 div moveto 
      x1 y2 x2 y2 b arcto 
      x2 y2 x2 y1 b arcto
      x2 y1 x1 y1 b arcto 
      x1 y1 x1 y2 b arcto 
      16 { pop } repeat 
      closepath 
    } ifelse 
} def
%
/Frame { 
  CLW mul /a ED 
  3 -1 roll 
  2 copy gt { exch } if 
  a sub /y2 ED 
  a add /y1 ED 
  2 copy gt { exch } if 
  a sub /x2 ED 
  a add /x1 ED 
  1 index 0 eq { pop pop Rect } { OvalFrame } ifelse 
} def
%
/BezierNArray { 
  /f ED 
  counttomark 2 div dup cvi /n ED 
  n eq not { exch pop } if 
  n 1 sub neg 3 mod 3 add 3 mod { 0 0 /n n 1 add def } repeat 
  f { ] aload /Points ED } { n 2 mul 1 add -1 roll pop } ifelse 
} def
%
/OpenBezier { 
  BezierNArray 
  n 1 eq 
    { pop pop } 
    { ArrowA n 4 sub 3 idiv 
      { 6 2 roll 4 2 roll curveto } repeat 
      6 2 roll 4 2 roll ArrowB curveto } ifelse 
} def
%
/OpenSymbolBezier { 
  OpenBezier
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/ClosedBezier { 
  BezierNArray 
  n 1 eq 
    { pop pop } 
    { moveto n 1 sub 3 idiv 
      { 6 2 roll 4 2 roll curveto } repeat 
      closepath } ifelse 
} def
%
/ClosedSymbolBezier { 
  /f ED				 % save showpoints value 
  2 copy /yEnd ED /xEnd ED
  counttomark -2 roll 2 copy /yStart ED /xStart ED
  counttomark 2 roll
  f
  ClosedBezier
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
  [ xEnd yEnd xStart yStart SymbolLine 
} def
%
/BezierShowPoints { 
  gsave 
  Points aload length 2 div cvi /n ED 
  moveto 
  n 1 sub { lineto } repeat 
  CLW 2 div SLW [ 4 4 ] 0 setdash stroke 
  grestore 
} def
%
/Parab { 
  /y0 ED /x0 ED /y1 ED /x1 ED 
  /dx x0 x1 sub 3 div def 
  /dy y0 y1 sub 3 div def 
  x0 dx sub y0 dy add x1 y1 ArrowA
  x0 dx add y0 dy add x0 2 mul x1 sub y1 ArrowB 
  curveto 
  /Points [ x1 y1 x0 y0 x0 2 mul x1 sub y1 ] def 
} def
%
/Parab1 { % 1 end  |  0 SP
  /ySP ED /xSP ED /y1 ED /x1 ED 
  /dx xSP x1 sub 3 div def 
  /dy ySP y1 sub 3 div def 
  newpath x1 y1 moveto xSP y1 lineto xSP ySP lineto 
                       x1 ySP lineto closepath clip 
  currentpoint
  newpath moveto
  xSP dx sub ySP dy add x1 y1 ArrowA
  xSP dx add ySP dy add xSP 2 mul x1 sub y1 ArrowB 
  curveto 
  /Points [ x1 y1 xSP ySP xSP 2 mul x1 sub y1 ] def 
} def
%
/Grid { 
  newpath 
  /a 4 string def 
  /b ED % 				psk@gridlabels in pt
  /c ED % 				{ \pst@usecolor\psgridlabelcolor }
  /n ED % 				psk@griddots
  cvi dup 1 lt { pop 1 } if 
  /s ED % 				\psk@subgriddiv
  s div dup 0 eq { pop 1 } if 
  /dy ED s div dup 0 eq { pop 1 } if %	\pst@number\psyunit abs
  /dx ED dy div round dy mul %		\pst@number\psxunit abs
  /y0 ED dx div round dx mul 
  /x0 ED dy div round cvi 
  /y2 ED dx div round cvi 
  /x2 ED dy div round cvi 
  /y1 ED dx div round cvi 
  /x1 ED 
  /h y2 y1 sub 0 gt { 1 } { -1 } ifelse def 
  /w x2 x1 sub 0 gt { 1 } { -1 } ifelse def 
  b 0 gt { 
    /z1 b 4 div CLW 2 div add def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%    Helvetica findfont b scalefont setfont 
%    is set in pstricks.tex
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%    
%     /NimbusSanL-Regu findfont b scalefont setfont   
  /b b .95 mul CLW 2 div add def } if 
  systemdict /setstrokeadjust known 
    { true setstrokeadjust /t { } def }
    { /t { transform 0.25 sub round 0.25 add exch 0.25 sub round 0.25 add
       exch itransform } bind def } ifelse 
  gsave n 0 gt { 1 setlinecap [ 0 dy n div ] dy n div 2 div setdash } { 2 setlinecap } ifelse 
  /i x1 def 
  /f y1 dy mul n 0 gt { dy n div 2 div h mul sub } if def 
  /g y2 dy mul n 0 gt { dy n div 2 div h mul add } if def 
  x2 x1 sub w mul 1 add dup 1000 gt { pop 1000 } if 
  { i dx mul dup y0 moveto 
    b 0 gt 
      { gsave c i a cvs dup stringwidth pop 
        /z2 ED w 0 gt {z1} {z1 z2 add neg} ifelse 
	h 0 gt {b neg}{z1} ifelse 
        rmoveto show grestore } if 
    dup t f moveto 
    g t L stroke 
    /i i w add def 
  } repeat 
  grestore 
  gsave 
  n 0 gt
  % DG/SR modification begin - Nov. 7, 1997 - Patch 1
  %{ 1 setlinecap [ 0 dx n div ] dy n div 2 div setdash }
    { 1 setlinecap [ 0 dx n div ] dx n div 2 div setdash }
  % DG/SR modification end
    { 2 setlinecap } ifelse 
  /i y1 def 
  /f x1 dx mul n 0 gt { dx n div 2 div w mul sub } if def 
  /g x2 dx mul n 0 gt { dx n div 2 div w mul add } if def 
  y2 y1 sub h mul 1 add dup 1000 gt { pop 1000 } if 
  { newpath i dy mul dup x0 exch moveto 
    b 0 gt { gsave c i a cvs dup stringwidth pop 
      /z2 ED 
      w 0 gt {z1 z2 add neg} {z1} ifelse 
      h 0 gt {z1} {b neg} ifelse 
      rmoveto show grestore } if 
    dup f exch t moveto 
    g exch t L stroke 
    /i i h add def 
  } repeat 
  grestore 
} def
%
/ArcArrow { 
  /d ED /b ED /a ED 
  gsave 
  newpath 0 -1000 moveto clip 
  newpath 
  0 1 0 0 b 
  grestore 
  c mul 
  /e ED 
  pop pop pop r a e d PtoC y add exch x add
  exch r a PtoC y add exch x add exch b pop pop pop pop a e d CLW 8 div c
  mul neg d 
} def
%
%
/isbool { type (booleantype) cvn eq } def
%
/Ellipse { 
  dup isbool { /MoveToStart ED }{ /MoveToStart false def }ifelse  % false or true
  /rotAngle ED
  /mtrx CM def 
  T 
  rotAngle rotate
  scale 
  MoveToStart { 0 0 moveto 1 0 rmoveto } if  % move to the start position
  0 0 1 5 3 roll arc 
  mtrx setmatrix 
} def
%
/ArcAdjust { %%%% Vincent Guirardel
% given a target length (targetLength) and an initial angle (angle0) [in the stack],
% let  M(angle0)=(rx*cos(angle0),ry*sin(angle0))=(x0,y0).
% This computes an angle t such that (x0,y0) is at distance 
% targetLength from the point M(t)=(rx*cos(t),ry*sin(t)).
% NOTE: this an absolute angle, it does not have to be added or substracted to angle0
% contrary to TvZ's code.
% To achieve, this, one iterates the following process: start with some angle t,
% compute the point M' at distance targetLength of (x0,y0) on the semi-line [(x0,y0) M(t)].
% Now take t' (= new angle) so that (0,0) M(t') and M' are aligned.
%
% Another difference with TvZ's code is that we need d (=add/sub) to be defined.
% the value of d = add/sub is used to know on which side we have to move.
% It is only used in the initialisation of the angle before the iteration.
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Input stack:  1: target length 2: initial angle
% variables used : rx, ry, d (=add/sub)
%
  /targetLength ED /angle0 ED
  /x0 rx angle0 cos mul def
  /y0 ry angle0 sin mul def
% we are looking for an angle t such that (x0,y0) is at distance targetLength 
% from the point M(t)=(rx*cos(t),ry*sin(t)))
%initialisation of angle (using 1st order approx = TvZ's code)
  targetLength 57.2958 mul
  angle0 sin rx mul dup mul
  angle0 cos ry mul dup mul
  add sqrt div 
% if initialisation angle is two large (more than 90 degrees) set it to 90 degrees
% (if the ellipse is very curved at the point where we draw the arrow, %
% the value can be much more than 360 degrees !)
% this should avoid going on the wrong side (more than 180 degrees) or go near
% a bad attractive point (at 180 degrees)
  dup 90 ge { pop 90 } if 
  angle0 exch d % add or sub
% maximum number of times to iterate the iterative procedure:
% iterative procedure: takes an angle t on top of stack, computes a 
% better angle (and put it on top of stack)
  30 { dup
% compute distance D between (x0,y0) and M(t)
    dup cos rx mul x0 sub dup mul exch sin ry mul y0 sub dup mul add sqrt
% if D almost equals targetLength, we stop
    dup targetLength sub abs 1e-5 le { pop exit } if
% stack now contains D t
% compute the point M(t') at distance targetLength of (x0,y0) on the semi-line [(x0,y0) M(t)]:
% M(t')= ( (x(t)-x0)*targetLength/d+x0 , (y(t)-y0)*targetLength/d+y0 )
    exch dup cos rx mul x0 sub  exch sin ry mul y0 sub
% stack contains:  y(t)-y0, x(t)-x0, d
    2 index Div targetLength mul y0 add ry Div exch
    2 index Div targetLength mul x0 add rx Div
% stack contains x(t')/rx , y(t')/ry , d
% now compute t', and remove D from stack
    atan exch pop
  } repeat
% we don't look at what happened... in particular, if targetLength is greater 
% than the diameter of the ellipse...
% the final angle will be around /angle0 + 180. maybe we should treat this pathological case...
% after iteration, stack contains an angle t such that M(t) is the tail of the arrow
% to give back the result as a an angle relative to angle0 we could add the following line:
% angle0 sub 0 exch d
%
% begin bug fix 2006-01-11
% we want to adjust the new angle t' by a multiple of 360 so that  | t'-angle0 | <= 180
%(we don't want to make the ellipse turn more or less than it should)...
dup angle0 sub dup abs 180 gt { 180 add 360 div floor 360 mul sub } { pop } ifelse
% end bug fix
} def
%
/EllipticArcArrow {
  /d ED      % is add or sub
  /b ED      % arrow procedure
  /a1 ED     % angle
  gsave
  newpath
  0 -1000 moveto
  clip                  % Set clippath far from arrow.
  newpath
  0 1 0 0 b             % Draw arrow to determine length.
  grestore
% Length of arrow is on top of stack. Next 3 numbers are junk.
%
  a1 exch ArcAdjust   % Angular position of base of arrow.
  /a2 ED
  pop pop pop
  a2 cos rx mul xOrig add % hv 2007-08-29   x->xOrig
  a2 sin ry mul yOrig add % hv 2007-08-29   y->yOrig
  a1 cos rx mul xOrig add % 
  a1 sin ry mul yOrig add % 
% Now arrow tip coor and base coor are on stack.
  b pop pop pop pop       % Draw arrow, and discard coordinates.
  a2 CLW 8 div
% change value of d (test it by looking if  `` 1 1 d '' gives 2 or not )
  1 1 d 2 eq { /d { sub } def } { /d { add } def } ifelse
  ArcAdjust
% resets original value of d
  1 1 d 2 eq { /d { sub } def } { /d { add } def } ifelse  % Adjust angle to give overlap.
} def
%%------------------ tvz/DG/hv (2004-05-10) end -------------------%%
%
/Rot { CP CP translate 3 -1 roll neg rotate NET  } def
%
/RotBegin { 
  tx@Dict /TMatrix known not { /TMatrix { } def /RAngle { 0 } def } if 
  /TMatrix [ TMatrix CM ] cvx def 
  /a ED 
  a Rot /RAngle [ RAngle dup a add ] cvx def 
} def
%
/RotEnd { 
  /TMatrix [ TMatrix setmatrix ] cvx def 
  /RAngle [ RAngle pop ] cvx def 
} def
%
/PutCoor { gsave CP T CM STV exch exec moveto setmatrix CP grestore } def
/PutBegin { /TMatrix [ TMatrix CM ] cvx def CP 4 2 roll T moveto } def
/PutEnd { CP /TMatrix [ TMatrix setmatrix ] cvx def moveto } def
%
/Uput {
  /a ED 
  add 2 div /h ED 2 
  div /w ED 
  /s a sin def 
  /c a cos def 
  /b s abs c abs 2 copy gt dup 
    /q ED 
    { pop } { exch pop } ifelse def 
  /w1 c b div w mul def 
  /h1 s b div h mul def 
  q { w1 abs w sub dup c mul abs }{ h1 abs h sub dup s mul abs } ifelse 
} def
%
/UUput { 
  5 dict begin
  /z ED 
  abs /y ED 
  /x ED 
  q { x s div c mul abs y gt }{ x c div s mul abs y gt } ifelse 
    { x x mul y y mul sub z z mul add sqrt z add } 
    { q { x s div } { x c div } ifelse abs 
    } ifelse 
  a PtoC 
  h1 add exch 
  w1 add exch 
  end
} def
%
end
%-----------------------------------------------------------------------------%
%
% END pstricks.pro

%%EndProcSet
%%BeginProcSet: pst-algparser.pro 0 0
% $Id: pst-algparser.pro 446 2017-04-19 11:40:55Z herbert $
%%
%% PostScript prologue for PSTricks algorithm parser
%% Version 0.07, 2014/08/01
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%%
%%-----------------------------------------------------------------------------%
%
%currentdict /Pi known not { /Pi 3.14159265359 def } if
%
/AlgParser { tx@AlgToPs begin AlgToPs end } def  % Dominique Rodriguez
/I2P { AlgParser cvx exec } def  % Infix to Postfix
%
/tx@CoreAnalyzerDict 100 dict def tx@CoreAnalyzerDict begin
%
% PS ANALYZER FOR ALGEBRAIC EXPRESSION V1.13
%
% 09/2011 DR factorial with ! added
%
% E->T|E+T
% T->FS|T*FS
% FS -> F | +FS | -FS
% F->P|F^SF|P!
% P->(E)|literal
% literal->number|var|var[E]|func(params)
% params->E|E,param
% number->TOBEFINISHED
%
%% E expression, T term, SF signed factor, F factor, P power
%
%% parser
%
%% str
%
%% C->E<condition_operators>E
%% STR index -> STR index+lenExpr
/AnalyzeCond { AnalyzeExpr ReadCondOp AnalyzeExpr EvalCondOp  } def
%
%% analyze Expression List (separator , or | )
%% STR index -> STR index+lenExpr
%% /AnalyzeListOfE {
%%   { NextNonBlankChar pop AnalyzeExpr%%dup Strlen eq { exit } if NextNonBlankChar
%%     NextNonBlankChar dup 0 eq { pop exit } if
%%     dup 44 ne 1 index 124 ne and { dup 41 ne { PROBLEMCONTACTBILLOU } { pop exit } ifelse } if
%%     pop NextNonBlankChar dup 0 eq { exit } if 124 ne { PROBLEMCONTACTBILLOU } if 1 add NextNonBlankChar 0 eq {toto} if } loop
%%   AnalyzeListOfEPostHook
%% } def
/AnalyzeListOfE {
  /NotFirst false def
  { NextNonBlankChar pop AnalyzeExpr
    NotFirst { EvalListOfExpr } { /NotFirst true def } ifelse
    dup Strlen eq { exit } if NextNonBlankChar
    dup 44 ne 1 index 124 ne and
    { dup 41 ne { PROBLEMCONTACTBILLOU } { pop exit } ifelse }
    if  pop 1 add } loop
  AnalyzeListOfEPostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% E->T|E+T
%% STR index -> STR index+lenExpr
/AnalyzeExpr {
  AnalyzePreHook AnalyzeTerm IsEndingExpr
  { dup 0 ne { 32 eq { NextNonBlankChar } if } { pop } ifelse }
  { { RollOp 1 add NextNonBlankChar pop AnalyzeTerm PreEvalHook EvalAddSub IsEndingExpr { pop exit } if } loop }
  ifelse
  AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% T->FS|T*FS
%% STR index
/AnalyzeTerm {
  AnalyzePreHook AnalyzeSignedFactor IsEndingTerm
  { dup 0 ne { 32 eq { NextNonBlankChar } if } { pop } ifelse }
  { { RollOp 1 add NextNonBlankChar pop AnalyzeSignedFactor PreEvalHook EvalMulDiv IsEndingTerm { pop exit } if} loop }
  ifelse
  AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% FS -> F | +FS | -FS
%% STR index
/AnalyzeSignedFactor {
  AnalyzePreHook 2 copy get dup IsUnaryOp
  { RollOp 1 add NextNonBlankChar pop AnalyzeSignedFactor EvalUnaryOp }
  { pop AnalyzeFactor }
  ifelse AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% F->P|F^P|P!
%% STR index
/AnalyzeFactor {
  AnalyzePreHook AnalyzePower IsEndingFactor
  { dup 0 ne { 32 eq { NextNonBlankChar } if } { pop } ifelse }
  { { dup 33 eq%% is there a ! DR 09/2011
      { pop 1 add NextNonBlankChar pop EvalFactorial }
      { RollOp 1 add NextNonBlankChar pop AnalyzePower PreEvalHook EvalPower }
      ifelse
      IsEndingFactor { pop exit } if } loop }
  ifelse  AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% P->(E)|literal
%% STR index
/AnalyzePower {
  %% depending of first char either a number, or a literal
  2 copy get dup 40 eq%%an open par
  { pop 1 add NextNonBlankChar pop AnalyzeExpr 1 add NextNonBlankChar pop }
  { AnalyzeLiteral }
  ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index STR[index] -> STR index
%/AnalyzeLiteral { IsNumber { EvalNumber } { EvalLiteral } ifelse } def
/AnalyzeLiteral { dup IsUnaryOp exch IsNumber or { EvalNumber } { EvalLiteral } ifelse } def%%dr 09102006
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% recognize + or -
%% chr -> T/F
/IsUnaryOp { dup 43 eq exch 45 eq or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a number can contain only : 0123456789.
%% chr -> T/F
/IsNumber { dup 48 ge exch dup 57 le 3 -1 roll and exch 46 eq or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index -> STR index number
%% a number can be of the form [0-9]*.[0-9]*\([eE][+-]?[0-9]+\)?
%% STR index -> STR index' number
/ReadNumber {
  exch dup 3 -1 roll dup 3 1 roll
  %%read mantissa
  { 1 add  2 copy dup Strlen eq { pop pop 0 exit } if get dup IsNumber not { exit } if pop } loop
  dup 101 eq exch 69 eq or
  %%% there is a "e" or "E" -> read exponant
  { 1 add 2 copy get dup IsUnaryOp
    { pop 1 add 2 copy get } if
    { IsNumber not { exit } if 1 add 2 copy get } loop }
  if
  dup 4 1 roll
  3 -1 roll exch 1 index sub getinterval
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a number can contain only : 0123456789.
%% chr -> T/F
/IsCondOp { dup 30 eq exch dup 60 ge exch 62 le and or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index -> STR index number
%% a number can be of the form [0-9]*.[0-9]*\([eE][+-]?[0-9]+\)?
%% STR index -> STR index' number
/ReadCondOp {
  NextNonBlankChar 1 index 4 1 roll
  { IsCondOp not { exit } if 1 add  2 copy get } loop
  2 copy 5 -1 roll
  exch 1 index sub getinterval 3 1 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a literal can contain only : 0123456789.
%% chr -> T/F
/IsLiteral {%
  dup 48 ge exch dup  57 le 3 -1 roll and exch
  dup 65 ge exch dup  90 le 3 -1 roll and 3 -1 roll or exch
  dup 97 ge exch     122 le and or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a literal can be of the form [a-zA-Z][a-zA-Z0-9]*\(\((Expression)\)|\(\[Expression\]\)\)?
%% STR index -> literal STR index' nextchr
/ReadLiteral {
  exch dup 3 -1 roll dup 3 1 roll
  %%read literal core
  { 2 copy dup Strlen eq { pop pop 0 exit } if get dup IsLiteral not { exit } if pop 1 add } loop
  4 1 roll dup 5 1 roll 3 -1 roll exch 1 index sub getinterval 4 1 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or a clpar
%% STR index -> STR index STR[index] T/F
/IsEndingExpr {%
  2 copy dup Strlen eq
  %% if end of str is reached -> end !
  { pop pop 0 true }
  %% ending chr -> clpar, comma, |, <, >, =, !,
  {get dup  dup  41 eq
       exch dup 124 eq
       exch dup  93 eq
       exch dup  44 eq
       exch dup  30 eq
       exch dup  60 ge exch 62 le and or or or or or}
  ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or a +-
%% STR index -> STR index STR[index] T/F
/IsEndingTerm { IsEndingExpr { true } { dup dup 43 eq exch 45 eq or } ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or */
%% STR index -> STR index STR[index] T/F
/IsEndingFactor { IsEndingTerm { true } { dup dup 42 eq exch 47 eq or } ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or ^
%% STR index -> STR index STR[index] T/F
/IsEndingPower { IsEndingFactor { true } { dup 94 eq } ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index -> STR index STR[index]
/NextNonBlankChar { { dup Strlen eq { 0 exit } if 2 copy get dup neBlkChar { exit } if pop 1 add } loop } bind def
/neBlkChar { dup 32 ne exch dup 10 ne exch 9 ne and and } bind def
%%%%%%%%%%%%%%%%%%%%%%%%
%% DEBUG
/BRK {false} def
/BRKtrue {/BRK true def} def
/BRKStop {BRK {BRKtoto} if } def
/BRKEvalStop {BRK exch if } def
/BRKBRK2true {BRK {BRK2true} if } def
/BRK2 {false} def
/BRK2true {/BRK2 true def} def
/BRK2Stop {BRK2 {BRK2toto} if } def/BRK {false} def
end
%
%-------------------------------------------------------------------------------%
%
/tx@AlgToPs 12 dict def tx@AlgToPs begin
%
%% algExpr -> PSVector
/AlgToPs { tx@CoreAnalyzerDict begin InitParser AnalyzeListOfE pop pop EndingSequence end } def
/EndingSequence { ExpressionVector aload length /end cvx exch 1 add array astore } def
/InitParser { /ExpressionVector [ /tx@AddMathFunc cvx /begin cvx ] def dup length /Strlen exch def 0 } def
/Strlen 0 def
/EvalListOfExpr {} def%
/EvalNumber {%
    ReadNumber  cvr /ExpressionVector ExpressionVector aload length dup 3 add -1 roll cvx
    exch 1 add array astore def NextNonBlankChar pop } def
/EvalAddSub {%
  /ExpressionVector ExpressionVector aload length dup 5 add -1 roll
  43 eq { /add } { /sub } ifelse cvx exch 1 add array astore def
} def
/EvalMulDiv {%
  /ExpressionVector ExpressionVector aload length dup 5 add -1 roll
  42 eq { /mul } { /div } ifelse cvx exch 1 add array astore def
} def
/EvalPower {%
  /ExpressionVector ExpressionVector aload length dup 5 add -1 roll
  pop /exp cvx exch 1 add array astore def
} def
/EvalFactorial {% DR 09/2011
  /ExpressionVector ExpressionVector aload length
  /fact cvx exch 1 add array astore def
} def
/EvalLiteral {%
  ReadLiteral
  dup 40 eq%%% there is an open par -> function call
  { pop 2 index
    dup (Sum) eq { EvalSum }
    { dup (IfTE) eq { EvalCond }
      { dup (Derive) eq { pop EvalDerive }
	{ pop 1 add NextNonBlankChar pop AnalyzeListOfE 2 index TrigoFunc
          /ExpressionVector ExpressionVector aload length dup 5 add -1 roll cvn cvx
	  exch 1 add array astore def 1 add NextNonBlankChar pop } ifelse } ifelse} ifelse }
  { /ExpressionVector ExpressionVector aload length dup 6 add -1 roll cvn cvx exch 1 add array astore def
    dup 91 eq%%% there is an open bracket -> vector element
    { pop 1 add NextNonBlankChar pop AnalyzeExpr
      /ExpressionVector ExpressionVector aload length /cvi cvx exch /get cvx exch 2 add array astore def 1 add }
    { pop NextNonBlankChar pop }
    ifelse}
  ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% the derive function : Derive(n,f(x))
%% firstparindex lastparindex ->
/EvalDerive {
  %% manage the function descripiton
  1 add ReadNumber 3 1 roll NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  1 add NextNonBlankChar pop
  3 -1 roll cvi
  dup 0 eq
  { pop AnalyzeExpr 3 -1 roll pop 1 add }
  { 1 sub 3 1 roll (x)  exch tx@Derive begin DeriveIndexed end 4 -1 roll
    { (x) tx@Derive begin Derive end } repeat
    ExpressionVector exch /ExpressionVector [] def
    AlgToPs aload length
    /ExpressionVector 1 index 3 add -1 roll aload length dup 3 add -1 roll  /l2 exch def /l1 exch def
    l1 l2 add 1 add l2 neg roll l1 l2 add array astore def 3 -1 roll pop 1 add
    1 index length /Strlen exch def } ifelse
} def
/EvalSum {%
  pop 1 add NextNonBlankChar pop
  %% read the variable name
  ReadLiteral pop NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_Sum } if
  %% read the initial value
  1 add NextNonBlankChar pop ReadNumber cvi 3 1 roll
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  %% read the increment value
  1 add NextNonBlankChar pop ReadNumber cvi 3 1 roll
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  %% read the limit value
  1 add NextNonBlankChar pop ReadNumber cvi 3 1 roll
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  /ExpressionVector ExpressionVector aload length dup 7 add -3 roll 0 4 1 roll
  5 -1 roll 4 add array astore def
  %% keep ExpressionVector for later and create a new one for internal Sum computation
  ExpressionVector 3 1 roll /ExpressionVector [ 6 -1 roll cvn /exch cvx /def cvx ] def
  1 add NextNonBlankChar pop AnalyzeExpr
  %% add each term
  /ExpressionVector ExpressionVector aload length 1 add /add cvx exch array astore def
  /ExpressionVector 4 -1 roll aload length ExpressionVector cvx /for cvx 3 -1 roll 2 add
  array astore def 3 -1 roll pop 1 add
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Convert to radians if trigo function call
%% (name) ->
/TrigoFunc {
  dup (cos) eq 1 index (sin) eq or exch (tan) eq or
  { /ExpressionVector ExpressionVector aload length 3.1415926 /div cvx 180 /mul cvx 5 -1 roll 4 add
    array astore def
  } if
} def
/EvalCond {%
  pop 1 add AnalyzeCond NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_IfTE } if
  ExpressionVector 3 1 roll /ExpressionVector [] def
  1 add AnalyzeExpr ExpressionVector 3 1 roll /ExpressionVector [] def
  NextNonBlankChar 44 ne { ANALYZER_ERROR_missing_second_comma_in_IfTE } if
  1 add AnalyzeExpr
  NextNonBlankChar 41 ne { ANALYZER_ERROR_missing_ending parenthesis_in_IfTE } if
  ExpressionVector
  /ExpressionVector 6 -1 roll aload length dup
  6 add -1 roll cvx exch dup 4 add -1 roll cvx /ifelse cvx 3 -1 roll 3 add array astore def
  1 add 3 -1 roll pop
} def
%% CondOp STR index
/EvalCondOp {%
  3 -1 roll
  dup (=) eq  { /eq } {%
  dup (<) eq  { /lt } {%
  dup (>) eq  { /gt } {%
  dup (>=) eq { /ge } {%
  dup (<=) eq { /ge } {%
  dup (!=) eq { /ne } { ERROR_non_valid_conditional_operator }
  ifelse } ifelse } ifelse } ifelse } ifelse } ifelse
  cvx exch pop
  /ExpressionVector ExpressionVector aload length dup 3 add -1 roll exch 1 add array astore def } def
/EvalUnaryOp {
  3 -1 roll 45 eq { /ExpressionVector ExpressionVector aload length /neg cvx exch 1 add array astore def } if
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% H O O K S
/AnalyzePreHook {} bind def
/PreEvalHook {} bind def
/AnalyzeListOfEPostHook {} bind def
/AnalyzePostHook {} def
/RollOp { 3 1 roll } bind def
end   %tx@CoreAnalyzerDict
%
%--------------------------------------------------------------------%
%
/tx@Derive 41 dict def tx@Derive begin
%%increase ^^ for each function added
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% algExpr variable -> PSVector
/Derive {
  10240 string 3 1 roll 0 3 1 roll
  /Variable exch def
  tx@CoreAnalyzerDict begin InitParser AnalyzeListOfE end
} def
/Strlen 0 def
/InitParser { dup length /Strlen exch def 0 } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% algExpr variable index -> PSVector
/DeriveIndexed {%
  3 1 roll 10240 string 3 1 roll 0 3 1 roll
  /Variable exch def
  tx@CoreAnalyzerDict begin InitParser pop 4 -1 roll AnalyzeExpr 4 -2 roll pop pop 4 -2 roll exch pop end
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u,v)'=-(u',v')
/EvalListOfExpr {%
  4 2 roll 2 copy 9 -1 roll dup length 4 1 roll putinterval add AddPipe
           2 copy 7 -1 roll dup length 4 1 roll putinterval add
  6 -2 roll pop pop
  2 copy pop 0 6 2 roll GetIntervalNewStr 5 1 roll 2 copy 0 exch getinterval 6 1 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (-u)'=-(u')
/EvalUnaryOp {
  4 -2 roll 4 index (0) eq
  { (0) StrConcat 7 -1 roll pop }
  { 7 -1 roll 45 eq
    { AddSub AddOpPar true } { false } ifelse
    3 1 roll 5 index StrConcat 3 -1 roll { AddClPar } if } ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  7 -2 roll pop pop 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (number)'=0
/EvalNumber { ReadNumber (0) 6 2 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u+v)'=u'+v'
/EvalAddSub {%
  7 index dup (0) eq
  { pop true }%% du=0 nothing added
  { dup length exch 5 index 5 index 3 -1 roll putinterval 4 -1 roll add 3 1 roll false }
  ifelse
  5 index dup (0) eq
  { pop { (0) } { 4 -2 roll 2 copy pop 0  6 2 roll GetIntervalNewStr } ifelse }%%dv=0
  { exch
    { 5 -2 roll 7 index 45 eq { AddSub } if false } %%nothing yet added
    { 5 -2 roll 7 index 43 eq%%something yet added
      { AddAdd false } { AddSub AddOpPar true } ifelse }
    ifelse 11 1 roll
    3 -1 roll StrConcat 10 -1 roll { AddClPar } if
    2 copy pop 0 6 2 roll GetIntervalNewStr }
  ifelse
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u*v)' or (u/v)'
/EvalMulDiv { 6 index 42 eq {EvalMul} {EvalDiv} ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u*v)'=u'*v+u*v'
/EvalMul {%
  4 -2 roll 7 index dup (0) eq
  { pop false }%%du=0
  { (1) eq%%du=1
    { false }
    { AddOpPar 7 index StrConcat AddClPar AddMul AddOpPar true } ifelse
    3 1 roll 6 index StrConcat 3 -1 roll { AddClPar } if
    true }%%du!=0
  ifelse
  5 1 roll 5 index (0) eq
  { 5 -1 roll not { (0) StrConcat } if }%%dv=0
  { 5 -1 roll { AddAdd } if
    4 index (1) eq
    { 8 index StrConcat }
    { AddOpPar 8 index StrConcat AddClPar AddMul AddOpPar 4 index StrConcat AddClPar }
    ifelse
  }%%dv!=0
  ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u/v)'=(u'*v-u*v')/v^2
/EvalDiv {%
  4 -2 roll
  4 index (0) eq%%dv=0 -> u'/v
  { 7 index (0) eq { (0) StrConcat } { AddOpPar 7 index StrConcat AddClPar AddDiv 5 index StrConcat } ifelse }
  { 7 index dup (0) eq
    { pop }%%du=0
    { (1) eq%%du=1
      { false }
      { AddOpPar 7 index StrConcat AddClPar AddMul AddOpPar true } ifelse
      3 1 roll 6 index StrConcat 3 -1 roll { AddClPar } if}%%du!=0
    ifelse
      AddSub
      4 index (1) eq
      { 8 index StrConcat }
      { AddOpPar 8 index StrConcat AddClPar AddMul AddOpPar 4 index StrConcat AddClPar }
      ifelse
    %}%%dv!=0
    2 copy GetIntervalNewStr 3 1 roll pop 0 AddOpPar 3 -1 roll StrConcat AddClPar
    AddDiv AddOpPar 5 index StrConcat AddClPar 2 copy (^2) putinterval 2 add }
  ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% str1 index str2 -> str1 index
/StrConcat { dup length 4 2 roll 2 copy 6 -1 roll putinterval 3 -1 roll add } bind def
/GetIntervalNewStr { 0 exch getinterval dup length string copy } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u^v)'=(u^v)'=u'vu^(v-1)+v'u^(v)ln(u)
/EvalPower {%
  4 -2 roll 7 index (0) eq
  {%%if du=0 then (u^v)'=v'ln(u)u^v
    4 index (0) eq
    { (0) StrConcat }%%if dv=0 then (u^v)'=0
    { 4 index (1) ne { AddOpPar 4 index StrConcat (\)*) StrConcat } if
      8 index (e) ne { (ln\() StrConcat 8 index StrConcat (\)*) StrConcat } if
      AddOpPar 8 index StrConcat (\)^\() StrConcat 5 index StrConcat AddClPar } ifelse
  }
  {%%du!=0
    4 index (0) eq
    {%%if dv=0 then (u^v)'=vu'u^(v-1)
      5 index dup IsStrNumber
      { dup (0) eq
        { StrConcat }
        { dup dup (1) eq exch (1.0) eq or
          { StrConcat  }
	  { StrConcat
	    7 index dup (1) ne exch (1.0) ne and%%%dr 09102006 insert du if <> 1
	    { (*\() StrConcat 7 index StrConcat (\)) StrConcat } if%%%dr 09102006
            (*\() StrConcat 8 index StrConcat (\)) StrConcat
            5 index  dup dup (2) eq exch (2.0) eq or
	    { pop } { cvr 1 sub 20 string cvs 3 1 roll (^) StrConcat 3 -1 roll StrConcat } ifelse } ifelse } ifelse }
      { pop AddOpPar 5 index StrConcat (\)*\() StrConcat 8 index StrConcat (\)^\() StrConcat
        5 index StrConcat (-1\)) StrConcat } ifelse
    }
    {%%if dv!=0 and du!=0 then (u^v)'=u'vu^(v-1)+v'u^(v)ln(u)
      7 index (1) ne { AddOpPar 7 index StrConcat (\)*) StrConcat } if
      AddOpPar 5 index StrConcat (\)*\() StrConcat
      8 index StrConcat (\)^\() StrConcat
      5 index StrConcat (-1\)+\() StrConcat
      4 index (1) ne { 4 index StrConcat (\)*\() StrConcat } if
      8 index StrConcat (\)^\() StrConcat
      5 index StrConcat (\)*ln\() StrConcat
      8 index StrConcat AddClPar
    } ifelse
  } ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% No derivative for factorial ! only cst => null derivative
/EvalFactorial {% DR 09/2011
  4 index (0) eq
  { (0) mark 8 -2 roll  cleartomark 2 index 7 index dup 4 index exch sub getinterval exch 6 2 roll }
  { DERIVATIVE_ENGINE_ERROR_no_variable_in_factorial } ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% str -> true/false
/IsStrNumber {%
  true exch
  { dup 48 lt exch dup 57 gt 3 -1 roll or
    exch dup 46 ne%%.
    exch dup 43 ne%%+
    exch 45 ne%%-
    and and and { pop false } if } forall
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% literal switch -> func call, vector, variables
/EvalLiteral {%
  ReadLiteral dup 40 eq%%% there is an open par -> function call
  { pop (EvalFunc_             ) 9 4 index StrConcat 0 exch getinterval cvn cvx exec }
  { dup 91 eq%%% there is an open bracket -> vector element
    { DERIVATIVE_ENGINE_ERROR_vector_not_yet_implemented }
    { pop EvalVariable }
    ifelse }
  ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% first last parpos Expr[first:parpos-1] ->
/EvalVariable { 2 index Variable eq { (1) } { (0) } ifelse 4 -1 roll exch 6 2 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (f(u))'=u'f'(u)
/EvalFunc {
  4 2 roll 4 index (1) ne
  { AddOpPar 4 index StrConcat (\)*) StrConcat } if
  (Eval             ) 4 8 index StrConcat 0 exch getinterval cvn cvx exec
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 9 -3 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Func derivative -> Eval<func>
/EvalFunc_sin {%
  PreCommonFunc
  { (cos\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_cos {%
  PreCommonFunc
  { (\(-sin\() StrConcat 5 index StrConcat (\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_tan {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse  (/cos\() StrConcat 5 index StrConcat (\)^2) StrConcat } if
  PostCommonFunc } def
/EvalFunc_asin {%
  PreCommonFunc
  { (1/sqrt\(1-\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_acos {%
  PreCommonFunc
  { (-1/sqrt\(1-\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_atg {%
  PreCommonFunc
  { (1/\(1+\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_floor {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse (/\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_ln {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse (/\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_exp {%
  PreCommonFunc
  {  (exp\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_EXP {%
  PreCommonFunc
  {  (EXP\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_sqrt {%
  PreCommonFunc
  { dup 0 eq { (1) StrConcat } { 1 sub } ifelse (/\(2*sqrt\() StrConcat 5 index StrConcat (\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Fact {%
  PreCommonFunc { DERIVATIVE_ENGINE_ERROR_no_variable_expression_in_Fact } if
  PostCommonFunc } def
/EvalFunc_sh {%
  PreCommonFunc
  { (ch\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_ch {%
  PreCommonFunc
  { (sh\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_th {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse  (/ch\() StrConcat 5 index StrConcat (\)^2) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Argsh {%
  PreCommonFunc
  { (1/sqrt\(1+\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Argch {%
  PreCommonFunc
  { (1/sqrt\(\() StrConcat 5 index StrConcat (\)^2-1\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Argth {%
  PreCommonFunc
  { (1/\(1-\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
/PreCommonFunc {
  1 add NextNonBlankChar pop 3 -1 roll 5 1 roll AnalyzeExpr 1 add NextNonBlankChar pop
  4 2 roll 4 index (0) eq
  { (0) StrConcat false }
  { 4 index (1)  ne { AddOpPar 4 index StrConcat (\)*) StrConcat } if true } ifelse
} def
/PostCommonFunc {
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 9 -3 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
/EvalFunc_Derive {%
  1 add ReadNumber cvi 1 add dup cvr log 1 add cvi string cvs
  4 -1 roll pop 5 1 roll 1 add NextNonBlankChar pop AnalyzeExpr 1 add
  4 -2 roll (Derive\() StrConcat 7 -1 roll StrConcat (,) StrConcat 6 -1 roll StrConcat AddClPar
  2 copy pop 0 6 2 roll GetIntervalNewStr 6 -1 roll pop 2 index 6 index dup 4 index exch sub getinterval
  exch 6 2 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% literal switch -> func call, vector, variables
/EvalFunc_Sum {%
  1 add NextNonBlankChar pop
  %% read the variable name
  ReadLiteral pop 3 -1 roll pop NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_Sum } if
  %% read the initial value
  1 add NextNonBlankChar pop ReadNumber pop
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  %% read the increment value
  1 add NextNonBlankChar pop ReadNumber pop
  2 copy get 44 ne { ANALYZER_ERROR_missing_third_comma_in_Sum } if
  %% read the limit value
  1 add NextNonBlankChar pop ReadNumber pop
  2 copy get 44 ne { ANALYZER_ERROR_missing_fourth_comma_in_Sum } if
  1 add NextNonBlankChar pop dup 6 1 roll 3 -1 roll pop AnalyzeExpr 1 add NextNonBlankChar pop
  4 -2 roll 3 index 8 index dup 9 index exch sub getinterval StrConcat
  4 index StrConcat AddClPar
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 9 -3 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% literal switch -> func call, vector, variables
/EvalFunc_IfTE {%
  3 -1 roll pop 1 add NextNonBlankChar pop SkipCond
  NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_IfTE } if
  1 add NextNonBlankChar pop dup 5 1 roll
  AnalyzeExpr NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_second_comma_in_IfTE } if
  1 add NextNonBlankChar pop
  AnalyzeExpr 1 add NextNonBlankChar pop
  4 -2 roll 3 index 10 index dup 11 index exch sub getinterval StrConcat
  6 index StrConcat (,) StrConcat 4 index StrConcat AddClPar
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% advance in str until a comma is found (no error detection!)
%% str index -> str index'
/SkipCond { { 1 add 2 copy get 44 eq {exit } if } loop } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Convert to radians if trigo function call
%% (name) ->
/TrigoFunc {
  dup (cos) eq 1 index (sin) eq or exch (tan) eq or
  { /ExpressionVector ExpressionVector aload length Pi /div cvx 180 /mul cvx 5 -1 roll 4 add
    array astore def
  } if
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% No derivative for condition....
/EvalCondOp { 3 -1 roll pop } bind def
/PutIntervalOneAdd {putinterval 1 add} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add open parenthesis in string at the given index
%% str index -> str index+1
/AddOpPar {2 copy (\() PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add close parenthesis in string at the given index
%% str index -> str index+1
/AddClPar {2 copy (\)) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add 0 in string at the given index
%% str index -> str index+1
/AddZero {2 copy (0) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add open parenthesis in string at the given index
%% str index -> str index+1
/AddMul {2 copy (*) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add open parenthesis in string at the given index
%% str index -> str index+1
/AddDiv {2 copy (/) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add a plus sign in string at the given index
%% str index -> str index+1
/AddAdd {2 copy (+) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add a minus sign in string at the given index
%% str index -> str index+1
/AddSub {2 copy (-) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add a pipe sign in string at the given index
%% str index -> str index+1
/AddPipe {2 copy (|) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% H O O K S
/AnalyzePreHook { dup 5 1 roll } bind def
/PreEvalHook {} def
/AnalyzePostHook { 7 -1 roll pop } bind def
/AnalyzeListOfEPostHook { 6 -1 roll mark 6 1 roll cleartomark } bind def
/RollOp { 5 1 roll } bind def
end%%%tx@CoreAnalyzerDict
/tx@AddMathFunc 12 dict def tx@AddMathFunc begin
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% NEW FUNC
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% function arcsine in radians asin(x)=atan(x/sqrt(1-x^2))
%% x -> theta
/asin {%
  dup abs 1 gt { EQDFasinrangeerror  } if
  dup dup dup mul 1 exch sub sqrt atan exch 0 lt { 360 sub } if DegtoRad
} def
%% function arccosine in radians acos(x)=atan(sqrt(1-x^2)/x)
%% x -> theta
/acos {%
  dup abs 1 gt { EQDFacosrangeerror  } if
  dup dup mul 1 exch sub sqrt exch atan DegtoRad
} def
%% function arctangent in radians
%% x -> theta
/atg { 1 atan dup 90 gt { 360 sub } if DegtoRad } bind def
%% HYPERBOLIC FUNCTIONS
/sh { dup Ex exch neg Ex sub 2 div } def
/ch { dup Ex exch neg Ex add 2 div } def
/th { dup sh exch ch div } def
/Argsh { dup dup mul 1 add sqrt add ln } def
/Argch { dup dup mul 1 sub sqrt add ln } def
/Argth { dup 1 add exch 1 exch sub div ln 2 div } def
%% modified exponential funtion for 0
%% x n -> x^n
/Exp { dup 0 eq { pop pop 1 } { exp } ifelse } bind def
%% modified exponential funtion for 0
%% x -> e^x
/Ex { Euler exch exp } bind def
%%
%% factorial function
%% n -> n!
/Fact { 1 exch 2 exch 1 exch { mul } for } bind def
/fact { Fact } bind def
/! { Fact } bind def
end
%
% END pst-algparser.pro

%%EndProcSet
%%BeginProcSet: pst-tools.pro 0 0
% $Id: pst-tools.pro 842 2013-10-26 10:25:41Z herbert $
%
%% PostScript tools prologue for pstricks.tex.
%% Version 0.06, 2017/12/03
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%
%
/Pi2 1.57079632679489661925640 def
/factorial { % n on stack, returns n! 
  dup 0 eq { 1 }{ 
    dup 1 gt { dup 1 sub factorial mul } if }
  ifelse } def 
%
/MoverN { % m n on stack, returns the binomial coefficient m over n
  2 dict begin
  /n exch def /m exch def
  n 0 eq { 1 }{
    m n eq { 1 }{
      m factorial n factorial m n sub factorial mul div } ifelse } ifelse 
  end
} def
%
/ps@ReverseOrderOfPoints { % on stack [P1 P2 P3 ...Pn]=>[Pn,Pn-1,...,P2,P1]
  5 dict begin       % all local
  aload length /n ED % number of coors
  n 2 div cvi /m ED  % number of Points
  /n1 n def
  m { n1 2 roll /n1 n1 2 sub def } repeat
  n array astore
  end
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% subroutines for complex numbers, given as an array [a b] 
% which is a+bi = Real+i Imag
%
/cxadd {		% [a1 b1] [a2 b2] = [a1+a2 b1+b2]
  dup 0 get		% [a1 b1] [a2 b2] a2
  3 -1 roll		% [a2 b2] a2 [a1 b1]
  dup 0 get		% [a2 b2] a2 [a1 b1] a1
  3 -1 roll		% [a2 b2] [a1 b1] a1 a2
  add			% [a2 b2] [a1 b1] a1+a2
  3 1 roll		% a1+a2 [a2 b2] [a1 b1]
  1 get			% a1+a2 [a2 b2] b1
  exch 1 get		% a1+a2 b1 b2
  add 2 array astore
} def
%
/cxneg {		% [a b]
  dup 1 get		% [a b] b
  exch 0 get		% b a
  neg exch neg		% -a -b
  2 array astore
} def
%
/cxsub { cxneg cxadd } def  % same as negative addition
%
% [a1 b1][a2 b2] = [a1a2-b1b2 a1b2+b1a2] = [a3 b3]
/cxmul {		% [a1 b1] [a2 b2]
  dup 0 get		% [a1 b1] [a2 b2] a2
  exch 1 get		% [a1 b1] a2 b2
  3 -1 roll		% a2 b2 [a1 b1]
  dup 0 get		% a2 b2 [a1 b1] a1
  exch 1 get		% a2 b2 a1 b1
  dup			% a2 b2 a1 b1 b1
  5 -1 roll dup		% b2 a1 b1 b1 a2 a2
  3 1 roll mul		% b2 a1 b1 a2 b1a2
  5 -2 roll dup		% b1 a2 b1a2 b2 a1 a1
  3 -1 roll dup		% b1 a2 b1a2 a1 a1 b2 b2
  3 1 roll mul		% b1 a2 b1a2 a1 b2 a1b2
  4 -1 roll add		% b1 a2 a1 b2 b3
  4 2 roll mul		% b1 b2 b3 a1a2
  4 2 roll mul sub	% b3 a3
  exch 2 array astore
} def
%
% [a b]^2 = [a^2-b^2 2ab] = [a2 b2]
/cxsqr {		% [a b]   square root
  dup 0 get exch 1 get	% a b
  dup dup mul		% a b b^2
  3 -1 roll		% b b^2 a
  dup dup mul 		% b b^2 a a^2
  3 -1 roll sub		% b a a2
  3 1 roll mul 2 mul	% a2 b2	
  2 array astore
} def
%
/cxsqrt {		% [a b]
%  dup cxnorm sqrt /r exch def
%  cxarg 2 div RadtoDeg dup cos r mul exch sin r mul cxmake2 
  cxlog 		% log[a b]
  2 cxrdiv 		% log[a b]/2
  aload pop exch	% b a
  2.781 exch exp	% b exp(a)
  exch cxconv exch	% [Re +iIm] exp(a)
  cxrmul		%
} def
%
/cxarg { 		% [a b] 
  aload pop 		% a b
  exch atan 		% arctan b/a
  DegtoRad 		% arg(z)=atan(b/a)
} def
%
% log[a b] = [a^2-b^2 2ab] = [a2 b2]
/cxlog {		% [a b]
  dup 			% [a b][a b]
  cxnorm 		% [a b] |z|
  log 			% [a b] log|z|
  exch 			% log|z|[a b]
  cxarg 		% log|z| Theta
  cxmake2 		% [log|z| Theta]
} def
%
% square of magnitude of complex number
/cxnorm2 {		% [a b]
  dup 0 get exch 1 get	% a b
  dup mul			% a b^2
  exch dup mul add	% a^2+b^2
} def
%
/cxnorm {		% [a b]
  cxnorm2 sqrt
} def
%
/cxconj {		% conjugent complex
  dup 0 get exch 1 get	% a b
  neg 2 array astore	% [a -b]
} def
%
/cxre { 0 get } def	% real value
/cxim { 1 get } def	% imag value
%
% 1/[a b] = ([a -b]/(a^2+b^2)
/cxrecip {		% [a b]
  dup cxnorm2 exch	% n2 [a b]
  dup 0 get exch 1 get	% n2 a b
  3 -1 roll		% a b n2
  dup			% a b n2 n2
  4 -1 roll exch div	% b n2 a/n2
  3 1 roll div		% a/n2 b/n2
  neg 2 array astore
} def
%
/cxmake1 { 0 2 array astore } def % make a complex number, real given
/cxmake2 { 2 array astore } def	  % dito, both given
%
/cxdiv { cxrecip cxmul } def
%
% multiplikation by a real number
/cxrmul {		% [a b] r
  exch aload pop	% r a b
  3 -1 roll dup		% a b r r
  3 1 roll mul		% a r b*r
  3 1 roll mul		% b*r a*r
  exch 2 array astore   % [a*r b*r]
} def
%
% division by a real number
/cxrdiv {		% [a b] r
  1 exch div		% [a b] 1/r
  cxrmul
} def
%
% exp(i theta) = cos(theta)+i sin(theta) polar<->cartesian
/cxconv {		% theta
  RadtoDeg dup sin exch cos cxmake2
} def

%%%%% ### bubblesort ###
%% syntax : array bubblesort --> array2 trie par ordre croissant
%% code de Bill Casselman
%% http://www.math.ubc.ca/people/faculty/cass/graphics/text/www/
/bubblesort { % on stack must be an array [ ... ]
4 dict begin
   /a exch def
   /n a length 1 sub def
   n 0 gt {
      % at this point only the n+1 items in the bottom of a remain to
      % the sorted largest item in that blocks is to be moved up into
      % position n
      n {
         0 1 n 1 sub {
            /i exch def
            a i get a i 1 add get gt {
               % if a[i] > a[i+1] swap a[i] and a[i+1]
               a i 1 add
               a i get
               a i a i 1 add get
               % set new a[i] = old a[i+1]
               put
               % set new a[i+1] = old a[i]
               put
            } if
         } for
         /n n 1 sub def
      } repeat
   } if
   a % return the sorted array
end
} def
%
/concatstringarray{  %  [(a) (b) ... (z)] --> (ab...z)  20100422
  0 1 index { length add } forall 
  string     
  0 3 2 roll      
  { 3 copy putinterval length add }forall 
  pop  
} bind def
%
/concatstrings{ % (a) (b) -> (ab)  
  1 dict begin
  exch dup length    
  2 index length add string    
  dup dup 4 2 roll copy length
  4 -1 roll putinterval
  end
} def
%
/reversestring { % (aBC) -> (CBa)
  5 dict begin
  /str exch def
  /L str length def
  /strTemp L string def
  /i 0 def
  L { 
    /I L 1 sub i sub def
    strTemp i str I 1 getinterval putinterval
    /i i 1 add def
  } repeat
  strTemp
  end
} def
%
/concatarray{ % [a c] [b d] -> [a c b d]  
  2 dict begin
  /a2 exch def
  /a1 exch def
  [ a1 aload pop a2 aload pop ]
  end
} def
%
/dot2comma {% on stack a string (...) 
  2 dict begin
  /Output exch def
  0 1 Output length 1 sub { 
    /Index exch def 
    Output Index get 46 eq { Output Index 44 put } if 
  } for
  Output
  end
} def
%
/rightTrim { % on stack the string and the character number to be stripped  
  /charNo exch def
  dup
  length 1 sub -1 0 { 
    /i exch def dup i get charNo ne { exit } if 
  } for
  0 i 1 add getinterval
  dup length string copy
} bind def  % leaves the stripped string on the stack

/psStringwidth /stringwidth load def
/psShow /show load def

%/stringwidth{ 32 rightTrim psStringwidth } bind def

%/show { 32 rightTrim psShow } bind def
%-----------------------------------------------------------------------------%

/pgffunctions {
    /pgfsc{}bind def% stroke color is empty by default
    /pgffc{}bind def% fill color is empty by default
    /pgfstr{stroke}bind def%
    /pgffill{fill}bind def%
    /pgfeofill{eofill}bind def%
    /pgfe{a dup 0 rlineto exch 0 exch rlineto neg 0 rlineto closepath}bind def% rectangle
    /pgfw{setlinewidth}bind def% setlinewidth
    /pgfs{save pgfpd 72 Resolution div 72 VResolution div neg scale 
      magscale{1 DVImag div dup scale}if 
      pgfx neg pgfy neg translate pgffoa .setopacityalpha}bind def% save
    /pgfr{pgfsd restore}bind def %restore
    userdict begin%
    /pgfo{pgfsd /pgfx currentpoint /pgfy exch def def @beginspecial}bind def %open
    /pgfc{newpath @endspecial pgfpd}bind def %close
    /pgfsd{globaldict /pgfdelta /delta where {pop delta} {0} ifelse put}bind def% save delta
    /pgfpd{/delta globaldict /pgfdelta get def}bind def % put delta
    /.setopacityalpha where {pop} {/.setopacityalpha{pop}def} ifelse % install .setopacityalpha 
    /.pgfsetfillopacityalpha{/pgffoa exch def
      /pgffill{gsave pgffoa .setopacityalpha fill 1 .setopacityalpha newpath fill grestore newpath}bind def
      /pgfeofill{gsave pgffoa .setopacityalpha eofill 1 .setopacityalpha newpath eofill grestore newpath}bind def}bind def
    /.pgfsetstrokeopacityalpha{/pgfsoa exch def /pgfstr{gsave pgfsoa .setopacityalpha stroke grestore newpath}bind def}bind def
    /pgffoa 1 def
    /pgfsoa 1 def
    end
} def
%-----------------------------------------------------------------------------%
% END pst-tools.pro

%%EndProcSet
%%BeginProcSet: pst-dots.pro 0 0
% $Id: pst-dots.pro 446 2017-04-19 11:40:55Z herbert $
%
%% PostScript prologue for pstricks.tex.
%% Version 2.02,  2009/06/16
%%
%% For distribution, see pstricks.tex.
%%
%% Timothy Van Zandt <tvz@Princeton.EDU>
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%%
%% Modified by Etienne Riga  - Dec. 16, 1999
%% Modified by Etienne Riga  - 2005/01/01 (er)
%% to add /Diamond, /SolidDiamond and /BoldDiamond
%% Modified by Herbert Voss (hv) - 2008/04/17 
%
10 dict dup begin			% hold local
  /FontType 3 def
  /FontMatrix [.001 0 0 .001 0 0] def
%  /FontBBox [-571.5 -742.5 571.5 742.5] def % changed to next line 20060616 hv
  /FontBBox [-1000 -1000 1000 1000] def  % See end of file in /BuildGlyph
  /Encoding 256 array def
  0 1 255 {Encoding exch /.notdef put} for % fill the array with /.notdef
  Encoding				   % replace with given dot names
    dup (b) 0 get /Bullet put		   % get the numerical position of b in ASCII
%					   % and save /Bullet at this place in Encoding 
    dup (c) 0 get /Circle put
    dup (C) 0 get /BoldCircle put	% 67
    dup (u) 0 get /SolidTriangle put
    dup (t) 0 get /Triangle put
    dup (T) 0 get /BoldTriangle put
    dup (r) 0 get /SolidSquare put
    dup (s) 0 get /Square put
    dup (S) 0 get /BoldSquare put
    dup (q) 0 get /SolidPentagon put
    dup (p) 0 get /Pentagon put
    dup (P) 0 get /BoldPentagon put
%%%		  
    dup (k) 0 get /Asterisk put
    dup (K) 0 get /BoldAsterisk put
    dup (J) 0 get /SolidAsterisk put
    dup (h) 0 get /Hexagon put
    dup (H) 0 get /BoldHexagon put
    dup (G) 0 get /SolidHexagon put
    dup (f) 0 get /Octogon put		% 2008-04-18 hv
    dup (F) 0 get /BoldOctogon put	% 2008-04-18 hv
    dup (g) 0 get /SolidOctogon put	% 2008-04-18 hv
    dup (a) 0 get /Add put
    dup (A) 0 get /BoldAdd put 		% 65
    dup (x) 0 get /Mul put
    dup (X) 0 get /BoldMul put
    dup (m) 0 get /Oplus put
    dup (M) 0 get /BOplus put
    dup (e) 0 get /SolidOplus put
    dup (n) 0 get /Otimes put
    dup (N) 0 get /BOtimes put
    dup (E) 0 get /SolidOtimes put
    dup (i) 0 get /Bar put
    dup (I) 0 get /BoldBar put
    dup (l) 0 get /SolidDiamond put
    dup (d) 0 get /Diamond put
        (D) 0 get /BoldDiamond put
%%%  
/CharProcs 47 dict def
CharProcs begin
  /CirclePath {0 0 500 0 360 arc closepath} def
  /Bullet {CirclePath fill} def
  /Circle {CirclePath .9 .9 scale CirclePath eofill} def
  /BoldCircle {CirclePath .8 .8 scale CirclePath eofill} def
  /TrianglePath {0 660 moveto -571.5 -330 lineto 571.5 -330 lineto closepath} def
  /SolidTriangle {TrianglePath fill} def
  /Triangle {TrianglePath .85 .85 scale TrianglePath eofill} def
  /BoldTriangle {TrianglePath .7 .7 scale TrianglePath eofill} def
  /SquarePath {-450 450 moveto 450 450 lineto 450 -450 lineto -450 -450 lineto closepath} def
  /SolidSquare {SquarePath fill} def
  /Square {SquarePath .89 .89 scale SquarePath eofill} def
  /BoldSquare {SquarePath .78 .78 scale SquarePath eofill} def
  /PentagonPath {
    -337.8 -465 moveto 337.8 -465 lineto 546.6 177.6 lineto
    0 574.7 lineto -546.6 177.6 lineto closepath
  } def
  /SolidPentagon {PentagonPath fill} def
  /Pentagon {PentagonPath .89 .89 scale PentagonPath eofill} def
  /BoldPentagon {PentagonPath .78 .78 scale PentagonPath eofill} def
%-------------- hv begin 2004/07/25   from: er 2003/03/24
  /HexagonPath {
    0 550 moveto -476 275 lineto -476 -275 lineto
    0 -550 lineto 476 -275 lineto 476 275 lineto closepath
  } def
  /SolidHexagon {HexagonPath fill} def
  /Hexagon {HexagonPath .89 .89 scale HexagonPath eofill} def
  /BoldHexagon {HexagonPath .79 .79 scale HexagonPath eofill} def
%					2008-04-18 hv
  /OctogonPath { 
     550 dup 22.5 tan mul dup neg dup add /xMove exch def 
     exch moveto 7 { xMove 0 rlineto 45 rotate } repeat closepath } def 
  /SolidOctogon { OctogonPath fill                             } def
  /Octogon {      OctogonPath .89 .89 scale OctogonPath eofill } def
  /BoldOctogon {  OctogonPath .79 .79 scale OctogonPath eofill } def
%
  /AsteriskPath {
    20 0 moveto 10 250 180 500 0 500 curveto
    -180 500 -10 250 -20 0 curveto closepath
  } def
  /Asterisk {
    AsteriskPath 60 rotate AsteriskPath 60 rotate AsteriskPath
    60 rotate AsteriskPath 60 rotate AsteriskPath 60 rotate AsteriskPath fill
  } def
%
  /Basterp {50 250 220 500 0 500 curveto -220 500 -50 250 -50 30 cos 100 mul curveto} def
  /BoldAsteriskPath {
    50 30 cos 100 mul moveto  Basterp
    60 rotate Basterp 60 rotate Basterp
    60 rotate Basterp 60 rotate Basterp
    60 rotate Basterp closepath
  } def
  /BoldAsterisk {BoldAsteriskPath fill} def
  /SolidAsterisk {CirclePath .9 .9 scale BoldAsteriskPath eofill} def
  /CrossPath {
    40 550 moveto -40 550 lineto -40 40 lineto -550 40 lineto
    -550 -40 lineto -40 -40 lineto -40 -550 lineto 40 -550 lineto 
    40 -40 lineto 550 -40 lineto 550 40 lineto 40 40 lineto closepath
  } def
  /BoldCrossPath {80 550 moveto -80 550 lineto -80 80 lineto -550 80 lineto
    -550 -80 lineto -80 -80 lineto -80 -550 lineto 80 -550 lineto 
    80 -80 lineto 550 -80 lineto 550 80 lineto 80 80 lineto closepath
  } def
  /Add {CrossPath fill} def
  /Mul {45 rotate CrossPath fill} def
  /BoldAdd {BoldCrossPath fill} def
  /BoldMul {45 rotate BoldCrossPath fill} def
  /Oplus {CirclePath .9 .9 scale CirclePath eofill .775 .775 scale CrossPath fill } def 
  /SolidOplus {CirclePath .775 .775 scale BoldCrossPath eofill} def 
  /BOplus {CirclePath .8 .8 scale CirclePath eofill .775 .775 scale BoldCrossPath fill} def 
  /Otimes {CirclePath .9 .9 scale CirclePath eofill 45 rotate .775 .775 scale CrossPath fill} def 
  /BOtimes {CirclePath .8 .8 scale CirclePath eofill 45 rotate .775 .775 scale BoldCrossPath fill } def 
  /SolidOtimes {CirclePath 45 rotate .775 .775 scale BoldCrossPath eofill} def 
  /BarPath {40 660 moveto -40 660 lineto -40 -660 lineto 40 -660 lineto closepath} def
  /Bar {BarPath fill} def
  /BoldBarPath {80 660 moveto -80 660 lineto -80 -660 lineto 80 -660 lineto closepath} def
  /BoldBar {BoldBarPath fill} def
  /DiamondPath {0 742.5 moveto -428.5 0 lineto 0 -742.5 lineto 428.5 0 lineto closepath} def
  /SolidDiamond {DiamondPath fill} def
  /Diamond {DiamondPath .865 .865 scale DiamondPath eofill} def
  /BoldDiamond {DiamondPath .73 .73 scale DiamondPath eofill} def
%%%
  /.notdef { } def
end
%
/BuildGlyph {
  exch
  begin 		
%  Metrics 1 index get exec 0
    0 0
%      BBoxes 3 index get exec
    -1000 -1000 1000 1000
%     -571.5 -742.5 571.5 742.5
    setcachedevice
    CharProcs begin load exec end
  end
} def
%
/BuildChar {
  1 index /Encoding get exch get
  1 index /BuildGlyph get exec
} bind def
%
end
/PSTricksDotFont exch definefont pop
%
%% end

%%EndProcSet
%%BeginProcSet: pst-ovl.pro 0 0
% $Id: pst-ovl.pro 859 2013-12-21 16:51:58Z herbert $
%
%% PostScript prologue for pst-ovl.tex.
%% Version 0.04, 2014/05/12
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%
%
/tx@ovlDict 10 dict def 
tx@ovlDict begin
%
/BeginOL { 
  dup -1 eq exch TheOL eq or 
    { IfVisible not { Visible /IfVisible true def } if } 
    { IfVisible { Invisible /IfVisible false def } if } ifelse 
} def
%
/InitOL { 
  /OLUnit [ 3000 3000 matrix defaultmatrix dtransform ] cvx def
  /Visible { CP OLUnit idtransform T moveto } def 
  /Invisible { CP OLUnit neg exch neg exch idtransform T moveto } def 
  /BOL { BeginOL } def
  /IfVisible true def 
} def
%
end
%
% END pst-ovl.pro

%%EndProcSet
%%BeginProcSet: unvsl_sjpjw4.enc 0 0
% THIS FILE WAS AUTOMATICALLY GENERATED -- DO NOT EDIT

%%AutoEnc_sjpjw4ssg32e5kzaeiwtqme4ud
% Encoding created by otftotfm on Thu May  1 20:56:04 2014
% Command line follows encoding
/AutoEnc_sjpjw4ssg32e5kzaeiwtqme4ud [
%00
  /grave /acute /circumflex /tilde /dieresis /hungarumlaut /ring /caron
  /breve /macron /dotaccent /cedilla /ogonek /quotesinglbase /guilsinglleft /guilsinglright
%10
  /quotedblleft /quotedblright /quotedblbase /guillemotleft /guillemotright /endash /emdash /.notdef
  /f_j /dotlessi /.notdef /f_i /f_f_i /f_f /f_l /f_f_l
%20
  /.notdef /exclam /quotedbl /numbersign /dollar /percent /ampersand /quoteright
  /parenleft /parenright /asterisk /plus /comma /hyphen /period /slash
%30
  /zero /one /two /three /four /five /six /seven
  /eight /nine /colon /semicolon /less /equal /greater /question
%40
  /at /A /B /C /D /E /F /G
  /H /I /J /K /L /M /N /O
%50
  /P /Q /R /S /T /U /V /W
  /X /Y /Z /bracketleft /backslash /bracketright /asciicircum /underscore
%60
  /quoteleft /a /b /c /d /e /f /g
  /h /i /j /k /l /m /n /o
%70
  /p /q /r /s /t /u /v /w
  /x /y /z /braceleft /bar /braceright /asciitilde /hyphen
%80
  /f_t /f_f_j /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
  /.notdef /.notdef /Lslash /.notdef /.notdef /.notdef /.notdef /.notdef
%90
  /.notdef /.notdef /Scaron /.notdef /.notdef /.notdef /.notdef /.notdef
  /Ydieresis /.notdef /Zcaron /.notdef /.notdef /.notdef /.notdef /section
%A0
  /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
  /.notdef /.notdef /lslash /.notdef /.notdef /.notdef /.notdef /.notdef
%B0
  /.notdef /.notdef /scaron /.notdef /.notdef /.notdef /.notdef /.notdef
  /ydieresis /.notdef /zcaron /.notdef /.notdef /exclamdown /questiondown /sterling
%C0
  /Agrave /Aacute /Acircumflex /Atilde /Adieresis /Aring /AE /Ccedilla
  /Egrave /Eacute /Ecircumflex /Edieresis /Igrave /Iacute /Icircumflex /Idieresis
%D0
  /Eth /Ntilde /Ograve /Oacute /Ocircumflex /Otilde /Odieresis /OE
  /Oslash /Ugrave /Uacute /Ucircumflex /Udieresis /Yacute /Thorn /.notdef
%E0
  /agrave /aacute /acircumflex /atilde /adieresis /aring /ae /ccedilla
  /egrave /eacute /ecircumflex /edieresis /igrave /iacute /icircumflex /idieresis
%F0
  /eth /ntilde /ograve /oacute /ocircumflex /otilde /odieresis /oe
  /oslash /ugrave /uacute /ucircumflex /udieresis /yacute /thorn /germandbls
] def
% Command line: 'otftotfm --automatic --encoding=fontools_t1
% --tfm-directory=texmf/fonts/tfm/arkandis/universalis
% --vf-directory=texmf/fonts/vf/arkandis/universalis
% --type1-directory=texmf/fonts/type1/arkandis/universalis
% --truetype-directory=texmf/fonts/truetype/arkandis/universalis
% --encoding-directory=texmf/fonts/enc/dvips/universalis
% --map-file=texmf/fonts/map/dvips/universalis/UniversalisADFStd.map
% --no-updmap --coding-scheme=EXTENDED TEX FONT ENCODING - LATIN
% --feature=kern --feature=liga UniversalisADFStd-BoldCondIt.otf
% UniversalisADFStd-BoldCondIt-lf-t1'

%%EndProcSet
%%BeginProcSet: cm-super-t1.enc 0 0
% This file is generated from `T1uni.map' and `glyphlist.txt', `gl-other.txt'
%
% LIGKERN hyphen hyphen =: endash ; endash hyphen =: emdash ;
% LIGKERN quoteleft quoteleft =: quotedblleft ;
% LIGKERN quoteright quoteright =: quotedblright ;
% LIGKERN comma comma =: quotedblbase ; less less =: guillemotleft ;
% LIGKERN greater greater =: guillemotright ;
% LIGKERN f f =: ff ; f i =: fi ; f l =: fl ; ff i =: ffi ; ff l =: ffl ;
%
% LIGKERN space {} * ; * {} space ; zero {} * ; * {} zero ;
% LIGKERN one {} * ; * {} one ; two {} * ; * {} two ;
% LIGKERN three {} * ; * {} three ; four {} * ; * {} four ;
% LIGKERN five {} * ; * {} five ; six {} * ; * {} six ;
% LIGKERN seven {} * ; * {} seven ; eight {} * ; * {} eight ;
% LIGKERN nine {} * ; * {} nine ;
%
/T1Encoding [
% 0x00
/grave
/acute
/circumflex
/tilde
/dieresis
/hungarumlaut
/ring
/caron
/breve
/macron
/dotaccent
/cedilla
/ogonek
/quotesinglbase
/guilsinglleft
/guilsinglright
% 0x10
/quotedblleft
/quotedblright
/quotedblbase
/guillemotleft
/guillemotright
/endash
/emdash
/afii61664
/perthousandzero % PERTHOUSAND ZERO
/dotlessi
/dotlessj
/ff
/fi
/fl
/ffi
/ffl
% 0x20
/uni2423
/exclam
/quotedbl
/numbersign
/dollar
/percent
/ampersand
/quoteright
/parenleft
/parenright
/asterisk
/plus
/comma
/hyphen
/period
/slash
% 0x30
/zero
/one
/two
/three
/four
/five
/six
/seven
/eight
/nine
/colon
/semicolon
/less
/equal
/greater
/question
% 0x40
/at
/A
/B
/C
/D
/E
/F
/G
/H
/I
/J
/K
/L
/M
/N
/O
% 0x50
/P
/Q
/R
/S
/T
/U
/V
/W
/X
/Y
/Z
/bracketleft
/backslash
/bracketright
/asciicircum
/underscore
% 0x60
/quoteleft
/a
/b
/c
/d
/e
/f
/g
/h
/i
/j
/k
/l
/m
/n
/o
% 0x70
/p
/q
/r
/s
/t
/u
/v
/w
/x
/y
/z
/braceleft
/bar
/braceright
/asciitilde
/hyphen.alt % HANGING HYPHEN
% 0x80
/Abreve
/Aogonek
/Cacute
/Ccaron
/Dcaron
/Ecaron
/Eogonek
/Gbreve
/Lacute
/Lcaron
/Lslash
/Nacute
/Ncaron
/Eng
/Ohungarumlaut
/Racute
% 0x90
/Rcaron
/Sacute
/Scaron
/Scedilla
/Tcaron
/Tcommaaccent
/Uhungarumlaut
/Uring
/Ydieresis
/Zacute
/Zcaron
/Zdotaccent
/IJ
/Idotaccent
/dcroat
/section
% 0xA0
/abreve
/aogonek
/cacute
/ccaron
/dcaron
/ecaron
/eogonek
/gbreve
/lacute
/lcaron
/lslash
/nacute
/ncaron
/eng
/ohungarumlaut
/racute
% 0xB0
/rcaron
/sacute
/scaron
/scedilla
/tcaron
/tcommaaccent
/uhungarumlaut
/uring
/ydieresis
/zacute
/zcaron
/zdotaccent
/ij
/exclamdown
/questiondown
/sterling
% 0xC0
/Agrave
/Aacute
/Acircumflex
/Atilde
/Adieresis
/Aring
/AE
/Ccedilla
/Egrave
/Eacute
/Ecircumflex
/Edieresis
/Igrave
/Iacute
/Icircumflex
/Idieresis
% 0xD0
/Eth
/Ntilde
/Ograve
/Oacute
/Ocircumflex
/Otilde
/Odieresis
/OE
/Oslash
/Ugrave
/Uacute
/Ucircumflex
/Udieresis
/Yacute
/Thorn
/SS % Germandbls
% 0xE0
/agrave
/aacute
/acircumflex
/atilde
/adieresis
/aring
/ae
/ccedilla
/egrave
/eacute
/ecircumflex
/edieresis
/igrave
/iacute
/icircumflex
/idieresis
% 0xF0
/eth
/ntilde
/ograve
/oacute
/ocircumflex
/otilde
/odieresis
/oe
/oslash
/ugrave
/uacute
/ucircumflex
/udieresis
/yacute
/thorn
/germandbls % or /germandbls.alt
] def

%%EndProcSet
%%BeginProcSet: texps.pro 0 0
%!
TeXDict begin/rf{findfont dup length 1 add dict begin{1 index/FID ne 2
index/UniqueID ne and{def}{pop pop}ifelse}forall[1 index 0 6 -1 roll
exec 0 exch 5 -1 roll VResolution Resolution div mul neg 0 0]FontType 0
ne{/Metrics exch def dict begin Encoding{exch dup type/integertype ne{
pop pop 1 sub dup 0 le{pop}{[}ifelse}{FontMatrix 0 get div Metrics 0 get
div def}ifelse}forall Metrics/Metrics currentdict end def}{{1 index type
/nametype eq{exit}if exch pop}loop}ifelse[2 index currentdict end
definefont 3 -1 roll makefont/setfont cvx]cvx def}def/ObliqueSlant{dup
sin S cos div neg}B/SlantFont{4 index mul add}def/ExtendFont{3 -1 roll
mul exch}def/ReEncodeFont{CharStrings rcheck{/Encoding false def dup[
exch{dup CharStrings exch known not{pop/.notdef/Encoding true def}if}
forall Encoding{]exch pop}{cleartomark}ifelse}if/Encoding exch def}def
end

%%EndProcSet
%%BeginProcSet: special.pro 0 0
%!
TeXDict begin/SDict 200 dict N SDict begin/@SpecialDefaults{/hs 612 N
/vs 792 N/ho 0 N/vo 0 N/hsc 1 N/vsc 1 N/ang 0 N/CLIP 0 N/rwiSeen false N
/rhiSeen false N/letter{}N/note{}N/a4{}N/legal{}N}B/@scaleunit 100 N
/@hscale{@scaleunit div/hsc X}B/@vscale{@scaleunit div/vsc X}B/@hsize{
/hs X/CLIP 1 N}B/@vsize{/vs X/CLIP 1 N}B/@clip{/CLIP 2 N}B/@hoffset{/ho
X}B/@voffset{/vo X}B/@angle{/ang X}B/@rwi{10 div/rwi X/rwiSeen true N}B
/@rhi{10 div/rhi X/rhiSeen true N}B/@llx{/llx X}B/@lly{/lly X}B/@urx{
/urx X}B/@ury{/ury X}B/magscale true def end/@MacSetUp{userdict/md known
{userdict/md get type/dicttype eq{userdict begin md length 10 add md
maxlength ge{/md md dup length 20 add dict copy def}if end md begin
/letter{}N/note{}N/legal{}N/od{txpose 1 0 mtx defaultmatrix dtransform S
atan/pa X newpath clippath mark{transform{itransform moveto}}{transform{
itransform lineto}}{6 -2 roll transform 6 -2 roll transform 6 -2 roll
transform{itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll
curveto}}{{closepath}}pathforall newpath counttomark array astore/gc xdf
pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}
if}N/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1
-1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip
yflip not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub
neg 0 TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{
noflips{TR pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop
90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get
neg sub neg TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr
1 get neg sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr
2 get ppr 0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4
-1 roll add 2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S
TR}if}N/cp{pop pop showpage pm restore}N end}if}if}N/normalscale{
Resolution 72 div VResolution 72 div neg scale magscale{DVImag dup scale
}if 0 setgray}N/@beginspecial{SDict begin/SpecialSave save N gsave
normalscale currentpoint TR @SpecialDefaults count/ocount X/dcount
countdictstack N}N/@setspecial{CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto
0 vs rlineto hs neg 0 rlineto closepath clip}if ho vo TR hsc vsc scale
ang rotate rwiSeen{rwi urx llx sub div rhiSeen{rhi ury lly sub div}{dup}
ifelse scale llx neg lly neg TR}{rhiSeen{rhi ury lly sub div dup scale
llx neg lly neg TR}if}ifelse CLIP 2 eq{newpath llx lly moveto urx lly
lineto urx ury lineto llx ury lineto closepath clip}if/showpage{}N
/erasepage{}N/setpagedevice{pop}N/copypage{}N newpath}N/@endspecial{
count ocount sub{pop}repeat countdictstack dcount sub{end}repeat
grestore SpecialSave restore end}N/@defspecial{SDict begin}N
/@fedspecial{end}B/li{lineto}B/rl{rlineto}B/rc{rcurveto}B/np{/SaveX
currentpoint/SaveY X N 1 setlinecap newpath}N/st{stroke SaveX SaveY
moveto}N/fil{fill SaveX SaveY moveto}N/ellipse{/endangle X/startangle X
/yrad X/xrad X/savematrix matrix currentmatrix N TR xrad yrad scale 0 0
1 startangle endangle arc savematrix setmatrix}N end

%%EndProcSet
%%BeginProcSet: color.pro 0 0
%!
TeXDict begin/setcmykcolor where{pop}{/setcmykcolor{dup 10 eq{pop
setrgbcolor}{1 sub 4 1 roll 3{3 index add neg dup 0 lt{pop 0}if 3 1 roll
}repeat setrgbcolor pop}ifelse}B}ifelse/TeXcolorcmyk{setcmykcolor}def
/TeXcolorrgb{setrgbcolor}def/TeXcolorgrey{setgray}def/TeXcolorgray{
setgray}def/TeXcolorhsb{sethsbcolor}def/currentcmykcolor where{pop}{
/currentcmykcolor{currentrgbcolor 10}B}ifelse/DC{exch dup userdict exch
known{pop pop}{X}ifelse}B/GreenYellow{0.15 0 0.69 0 setcmykcolor}DC
/Yellow{0 0 1 0 setcmykcolor}DC/Goldenrod{0 0.10 0.84 0 setcmykcolor}DC
/Dandelion{0 0.29 0.84 0 setcmykcolor}DC/Apricot{0 0.32 0.52 0
setcmykcolor}DC/Peach{0 0.50 0.70 0 setcmykcolor}DC/Melon{0 0.46 0.50 0
setcmykcolor}DC/YellowOrange{0 0.42 1 0 setcmykcolor}DC/Orange{0 0.61
0.87 0 setcmykcolor}DC/BurntOrange{0 0.51 1 0 setcmykcolor}DC
/Bittersweet{0 0.75 1 0.24 setcmykcolor}DC/RedOrange{0 0.77 0.87 0
setcmykcolor}DC/Mahogany{0 0.85 0.87 0.35 setcmykcolor}DC/Maroon{0 0.87
0.68 0.32 setcmykcolor}DC/BrickRed{0 0.89 0.94 0.28 setcmykcolor}DC/Red{
0 1 1 0 setcmykcolor}DC/OrangeRed{0 1 0.50 0 setcmykcolor}DC/RubineRed{
0 1 0.13 0 setcmykcolor}DC/WildStrawberry{0 0.96 0.39 0 setcmykcolor}DC
/Salmon{0 0.53 0.38 0 setcmykcolor}DC/CarnationPink{0 0.63 0 0
setcmykcolor}DC/Magenta{0 1 0 0 setcmykcolor}DC/VioletRed{0 0.81 0 0
setcmykcolor}DC/Rhodamine{0 0.82 0 0 setcmykcolor}DC/Mulberry{0.34 0.90
0 0.02 setcmykcolor}DC/RedViolet{0.07 0.90 0 0.34 setcmykcolor}DC
/Fuchsia{0.47 0.91 0 0.08 setcmykcolor}DC/Lavender{0 0.48 0 0
setcmykcolor}DC/Thistle{0.12 0.59 0 0 setcmykcolor}DC/Orchid{0.32 0.64 0
0 setcmykcolor}DC/DarkOrchid{0.40 0.80 0.20 0 setcmykcolor}DC/Purple{
0.45 0.86 0 0 setcmykcolor}DC/Plum{0.50 1 0 0 setcmykcolor}DC/Violet{
0.79 0.88 0 0 setcmykcolor}DC/RoyalPurple{0.75 0.90 0 0 setcmykcolor}DC
/BlueViolet{0.86 0.91 0 0.04 setcmykcolor}DC/Periwinkle{0.57 0.55 0 0
setcmykcolor}DC/CadetBlue{0.62 0.57 0.23 0 setcmykcolor}DC
/CornflowerBlue{0.65 0.13 0 0 setcmykcolor}DC/MidnightBlue{0.98 0.13 0
0.43 setcmykcolor}DC/NavyBlue{0.94 0.54 0 0 setcmykcolor}DC/RoyalBlue{1
0.50 0 0 setcmykcolor}DC/Blue{1 1 0 0 setcmykcolor}DC/Cerulean{0.94 0.11
0 0 setcmykcolor}DC/Cyan{1 0 0 0 setcmykcolor}DC/ProcessBlue{0.96 0 0 0
setcmykcolor}DC/SkyBlue{0.62 0 0.12 0 setcmykcolor}DC/Turquoise{0.85 0
0.20 0 setcmykcolor}DC/TealBlue{0.86 0 0.34 0.02 setcmykcolor}DC
/Aquamarine{0.82 0 0.30 0 setcmykcolor}DC/BlueGreen{0.85 0 0.33 0
setcmykcolor}DC/Emerald{1 0 0.50 0 setcmykcolor}DC/JungleGreen{0.99 0
0.52 0 setcmykcolor}DC/SeaGreen{0.69 0 0.50 0 setcmykcolor}DC/Green{1 0
1 0 setcmykcolor}DC/ForestGreen{0.91 0 0.88 0.12 setcmykcolor}DC
/PineGreen{0.92 0 0.59 0.25 setcmykcolor}DC/LimeGreen{0.50 0 1 0
setcmykcolor}DC/YellowGreen{0.44 0 0.74 0 setcmykcolor}DC/SpringGreen{
0.26 0 0.76 0 setcmykcolor}DC/OliveGreen{0.64 0 0.95 0.40 setcmykcolor}
DC/RawSienna{0 0.72 1 0.45 setcmykcolor}DC/Sepia{0 0.83 1 0.70
setcmykcolor}DC/Brown{0 0.81 1 0.60 setcmykcolor}DC/Tan{0.14 0.42 0.56 0
setcmykcolor}DC/Gray{0 0 0 0.50 setcmykcolor}DC/Black{0 0 0 1
setcmykcolor}DC/White{0 0 0 0 setcmykcolor}DC end

%%EndProcSet
TeXDict begin @defspecial

 systemdict /pdfmark known{userdict /?pdfmark systemdict /exec get
put}{userdict /?pdfmark systemdict /pop get put userdict /pdfmark systemdict
/cleartomark get put}ifelse

 /DvipsToPDF{72.27 mul Resolution div} def/PDFToDvips{72.27 div Resolution
mul} def/BPToDvips{72 div Resolution mul}def/BorderArrayPatch{[exch{dup
dup type/integertype eq exch type/realtype eq or{BPToDvips}if}forall]}def/HyperBorder
{1 PDFToDvips} def/H.V {pdf@hoff pdf@voff null} def/H.B {/Rect[pdf@llx
pdf@lly pdf@urx pdf@ury]} def/H.S {currentpoint HyperBorder add /pdf@lly
exch def dup DvipsToPDF 72 add /pdf@hoff exch def HyperBorder sub /pdf@llx
exch def} def/H.L {2 sub dup/HyperBasePt exch def PDFToDvips /HyperBaseDvips
exch def currentpoint HyperBaseDvips sub /pdf@ury exch def/pdf@urx
exch def} def/H.A {H.L currentpoint exch pop vsize 72 sub exch DvipsToPDF
HyperBasePt sub sub /pdf@voff exch def} def/H.R {currentpoint HyperBorder
sub /pdf@ury exch def HyperBorder add /pdf@urx exch def currentpoint
exch pop vsize 72 sub exch DvipsToPDF sub /pdf@voff exch def} def

 /pgfH{/pgfheight exch def 0.75 setlinewidth [] 0 setdash /pgfshade
{pgfA} def /pgfdir { dup 0 moveto dup 5 index lineto } bind def} bind
def

 /pgfV{/pgfheight exch def 0.75 setlinewidth [] 0 setdash /pgfshade
{pgfA} def /pgfdir { dup 0 exch moveto dup 5 index exch lineto } bind
def} bind def

 /pgfA{ /pgfdiff 8 index round cvi 8 index round cvi sub 2 mul 1 add
def 2 index 6 index sub pgfdiff div 2 index 6 index sub pgfdiff div
2 index 6 index sub pgfdiff div pgfheight 9 index 9 index 9 index 14
index pgfdiff { 3 index 3 index 3 index setrgbcolor pgfdir stroke 4
-1 roll 7 index add 4 -1 roll 6 index add 4 -1 roll 5 index add 4 -1
roll .5 sub } repeat mark 15 1 roll cleartomark exch pop }bind def

 /pgfR1{ newpath dup dup dup 0 360 arc clip newpath dup /pgfendx exch
def /pgfendy exch def 0.875 setlinewidth [] 0 setdash /pgfshade {pgfR}
def /pgfstartx exch def /pgfstarty exch def /pgfdiffx pgfendx pgfstartx
sub def /pgfdiffy pgfendy pgfstarty sub def dup /pgfdomb exch def }bind
def

 /pgfR2{ newpath 0.5 add pgfcircx pgfcircy 3 2 roll 0 360 arc setrgbcolor
fill pop}bind def

 /pgfR{ /pgfdiff 8 index round cvi 8 index round cvi sub 4 mul 1 add
def /pgfcircx pgfstartx 9 index pgfdiffx pgfdomb div mul add def /pgfcircy
pgfstarty 9 index pgfdiffy pgfdomb div mul add def /pgfcircxe pgfstartx
8 index pgfdiffx pgfdomb div mul add def /pgfcircye pgfstarty 8 index
pgfdiffy pgfdomb div mul add def /pgfxstep pgfcircxe pgfcircx sub pgfdiff
div def /pgfystep pgfcircye pgfcircy sub pgfdiff div def 2 index 6
index sub pgfdiff div 2 index 6 index sub pgfdiff div 2 index 6 index
sub pgfdiff div 8 index 8 index 8 index 13 index pgfdiff { 3 index
3 index 3 index setrgbcolor pgfcircx pgfcircy 2 index 0 360 arc closepath
stroke 4 -1 roll 6 index add 4 -1 roll 5 index add 4 -1 roll 4 index
add 4 -1 roll .25 sub /pgfcircx pgfcircx pgfxstep add def /pgfcircy
pgfcircy pgfystep add def } repeat mark 14 1 roll cleartomark exch
pop }bind def

  /pgfsc{}bind def/pgffc{}bind def/pgfstr{stroke}bind def/pgffill{fill}bind
def/pgfeofill{eofill}bind def/pgfe{a dup 0 rlineto exch 0 exch rlineto
neg 0 rlineto closepath}bind def/pgfw{setlinewidth}bind def/pgfs{save
pgfpd 72 Resolution div 72 VResolution div neg scale magscale{1 DVImag
div dup scale}if pgfx neg pgfy neg translate pgffoa .setopacityalpha}bind
def/pgfr{pgfsd restore}bind def userdict begin/pgfo{pgfsd /pgfx currentpoint
/pgfy exch def def @beginspecial}bind def /pgfc{newpath @endspecial
pgfpd}bind def /pgfsd{globaldict /pgfdelta /delta where {pop delta}
{0} ifelse put}bind def/pgfpd{/delta globaldict /pgfdelta get def}bind
def /.setopacityalpha where {pop} {/.setopacityalpha{pop}def} ifelse
/.pgfsetfillopacityalpha{/pgffoa exch def /pgffill{gsave pgffoa .setopacityalpha
fill 1 .setopacityalpha newpath fill grestore newpath}bind def /pgfeofill{gsave
pgffoa .setopacityalpha eofill 1 .setopacityalpha newpath eofill grestore
newpath}bind def}bind def /.pgfsetstrokeopacityalpha{/pgfsoa exch def
/pgfstr{gsave pgfsoa .setopacityalpha stroke grestore newpath}bind
def}bind def /pgffoa 1 def /pgfsoa 1 def end

 /landplus90 true store

/landplus90 true store

%%BeginPaperSize: letter 
letter
%%EndPaperSize

 /pgf1{gsave exec 1.0 pgfw 2.00002 0.0 moveto -6.00006 4.00005 lineto
-3.00003 0.0 lineto -6.00006 -4.00005 lineto pgffill  grestore} bind
def

 /pgf2{gsave exec 1.0 pgfw 0.8 pgfw [ ] 0.0 setdash 1 setlinecap 1
setlinejoin -3.00003 4.00005 moveto -2.75002 2.50002 0.0 0.24998 0.75
0.0 curveto 0.0 -0.24998 -2.75002 -2.50002 -3.00003 -4.00005 curveto
pgfstr  grestore} bind def

 /pgf3{gsave exec 1.0 pgfw [ ] 0.0 setdash 0.0 -5.00005 moveto 0.0
5.00005 lineto pgfstr  grestore} bind def

 /pgf4{gsave exec 1.0 pgfw [ ] 0.0 setdash -3.00003 -5.00005 moveto
0.0 -5.00005 lineto 0.0 5.00005 lineto -3.00003 5.00005 lineto pgfstr
 grestore} bind def

 /pgf5{gsave exec 1.0 pgfw [ ] 0.0 setdash -2.00002 -5.00005 moveto
1.0 -3.00003 1.0 3.00003 -2.00002 5.00005 curveto pgfstr  grestore}
bind def

 /pgf6{gsave exec 1.0 pgfw [ ] 0.0 setdash -4.50003 -5.00005 moveto
0.49998 0.0 lineto -4.50003 5.00005 lineto pgfstr  grestore} bind def

 /pgf7{gsave exec 1.0 pgfw -2.50002 0.0 translate [ ] 0.0 setdash 3.00003
0.0 moveto 3.00003 1.65689 1.65689 3.00003 0.0 3.00003 curveto -1.65689
3.00003 -3.00003 1.65689 -3.00003 0.0 curveto -3.00003 -1.65689 -1.65689
-3.00003 0.0 -3.00003 curveto 1.65689 -3.00003 3.00003 -1.65689 3.00003
0.0 curveto closepath gsave pgffc pgffill grestore gsave pgfsc pgfstr
grestore newpath  grestore} bind def

 /pgf8{gsave exec 1.0 pgfw [ ] 0.0 setdash 1.0 0.0 moveto -5.00005
3.00003 lineto -11.00012 0.0 lineto -5.00005 -3.00003 lineto closepath
gsave pgffc pgffill grestore gsave pgfsc pgfstr grestore newpath  grestore}
bind def
 
@fedspecial end
%%BeginFont: CMR17
%!PS-AdobeFont-1.0: CMR17 003.002
%%Title: CMR17
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMR17.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMR17 known{/CMR17 findfont dup/UniqueID known{dup
/UniqueID get 5000795 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMR17 def
/FontBBox {-33 -250 945 749 }readonly def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMR17.) readonly def
/FullName (CMR17) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 2 /Theta put
dup 10 /Omega put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3DD325E55798292D7BD972BD75FA
0E079529AF9C82DF72F64195C9C210DCE34528F540DA1FFD7BEBB9B40787BA93
51BBFB7CFC5F9152D1E5BB0AD8D016C6CFA4EB41B3C51D091C2D5440E67CFD71
7C56816B03B901BF4A25A07175380E50A213F877C44778B3C5AADBCC86D6E551
E6AF364B0BFCAAD22D8D558C5C81A7D425A1629DD5182206742D1D082A12F078
0FD4F5F6D3129FCFFF1F4A912B0A7DEC8D33A57B5AE0328EF9D57ADDAC543273
C01924195A181D03F5054A93B71E5065F8D92FE23794D2DB9D6295729076BD8E
CBC0F4C1BE246922D2482233846A96D867B66D9CF25A1DB661141D36B8506E61
A022F9EF8BC1F2F674EDF1533E67A78CA29A612AA9268E113C5EB84DA56CEDFC
D7A111403E6E2A8682DB04368889747E003A124395ECF0C7FC81218552EE7C6F
60BCFB4120893528670D0E8A4117EA5676915E3591AE5652D003EEF67818A41A
8882E102AEEEBECBD15DCF632ED246A6A58B6A7780DB6F1F9AE3FDAC8344585D
E104F2BA2DF06D68945889A2A3B6C262FB53FC670BC5EB7C56887FBFB7AA7026
84115872CFB0652C6BB330447AFF8F0F665EFD6A41D6DB6877B08052F402448F
CB21C26BDC900636C99CA347B79AA73AFCDE9762A992CA3DDF7279E5C50F453F
52098529850AFB1F501A442D6A02E0A2896F81C8AC735AF1E7EE47208B4CC944
649DF6802EEE813F1456205C6126D7D0B1821AB62DD65468F3A30575E491623E
0054E2E680E4402E1C8C538DA389B81603BE88D6DC287A076F92B224CD58A0AC
44B8D490197341808DEF243660971F444A560C747BC6F52707ED42A99736ECCF
EBCB694A561C3A70A319D204CD40D402FBF937A00BBCBE85DD26C9E3F91B7D10
D85B9D314BC3AAD5A58B107F5F341BE2C53490924142566417D6BE03BB4977FA
6635EA58DEB9508E40B9FFAC75FF44C683680CF242FE210519C9BF92483B0A54
83F48341318BE16D2F8C988FE3DB2E7914581F579D5E323148A31E4ED03BC24B
C990372DF5F3B0C5FA32EB2CA4FA0EA33316569133C87697BAA2292E685C26CC
F8CD40A2366E60B47D47CC9D0FA29D2836011376A07F78BA7664DE96E775CF45
9BC91559A063073A4C2FAAD0893C517C5C46A1425D07EDCC2B57162E3A45103E
FF26A2D2F98B194256A4B052AAFCC08965A50EECD7B9E8F35AFDF7B6568B3983
8030655E7C2BEC961A2F20539D617626E8454E3FE9EBD3EFCEF7F63498441DAE
16CB509BF239FBBE25EFEF07A3E16C9C71EB8D9DCB8403916FB40FD7F4E1A52F
72F2DFF94FD14D7D49FE775390C17C37C1BA0CAF35CF75D682B7833A83224158
D54CE962CFBAFB1B2CA50B60CBEB1F8F58DDB2F5470C355ED9632342D9382AE4
5D33BCA3A0A25EE9E5B39BE5370E7F20684C664EDB48E7973FEDAD9676F9EE8F
701CD4D8CC9B9EBC06E8C86EB88AD56E15CEBB8E1930E8F711CB6E01D5D14967
D7E6C1BDDDE2C4D00384EF4CB02877DECC27AD53FC981338977BA0CC0257CF7D
B42E9BC91AF45D9722461EC3CD9DEAA8011FB855FE14B74BE0A102008EACA2B6
0E287BB4F466FBFDD6E65A5262B9322F95E20DAB875A10A84572D982E6FC7ACA
23C0C37E5EB47B8E69C07507B53CDD98CD1B6445E1699CF35B3DA3E0DC56BB76
F997C40E2ECE47DBDDB707EB527055960113F2DABC87FD9EC7D0AB36B400CE33
0D54D4F197B2830B43DF0AA802DFB2BF747A4C44B31FB708B2C8BBE1955A6A28
379C91AA4CC065A50098AEC0B837E180B76801865A43C74859DF18FE1DA1483B
C17843BF1C7E1B11A8C6D8BB8CDB1D552FE6A1FD0A696A8F7405F2320F8621EA
17C1A32056C45A9ED35D2BD12D02D8B26489CAAEBF4EF33B66FF4BD9B46E4823
6395831A8F3366EEA0D0EA88D612DEBF63DA7FAA24DA979ACC1A52544BCAA007
6C39946BEA6076ACF45722B2B8E4D0823EA2D12B14A98367BB0433A21FBD9F94
18DF298C56F67ABC9DB1868D431A854DBEDF8E1F49E359A545C75A7AA1FA4D5A
50F1EE6B45FC68ABF65FFF257964E4E50D8B0C1FAF498DFC554073697C2F219D
4A68DA9E873B270B9C56F0DDBC9927ADAF9203FD684DE615F68C24ACFFB44690
89C0D5322049FA69E7FD00EFC9C9B2BD177B5B339907F81C31496662847BEC1E
56B5DCDF4FE618970F4268F475B2EF7E0F28CC986DDF098E59DDAD818649CC35
4080C0867A884B8177A6880F06F1E5CC130AB4243EF8DD8032FCF390765BAB1C
1F0C9728EEE261A09F8C1D7ABC7A6B1550551BE2A7D19D45B656650DB00B3A5E
B3E1186043E173BB4DD5EFFB379654F88146382AE3F7196F099BDCD6D245FB6B
AA2FA9B6CFBC9F0CD52798DDF2F13874BDE5B124DFFE0DD93E24C9DAEAE4C3BB
71A9A13AE2860F620B4EC789F95221015D9C510CB4AC775EF69DB9E32E59C896
1AF82C9F0DCDB4812A37761859A3D3BA0CA57F244489C78065346FFA78F5F7C8
0B2E8CBA9EE62FF5C27369D0BCD52857D40F1FB8F8A1441B83565A4150AB1945
0B54D6E49F66389E43096269EF5CDD39526A288C0CB81E324E75D326EC9A182F
2CD966368CE300B41873B08E17C3E6BB51804460D2562AF5A12339966F44CD09
114C6809AF246B5BA6937631842CB9417781A58944B6BA4FCF961465C208957C
81A662D560D0F81BD3CB53C06B6D979F04F6121CCFD5D52702CBF6C70C01EDBF
2040AAB9CB144321E68C4010E0E98CCA2603EB55DD62E881DB621C37EA4108D1
528ECC7A0121B57C6BB1E26F8AE7161ABA7E88256D2D6A8B7CDE2E730D137493
3FF628EF6030DD2330D747FABBA03B44CF600418C245C388F33EC5559E7313BC
4B530C4FC12530D38B27D6408548F25FC084DD0523B27D29D6518D3115AE7755
37162CFD4CF528214466FE525B13782F9C3CD78F3D6C7423E63A134C0A371F15
10F4ECE1D482C647B563D3D15586F80BD9DF7381BD53927825D5AEAF762E1CDC
3BD184F345029A95B3AD4D1B66E79AB4F0809418C0CFD4D503457A190D02F134
3F57FC04FF655AEEB783D6791E4EC300755861837D3D50649F6B7F60766211B3
8148F8E575E28D6C2DE75B15E722ABFC6DAADAE53D89FD295352781DCC2CFF6D
982F6DB778D6FCBF1B7BDCB53F3A23AE6EB499BBFA96E8BE04C3C8E5B660EF24
01EB842DAEBE979F2C2DB72AAB4D21627063B1D3C6CD40944E4CB81655698FBA
A343766CB22E392E5DAE01DB33A00918D6DAA07F2F38B336A3C5DF3708865E75
0DE04D3AFBCA27A249E97377D5785B4E28EE0E93F7D353619C200DB967372ED2
153BF8BE945474266EB2FD30F80042A11B7E3586DE4AB1FBD4A741D36DE583E9
1CA25DA345520AA60634EC819E7EB493CDB128BBADEC3890F055455F060A1100
D5A41D7B180027E08AD6EE7E393DB9F83799544404FE397F557773BE6A130541
157C0EB37E036C94825B5090EF85F8B4E3DB72895D86687758C20EDEBD6D1079
196E9949DC6ED0113571C70B150B37E446E319EC54D44CC0CF6A14760953DF4A
D0E1F33A54D240E236AB63B35BA8E071D77776BE5B9312245F2C6E4FDB4312A0
0D9CF723E7D9A3D8546C4739C00C301A89ABA60A02757AB1A0AC40B24CE6CF12
5850485B11E16646D7150795EABAEB08364A53161111F46A7BC3423A0D3BEB69
BF15726C1F8363914945DEEB29CB8766328318AF3B344FD6D77BBB92BD7FD161
93356493D4D8252AD125708D47C124E44232FB2BF7DD75F87889496DCDB75D03
F58A57D4122CFC194B75A9E9C4789C9A33C0435FB4ADA16AD4A6191928D1663D
05FB8152C0AA176FBA4755205F8A66713404787070757D3721ED6E6D55A59DF0
C92BA8F05EC7BE05D0A2E66DE85E75373483EA3BBEE0F0DFC7E2FA5FBAFAB118
058D095AA71FDFC8AF37E5A98406B64E58BF476C6926725D7EF3C2346CE3F662
1E5A4A18D966479A37070859014719456EA2C7F23E68E1AB2F25ED3A0C00A18C
DD403506923BC983F89CCA125780DC76A411472E38173BC0DD4CDA7B43E13419
B5AB0B9A35E77C58BBA12AA4F5C7EBF8A29996B059E4FAE6809565570442AEE5
D56CBF4407E1CD9A4398B1F3ADFF023F64B230E3D29F526B62D964F5C8DF801F
E94295AD85BD9E1C18E6327977260A871E921C0745CA06A263E335E344686E7D
D6FE3ADB4EE0A7E462F3C00873C3E95D183CCEC71C0E5DC1D2FB310B28FC3611
67C23DE336C374F72368F4973052B48E39969305791C986E6EE35D0350571860
3A8ED849712CF21AEF444BA390644E8646CCA16559BA4642A5800827A0DDC453
7CA0818BC47DF6348A5209A2F0A10CA39840CE6346E89CA0E842BE8692DEF25C
4623A5A0E0B98708B9492E9F564324BB3872D6B953CA59E9F393C477E2AB85EC
C557D333E88C111CF995FB79D9432DC94C2BDB3BFEE13C0D7D1BB920DAFA6158
8548447AFC65CD5515D5021E0ED7D213B0C08C35BB424AA91885CA023D7AF767
B83E619B15DFEF5588D2F0564296E14B5A6ACE03751E1016105C51BE76EA5ADB
4167BAED2A8899031FD7BA05C410ADA25ADD94A787EED1A7AE133B0568B1DBA5
44B41BE013782CFCA3D81E8E8210DD506ADFCE7DC7E792EFEF438221164A7D1B
5E7089F476240C5F94988F081943F24DBF7CC3D1E58CB89E1C0C1624682CC3D8
C95815ECC9183A4B3E353C7F920B7E64086E01672DAA7C8A81319BAA03C1FBB7
8E5E84CC5BAE0E107754794C755B7AF00953504094E1A9DF357D51B578259613
8D26F0BA26AAC459BBEEB90BCC98B865EDD26AA4DF533D6624EDAC762C446B6F
CF9F86DD2D8989D4655775E662B93BF51805EE3CBA0AE2293D95F166E80973CC
82C53042D0249C598B0821E9E7F218BA6114EEC86C158F277934F2651490B723
7F0D0288560DA5BEBAFDDF243048E590871AD18B3B220EC56549004DF122AA03
BAAD6971D790BC644369FDBEE74A324083CFA9496C2A333774F06E35299242BC
F4B26578907CC5AD1893613F2B8622CFBB7B55810162EEBFAAEAB2A6D69CB72B
D7859C73843E665125FF450631F32E64F13A6207F368103C7A7318DBAF2560D0
F1CDD83C3E48CB30C62AF1E0896E1962C655D9ED98E1BB38477C1C60ECDB6B95
067D3A638AD43EE886338F7AD2D2A574CE6FD2E21F6FCB4220EFEC85ABF8272A
82081CE70E4390A74EC717F1DDD168F4A4A080A79EE2ECE0F98A96871DA4B52F
78441601AF47763C2219F5A167604C32F478D498835EF3A6167936994F7C7139
3019FF43C97E7978D3CDA641C1E391FEA572D308E759F28DDE2B40B5BC207A4B
C5EB6A93EEE26782016F8B6534420BE4D790A2E1A65B6CDBE9468152230384FD
14E9AE84418A44F94E6825DD7D77D0BB5486DE26A692B3DA96C81FA4440C5D44
8E7F3CAA9B8DF38F87E09C4D78841F629F78F4E7CC8580CC44E59E5D9AE8B2DE
C0682F793AE7AEC12A8AE688636197E8A08FEB70EFDB6203681A60223B9B0D39
2DA656E5E99B82130D4BE38D7AFE18568DD30B0CC3C73C1E2914ACE11A65334D
A9F18135E7B86157122CD221C33C62012FFB16D2D2F3473A53BE3E7B9FD4303F
66ADF0B07155C7B9B002EA68C6AC7247EB3CE7D2670A60138049DAA964F86A05
22983EDA7242E6BEEB90DF61C937399B2CE1061DF1E551CEED4A80D86C2D4649
C9FF9A1F93E96773CD392478D5B70D5336A03A274E0A6EF44BE8CB2274324142
706BC2E340DC944339D647961FD7BF29944503B4AFCDC69A706AA6B0F6AB2CB5
D220A96ACC1EE5E7826F6F75F044224E5260D581AE761AD0C752A06AA03FD935
FAD65C9EDD4E5505396E331D45DE88F0D1A4303D766ABE0702C17E2A7F53C0EA
96A4DEC5A6B6186F5DBAAB05DD78E38AFE630465BEF0EC66ABA9C1C9232214A9
795D105C33CF069F6BE20B179F4CC9F484AB63ED25C1212C457DF62CA0D56E20
608572216F2D4C09010B03A8AA6D287C8F514BEEDC1C912552CC2489858BF4D3
084882CE4F4B6FB9EE27C0168671E6DA154018ABEAD013C88E1D3EC918371251
63D95BA0FE20212C20AD3F4DB614EE36B488A3F55D94C1EDFCA8E68E54A1EED4
7DD168DCCF07C3DDB5E2B499DB5635C5C5056A7438120DB4839427D07F96AB8E
F842E285243E40259F6DF029E27779CCF3D3BD7206B2C341045A5A4AABACC2A5
91C6830FE05ACDCFDE99046F16F2AC183426ACA4A89FE5F09B7EB2F811BB5FB5
AF073BDA2886070B2327D582DCBA66B47E8948C3BE05E837BE4B81402A583403
74FF9E938F0E9DC3B1CB81B93DFD4070F9EBAED40BA570DE8F9A5C2C0A097311
22A6065139A6580E332473E9410D9F4C734794F79E41D0D437CEC7381919DF6F
A24B170E2BC97A6396A4E3AC3D844AD6E2B8FCE1C6AE97DFC5319F49130C3D6F
AF2541EB2384D5D4CCBEB976846EF8C2165DBF706112BDDDEC9A57D157F5996D
95229FD5C71B885D16B177BAB06B9DF5740A45C2A005778EE879193290419C0A
A4A339029E37E685B8A05B111DDF94AC19B1D85C8E6026E57E3D3B373C08557A
F96E6FE3916695ADFC1F0BF5D558565F42A71C61ACFEFC9026424397F0646642
7EDAA05794BCCD164A645860B57EAD53CB6899B18C6E9496EA4DAB0A0C272639
DEBC4FCBA94B3BF123F7771F602E7667C8F56E12429669F2219C7D8E294BE07B
71E88EA62F5616CAAB7C0198E6FF12A348E36B306FE2684A401399431B6A84CF
B46EE4BAA0F4099E65E9AF3B70274EDD6B6524F4FA38C23F9CD5273EEDC8C6C3
E7312B6E0497C05AD3F3C246638F01387CC11DBCBD287ACF54D8E24759F51415
35ED64132EF4158F54AB9F4D567482B3057880490F805822F71E7E2C52F7BC38
8B1F803AC3731064B90E5E97AA3351D17E73DC2FE526CD6C91158636E395867D
C1150FD3BD12493FFFB813AF0D08C8ED0B7418A2CF90BD5B783364358605D075
5DEA95A9299C0654EFB28E2FE8A41358A0DD124D0314A27558E42ED5F2D74BB7
056DE04D2CF13B9B804A3CBBA29BC155A3F18B8B48283194C33CE8291677E1EF
0721138F8E0409D49BB99F217607586D2DF00C29A25536E21924B4CF6702CF85
C02DFBFD2AA4DE3DBED1D2C02E21052A8D10F96629D0D18154923638FE0C48BD
E2DEAF11663E20717EA77A5453686AAA39D6FF7919AF09B1AD956FDBF734F49E
262F3076F62E77BD45122B55A5913902D9F91C4246FC235BA9C0FA4A96994291
830638949BED423387DA2D455A3C9122484EFF27F5367D1D3DD27D207D973815
965E1CFF36F43C653ED406F65348671D9FFAF55BA3FC266D438AF473181B7801
164EA3F04FEC870743195B3F467DE36B3719BAD9BF15A18637A314C887D46673
445BA3C212749B0A33136FEE9FE2C9A13D62E7ACC96378D257FBE0EB06AD4D4E
D41976AB92AC720DFD33B0677062C32E6F5C992A0324FD26E984B5341A58C190
D20EC3F1144697D514D9157340A6C9F82E62AD8CFDEE59F6FF86C6250CE33D6B
BB82DDB4F65BEFC6F6D0E4044F7BF307CC346E2FFD191846E3CA288C6F91CB71
5FDE855FEC5E38816CC635C470BF15263A10A409F0BC4877F7E6D4C223E3564E
E7BB5B320AAA5AAF4F32528F7413BFB97C70FF5E6843E1FE501472129BC9758D
7531BE576C75840CBC4CD3E6D9E5FF52559B68DE6E7827128BB2ED1BAD43F36E
A0CB68C1A147A7093EB02062AC5492DB7EEE08B1BDB187E15339A66269E459BC
67495937B4317AF66A498923322B087ECF47B601C26E253D223A784DB2D204FD
0668BD403A73723848018B7C86B627B9AE0BD9038F567CD5F670CAFC5C4D86FC
ECA211B713ACF8C1370191161CBB6C2592E8B9DBF3471133F2D9A60F15D72F9C
5E5539D59A6A7E124D9A38A6FF6EB7C71990716F88E1888295584F17D49144B2
BCC7543330AEEC6A5046047DD9CE52B692C3529814C33457ED7FF4ACDB57C373
A4D87A0571AE1FAFBB39DE44A4EC3A1883B216F1DA8B572796FEF338E0768A22
013B2EA39BF76FA0A9802B8B22DA67DB87371ADB7669CD8740019C075B0E4BA8
59C4668A7EAC8CFEDABB124F8CBF10A01AE6B11AB2D7B1099140CE83BD3212C1
56A0C13999463EC5DA4EABBFEBE23FAAC12BA68C2622BA35E5D798A70D15F48C
2F617CE0AD7A4007088A67B8EECDF4BBCBC0EF7AC86FEDB03880B518561F29B8
8E7CB2AFE3E757D822165262098C11AD111E6ED180CD58CF86A1E761C49E0CF3
E56E1812C5A5A022CF2E2B5BDD72F4CD626F55EAD77D247C367F9F44042EF404
FD2936C1E591493F76E058C9464B10C233F029BD102E0641EA168C29BC8254A6
E21D2D80F08E2880F0D6D9D23FB55FA1DA04A777B592883FD2B7BCC1E10F3CB9
B684696E3300C9AF7BB2A1A98CEFB3CDB0524FB6B34C649187C58C04CF771DD0
361698ECBD0F656DEF3882EC66B29AA554F9EFD140B7BC6888F626271A42862C
5CEDE5B38E7CFCCD318211FB0899B71C884B1B260EDE73F587ADB988AFD126F7
3687BE6CB27C9256648775FDD6427BACADAD50A011D7D48BD7C99F47B0A2A581
4453761E546FBA5EE99CE4DFEF3FA0C055BFB6087DDEF2D45996C765617D90FF
E485385A52B7E22E04B7745CEBB956E47944AA5DD4657E556D14A3AB7AC09186
5BB36E46D8251C3E1368D97A9A8D84F01628CC0B7E98A848847E12BDE5F82D30
9A7BA241EBA8B11CDA34EE71A1B985E8C88154AABCC392C6818240CB1FBD060D
DA5A75202109F3157B85A16744833C2D69ACBCA5A7131F81811ACDCCDDB64C7F
6B230FB857A110ED016C538EDBB929D77FDE6408A9DB3E866F1B18CCB14A113C
9B6025566E21A43239C850BCE5DE0DD59183789394257AE47BF23D84912E94D4
87BDBAADEBA1BAD89A79650634282A4A93968324E1F67FA557FA3CC55DF4CA
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: UniversalisADFStd-Cond
%!PS-AdobeFont-1.0: UniversalisADFStd-Cond 1.009
9 dict begin
/FontName /UniversalisADFStd-Cond def
/FontInfo 9 dict dup begin
/version (1.009) readonly def
/Notice (Copyright \(c\) Arkandis Digital Foundry, under GNU General Public Licence V2 and later, with font exception.) readonly def
/FullName (Universalis ADF Std Cond) readonly def
/FamilyName (Universalis ADF Std) readonly def
/Weight (Regular) readonly def
/isFixedPitch false def
/ItalicAngle 0 def
/UnderlinePosition -125 def
/UnderlineThickness 50 def
end readonly def
/Encoding StandardEncoding def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/StrokeWidth 0 def
/FontBBox {-58 -225 1931 961} readonly def
currentdict end
currentfile eexec
D9D66F633B846A989B9974B0179FC6CC4458BABD05D76517D9C24FED216BE906
1643B22AABEA637BFFCB75FF65A91279495B00B8B92CFB39C8899C3818357033
2BBD344CBB263D4250A46E5B09E712D88275731E98C996C69406E43E9DBEFDD7
161A841EE17304D49501F13D3AD3CFB00DA1700EAD2364C31908F18B9F3643EA
E9514021B52FFC8EEA03D195015D30E3BB12C272A254955F88A4DCD045432CDB
693596BAF5E1BEFA2D9AC1CD0CCBC3EB428243AB90B02B35BA3A6C5B66E6A2A1
ADDF72C4E1C85E0D1616279E70578303633EE7B6B0DEF67A7EA923C661949BF5
268AB6292E26967380DFFBA4E50822F679BB138795C9FE7007F0E1FCD4719DB7
5A46EB799A99B43DBCA06EFC7B83A71B48C4A476B32ECA75CB58C69D80870E65
FDD4641430000298039E9411F958877FC8762B8DB1EB26B90918B4397A58980D
7B0AFCB8EF5C4A129C15676638273B6A9DB80E2A6538DABA603207B6A71D28A8
FBDF9B0C0560246C7791FAF243B199E98CF98710366EA0EDE505C3F3C5ACDBA5
B51BAA6EB0422C4148110B5BCA392C45078D2A2E24736658F431288D98EBD211
38D5E17DF9A850B86107F9C96E4FEAF2B1F2ECE46EECF6241D35741BB15E7776
3D3D73E27439F6C6039F6A4D689FF0C3A0884DA057D0EB9B169C434ED8A48291
AA3D3B6E395F771F15C794C159AC759BC8CE2EA81F089C26760BFF4783635EC1
8FD17097676E45A5B7DFAB81EF68D0B86CED169AAECC5CEB607EDC42CC3AEED8
6CB60F0C5403EB76861CC9C254BD1FD856B5F9BBD8A1CAFCEB97080A87A49D7F
1B68E34EA8F8399A3F08D7A6CDEFE2E82EC5512D9F396B2FFECD476244A829AC
8FB22EBD4625CFCDEA19DA849FE54B5CE88ACDB11E9301C34A32D03215673BCF
24CE7FFE59E1A0CBAB58B94AC94D5CB8206F5FDABA27ED795B9B1644DDFD3D31
F0920F080FDAD8F0F566411088035B07E429E3AB32F4BBE6ABFD0E9F6DC0EDFA
91D01EEC90F927CA54DB29F9CDE4F5E2C4C1DA16B9B1CCA8813E1EF2C0A1D281
A72816415BA76BF37A849C994B8460F96F1F51729CBF7C74FA2566EAEBE6AD75
33F344DCF94A870B50F9D86AE08922E574D43384D54DD35259003DB50FA1EC37
87909006DE87BE24A1F81B98F9EF0742222BF65FEA5D184BD98A585896299AF3
549C485685325A04C83FB1D8D5048CDB3E3B125EE6F4DF9EF6ED00CBA66119DC
CA47377FE74E73E36A119B0E7B82DF436477C5C90145188C39169F3593CCB391
FE4FB3AB9715504A50B46525D295CC6EA4BD3573CBE2CF5F084CA6124481E73A
B84216F535C23B4203D944420E930BBB198D4B3366A2A96A8B3F161D485B8D62
8AB0A11E27E6DD997D7375E27B96BB4E15069AEF31C4666E04CAAB985A57E04C
59D17A70E21F3AD9AFD2A1F376B1F5ED939968E1D57CFEC414A432E3BFA0E975
91F3182C13FEF4097D5178C3338CCD6505F5CB39D2A4BEB62F963A054090D87D
803641146609C666308E0CBAB6D2DACDC6640CEBEC54AF2767BB0E61D84775C6
C9B3555870FD5BE1150C2067E9278C76EB35A4EA1D644040EA3720E51371D573
4D595E452CDDAECA1E9F205BD740F8D7958042531C3CA7DFD2ECB534960135D3
9F5750698DED4CA50F0C3580B6E46AB5B1C465D3DF7344376509E5A0BCA4E5BD
0F6D4148F5F7912457B050BF55CA74CA841200BD93C4633FE8D901C8844B4312
A33870CB8CF38B87F32CC27ED8F2ED82F14C8BF1F86D2D527BC22D89D97BC36B
465CCFD611E82E77CC568D2B49D322065A38DE21B4257239CBCB69B421046E54
B38CD1A634C68C24416CA74628D6AE5442750B5720B1BC3CBD84F9FADD0ED082
F6636A5C80933A42F5BB5D29A0F51AA5F9577995E85C8FBCD57E682BD303829E
21368006EBDA476C3B64AA1476285EE1C80F483062CF344E1F0EA48E67FFD929
88B39D380C064DA186E5F56AD56A2704176A0F9AC4DB4C42B545F9B00966F25C
D87C61B17F549903770983A52D42894FD62C724E57AB48B575192B419DD2B341
F58050644D734A8E4CDF511CF1C90E7B400FD1D2048FE022E0AA6276A07AE907
D1E2A5575F0F806D86F9FFC3FBE71F3C5EF27F5AC1EC4A2D302CAC3651E3CB99
4FF19D91D1D3542A4242C8B9A3C19D04C87A609C64F2000DFF3D024DB73EE940
A791628D4A730805530EF9D2C9D0600C08F3A401646E6A07D6DAB05215AB45D0
608D82A31A6B59E602659A5AFED45F6806A85A20796EA76B85DE9FB837091EB3
711218C82B1BA5CA8D11D853F496AE96603E2DA22F1F93D64A54B4FA9DCCCC3B
BCD1A7CE8508793F44274D52C0CF810F00BC190B535DE77860C3EB647A839581
494CC9A9E69F811E94CE20082485E34475617342B802E87970ED7C1256363D63
3A31434A47B703933CF3CC4407B8E04981C917221F4D12CD3761D1A7E388599C
A28B1E0104E9A25CC1D0B4F09F6A5345B0E51E87C05248C08C2857EC57F206BC
4F94F06A0604E639ECD5693E5AB6EA90E4BC37CB61E8BFC25CD2CED1080991A2
703B4ACA2BAAA9466C021EBCEF1ECC377A5F766B6745CE0E190567D2D9624493
86DE6D154472D39A9BA9EE3DDD40052001A79ECE8CDE623C95FA652496CEE3DA
8BED3FB5AA77A02BA966BEAC2C7872D8531629BC57920E08FE73AC8A11E7862F
4C6A1BF6BC25EB84A7B273D89CD2947B3467E425984A7CCCA27007110D74BBA4
A0A7FF459D16004D93FC3CB65D0BB28000D3FABF7C74A2250D2E9D894971BD12
674AC0489A3DFD7BD57339E732936C97D5F0818FEA9DBBEE11E8D7FF4A566A5E
CA928BEDD056CFCA027ACEACB07FC70909A5CEB6DE88D1252C41D521E34DD165
098BFB04A514907C95C195CC4CF9B850E9D52ED41976A3D0BC11CE66575653FE
984295E1E9B8EBFAB1D052EB6FF7AEBFB6D4FC0EA682DB881C21ABF716C729EA
64B0F9B8F53930CEDA5E17F91084E324F8AA80F5DEE85982CEC64BFD7A212789
4B6143EFCBC77E35FDFDC34C6477EE89CCC2EAA4FB257F98143DED3B6F14EC73
D49F25B873AB9C9C874939403B11D8BDC10E8982E80860BEDDABA9AC350532B6
CE444CEE69C3263590B868624A5810A165EA833CA35C187AC72133D7B88E3708
8936024D49959B4E73D8F7F7FC87FF2A0082BC95A0FF44814B1B635CD8F6C8CE
8A183E2CED7A0C849B97F0BBA75E3E57A89DED9AC194E665008CB2DA39427EF4
0D629049F67CC0CB6EC37F49CCC9F3DFAC04345AF87A1484668D0F557E8B9B66
A08BBA628E32E6A697CDFD0BDB07E27FB1801FE39A76FEAD33213D5FD10FA063
1368A46AAD5C86435A294B7C873808677DEFB24987F4D11B86F0338970734B19
D6DDAFCE9C83F7B0E3712F8ABC3BDFFDEBF49A3F4DEE3573EE14EE62081EA935
6493D0469767551953839D32B6A96E14F45DCEF717E3F87716B80392076A00CC
11561401E1BE6A0FEE619194A902FBFF5B23CB4AB533F8B1A1FC4F45424EFCC6
A84CDE66734903BA7469BBA18719B43664CC34DA024306B01492E06C672BF4E6
4E11D76775CFE1EA2F4925710F9247543761C83A6BB16276F6B6CE930C53FE01
78D81AA84105D7874657240C32FBA02586A116E6D563778CDF02953E97D75AB6
8945DB92D41ABE1F2B86DA2F5C2FCAE9E78B48240F682A76C4B5D9A968F6C581
5BCFFA50950E4D2EB803BE18D14B589627C4B23EB78A1E39C453170367F2859B
F73E4184137FCD47FCF680DC2BA9941C289495FDB916C7479101CBC0FC7C18B2
1ACCC7C474D6AB18864EB148DAF96F534E84E01AAA42A356176D9CC2C7250F2F
C81BDE47000C5358E9D95D4A4B953B06E2A02D8FD354726B1847B6A67424863E
AF6922DC6A6561C702070D09F3A1A53986CEAEA7CE15CC4EDC4C7AF5AA3E5E66
E03A0DCF68B3BD1C29C3AB6ECBCD0748CEF3A49B55078ED096885C5E2F3A88BE
D97B02F178ABF9BE79F228D4424B3AA45111C267174A38859812843C5CA515A9
72D8441236DA704C48FAFB075063CCD054B1E818F964AEC1B1DF65BF9ED3726E
5C9A8CAD1FDD41266E0C3C7C0B517977FF8DF6EC92B51FFA546C73A4C3D6403F
B05D622AB987EB7432DD974DE28329333A0D64D1502793434D9BE7B8615C3B24
D0178ABA3A77FD06FC0EE3C173E6FC496FF2C69850CDDB7A4D9F24163D56D135
4D66A709DBACAFC0A5846D408E37142B44713165096D9AFDC54A1156A1997882
F6059E7B4148F76CCDA797BF0142FA3890CE4C3A87928F37C417F3C01CB23FF9
6BAD0271AF298CB4ED3CA963CBCA85ADA2D72EB667BB7FFB53B0A288D38CE0C1
EF4ED80FC878FD81999F7DE5BCBEAA09BEA9B81442AA1C4A130A1466385A0FAD
E09D700117A9DF000D8D6A8211513617AA8FCD8B422EF2256E9E81E9DD4E391E
359632FE401154AEA679AE423D26BE595828275B29666E12D2504CB81713CC51
7E47FC26BC17662F398E6C46FEE07CEEF52201B87D7BCFB9D910C19340FA5748
D9C7FBD669265CA5C6CA21763768AA96A57EDC28A5455E2C37AF162CC2F50C0B
1680C6883C4F74B047505BE9A48CF0C2A828061EB50A50E3781D724EFBF0AE5E
8D8B9118DEC892C04CA3C1E09497F3260C205883198F4367D07BD057A553E515
2475C849FA4C1D9A9E2A89D1CCEBA01482F3F9BB87D1B0E701A4A7BE146A1849
5E293973D9F276BB106CDFBA43FB2E37404DFFFA54EAD7962DEDF3D8F7262C6C
50DE28E04C663D092046E311A67622B960D171A6BD3B144C2942E7425D98BFE4
FF656ECE85499B9C0C4D01AF209462611EBC0192B68190A319D624D2CE06F82C
84330DF86C7EFE091283C0A1F987AA684594780E26020C6C83F495F4DCB07568
FD2ECECBCB60FF73223848DE907A3E7BF9C1995BC2879F326415E1D415521D5F
08E97A70B9F318BC8EF390EFEFFEFC9FD35322873ADC2D01929CBB31A6607B68
24711A114B68C6055F6B9FBBF2BE1F375234ADDDF0E2D673B36A67F44C986FC7
D313F05071D61E621D00A96969FD774146BCC9EACE56F0117120EE22AA35FEB9
5E5BBEA65EA9921E8FCE0E032B78EFB5475FA1868DB575ECD79F88FD23676270
51548AD88634DF42F5D28C1C7F9FD55846EDA7592AC86BF122CDD4FB7E193633
93B5D5776880F2FB93124682E070B04721734FD35CAC9541539FDAC94C1D3DDA
38A1F00F64AF32290015D8BE46DD71DF5C148937A01B407CCDF868DEB499A1D2
D3F4EE3C4CF4477F4F75A3FB09F0D0DF2CDBD8D94E7D9FEA4389B9907A596F7C
77F4281EA292D4AB5603E842E2769A50CFC936DA8D41B1A55FAC65D69196C31C
711A6F8DBE96356791CB867371509AD3ACD631D12688BF3D8C8EBE7C0B1AB58E
A1A3E2FF72EC83D6EE04D62B2570E70B3AD5F25228D9942598F7896BAD944218
A77B8C208911FD18217782B16CF187C3EBD59D704823E2CE5B28D1B3B98F94B1
820BBFF57096C9761195A83D274277825CE7EC66C56CDBF840AD471870F30C56
95DCA5386331B2485637528E492EB675740F8CC21E653820179B12732BBEEEE1
0644183FF9F476FCF1C213A87A82F364106574B7A7E8478BB4CC0E137770CE02
5895ABE85BD60ED26818F1622CD15CF4EE96916C9F20CAE6D0ED4EE10F545A88
0FC7018995566473554C9539B5776CD2E07917910731AD71735CD04D6F6F0D0B
FC29B50FC0B00E07F4BB1B26B723F8DBDE7D832D1727129466308FC2B92D5A75
A0C9E0DEA745A4B99992683274D0B465F698DA4591C877759FD7717C0CC3B0F0
B7166AE095C1272DD5872FD6BF812F680C155B03A9FE446CD5B744AD245A23F5
524A35C667B9AA882DB5E99CB55F1529B20999547F62CC64CF522C4AB48B9F97
5114B3B8A47BC0EE7ECC9EF9F4FF4033F2BF2123E3D925751B7E471766F06FF9
290342293AAC5873C0676A5EF5C7A948B91FE8E7A78AA2A601D33AD47BAF9A53
4C9C6FDCEE6C7A2436D445DA1719F9DC7E23DC0B6AB05171F39F13FA76D5D96A
76C97CF5C6F8D52E58D6EDAB3C54E4B4073DF5A1812429134E908148EA7FE3AB
3BD360BE6E6DBBAE35762BEF606B8B88042E418F75928CC13ABFACDBD57A6FD3
275358FF83651E175DA701E60F3A332789A598FE06AE511A3DBA0ACDB76BE6A6
08D653DB4219BBC5C7A0BF18E02E8D78BFC6170276557F2F2493B9AD52F35F7B
61DFF1CF3B0EA44D27E2CEF1CE569A20925837A39E67E7032D141D08AC8D5BE3
7A68CEA7DA527C5E0B4FC47A004BAF501D27E64CBC0982E1E50AF44753B242A0
C3925F801AF58ABF57DBEF780A1C8A6B5BDD3B3230EDACACAB604AAB3E6D4B2D
561C98B7D64FAC4F57A91DD9C1A968BB601880A5A655196CE55EFB137A0633CE
411638972D8E0DA0152E58958A5D22B265E3A8E20EBD5613CE59E8982367FD5B
BDD0455FEA3430BB9102A6E33866661920C4106EA83DA11B6C87C6151726B8D9
54F20C936B7D9A5A708B7DFECBBE492B26AAD90388ADFFA58BB213B563DEE0D1
E77C0BCFCE896A86E0970C47C9C179BE06D4163975C6E1938D012254F5858AC1
A08A1030A70ED5D9BA893DC8937A076C2B92578B67CC414790803AB2970E83EC
373F355A548FC8764BF6AC7C2364BFA8D66EAC47786A2A80F49F022B1697010F
F18D77B6F59BF67830B2DEC0DE5145155E8A690296B6D5CEE16A2375BF47923F
6BD18CBA0AA10C009C0019FFEFF47EAD0A3E05FCD0160EE79228E2A1F4DAC34A
9BB2C8594D3AD66991C92E87290AE1DFC3534030920B2D91C7D7172BB4DF4EEC
DF84322ACB8FC7037213941CD84EC04C7CCBE86CE9BCA14D150395BBD72B0613
20E19EEE0BD29A2D2D7B819379FCB60107DE674A59D245B655D36FA8A1BEA79D
1AC5F2582E368DE3914551CCEF98BE9B0A390A4D251205A3C81987B17DCD80FD
825122F4FDC4B4E5EE9D32888F75ADC31E4F45D69F4CBBFEC3ED1681A801A55A
28E2A04C62F52AC16BA8E73A651383E1F81AF2EE645015951449DC0AC049E8F4
87BF51DB3A2347E3CCE16934137A89DBB5956251D75402F22C05D9E2345A02C8
89072BB1E719CBB583F7293CCEE6A619DD36F0D7BDF0A258BDA8FAEA8CB0D942
F9DC930BC0F24779F21B72A09DA9A3D5D8C635946BF672A7302AC3C175F7254C
B4F3FEC944D557214861050837450357B715A44A10E21DD4BE9AEE3F69A2F336
9BC2482A5418F759ED7D50CBC76B75CEB55CE6A0191BE74532C755DB61BB64A0
7A1C3EF440475EF58EC55A66E6186D2FEA9DA938B8DAA198302C6ED646303BE8
FF46713E52B739F5E986D35AEA7CB270679F26FD5DE9943B526BC12BB7B8F479
BC7A60C69EB71BEBF874645C5EE11F9FE80381F5677BD648DDE9841E156C63B2
02277BAC6E2BE7D667C923EFBC618742D9879F53F7DEB180BCD1EF0470B2ACA2
A35ADBDD6AE2C7578278A5477FCCD0ECA5EBE7C35670C89D763212C0AC388CFD
C421A7CF53488635FD08F347B8400DC17C82C7ADDB9896FFAB5998B119524924
AFD59B96C662D54C81FD1AEDBC8C8B92DF74FF5EAC6F8ACBCD5DDE2CD253F962
FADF9F7515BD0691C62AAC4D7D0BAA49C22B8B4F91C68A740D2D071B4BDD698B
133D7BBFD1AB734C017BC05C5886C4184FE1ACF95A28F97BF7BB11C14F583F2B
72B08B766C6A8A13C7A434C6C889F1BBBADE04721AF3CC3D04E298DAD8E2C20D
9E8B7E2014C37CA1A59ED1E50C286A19940017EC3FD485F3462EC9644EF6D64F
17C2F8C2BA5DBD813436BBF09A4C859AB0E5EA9C1F1081D379D7FB9B0B1129BA
13F75951158CAC43B0CB0FF04AC6B0F5350BAF95F83C6D2B36617D64F6A59DFC
BBC988BC76D4625F29766EEE976EE7ACF14E3F5EB141E092B29698FDD1F80511
8A7B63EE17A700779161745A75068183C6FCBE00A4F6DEBAA297270319C0B536
50EA537EF5C3A76503628B9C6617DEBC0E1AA636A055EF14D317FA1CFAECB69A
ADCC69F853B6138703602547C3F4A73552CD0F582EF585FA58377C5E094540F6
AFC8B06D6EEC1063FFBD160950F6DB3D929A60327372177DE2E33F09BF20FEAB
EA801D7306368C011F4D77B9B6BA2D85170333AC7D925768AFA7E0E80ED69FA2
7BEF1DB195DF8C304E725A48FC23B9596E114259F995CDEC0D2BBB9BE78D905A
841E1C1357A10E8AD052E2E010146CB5FA018A7CDE2E9C891E5E5A06D1607CB9
AC71B4D04CF00A107C4886550D7049B06B39CEAFB6F9248D6E1D4489289E8152
90381463C48F86ECAA2ABEF2D5DFC214CF9F787FDAB9365F736614AD92F01194
68853C0884C3F2C2638F50C86DFD3D128DA196E351A07AFD9E8EB99748E7D213
CD83E522359CCE2CBF2E7F71EBDD39C32B26C0670E7603ACA18CD14FD71402EB
35028B31B84099F8818187A5950E0A568774ABAE943295B3A6631D218DD96348
CE40CADEF7D4BF4E4E83E9B8AAFECF0396E9ABBFB1ED2F719AB9CEC396345E52
55CEFF1954A1FF65B8807679F344E0B88D80B8D78EEF9EC6AAAFAB7840A16A35
C4D9B26D709951694839BB32799D0FEA231B00DF5B0D0FB1E121CFEE52B8316E
AAFD48E2568377D3C384406A84EEB75A1A8F1A297E9DA5DB6875464D6EEE29D1
C95ACC05C55B6413AFD62B4F32220F1B21972CE96B85A3512E27FE4166C38B7D
DA88E236CA69164AC1ECCB2982D930A963DEAD5D22ED2CDB00903680A0E23A2C
B4190B5BAFEED950778C01208AB6F7FE7AC73CCCFCBDDD7774C688C83BB0F9D5
8C7AF3094DF38C3ABE945886DB040360F3617AA9E2E637D3F6B7E11BFEC9D182
596A950D857556EE412C33A2B5DEE0296473EBC3A5A22CCB834F2496C3666A13
A68882E699016A4DFBE5AA7D89093D8D6F23F5C50C7E3C9E0F24E3C2984CEAA3
F5187AA322CECD90BA2B19AB62D75B5B858921EC801F49E9F09CA8FC8AE2F5D2
E2384D5EA2FDBD024C3D6EB5B3685902D2E798F9B2856051DF5DD2358AF729AA
2A2BBFA7B0F68101E3A69FDE9DE3AD6A1FB09B9B2CAEEDD2F7616CF5AEDAD49E
BA02BE7AEDA054CD4A32A18C5F7B42D2CCF18A838536F3FE0CEE17AFAA220E48
243C87A4243DA4028C251162CE680A5BC4CBCC8B80947EB0EE7749C922BEB97E
01433C934CDBCC43BCA3F3E9BB6B771D10B5666EB0F2BB3D3CF7DC437813AD77
9E29608167D892DA454AD15D1DF08903A221E1FD9B9522930F9889A10B3EC71B
61CF29D41F9FB5338FAA0D71F8161FCFDB2BE3384094EF696E73347CC3336F1C
7DF5B0822BC133E201BDF9463E1BB098E142D11BEEC69D0991630A8435CAA76C
1A6B16C2E3483C6915D2BAD14E541FDA2C03DE2C7285AED6420DDCDC3BF57164
70A79BBC2C3C28E377C216C28FDF963828796943852A96472148DAB4601462D5
E4C2CF8C641EE17105AB0688C6099191A1A1147C794E7899FAC520ED32C3B396
A3BD7251FD50A701170FCE601FBC0B08843E0BC5B5399C62190EE72A751A2A23
1C7816C95C66E4B7C85A053683C898616023AA1830A4872889C0CEBC1A1AA31B
3CFA112EA89DB1A5444DBD6465AD69F3E231D1BB00134531B6AD363612001817
185E95A7C75F20A1089D1EFAD7BE9460ECCFB206BD8256DCC4494C076A2A46C3
08B15A58DAA51C3A8E876CBBA953E16A8558B8C4850F32C5817C8967FB90B0C3
891A934D882DD769A399622A6EE0F4AED058C50217147F37FA77D390A0ADFFFB
A51E499C40A279D447570A167BE65FC22382AECAC94A59E0ADF688915B7F6D94
10ACD7E07EED37396599CCEC30B50632E88742A2D37A517886C01D0D6E551A6C
BFF1CD7CD256E2577FE988887B638FD046DE70ECC68C1DE8686F367C05B7DD04
4E917186B3AFB8D7F9AACF2CC66F3244B7C3DB3492ED4D3E0D8283A1A1DCC71D
CFFF624E0358AD213B0E40B5CFE6E24B089A976F98EE22D3CDB4C203F0775E27
9BC3B0D28AB8B2A93F481037964BBCDE241983B0D56BDCA9CEB146DC8ED4A281
47C584351C7312A758917F06EE76CFF1063E50BE98DFE1FE1ED34594E64A5F5F
8934D9352727DE5973BDFD4B0EC4B5A6D5DB3CC872186ECA3D2F062637B25AEF
0ECDF6D93AA6FBCA73EFF9E32E17BE40F6C78747E232DF459777340D76C4F7F2
F325F764F6DFDE622AAE00CFE404BC6687B7E22B3D310695974667E49904EB34
99AC0AFC3B96388256108F0B6A9A8086548A8FD6D2981896E78B61B266F833FA
FC4460565544D292828B169FC3DDA0BE0C05C80DDCD0E6CBEA92B16127045319
0F40888869E37C901B613E57C772DE044DBD4B9240FB3F4296DFF77444F752EA
9759D337AE7D8CEE274AE7842BD8077F90731D9C01BA092A097C01DBFF818A21
BB7A2850BD2666196CEAE260161EC66D6D320CC01B75991F9B803766200E577D
4DED551FE7A5E859B39CCCEEB40C5EC660BAA4F79106A9C3B609D77B3FE6CFCC
959848E59BE21F5627C3F61B59106D35F59E74D4655B416E3275F986B160C5F7
ABB5727BDF18AE5B79AC712B2DF0C17071143F517D19EEE85CB885D9CDC33C28
FDDF8B5504CF11230D81352FB53AE43025DD7225AF12A675565CF5D7C8D51409
5FE448725AF2711D947F7BBFDA41AF96DF3B2EF018757B304995237B416ADCD6
A9A658BC1DF79686E36BC0F9CCD95C8E37926B0720FC0F4B2AC51205B34B06DC
47BCCEC2F786C497A350C319D730DD308A23BAEB2F0F94CACE90801D5FBF011B
53CB86D76AE4E73B463FFE7F67B7B94666906CB15B33BFF3F762ABAB1EE6D374
1056B0E06AF589893E2D3E408A7A7DC7D39682CE29863B83886F115E57BCF79A
3120411A8A6AEC8B2A79F39E74420AEA3FA457A2BE67A4FD5E904CCAD9D8D103
53655C34FC4FC1205442E4C5F08802111FF320EBF19BD57BACDA4980F86FC2DE
D5B483A4DB3B3332ECB4A535941AA2EEE9885DBCFD9EAC460F8DD3E99033081F
EE7F85E61AEB6C09615AE4F18821EFC3824480793BF893C527351E30F8E70555
A86D70FCCD46CD6181C424FC04F1EA911595464747883CBB183FEF6DEB6554A7
C3FE5B9AF8D6A281B1F6B9E2B56397739B2B395C1E0F24AA5DB7C42DF625C108
517190C239125D1FE8AF1E4E777C31D89EFBCE7C280BF79FCE3F6461B27E1D61
F2710935B61CAC1810F2A3F873B61D70DD83A4C617842F3217030BAB2E5EA841
2EBB6E466454288DC682025F40F7EC7CFB3A1D61E829E286E880669A9DC8288A
A430D2FE2A3912758067DCAC095B0F2D969FF03087C4764D41F802259719E9F3
A9A8B7AE4A3BFF8B9F68A1DFF453561AEE80194838AB37CD4B5F4481CE3EE324
7AC1BEA28627DCFE5363DCE4D063C3EC8CE8FD494D7A5D14DD80F3D202268F1B
B6D33F53D813C9134E91EE7725531D2DE70E8BA36516AD2046B28306A825D784
13B3F52F4A712162008A72B448DB82078C4785F78338365CB765E456D085F392
DAF9FDA1E06CC16587009F5BA0CEC0EE537C638144335385D058686EBADE4B4D
44ACC8CA774C5175D5C453917AAD27D93969EC500D374869C3D4DAC6D568A470
72D26960AD6499BD3F97B7A08BB1A14514BD26F04292A0981DA4911C2156D243
29D105F12820F6923166F3E89349B07109B27B0B383BD3C46D60902E0734DCEB
53061F89190C556FBE68ACA6164D43E2C27AA925C994A5D8FC8184BDFA68FF15
6ACCF7466729AAF34D9F9E467F3694641AF0E02E2338FB188489D1FE79E6B8C1
A4F0AB2397158728B251E084C406C08C3CFBC312A3F649753D7E8116870A45D3
968C3563EB21A2B34EB4DFC3D2A17907A39FD862702190EEFC4A2AC6D184987E
87BBA5CFA10F97A46FB61A6285C3A33C13EC93A955B7A9755D1A410090E56588
7AEB1452E1076B4EA836BAC87CB36F5B2BC6149D5B3925C56A2EC1D4248188C0
B1737DD88AF0E5CF883580C5234AA4A945AAE7B37B80EBDD6AE6DB7D54F3BDF4
0A4415B1973D4B3BEA9FD601A8A2CC65D7F2FB221A109765FD8429E101100979
DA64FC328949B97B181005B8F7B7F3165E55BA7988BF49CCF9147280AA04BA67
DDD7C758A49C41181A1A400B59C0E344FBC2DA15191B8E0AE2B72E768591760C
DFA51F3E26B097666CDE324648BEAF566A3AB875C0324F2D45011B209938DA24
63A429EC48057A75922E35D27CA312121F07F4876FF61B237B2F8667F904FA72
495C9A3744E561EACD36096FA2A5976F7CA68657BFEE04EDC5A727FFCE0E25E1
C10314D6B722DF92A1A3391CAA41C4513D1FACB5D2E014CAB138516129F610F2
A7801B0F1C045BACB0CEB98B373C0D493FA97BA6508F3B54B5E7CD1E9D8E712A
1A37D342B4BFA4D1EB239CA08B7C99D274B0B8986751017434A30D4D4006EFF6
8E5E6CD52290B77F9838B5798D2FEC56D628EC6F5BAE189EB3B46D542783B8C1
4EA00691C65C3125953EDA96B77501F4BE471FB72DC6764850FF0DA8CCE4E470
434D80D6E7ACC4FAB5D2A03AC06484DD825DED61B76C0ACF08A4D3237A8241B4
8115660273DE657993DCD00FF6FD78F5F19BC72C2F9BF7BF6C35644E3B42B6A8
51D24E9918F20D180D4989E5A21143106CA2A3A3E821529BE9EF6F82D1FAC4BA
FA2691893D3F39D16A0072AD1D6FDFD39ABAF600BE88E5C88196B287099F8DAD
35547CF5934566D8B8B0595E83343E9CFE0A4C0988EC26823C20BEE6A3F501EC
28C9374B3D3D036003163ED4988F9252F0BEE0756E32BF9697C787F0AA11CADA
17B745D05D02186D298F0FBE54AEF9859C74D092A55484D5E3C5819D871ECDAA
94EAC1EB5181FA88D70EE77D7A85653F10D5E893B4757A4782F362A850FC57A8
FBFF0FE018495B9C95C91E08C51CA14805D88FEDE9EAD7ED86D71B3C16C9A72A
6CFB0621546B177AA6A95BB8C0C7476DF1EF86533BC4DBA970676443AA31445E
2A9F46179241CEB81EF5C5135F63FFA28F0C3F4630CC089BDCEF6AD45A9A03F0
F9A8359766EF5B5F6D54C5C498846197FE8DB70E7E4D77E5003AE92509FFDC4A
0A5B1D11794534610C00D4D117930816D38B29B1991C463AEF18196C3EFE38B5
27861BAE7ECB5A7AA767848ADACD353E02897C0B61E417D9E48825FB810ADD97
837044528D53A5B2D9883F0A4097B5E667693594A70E0391B232A13BC7C58CAE
5643ECD8ADF3F8C5CF446757528A27F5B73D80AB9D2A9447D7E7DF751FBF7C16
1BE263FE0DDDF302E01CBEB90FB77DABC615E235083646F26DFCF47766BBF2C9
D27C5353CA234D77DC85BDD4E5475BC06F1BD701F9443961A27D6294B894F769
8FD681C533BD0D62CA040362620D67EC15B21E0FE37E4905984B126068A6885A
27C6467681442864FF7E86622FCD6A10A6128081A530D752D851085A53462061
9C83121EFC11D93A6AD6C1AF0EB2D7A40EBE9D64CA5092ACCC560CC13FBF84F4
1B79756B7CBD2A738F042A3313566C310197519EC0FFC56719DF745745C00646
E69A57041FB50454342EE00FCEF8FEDBB97012125375B2A06BC09A96F2197EC1
0737AD9D9FAC9700D9028D0619522F430148BCEE9351D338A07427DE9C0396A2
4338F2BF9C0E23995340E3722C0807BF78777E7E2D23818F24766C90D5C9E1A1
DBF1DB48156A3EA1D67C16B1756F68B55E5142E6BE7C8F8ABCCD54DBC52B305C
75CB682FED9E2A4E05E1943CF07737A2B017FF030609BA7EB17A7F700725CA30
D3817A4F2FE2AFDF075CE43A59029287870495435DC7DD09204C5C68F61E8EFD
57D344230265BA9EEE47E167677526A2511E5FDF4DA2620D864BC99E207DBBFB
22F1ED924CC66716647725E98AE8E677E639EBDAE2DE5B19CF373C8897810C44
9E414C2494526BC24F2C2B38A730508E7513210E60A5980FE774612952C6CABF
3E87A4518E1730088DA252463DB7A2A0B3145078C9B31BB1DA5407F24791A64E
9AA6B7CF3815C8E18F4166912DB0C78DDA5A32FAE446DD3CA73CFDD0D6AF6D18
3FC172D5BE70E34A61EA44D78749C36E68C16BC9AC80C9A920C9CC0CC7BFDDE6
2CB49DFDA07899D4C7C6D12CD894F82F2F70BCEE8F422D80E1FF8C4EFCF6B084
87EE8E13D45213C78E9E53DE88AE68E9CFDEA6A54F0EE596CAC7B781093B2AFE
D3723BFAE9CFE72FD3A7D258964F9E56E77E82B31070F24B58858927F2AA4B0B
2EB19F4FF3A06FDE402353F5B02832079EB02439E5250A338B153DBAB40193A7
A42175385160778AFE78AE3979F2C300CE23613C2357DFFE2F857FC9DF142D1E
71177D233D6F96151EF26F6C1FE64E9ABCF737E7ECB2FB0B5B59129C1A08E4D7
AD11016892336A51B2FB0FBFF3A4ADC17474D521DB281564ADE49284DBCE81B0
DF84B1549BB08F8F9E935D594C2D4BC88572812AC32840C5C62CD3F477B9A4F4
4A71D7425A98713CF80487FC54FCF31F7548C2C16C5A9BEC4DAE164004BD4FAF
E669019B0BE9324FA7F86688AC86079D0CF9349671235FF53897B3E9D9BF1315
22A22AAD90BB1D1AACD669E1F92E5FB5873F10DE755B7140B1959DB252184871
3FF7159AA5F2FE48BBDC94238420C379B62B0E60D33CA4BD8EDE9D9A93DAF70D
F508AEA90DFBDAD0A53ED0686EFF99E02858AFE152422B51B3028D94171A36BF
78308AC2477CE37730C7F7788CF75408C630705C425A3121BA0B5555ED6308B8
5DB620DC0A941EC69D0AD15C9FA26C59E429565C833E84FAECFE88A540068E02
9029215F575DEFF7A46B5B856C874108881788678F63996FA77CCD93C7EC0011
F9EF963120B2A92C1DB23507E2EEA9DCFBF439395BDBDBF4207AB2CC54469200
CF874E49B7375816D6C67F9BC9F6CC34D922C6B9193F885A3C3F3311BB9F7DD1
7DB3B2765228B2E54F8CC5019D8ED327FCE73F07EAA71B5056FBC9FEA0B7EA68
0C4AA28823738BB4632AABECFC87326BB294F978E20A4CC9BB56889C36B62844
8CA7B61AC3DE3137A42A83A1BE5924CDE7E045E825B72B2B2A2DD53B00829656
448FDD32B4A8C6E5C7659B8CAE79B61B04625A3B1DC69ABF73DE3A68B1F3B235
AAB129E9F0F4F7247DF3582C21765C9AEC4073D209F3E3F76BC6F7B0120122E2
50CC16737248EF7D0CBA705EDE8C9B2439BF81359987FD9E5DF63B7DF6249F09
BF4C2D193B8192514C89B25D0C7834F8036FED7A80698CE3844B6211AA55943A
872E45A0FB78DF01A1DF90D355BECE689B3B65E66FCCEC8721D2AB9385C7A9D8
5EA2652B8F392C80E3478813B552800843FD53E9371073093CFDF13A13716EA6
CEE99434865B9B2447F4896D0BFAF2F84D27387DAB0A1A35CEBCE31AC2B6D85E
D24FBCB3151E8D6A32B5C93D64F8E310702CC6879CABE9AA844ACC7E7EF83A11
E382A5AEF5C260CFE092A1053A1D35E83DC1829536999E0E7A79AAC0A1DDA60E
D66F008FDB692B51405A4A51196C8FB2D82F4825588C40DD8859B331A6767CCA
11A0F9D238F36ECFB91E2872B415782BF21DACF7E9ED4CCCEA9E
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMR10
%!PS-AdobeFont-1.0: CMR10 003.002
%%Title: CMR10
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMR10.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMR10 known{/CMR10 findfont dup/UniqueID known{dup
/UniqueID get 5000793 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMR10 def
/FontBBox {-40 -250 1009 750 }readonly def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMR10.) readonly def
/FullName (CMR10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 48 /zero put
dup 50 /two put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3DD325E55798292D7BD972BD75FA
0E079529AF9C82DF72F64195C9C210DCE34528F540DA1FFD7BEBB9B40787BA93
51BBFB7CFC5F9152D1E5BB0AD8D016C6CFA4EB41B3C51D091C2D5440E67CFD71
7C56816B03B901BF4A25A07175380E50A213F877C44778B3C5AADBCC86D6E551
E6AF364B0BFCAAD22D8D558C5C81A7D425A1629DD5182206742D1D082A12F078
0FD4F5F6D3129FCFFF1F4A912B0A7DEC8D33A57B5AE0328EF9D57ADDAC543273
C01924195A181D03F5054A93B71E5065F8D92FE23794D2DB9B8591E5F01442D8
569672CF86B91C3F79C5DDC97C190EE0082814A5B5A2A5E77C790F087E729079
24A5AC880DDED58334DD5E8DC6A0B2BD4F04B17334A74BF8FF5D88B7B678A04A
2255C050CB39A389106B0C672A1912AFA86A49EFD02E61E6509E50EE35E67944
8FC63D91C3D2794B49A0C2993832BC4CDC8F7BD7575AD61BCDF42E2E421AA93E
3FF9E4FAD980256D8B377043A07FC75D6169338028692CCA8CD1FE92FD60AD26
D57B7519B80A8F8DCE9CEE5CDF720AF268D3C14099498A843D76E3B6C0328F24
D36EFE7F5C4E5B5C612786200C8DE3A41EE5F1FFAF4097653CFCDC8F4FD32E0B
03EDB3E413283B9EFB0AC33B055617005BC9B0057FD68C52D1B0E67F0C571685
767F2AA85ADE4E0104A1C777733D5E318A22A9944336E5B98D965E50D31F357A
8B6EA5A0EA98E1B027CE68C2EDB149EDDD04ED74A1B3D206D471A0C11C11449B
DE190BBFEBC08C9E1B7513B43DA3134D6B11A2516E6E86B67F68C970A320D05E
94FEC57FB347606DF89989C33482BD09D011C55AA920319E7B26A205D3D0F004
22466F09C0482A164CFB27EF6ED2B040ECCC3DCAF345B5A73676F193D43123B7
72FD6CFC5E37930E61EBD5A6307E4DE70194E6384EC0D79DB6AD86D3B319A31C
8B0589D0FE28241D8ACE280D0530EE99C80723E560BB72AE9D53F4713181F491
344B06D3027BA4E9E94D4305BE1D817197C54C8FF56CD6964165F6448ECC8A8A
64B48B4F0FD69299A137589E2491A283509B21A3A5772F75B7602A9F60AE559B
07A58436D04222C73EAEA72DE9A5A441F88D27C11F4F91255EFE280E91A4ACAC
1E98A4E5E6C57B9AE86FD218C3CD8F24A4104156A80F13821384E529783C52C8
78B94AB3A0096090867ED32E8A30980E737922037F75F062BD83BF4F5929BC51
CC22AEE2DBBAAA001CFFBFF41D258424FAD888FFF1BEAB796A44E3126159E120
7E4025C676CF94888A1971AEF8B6764B3AF4A92D36FAF6FC56FD049710EE3782
BC2CD84FE2473F133BE03C1346B875463F126DCAB15C7A9BCC9A727D23611462
4E8D2BFD2466600285D79518712B8681ABCD69608E6AA9578F7BD771EC36E01A
5A17BC17E375020ECA59B43790ABEB9DF5F4FBBEF807E5699EFEAC563E1ACC5D
EFA336E75DE6D8248E9381BB110884FDC89C2F9A41EBBC9A8A1F98E6A41F68BE
EE30E25CA148C1EFF42DFF8C214A6537AB11F260B8C329A4947B5FC8DC9C5622
4DF7BF4FBFB00380D47BABB03BC30627AA74103E553F55278F538EDD8C1E64CE
0F1398CA0AB5A86630139B4A7E8FC02804CAFF3830114640AE50D2FDA3B561B5
C63AD7EE3347804CBB40FB1E77A6C89735DD870351C3A1811591AB493251B904
314F65791963C0412377C1D02362C5E9655F1C3D4803CD379A8EF24C48218C2E
DF1165840462BF37DDE1B8D5FF09FA2C3B261E2F1A65ECFBE5D4EAD43B52C029
EEB3948CB8A252CBAF545C8FA1C31E920E23A12DD7222CEF2D2A513BD758EA13
DA33BF5FBF1D734653EB83DA2D374A5B9A0CE316F24EE375D6DF6BDA49954C2E
DB25A88821193636119D469BA66E5DAA9C92520FD4F84426A4E54273FA469084
7517817A6EE3E21176D333825E88046F50B3CF6938AF9BA79A2F51398239EB91
1A2D07F7FCD948427FF62F40FF95E39FE1A1AA8451411563FD5388472251C155
69BDE9283B41900B21EB1190D06E6B13B7794FED020D2C1BDD205AE77B084BCE
EF628249398B496DE85B406FC2E1939EF00DFC84C07E26CF72EC401BAAE756E5
7F6673216E7560D1C2A723CB405EE5CA474A07F61B81F8836482F73DC9516D67
CE0CB770EAD755B6B356198B4B97EBB29C63456953270CCC8D5650C1D006E69D
38DE2DFEAB27DAD50A817F0D645D30AF5B75A7B53CBD3D2B8D87BD0A7E525AF3
22F7ADDFCE31716914C2318260C2E2B4664893921B68C5A93334A361D94A759C
0D7B146D6FD94F0442D672BDA0F6432E18F3C5DFA37ADA378D95B75F413C9ED1
BB5C606A3EC7DFB3F796F59B0478C13FD1900381EFE0BB5242D5B5D34D03AF1D
4BDC93EAF8020E26CA23C8B0E7DDEBBC6762A557067A4CE05A524188A8F02E2F
3625DA38DFCF381727887F5646A3995A8A38A5FB1E5D5EBB395FDD0B7C8E71AD
B48EEDB62AB2CE99D121435EFBBFCEEA69AE9ED8238B60CC7288DE33C766CDFE
15B767B4AE2E6CE0965E77272AC9F86023DA620548CFAC85BC751C44218A29C9
849F1C2DCBDFAD895B54E51A569952ED50F82DC8A19F367E7E44643854EFD6B3
FCAEB04E55E4661C82D31E2932611748480EF61FB2FBFB0CFB940BEA81AFCD84
4C6A6332D7A600170E38A8EAFCD4F93DC153C43175434C86BC747348FAC61B76
1FEC9027C1A193E55C80F1F20B5317AA0A05AAA36AE235F6E49F06E570FEE798
84857D7552EA92EF3EFAD52DE39C2F8F43C59E3A957B7B926FC95FC4B60186DF
7F3523EE2AB74E294C8C4BCD8B4975E84849E0FBDA6C0B0F24A636DFA578B122
CF97BC5089E21E9F5298D1C9F30CB8BAFF6A3A11BB4D9A0A5CF2B18D055C44CA
4FD4D8FE1AF3630907DE7E585AA811F9CD11FB2C8FC791851D651009FA5DF20B
3C33FD2FF848A9E3F5652BD294965A332DD3F246C91B0ADA34017FF2451D1394
F9C3C95AAC6EC8062BE98E8914D51DA6A164AD13938693D446044859D03A949D
F9AC5DF4A000CDA98BB516D762CB9F6D44B5268FD0C26E88BC4A760C0F75A140
DEBDECA4F511128B7D2805872160C55236F0A0FA7637FF0D4E94AC079CD3C8A7
D03A5A56F26B0438B577C46011A10532FEBCAD14FBD6032E224F45691A726886
56F305231EB2FCDF59C8BBFCB5DBD2D093A0E84D62AC93A2312CA69295E937C4
8DBA1802B85F54B5E7E6D6216A918F911FF705D3B5CF055F1D873B96283A0B53
59344D910CD396D883F6F7836BA65FAB4393A773A8F6BC298069E5BA38210EED
49C9D920F718E3FCE692527DC7CCE6963BF744F2C91BC5952564196D60574E86
87A0FAB21F2DB2BD5A51D7FBD8FC19946D24E5A228462C4772F978E650ADCE3B
8D66B9C21279C531CA1C3A8ECE3420BB65837287A7222CC3673A2A5F8BBFDB60
C719CD073EF9A23675198462C7C87B24CC92D6AEE5C25AC63855CC3281494342
D28F3D2FDE0C183486769A4FD5B0143193D31FCB2C2A14E487BBD96D0BADBB64
D1B56021C363A795BF10E2DB448261C363A54A4AC1182B470C457AA82DF3F5D1
F4B329806141EBD53CAE309319B94133D7EBDC2D0453A905ADD207364371E178
0A95C2686E3B34C4A978BFC0EE968C39ABA00889BC5149162C2B54483D44FD3B
5CFF41F611C7E03B94945F414560E874D7CF27FFD0630890D7D7EA66CBD15448
229059E1C436BB33D69552B5367AB5D53591C4678D0C704DD3EA23F5D9E8A7AC
17D003C19E333E726FFFA2961F33C70F429085F7BFE3E2510F59B78F58B19CB4
01B48E184BAD9020FECCE3AF52048A056981DAEA02AE78197E65855DDB170616
F54278395D9EA50DC83761AE759F9CDEF9E1948E7002414FC05286ED793E6662
3347F2A9AF8917493D7305B92CF93E8E9185F70015F5594084298A6C2F9FD3C0
689F262AC9FEDC9B89577ECDE92F08D3142209FBCE7B5C0A840CC767BCA56C20
4E4E545E2BE4D21C53855CEE4CD0AB35D1A604C0FFFF77DBAE4289752276559F
A05FEE65F45ECAF44E95E23FAB6052195C7948AF0B1126482D4E02D72BF8AB03
DE0F1A632F7672AD9DDE70EDC82AA993678A82BEAD0BC2649C4707FD8509810D
364B5C6FE0E10772E95288C622C2F06C634F4DF8C7FD1432BC9310D5F24FEE3F
7AB324863D6DABAA1576E70643CA79EF4D7DF4105093D66CEE0F3B87D2164A7F
26EA05F5C4645B22D3E1BFD2219657712C168FD90DE801FB0F32759E80DEC1E1
43CEEB19FED12D757205043FC98FEC62D6A8D8B97BC083B4A0E985AF7850D6FD
8716B9957C1C35A0675BC53DF672C425C79F43FDABAEE7D63F092CF271C9A9D7
C41F40C4189510987887942E60A412B3EEC84C9A6E1AC7D54D528F5604B72C08
94B7882621A5BF1F325B92FF96B80878CC550D1AE4D8196E41CB1251856609A5
C4D3BD05A922D0D45E039D9450DEF8490A3E924E41434194910BF60BA1B08BE1
B41824345627745541A4F1703E956328F6227D11C74946B38CFB096139979E56
4E723B889B44C6D78673868C89912F8B4F0B4B485F1587A637B630F92E6072D5
7F3B44EA6FD96BBD4FC28A6C1D90805E3BE3E42A7BC9C880762966C55BC04E01
204D083AE976FAE6F37C94F27E68F8C0F28D52B17F6C0FD7C9150701FD78F8CE
B8E8DC9260E3974005EB5CA728171F482D765016C94D4ADFE4A42EF42212BC56
7E4EEEE8B0D2A7856CD4E44F55C0BAB762F92CB8D64C17022D4BF3A47C12F5E6
279FC23101FEE93753653CE8CEDC3B75C9CCB29BF1D4554C6120DE8EE750FCBB
E38B5D915206974962E320362E59B3F21B3AB1875703191043D03284D4467346
CFF2F98CEB4845B73ED8E003E0DC94251B73E13A9B51A3F1430BCF6A21EB9B7A
65E17FA411F53BE6432F1506232B8159E008FA257F884A4A01AC53BE91754D78
BF14A5B0FBFB9C31BF4908355F8A762052968DF526D118708CCB0B7CB5BEE285
6DAB6CD2E3934178E60BECB11AAB5478623CF6C50C92F8BB5D1A583609028FA7
B8A53B791BDC9EF76A124F3F7641857E4BEA0837CB36176EC9A522EA7F41B8D3
63C37D1145367BD300F17B54522A834BBB74DE12BF9EB26ACE6F24A046D58F89
4D4B7DF74875F1A0C1C9D97BE0849593D7B398EB4B00BEBC8C8D1497B6EF831A
A35380FFB7F1AFA4D888AA52C9482E8B1755CC209905F98F40D95B44D4DCBCB6
67423D1BC2F3560FF0A8B4F0CAC352A4EE2C1D946E45AAEC8A6AD40303F3382C
DF0756BFA3B1ED64C169E56ED1C760F2FF0E24DC5C9F41306EF8D2628153D30A
5DCB0791126BEFD4947D7EF08301FE015F2B0008DFFCBF9F2D4D859FD43EC7D9
C5BE237E9BF6665B7B1BEBB362F0C0C3A8D86010B9C97FA741C97C2E0513386C
9C26C235B14DD2A58BFDAC7B5F63DB4DA6D5D37D0098175A9071590E1DF66A3D
B8173A047C29D7D35557F06132CC920B5460B8AFC11D23D09A4E45D089F5EB51
963FA1A6256E359D485107FD143B2BF21FDE9DA5744BC2615E86C31C89470CF0
D06C6397D9FCCB316EA9989430240759D2C4945D941F159FC02327F34B042BAB
B5C3A47C78E8C1A6FBCD396B1A51CC4B020B8AD401841EDABACECDB482D6EC5B
72D2BFEB4556720FADD49D07307C8B22ACB7E310CA4151A85C71EEF70E8D15DE
B3B00F26E0E166C14647A65ADA228A3D1C89025BE059306565DB1B1EFC37D358
8C1EB024254AFD049BA977BD4C2C605050E17940A89D0D4C5D963E792320F5DB
3706682E03D25D9E02487247819551465092CC22B6B56E93F3AB528038FEC3F0
668F866707A19B0463BE706EC729D2EE1653AAC7E29BD25BFB3241D4792F5152
ED415B4E7FA92C2EE5A22E27E8B75542C492E56D811C192E95542A6FE0BFE5A5
69273C2ABED4300D491B92D2AECDD278404CB84B1BB1BD7AFEC858215837D118
C0E928BE7E07CFEEB51A6D21375B772B8248C994564014015232A0DA4BEA1754
3274F407FED0837A236371F1A32056240F2015B1E7F4B2CA72C6B58610A66F13
407CFFBA5E0A2893C1F572D50F51286E9133B5A84239C9493B0574E77D281D01
11D00683354A000C9700EAFBC1FD104EA19DFCB87470190E7E2CE26E3A6FD0FF
2620B87B82AC8686B6206B530F17E9348BC7D04B948348802CE53A312443DB87
4DBBA5313A6A2A8DAB8A1CC9A594FF8C299281C0A261C8CB2226B732FBEEDE40
2C6ACC74A1A61379E2E1CD5548CD908268A32FA83D8504C442EA0E183ADBF7FF
9FD09C037AB03516ECCA93FF048235BD11A25DB07F164512A079C5392AC7F889
CE96AE5C8D9580BCAFCC087C35E76EED1A671E87C12E3045E15A687134736DF8
DA984772AFD189D68571A2ED7256F1E204230E41D3D9DD876F938951714A3973
0CA9310489F8E807C1C7A4E51AEA5BC030610A5D7263FF7E0F9FDE3E5E37A362
5B919000BD94D978583B942EB79CF2BEAC33FEBC9A67272EB10865BA8FB75FD7
9D280AB59F91B96C16C982DE848D76D8FA8620DFD7C80B7DEAE7264350D6FB3A
EF04794DA3305844A7CF718F6D1A4A3AFF6826173A076A1372ABFC54ED3AC6C2
09C9287FC830556CA694E21CA5342ECA7B10C90AFC4783D841D7B1E34FA3DB7A
2B706F3E21B0FBAB23E7257962FC3BC309CEA2C7239A9D6B44CC96825115ABD2
AF9A2566D2F3382C01569FBDB94C8D664A5DA0F7DC3DD140CA77C743D7BC1420
324ECF9E4780280EB119885E96A6C619CE3C0C8E1E264E2DEB137E5DC8149786
486D65667ECF47B1A1E20E9E6E4FC8323E0BC8E61BDD3BCDFC6575C69C03E31A
EFFC290472CBBD049DE3F840AEE37A2486034240F80E75D8A79E0762377DF660
52B12EAA16D678990B11A9BFBC03C1D4FCDA9FD4FFBB3E88352438102F10B7C5
9F04C013B6575B5E948FAB58EA691984A0E54E6B9F3F505FFFEF74D06FA1CDF3
4B8A95904C8A2763AA8AF5B71D00F5DE09DC1CDF87A08B6D181453063E14C12D
B7BB3775A6E2A901636273D9EEB833EA8CF20FD83AE899E28DADE10EEEC20BD7
BD93085A4B1AC80AC1AE8280C14767F1A487BD066007A0D050317BD081131A14
6EA0898ED59E46DA7B6254BDCCBC660686E2EDA0E77A705A653733BB5C5497D0
B130359F866CF293FB6EF0C2AC5BAA2DB0DED045E2DED3A2612D078333260359
16CF0CCB272D34767EA069E0F0B0D42327A18529D72E890EDA6195C2688438ED
E9ACDBEED41E81CA8EB5E43C2B09CE266EFCA03F2D7FF57F12B06F9E54FCC6A6
546676F6FFC5B8B7D3F0982B6FF0D21D949309F0C0B175CC1D0976F8C55C6AED
6E821C39041E22D91AB30922F2B2EC2746BC7DAB484991542FBC82D87B487507
559AB466F73EE23C2D3194DC5CE4C9AE66D3164613AC5CBB3DB501B64DA7C91B
C7ED2EE9027FC0906820B35D4F2CF66C4F9CE4A884B7C07155BCA884ECA5EB3A
ABB83F84DB1F5639599DC7D3F51241AB5D95C3BCB7AB1EC90B4BC989F74FB354
04B2D7366A34D335A47B8C00C05CB423482BF6C7970A95545424A08AFF9A035B
7F83F52B65A9799CE76E303B85664B624C65E9CA58184C7BE2BB9D9C86A4DE5A
8165EE3DA2E652B5022EE7893896BABD88931DE1D538F615787645DF5ACBBA0B
A8E5B899A37321AA7D4B283AC9234978C2DD81813A1EE5DB6EC170DAC1B6EF02
94892635B498765C07A38D2E9DB0B7581B11056C28278F89B0E60998379C07EB
C0EAEDC32AA69B8B836F92A61AFD35688315B2C3F860632FC13E4BDFB63214BC
41CC6859EAB3AC3034449213CAB99FA1D216563419CD6D6CE4E1B56F33E6C654
7AA9DCB5B05FC068DF02AC32408C8010AD004F6CCA9887830927F8CBCD49CDB5
18CAC1EAFF815FF2F6F527F936948201565003022C6C7390B4E3C2B219FB4F76
9F12BD25CA7B3B61D1A2F8DFEE795D04D5428B42FB66E0C254AF7B7A10CEF7FD
E6544A8E490800362539DECEFDA209FBE1774B790CB6222E100903033A4CA73E
F0F4EB1F66741F359B651D485B87864B83A2FCCAFDCC861D7E34DD6D3E6AE7CD
6EA69488607C212ED00D993F9C24F612A61AD8C13C202E9DA91CDD15846EB4F5
FE15650CF4487A938A117EE85ACC8102EB37397718D4F17E60D3CEE08BE4BC5C
C93E8677D3A0A807DA8C72ECC71B26B24CD315BC351E053081BEADE92D2E498E
8A4CDB963B1104272310678F74491DA1572344FA5B2B920DC304A252193F1D93
5ED5268A6AC194D21A19DB87C73771A6CED0715EFF43475A0FD680DDAE896369
D59A6B8297CC9EFE00FCB9EFCA2D26256C58D6809FA22A0DC3112E7888A49945
0162B7373CCF7BB457EA8FCE8009D30DFEB19A02D18CA44689E5D8C34CC8F267
CDDA36431BC83D98704404C2E77DE570C7704166CD3DD128179D772063505904
9FC2FE5183581C921EC9198BC03CE04A0F0B2113C7B19A19D7E1DCF6AD566401
52A5010D25C836FAD8B8569DAEAE65CEF1295FF2EC1D6F82BC0428A071213C63
F9E6981B7A7D02A567FB66A67AB2E9556E6C9AE40D3CE74A353A702BB017E760
AD9AA7BD2198D8808551147686B2ACDAE4BF534FC07180E277C771BBC84A3007
94A6EA81739C1FE770576F4593A1DD7ACF15A1E166892EF94CCC6BFED98F0D54
D93AB3AE38D3F24C63EFD772D35A49E34D4359CD47A000608F799114BE5D3635
9D09FD6D5B025A7B766FFA65AEA58C77DC4ED68C27DD847573EBAD6AFB646F54
CEC76AC98678B54E6E3A103EBC0F25C44B4AE7D581455520DA75F0AA2AD71C12
CA19CC7AE1B8F62F15899242621F17260A5F8DB1B789A7340EC576E93E5592C5
03E4DA37DA7FABD00C06BE3B854DFA815E1F376539ADACED2F63269293495687
A19CF128855B9566EB6AA1B52455A825369304D7A2D66EFCE4E4562017EFC2DD
684583B0D7B2DAEB2429EDE50A4654BC39F1EFF014357292F0EDFB338F67BB46
6F76A8368D8F95C3F24AC4B3FB9BC915F32D7E36B483B05454CF05A292A26715
B43B6311D3B1BB45065FDDEC6D3C9368DAA241227BA447B5EC4683D5F7B84B97
9F0D57395CF5E6415BC4F4E28A54D0F6A9C022163711BCE3B6F903D79373801B
BEB01FB74C43F9F2859F271D9D1905283C15AB1432A2DBF70B6BF7DB5CBEA075
590CF8FC7E91DF5E46FEA9A4E455830A733C5144FA4526B3C8A702CBB14BE4BB
9E988EA6AFAE8432B022627232C776E72753811894A2EB658B02044F181DF4B1
6DC2295F061DECED2F2FA1A7966C8E9FB5124FAEF32EFE9F34CA01462C15F2A6
AAC7D86115E14DC96A1ECDED3990BFBB40537650FFFD467F91ADB881C07A5CD5
4B657A633C6315BE8BC9DFB8BCB6928FB37010724DB5BDEE806D763B086ECC87
8AB54D6F80141A2BFAF8E487C18AE1A927951B7087B10CFBC06344966932C582
897A3D8F3BE6CE82109ADF49E391BC00EB03FD69C423A2FB117374CDCC26D299
431800B89D54E41AFFA9B15366F2487C46E188BEF09DD95D492E66AC5B229CA2
4B2FC518D31B7A89A935478107E1930E9A9A841AFF06
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: UniversalisADFStd-Bold
%!PS-AdobeFont-1.0: UniversalisADFStd-Bold 1.009
9 dict begin
/FontName /UniversalisADFStd-Bold def
/FontInfo 9 dict dup begin
/version (1.009) readonly def
/Notice (Copyright \(c\) Arkandis Digital Foundry, under GNU General Public Licence V2 and later, with font exception.) readonly def
/FullName (Universalis ADF Std Bold) readonly def
/FamilyName (Universalis ADF Std) readonly def
/Weight (Bold) readonly def
/isFixedPitch false def
/ItalicAngle 0 def
/UnderlinePosition -125 def
/UnderlineThickness 50 def
end readonly def
/Encoding StandardEncoding def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/StrokeWidth 0 def
/FontBBox {-44 -226 1922 961} readonly def
currentdict end
currentfile eexec
D9D66F633B846A989B9974B0179FC6CC4458BABD05D76517D9C24FED216BE906
1643B22AABEA637BFFCB75FF65A91279495B00B8B92CFB39C8899C3818357033
2BBD344CBB263D4250A46E5B09E712D88275731E98C996C69406E43E9DBEFDD7
161A841EE17304D49501F13D3AD3CFB00DA1700EAD2364C31908F18B9F3643EA
E9514021B52FFC8EEA03D195015D30E3BB12C272A254955F88A4DCD045432CDB
693596BAF5E1BEFA2D9AC1CD0CCBC3EB428243AB90B02B35BA3A6C5B66E6A2A1
ADDF72C4E1C85E0D1616279E70578303633EE7B6B0DEF67A7EA923C661949BF5
268AB6292E26967380DFFBA4E50822F679BB138795C9FE7007F0E1FCD4719DB7
5A46EB799A99B43DBCA06EFC7B83A71B48C4A474D62A7D84490E476AF332195C
D260ADC538181E4309324D4C740C067D6E821F6D39E4E093E490C5591A5D52AE
E3C60479FE5AE1232119350562438A4F32CE20D0993E8D6969A74A04DD6221E8
BFCFF6C79171FA2B2CC248273AF5AFDDC44202C35C47A1D8A21EC9F4F611B0CC
8D84022FF495ACF28D100A2E5D179D97598A722E77B7B62C727DAC4F163C9F21
F1D15B54E530194314456954083593E2CEFBA442EC33195347F878E2BFB29576
BCC2673666EA207F22339E64A34ADA8F8E871F112394411340AC8504A833EE48
E583E592A533E7C442F336FF4FAF421DB267215E7BD90EAB19C45A757D43E8BE
73C06C3404EC8A1BC6383F1896BB02FE5C941D2741C821E94DCC9E4EF27CEF84
8A724AE461BF9A7B5D39A44CB83130BEC9845E6C8D0293FFEAFA91B80A669452
C5097ABB3A1C3C8F7D1C3384EB457C41A5F5BD1A572C2D5565C5A92F5F532BD0
0470BC1EB895BD9F973BF75AD3852F0FC40C88837E868C76110A8AAC3C4CEECF
1D3A5D12AF400E93252C2C91D83E3F93397CC2973EF86F9B24E03D3045F76F55
F908237077E6E2C61BAD4360BB820C449ECB9A32A6D5048959F7BAF1C4798D57
29448D9F45888369A080D5470EACF9B177446E96A18187F8F59E09FA130319D6
9D85B1302220F14A147D2DF9076CB83CB85980D6361966E8FE428D9D5C2B6B8A
9B1FECEEDAB1EAA0F4A7350C8B6F24B9DEC1D0FE052F7101A4F8A8A82FE4E356
B3AC131E61F98F5E116A43097836E5EA9248625C00A88585F4721704B67C193D
1636A3E4631D6B1EF6C6A6A25CEF932CE51787111ED26E9B9EF859D57CFCD2B3
4900134074D556D1FE615C94B1EAD9B697F1970CE283239B741B89D5670B15E5
FC7A7B9DA57EE2008E525E655FEB86EB0B9AF9D1B3087B407C677FC54867AF36
08543DBAC7B3EE3B6999755C59CA1ACA40305F9216580BA04AF7602F98637183
1DEEC9952332CECCFFCFB823C10980E1527E49D7DB46C20C173A7112AA7BE1B1
F5BA9DA4F5EBDF8F9839CDA1C099D37DCA49FB000165B7B2AE4346F572436658
D99015F688F9F1CD82595BF7084A3D8077A4E8FD527B67E286629C7C79F07C06
38C6A7C88DD0DC071D57F5812A81161C8118DA23E262662CCB3CCFCB735C8696
EB95D3FF126E34731584CC1197BAF5A6858F9E9CB0AE3C47C5974071BDA82ACB
A28B63CE182B0DD871AA577F36974FEF3196939B7128C3590B719483F90397E8
522ABA5252B4B56A5EAD839DA49DA76C712EEA29ED0726788B54B46EDC45A29A
D99E60EFE68E53D5B14FF03B1EFB3FC3DE780E49A0BE0CAA6636D1BC8996B177
61336061EA0A4ABE2826CFA35D6F1AB533457432F4EA5208EE5D8CC1AA19AC56
C794A1CD0AD16152CD598F117957FE091B6F5FD3545F949AE6DC89F6E3C52601
B9B4839A7A46874F8C38CC5D641369DAE6E3661946E9F2A27478DCB31380DADE
24756D4591E5956E2D363B830096D809ABBECA640713C181093CB6DBF603D110
56EA7FB96EF30261E49101FDE32D6EC80857EE08035F0BF9EAF9AF8C758A9538
5D3E7BF42D43D72DF0B1706633467254A00510D8290FE18E00C2790B50454936
19294C86B4AB97D7787A1341CD343081524C535F5090A9AA5C09E5DDE5B5F17A
3272DD1D51D6E4D1E33F521A5DE5C92AA700C43115F9010E7CA7ABB45C02595E
071DBDE5F9B6591FA00634464CCDBC20FB277BD4741056B0E037D69717950AC9
C0502E8FE64891B80ACCEDB2741E6B535FF17D2AF4F8D8348A46681FF4119A84
A2169CECD317DD62067E3F8FAB82A85BCC2E9E0AA7E557DE3E3CBF86C446D331
296C5343999EBF7EAACF417A9B7DEE7BAC4D6053E7C2B7DADDB668E30AFF111F
801E2DB6BB64915F1131110238ED9A36AE7F84D2158D58054C353402CD0AC276
E0AC0A35C282C83697999723D5B05E83E6DC3521CFDC4A38F4475B4D24E698EB
9212336A93215EF35EBD381454B236217A4142462D3D172DEAB9D0B01DECD219
49BADB7BBF9962FBE0CC7135FDF249205CDC246D60E249DE90F87A9DF6F8735B
5F694240A0422AAEA56F4DF4B00C4ED2ABA5823543AE1B5511248735B1246B73
0F9A6EA34C3CE538A5F9167D58C9D59FBFEDE5A2A0A34B0D5EB1CF427425EBAD
7C19B5AC6F69300362A9C58B868F652378E809451349AE6022DA7F191C732443
4CF0E61DF4A3B5FC73ADF804AA40054F296475DFE19C8D5F8194E7C3CF8E1A50
63AE71E806568D4F5CEE13F58BD3F0B8F85E2437E430A7C833680AD5FABCDFDB
B36521C716275E48FACDDE05BF7C06682E04EDBA5EE5BF9796E0758691D1D722
CA34A8EBE52E404F01717192A0DCCF43AB8FE1D8D282CFB81012176F7C032EEC
EC9339F80F4783C3C7DEC761DC26BA2C20A64AB6506DA5FC854F9791114E79AA
D1516B0CD8C3859CCB3276C4C0BC18C36D9A5F6099BDF392C43D26EAA05384E0
3815355D0003EE931407253FB150D2E2A96818F2E1C8D767F694C985957DA4F4
64DA99B6078A1E87A73B8AFF4B745F5D968E23CF852B0881674C853E41A0514A
B71D279EF6EEF2381539110E679960AF469D2FF97C823E60A71FE789A7E419D8
4B86EDBAAE9B4FE6FA59E4FB7C6A43F968915102D4130BC24F6A65D52F24C3CF
27015D9C490B55CD18FB79A1B720E46BC1F2686F963134B24A46EA5616E788AB
2E05313CFDC45EB4D715A1AF4477C1E5935C71B812A6ECC0A8D9B1C27BFD077D
7D686782E8B747B9FD4E9D4EAF582A6A87742F26DEF78DEBD6065B8AB1311432
9D8B2B99A82864CED40D1380D7E81A4F35FD1611A259CD7D0A02FE598FADCC1F
B467760AF23A548C84F692BAAEADD21049EAE196062BFFF3C134F108710B4C0B
92C7F9E10FEAA3FA7ED33FF7914D153AF45013CE44B4E5E57C9DF613804A3C29
C418FA90407BC1254F7C629534A447E89D640587BA5F50EAF66345C286323743
EAB98D8AD4C17F019769DCDAB4C171946A446D334D1E0CE0542BD01EA854D75A
82C39773D63601A724854EFC6EB46EC9F230FE8CF590D3F1319E043EA01813CD
690707FF8FEBC448E80521DED0B3F53348120A9FAFA7EBF248D8076438023E1E
153BA496C12B6BE741033530E20E57136CE3AEC484C6F5B5F22F133BC9DAD2DB
AD315FBF841BA7AC6B3B8D37CB867F0684C031CA340B196B17D120C38F6977F4
AFDD4F5618CB3A57E378CC215A1A2F0E03D3B11245E8D78EB5F28CA5C85BD3DA
A86D2885FD8EAA2BA71552CFF991BD461D001C3FB5A3C7A3BB33C1257440A807
EF6A38BA22032E165482E8B93F4F2BA97CB1CBE8D1ED37AD5F67CCE566F2F7F5
0D48526D210F60415B885322F6ED75E6633F7B4D7BF6286C2DDB4A21595179A2
33BEEE03CE5D2B252934B550613D1ABA01910E8FA35867F93D8761BE58B93C28
A738008D89BB23C19E65824888BB5B50330B1F6F2F6C029DA3376421A9CC7237
B32A1B9E81699AE51691DDAB03F56CAEF1BE1397FF0F069F7AFFA3ABD57C7FCF
1A4D4B85F747FBBF20F824490938294D9A5C018F8FEDE46FC53C81D9F440C6FE
BC9DFDF6BD78220F3EA4A0FAFBCB6D27E11CA6B3E4E46A082278006F0D4598DC
55E6DA2EDF9BC4693ABC5842B42A12B4C29E69AD0BF44989A7F7A8FDCFEC32D6
EF932A8FD9E1297F2158A52FA33FCD33E4A4960996E8FAB83FE1EC413A836FE0
3F474E876DA842C4F0B4F9C2B8D6E702D30AB5F49DD5EFA803FA01955E723279
34105D77A6F3B66731551BB42C917BA6BFB52E522928793CCAE5D0AE88867FDD
D47B4D66E1BA4954D1681982C5C4A74161217DE3E570841A6B7F8524A7656573
9C2C4BF22796003B481F8812A1D8A26C264230DEC479A73D5ABC4E7079FD054C
031F288085744A337A58C7B6FB3DA17CB05F42ED59B17C793C9E1FF238AC534F
0E8963153883165D4019F6E0976ACD1293A2990A790ADD335C5F220A0143369A
EED6BAAAF0BB9CA4344AB460B99D6B7E991BD2CF7092DCDDE50416CA167CD093
9B28E1FD50B79CA9CD45E3B54CA6ED28C4CBEF874CDE0DA07FCE7AD68C5911C4
D0CD9F78F66EBB354AF6939CAE2643779B9EFD65A0607FE64ACA9984FFD94554
590B2F1C17FD25BF7AD67A23E5CFBC09CDF5D7E7CA0790DA43C4AFE85D7E2E8A
98AF5C48025DE8D1DAD455AA78E73BEB1A63794082EEB6E087E5359A875E9454
C0B13705332461DC4FE30BE6979D6B7F4170E6B44335EDE01DE868274A2E4DFE
1473EDA25050355F10F78508B4D4F5453337E79ACC7D3E1FB28A6DFAF89B0EC7
E098D8DE72F01FD0D065596E47533A987789B070D60F1B041840901173E900E0
A2C81773287D0934FC9BAA6196C92C13D3502EBFB6B31FD0A1EB16031019FB0D
87DBB7B0EF6153CCD59F61C33F806C6EF2C8CE1D198F581EF211FB91FF9FE225
E5BCC950EAB9DFA79A7E9002CC4B2378DB08A423FC2A251F2F57EA44D7B87F5B
3DDA622300EFD528B4EE5D2B026230EC693AC15EEB9745FBF0EE61E1AF6109C5
E30838F1F6F2AA29B6BF64B9BAF24D9DDE39355C393042EDC28CD33A8FFCB3E4
3B04A5A55EA69686522F58F14255C13B503DB1C27106C70B38F7BD865EA6B89C
B1EDFE297517CAE9ECFC84FA55484D898D3851994BDE23FD955A080D4980DA1E
D54AF9F91694222F327EE9EE3F513504CEA79327D9C14C1C3031D136CA42BB7D
D3A0FCBCC1C9E5BB7C92AD7087CD2D3AFFCD689005A8F2E5A5BFC2A0AA6A33C3
754CB95A9396195873D2830CEB7CE6939F26C5F7B7FCFF3AE43AE27B12F43D06
52434AD81ED74F9326B41867C5BE9616409D1136D06E7D892DE5204BA9FFD01E
A839D76D1369F84C65177A8AC9ACEB059026FAA710C986BF4C4F57422A033D2B
B840664840CD56E019C5089C4B0D27BD3199AF7F8B5DE713A037B007FBDE2B93
60A207CB8951AB4C580D415DF6DA134EF281D240190767A635497E2D8E714787
CB77A4FD5871F14A460882C773C32C95A21EE35F754C56ED98D5103B3685A581
2F6EE099707A6F84DEA86D88B1F23420B4C53B67BE13A8A7BA80523CA3CE5922
7A73ED79A7962547457E1475D266FB343831BF3E627F98D1213736834528D7C0
A23A1FA0ED12E06EFE4A10CD684BA433B84AA428AD95CAF704DD7A4E1EE9833E
A8C1CBA1CB52AA98B97BEA2F8299A1B7C277ED52280465004EC8CD8F512E7A9D
FD68A66597295C278F02E3B39970568B36AB07B0F434143AA6C792B9B6D8E00C
F36FAE940CB9F4217F3FA4ABBE3060BFB864C723437B638E6E9965BEA1D19EF9
D8F326E88E4319775C57384469BDE941314F2E37CE97C758DAE3DF7E260BE31F
F59678E66CDB35A5162BB68E09DEFB219EC654204DAD2678F5550BBAAAE9B181
81E6253348C8BA8B945413722594BD958A6816EE5946B616793187D8DFE9EDDB
9D3A616F2C7F8B39EACFE4B58EB2CD82CBAE063B3D416D98FD8100D80DC37A11
CFD6E56A93CA99978E1BD8CCE9FCD93CBFA1B5284D9D9F861DC04C037D1BE31E
6B7C1A12ED22789382F9A67781BAEB61643D5C681AC42135DDAAECEEAB992791
CBE8308E9DAD7237D993D25DD09FD205F67341030C1D6742C8A3ADDCD466B558
0A9FA9F6B446F5E85F0F7C88ECA6AC1005254831DC207CD24F56436C6E23F9DD
6110C68A0B8A8AA618BB87EF3D21D40F6BC35CED1EBBFE7507E7153F59D9067B
6B5617F0ED9E7AEE3FBEECF60E9AC800B32A2DA963C331C90370033CC7B672C6
C3115F1E68EB35967D11126EDEDF0BF80817E68A698183B3EB0A207DB43786E1
B9D289359D6B4675143A5E91915343B697E4BB31CCA5C80D64C7E3F78B4747EF
58408AC7D6C6AD63DBB010FD36A0AB1CC5D6AA2D9EA8CF127DEBEB911DBA0C79
828608007327ADE7B597CBB9E28C08076E6ED0E64ECC90A8095E9A8271882541
57536AF9BA7E04033E3A621D53850FAFF6A7345F9A83E67E9F66CD28AD29F143
3E4AB73592E2A04080C30E02D36268B73E6AACB9B9DDA20B711EFB3F4BF4318F
58E1EF0E0D0F972E411B54AED78DB7CE7771EFDF24038E418614C16EBA13160E
66FE01BCCE0DF5F7FAAF07411A85B5F19228969399FD4029026D2F665F9E2E13
4F35F55CF07FF6DD68046E4AE27D31A0DF92F942E29D87AA5142B4DED791FFBF
74933DBCBBD9E4283B185751149CEF625B50015A5A82467F219A9076D0800D23
F8F07617C8BBD12002F6ED0822BB0964E0BC3B13C8F3B64967DADEF859EE5B1B
51C9430845A509F4054640997D8E6C2AF0CEBD00F19833F53A60A4C17964B734
157335483F74227E9D43B2E8DCEE1747A7514FB40A3C03674DA5DC2E272D51E6
C5FC219B1D304B037571E32E75C0CA5D14B5906F923650A4D91A309316F24FFC
41910436F59B5F0C0B5C40E6505117424C3AA62CECD683636AF97FFCFCBB01E6
6F7BCFDE3FAA08A58B480BDCFA027FE98FEEE5C64234F1830485E737301C4A60
D2EE73099E34253B25C3EBC54715E0A7124F0FE6DF16C8EDCA58009A34974BB2
202E7AF9C3B0151F337515CB983916A5C731026AA278EF11EA83092BCF827E9B
C629071FC23E8AD1717E6429C54A1E67D85729444EC40AE64CFA43233680D2C8
D14897AA6889AA746B291A1EC0B90A79EE11883C533D06E3DFD65196F0194585
E37B92B73C1398C096350A31019ECD6E5BF9D5740038383A9638503E4DF3670E
3EFD6E0A5BB58E09936B9CDFC6CF3532113F61AF41F3482E4DBE147256642016
6B0C9670A26CF881217BDC5A98C6D2C37F85EB317705FFEE5C86F5B7EC193028
CB5889D1C1910E132E47095397DCCDC83D6EAE75E48AA1D05A2A11B4D72BACD4
708C58102A261DCDF4266FA1A99579D986B9507424992CBFC1F6A00033DC64E3
233F4320FF6B5307EB49DA0B7508FCDB364FC41F1A6804DE5FB1007729B0DDD4
42B08D32A5F6038511A8E5CF1C4EB93E1D0198A65250C32DD9D6035CD1A173E2
3DD0AE99E9CB2983EA19D99DF814734EA3EC195F1749638E640A57697EC8EBA3
E40ACB479ED2C13F52626407B945F0673061E8E83E4F3F9661BFB0B60F4670AA
8DE9D4404AB2F935908A65805FA588446B215569690E9545705A16DAC5A105C6
1A779F8795CAD5294970120EB23EB81D58191EF180DB61B7C21E0755F4571DFA
B10BA8DDAC5691DE80A72A9F8385AC11B92136107C077138562D9242A9DEF2D7
C7670EFB18772403D1732BD4B09AE0903AA5D86421817A69CD245ED6C5DBA1DE
3141AD955F84761F4A4ECEAC22563387DCF44FE195BD79825A1F435E00FDE2AC
FAE5F3942C5FD54CFE608E483A52FFB606AD582657B5163AB0C9929D7890C482
168FCD3AD9DCE1F9D6DE3271C3519D4E8D466FFD037D967141908909175188F4
9ED98D9C6531EFD800826A1D4B465B535A35BABC3E33627CD466C6DBCC6BCE72
7BC60A4164B12B921D0D646390E14BD1F8E1B07B85CE8730970D556670797036
46B07E83EBA97298D8C28BEE73B93CE7525EA67ADEBFDB3DBE25A7563986B7C8
15EBD4127C6BF2573A3551866F6C727F9748FB104C169544F8159B19375F602B
053BF7D30B68A158BCF8CBC2A41D44CEDB17873CAF742B4AA7EBC92E1B169332
05E78FA09EE6901FF12858EBD47600848AD6B61EC9AC28A28AA480821D9BE1E0
3A0405CBFE090C3916BEBCCEBCCC74E8BD46C4E516A9246D76CA3780B194CA51
562E0F833943FFFDFD37279E9F4FBFE14B1FCD023DA1994288F8D84CE7E8A00B
533D0CCB16E1C8C298882221EC99C0D67DBEA50DFACCBF983D0E6764A98592D4
85C336672A382136D3019F3C283684553CDCC5D8FDEDD6A87FD14366456711E5
43497606B876E3D55078E9123F2A24C8AD6C18E4031EAB17ED10A531FC222F3F
3AB093A4A8D5870507907507ED492B8DC2BFC958E7C13721EED11DD7ADFC2F88
4B3C3D90CDCA8DD26EA6B25B067BF78EBEEE7D95C8E5D7B4900CD505F47BF97C
A9323AF83F41AE01BD3AEF1A6D7F5711D1E9B1A93D861BE032979A1EEEC60BFC
91B5D99A3CC019AE179E316C22CF70DFD305B5F9D88AA0C78ACECDA7591E2C6F
51C625382E8EBDAE5626ACDCFC02B7C16E0B32C598FDF4AE8C0841ECBA53805B
1400F82144047808A0A6364EED9E284CCD6B34423E7A4B3EBE0A1FBDBB9F7187
1E9EA79128CD3841C3CD86A53ED3FE12A18749697800FC0B930DCF4897D8FB13
4A21534AC475A8C2450529D610EA8A75B2C92CBDDD98C2545FF3E3FA85CF1B93
F38B2FA9C2E2A55530832014EF931C354506C4D96E6A613F668A9489BD73423B
9F065B6BA301625272DA93B586717AF8D58D6DFCB982AC951464418C326B5E42
682E9F49DC0E254693519CD28AFE8466EB82A4CFF8CF48B739DF9B3C9210EACB
B06368818F1B931DFD9A48F990B60F7E4498F6D4EA769A0D4161DB5622973698
04EDA130106F1FAF1E3B6FA675C4F92105FAB1898B62A999AC324BBBE090C0D6
7F41DF15FCAC974B5CB5BEC7EDEBED1C56B2623C583742EB87BF696B38FADCF7
37FFDBCBBABBA5C1E0234229DB7C8BFD0309F63FC3832E44CF3694EE2E537D30
C634A983B029FD5423757EEB63FCFBA8F6361062175CA26AFF3A56AE884CB1E3
336EB7E6B75A83B37D2ACD4AAEABD240E989F301278216FBD9CDF7FED85CC360
CED92BCFDF48D28C4DDF93079A2642CF23F40325DFFE8BB7708AF53B123F4C64
EDBD88ED5817129C31E69D0287CEB318EE30A1BB8250BB42816C8D3A292F9D0E
9A984A2B4E990E89B9F22F0C9BD8AB03FD01A2607337191A28733984A9BEC99F
EB3435C149135F748A5C51FD3A2BE7DB640FE0D42701E7BBA71C09940A4991A0
F2A843F3E41796771E2407EE621B3824F2805232AEE8475EDA404015B7099D9B
F02A8EE99038A8D3935F9F2829F84C1A2C02385E5E72822BE80F18F485370A43
5C5EB7C713DAF5AB48FAE0D36C328BE4815E7B28EA4391B5A3F7AC3ECFB06D34
9AD934295DDA357D92E1EDD14AF6B4FAEAB6F48D530BB740A718174809E3C057
C10FDA8B73C488BAB967FB106F0046EA523FDF4536A08E9DE60A6AB1D2931498
2AA5FF101DFF7BCDCCB71B684C515A51952EF0646D2E058684D52025B188E06E
96D3F725A7708F8C8E02E99D8D03E058A0D4B189F8BBEBC43111340F733F894C
A55E0FD41B45FE783A495B7A6CA74E7871A23B2FB4A86C8FDC8B3B724C58868F
85BE0A8587039FD5B7A533AFD690A5EA2C36FC3CD9E2FB03F08D1EDEA2AC078B
18E50243714D4633D902C2647F8A5B917701C3DA1CFC85C6ECA9B04283E70748
DF3EA93C1AA749FD17C2BC3BF6CDCDA65213D6E20F68B7E7203AD1954E515B85
5929CA619E3147FE52BD242CC5B03E2614541891B78E09C56F66AE52DE02D2EA
D21921F975BFF5F0A58A4E5E1CBA44602F5D98B3923482F4125D3EC439A3400D
BAECBF2840EC64CF502776440877ED13E554E906513EE6976273A74B8972E3E0
230261809E2D8056DE4C8F6EE60200CAC41724A19ABB78BCC7D2922C8E730EFB
AD85503029B9A3F5E79C1C3EE27959C7B5A33A846BF360CBB58B6AEE2B56D12D
33F599194A044BAAE77FB15F34161BE7678E32615CE5CF5A2DD135FC7DD99F76
951457552073B085DB92BC63E7BC48D292A4CBC1B060F4B3EF5A64974CCB30B9
49907BB3E7B2C318BE6BB379691BD32689258D338A1A92C627F1508AA5317CB8
AA826B08457AEB953C42985A0F7935765904652967C67B45A2633647BCF502A7
7F12506C02F1A284CE92D29B5D159B7728023E6FE0DC6EEDF5126EF5D7AE8FEE
044828957BFF126DF618D1385D60FB28D7D835AD3D7FD8B555A5B55EB93D0903
0C584F357954E427EBBB54B503E3D03C122F8E9B59D347E4152A962ED39303AE
F1A93286A8CDB3CF4993FF1AE79AD4F9A371E1CE084FEAC9C44F8A95A7F87DC9
CA5CE606DCD461BC8FD05C249956C2DD51FE24E7889BA2727D5D790C7789C184
F2DC97E867E6509C87174926B44FEEFE58A20132A542F52F23545A02DB6BCD1E
0D8FA832B6019ED2ECCF11CC9E2C87D39591AF588FBB1B6F917B8BFEE7175F3E
1E612000461567DF704C187061C4369115AF7DA623A37D8C7CED1561D4CAE9E0
372898D81DDA818948FCEAA1223824AB96AB9720BDD8ADBB70DAE524B7ECBCC9
EB81E501E02CFCCA694DD7F174642CB0326226F24412B0D81470F4532578D679
8584C86D2EDFECB5F6E45594299C65967C51E22DEAF3188350D866D7541C39D7
65EAFF5F4AC3C0750938B8D96E90DCC5A7E09066990B01F38C473D01AE1E2A6B
0A6546E258E9A7656D67FD97F56AB2484EA11939DCE976B79A51E1276AE7E1D3
9D16881BC29588A90AB9C87E6AEA45F9C3D2D7DD4CCD064645F6472F4C045148
10F46890267A3E4B4CE3BB682ECB8809B51F6EE897A83CCCAF8DF2926654FC5E
DB5990A0A17D5D3C6184CAD87625ED98355974A608CB758F26729300A10B7DD3
24AEA0F9521E5171333364C552DE3EED3C9B1CF54831588D2E791201B78998E9
F13F34CC49DE1DC7670F52424CE4DE9629F2CFEE7B8852C4C86D6FD37801C4F8
4AE523A10B01EBA34E1CE1CEF3D26B9ED4A961576D78BF785F42D32F498E3B6F
2F06CD515295EE75D1A64F802753BFF9FB575288FDCF314508E4A8B82DEDFE4D
C62956F341C8D5DBDE82E81AD43FA75D5400B611E2C9B544530F8736ACE95150
13E4ADDA2790ECA0C4C8F5A060BAF86B39EFC0A3C7C81F488D23FB33CC9835B1
40CD6DB9E90D6447C546979963D212611DA9E54AAA3A4620B46096A7B43CCC37
D57268BA4425994265AD8305E8CA86A0C1C87CF745E42FF723F5ABCB8DF6AE11
CACF5537489E4E8DE54CB9A6A28A5221F7B8A947C84524DB52992DE617DE4BCA
7BB82F11EB6520D234D0ADAA58CC5E254E3A13C2BF44F28E9A6EBCC448FDC45A
9ADC0BDEF899783A4CDA71B0AFE3EFBDA7DB09D7C60CA5C9E0E11CF104B4B2DB
8F0E5E16F45CBD4367E8704B31E84F18FAB825E8BB6743BC07BB9100B1992D40
7177ABD6009F4F171FC4FC8C9C40CBF28F5F1DDDA31A8CF5E9A0C65B29FB256F
0D7AD9C42307E9F39D7CBD8C66063FB55558FC58F854571592283D361B468E02
C477044CC14073847FEF4F45174EB8F294F6EF599621731A6DA33FB27357A2B3
734123D4EB6FBEA915976C99B380E60122E4E729676BEF8A25C7714EA1AEF92C
D6F5151B73DAA6F8033A688545778DF3D41BDA2FB93BC944864705DAB99CE3F5
2C1E5C202CD11E5585B42C0CC17D8847A622127029A1E4BC9450F87CC7932903
40602CCDAC18117E4EDB955BBF11C0F5F3BDA2840A0D02B67EF51022B6270E28
53B0F5985C7E565DC85F44E84ED06EA7C70E230FC9A4912110CD1B22DD8E44D3
23079F5BB01D348B9F60B918513940E5197A80DAFF7F40D838309F3463607473
1D20EE8936BAB14EAD4290FC54BB19612A4C7771326167A34CB960C26B64702F
3F968C7B033E41C71484767D47560F3B3905C44DAC978F9BCC9C6302749F1930
671A59F59DBBAC66DCB62E414E8637EFB43381D4322841174C9B5846B742A8F6
63E60F1E730F3F54881B85E359A65F981841EE4F938CF048580F69B02E08A616
7A57818974CE81750456098BD61FEC083A32974FD7659669A9670E3803C3A3EC
FF849CB60B4D404C8A73723CBA837472BA330DA51BD638BC0C253E68BB8AF7C3
25118B546189E5111C744B4CD3FB783196D089509DFFBE1CC82FC8B10497C28F
34E498A89E665F4F63C5505BD9BEE79D3EBB694AE5CE5927DED241BDF67E57E3
A9D00E5C4022443052B56AE01267746A10F8798042A2773A5039458783D4334C
82E7CBF4E3A15BFB8363967F755A9ECDA8C76F27BF9A709D124E8AF534CE9A19
E0642619504610A5A4C09EB0B23BA7F7092F9ABC2CC8ACF33F5F0FB68B551C8C
31FA2B574A0D61D87E062BAAB4155F19076DF6DE0B5C0210F52E80351FC8EAFB
CA99B44271CC9D7DB52CD11BB6D461FA87BE4E636934DDF1351593F197EE0426
F9B0F77896A2C315D4BBF94C51E1DB7EEDF4068E52D38DCB3FC31E262B77314B
30DEBDB080E2035E5D1D9725FAF140AFB86501E3A737EB7063357DBB40B0BB02
0E81412AB765A8CBAC8F6B71C9D9B86A45046F477BE9329C2403A5102BFC2894
9CEA53ABF4551F34E5B9E83B11D5FED49AD50F1323FE3F029C9B01DA5315CFF0
26E5404B71839F9A62F31EAEF96C79D15D45F7055A1E39808AEBE2ADAF45673D
B7849AB14673D3738AB0C8624F5C0F9C9051970C12E22BDA7D45FD51605BA5DA
D87E374822ADF492FD2EA53EF4B0456D4AA0CE1D6A1A26C50BB9B23E570B8575
692E2B989BA020D7F75006E5052C6DF0E84D3BAA2D6A96B7CF33C9498823D82C
B6CFFB74B9C986D188D821D2C11A3ACB45A07505FB3AAF90B1615E61627F2627
1417BCE5BF78C75AB8B73EA9235683E17B88AB50F1B174FC61ED045224C0FAD4
AE5208E59C7CC028F371DDF835150880958C84E568292B147E7863155ADC100C
F5D62C86B944F5A3FF59FF8A430C7D2FDD28F84E1C35336B46C981E4C7C01793
3D4A1F956E2448A26145E46075C33149D15B31B2A3067B935AC3D60A22058BB8
6A9448D9CC77D0B5918841EB68975A41BA621F23CB59496E97673A94DEF6B9DD
30971EE8AC387CC4804D8945B97F5EB8D629C671FA1EE0B245E0FF440FE28313
5104D9ABBA5AEB055D5841C304B1B99B06AD03B1CB79DC3DE6C212FBD94DEA73
3CCE3A613073D28515CE6918CEBA119CB1D7197DE2F54875A1E3CDC5A5579C25
78585359E7D738F0A5CC6D1E11BFF91341C2DFE11EB319169915FB59AED88289
B72B80B5621745D0126759E52034DC7085724B9778F949763B2D68BDEA255789
E9A142B81D37B4D71A1BD97D5B4C75641FDC83B7D05A175117CE8A1C80FB995E
CE0C178CD686041177ACABD3F2EE08A2CFA6C93535E5B902E2E8E93FE028428A
0FA97268BA759A6F26D025F1AD7290EB8BDF6A0300EBC37284F8C6D78268AAD5
CE0D6358A8CA55986850F5F28207671D7AF95FA1B75989D80CC1E3F6C3FD26FA
923C1C88FA9C1F2A9E0E675F5BEA5D456CEF640A18253C100307B2891983E464
1D984C4810CD2943B972B4A2B2E47EAF9B93FAEF104E754ED435060BAD343653
6A9FF8FABC6896D936B7A7CB7CC584AC196F341FA7E1D6B28F75A7DA35088F0F
1264EAB0C83C2863096D6F5B59E434833A89074E8EB7AC3D966BE7CF08901A52
D59ED9C47204DC623BEB19149240530C52B8625B50A2FF63342BE7B474DEF472
BB322D287A7469B71940940F3F94797BD9919C0CC5B3064874C088BDD4CB8FEC
BCA32AD07C7A513437714FBD076012C7288C80A6B8B85E31779C2AD0395B489D
7533A5164E880672BCDA5731F02B85B98EFFE752E2B0363653D3F5E7D75D7018
F992FBDD17B5BC41285F2A255F4937B1C50E908D03F25BC95A6E022086D22F66
5025A7BFAA53B91736FD0D9E79B7F237F495607ADC6397EBF80509B0D49649B7
11C32B6EE631E0B6A8E90BBC0530E3C5F95D0DE0CF15D02FF6260621FB322869
1329C32B6B2D2D2AA01312311682C63B14FD3C3FF4E60504AE43D9063C8D8DE9
DBDD16CB1D4048A3F6FC11BDFDEB23C7BB8B67F608228C9C8158318E9B3DF29C
CEEECA8111E9FAC3187975EAE122B20040F9C3C7E072D688296CE204F7578D2C
96B6888F075648B2AD71EDC7DA7682CEE6A1B425D888379E14C3A1C08C7E7077
D63E37EDDE8ADF23A1A5D34AD98DC7F4EC49D44456518C85235CFC1C35B17183
789EA2FCC139379330F5D18EF14A9FEDB346B2BCF3B2B01013F1E3591BCD47A1
EC4213C7552A143FC8AB7E26C9A2FFB8A101B4BADAF0695DD505A744A418F1EF
D3B5FB2E95A5FC6746EB94FC83855F41FC8F1569CE75F1B0CF23434E79472B75
29F1BE6B0EC979A0630E9A89D57F73C8FAA944A46CD1E77587D6BB18D29421ED
CA19ADF2F87212F8E14D0643CA37EAF0C510DBE2AA49A8612F2418C4E74E7B37
B90AB2330AAB07344708AD92148C1EAB8761FC274B574788AD2E2D9365C78EDB
02E0C25A2468A9EB1AB48E496C409984F63F1A5A5BE58E25687BAD25785CA7F0
8F9E7D7DA3EC1811D5BB2723CBE79D976822809E3F849326C51C26B547F892FA
13D42AD50A09F41E31D0292D6111AEF4B1AE90D934D07A902C7FB6D944125725
4C976008EE80E2D2EAF5364CF5DFCC514076C7F9593BD3B45C82D887C03365F0
A35EB17C9FCECA68B1E4DCC91CD7DC2F63F2DA8326E0C4A7626033AD1BAFA852
E76986AF3C3493DF3B568B500C47D6D60C39ACDA529F4F091720A0ADB2085911
0AA060846760922F7ADC1E16702F87D67018C8ACB71365C7872B873917D8BFA4
EABEFBFB90FBF4B311C4A0AC3C171AF3462F76668D3C59F047C6F5E03C3A4C90
5C32EEA693AD43BB6B3A14C173756C4A860E8EFF7733DE068BF5953185864F67
60CCCF7A7D96952565C446452526D70DF96DC64A0EEE705F5230EE7B3A4DD441
2C42A7AA01B91B9539C5A5E7D9B058BA05DB8F58FDF67AE55AF24B2B0E85A7EC
8CBED04730AA4B88553AAF693766F46E7F74BD4CE36F7F320D31EF0CD7D03F48
4F172643814DDA5DC137E491D3B44943A31AB677841767D96E0860EEA95748C8
DC9692FB12377860B628070BC09F7C35BE0841F9AA2CD48B9012FC182A9A1B8D
6D1BD26FE489095E64209F221701E19553032478E75C0E6D59D815B6D2D6C60D
2565A504FA011D19DDED3177DBF3944B06FA46DFD749269BB8AEBAD6142644D1
A7AF1EB31789B0830E52F48FAB56B9802DE36AAF90E6F7443EBF78A1D2D462CA
4EF12A4B16ECB4FB9CECF2F36818DE8C268B13C2DAAC7DF05B3D8EB224522B8A
7C046DCC5D5024E5339A9FCE694FCA513987071C89970A21CCF9574EE26E6A04
33EBD19808792D0CAD75BFECAF2AE95951A5A2D51D579611FA11E5392AD28B89
EFEF5ED4C895124259CF156C877682DD14AB6470EB15D411FF2DD45795FBACB3
2D9D1654E7168A799EC07DE4A8BC364F4AE3AF8EC86D5A0ADAEF8C6582292F60
BAFE5988929EBFFC54401483C699FE71837C08F0B4874BFA7DBFFF86D4993E11
8D84A1D9696BA6AEB43F72C5E5595B17617497F948655251078D3D31FE900A33
28299A4265F59098714510A0E48844C2B7A342353351F68F702F157865081C25
989EE680EF85474ADBEC2C1A2267D3167E19CC9B66AF8AAB517C60628618BBFF
71845920C4B1ADBA523A56576009C8513F437BECD55505101EB5D08C9CE5A3FD
41DAB0A1B93A537D8F638C22F3A2FDF2C87D53790C99CF20D196395739EFB4FB
2297CF22CC7733789AD729DBA6E17095AAD68AF7F0FCE340264C9394FB4CECC0
F866AC95E8D9860476504C142D0BDE7BCC0CA80FE8AE6265D67D53DF3F330B60
235C86667AC97F23CB64BD03104433E3D937AC9570A3F94A42192F5499ADA066
8E42CA10179D224C7EDEED41BB88D5A28B31F20508C9B530BF36230E84F6E661
B605983761828BD3408D6D136F0922A0F43C878F531754AE8BFB893FAD56223C
BD6603FD96A1929E4DAE8EB19FC6EB7B9C53BED0E103EAA22EFAD0A13706E1E5
0EA7B6634D9BF0BAD4CECB070345A66D33D6E70A23A8DEF367FFDCD8FFEF8A32
06E14E5A16BE45BFCDD31E7BBA4A892956FDAFDF2C4A23E5616F10E371BEC73F
2AE9D510EF18B6CE188E843F4CB75339924394AA54675CDE27B5A5E2E2DD1B75
5ED125ADBDE7223A1FF2B82DB1AABE267126D5F06E43BA7EF17CF731484C0D49
E9F19ACA0FF34792A8B684DA9BAB8AE35420B21D318DB9BC1086269DDA301E06
E060FF36A6AA79BFB38F1A91B59CAF5904D62763ED068CD436AD7D5258D34F06
56E47F0FDA693FEE15A1B946634E1A5A7D1ED28CCBC01949E577D11625ACF24B
A690FA4B4C5422E95214AD8F6BA884817E44AC8677C91D1FA7E030F68D183505
DDCAED6DA90A0F429C45164EE565CF4730ABBBB3979F8E6BD43147558B154B4A
15DBD3DDFB78353F73637ADDC7EEF6B5AFDC0593004B3DC275D3C21C11213FE4
03F7646B5D95DD757908641DF5925E559720627DCE7A1E141FFFA20F1D2EC99A
4A17C837F4B7B48157EE9D442139B5B6B2B5D14C61165CAD606747DF9CA743F6
C537FB2F5F83F346E2B76BF5F385BD3699F5070B2256BBF2FAA7C1DCAB9A6F39
59B0265FD36F9B66838C2BE122181FEC6025BE75F9
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMSY10
%!PS-AdobeFont-1.0: CMSY10 003.002
%%Title: CMSY10
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMSY10.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMSY10 known{/CMSY10 findfont dup/UniqueID known{dup
/UniqueID get 5096651 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMSY10 def
/FontBBox {-29 -960 1116 775 }readonly def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMSY10.) readonly def
/FullName (CMSY10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 20 /lessequal put
dup 21 /greaterequal put
dup 33 /arrowright put
dup 50 /element put
dup 56 /universal put
dup 79 /O put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CD06DFE1BE899059C588357426D7A0
7B684C079A47D271426064AD18CB9750D8A986D1D67C1B2AEEF8CE785CC19C81
DE96489F740045C5E342F02DA1C9F9F3C167651E646F1A67CF379789E311EF91
511D0F605B045B279357D6FC8537C233E7AEE6A4FDBE73E75A39EB206D20A6F6
1021961B748D419EBEEB028B592124E174CA595C108E12725B9875544955CFFD
028B698EF742BC8C19F979E35B8E99CADDDDC89CC6C59733F2A24BC3AF36AD86
1319147A4A219ECB92D0D9F6228B51A97C29547000FCC8A581BE543D73F1FED4
3D08C53693138003C01E1D216B185179E1856E2A05AA6C66AABB68B7E4409021
91AA9D8E4C5FBBDA55F1BB6BC679EABA06BE9795DB920A6343CE934B04D75DF2
E0C30B8FD2E475FE0D66D4AA65821864C7DD6AC9939A04094EEA832EAD33DB7A
11EE8D595FB0E543D0E80D31D584B97879B3C7B4A85CC6358A41342D70AD0B97
C14123421FE8A7D131FB0D03900B392FDA0ABAFC25E946D2251F150EC595E857
D17AE424DB76B431366086F377B2A0EEFD3909E3FA35E51886FC318989C1EF20
B6F5990F1D39C22127F0A47BC8461F3AFDF87D9BDA4B6C1D1CFD7513F1E3C3D3
93BEF764AA832316343F9FE869A720E4AA87AE76FA87A833BBC5892DE05B867F
10FA225E233BCFA9BB51F46A6DF22ADCEACC01C3CD1F54C9AEFA25E92EFAC00D
7E2BA427C25483BA42A199F4D2E43DFCE79A7156F7417ACF78E41FCA91E6C9EF
B933450D851B73A6AB6AEA7EE4C710CB5C14270D1674FA334686653793FCB31B
491E870D3C2BC654D2C1DE463EC9BA29D7371AA1078800EF93D3F66263A2EBBB
F5723697BF7448BD0D2E301544BECF497FD475B85DFEF52AF4F8F8BE445CABE6
019318806D10C5952157FF8F8286C1EE701545C8F60EFA854EAE66835A2046A6
915D395F1E0366EFE0C0391583FE001FF16D82A2E2DA5F57754A2C6F69306E36
356ECF8EFC3F1188AD6FCD2427E0580C97A5B69B4E0E09B85EEDE142F5ADD2F0
5DE51D6DB72B127412A0D57106C19CA493048A4F815129ABE767D51715B1515D
9C21067CB5BC88741B7298C83EAE36A866DFA87D8981F179B1C31292F56BBB64
3C430779468AAF07C8A8B4934E1E775FE3F35186BD1FA6EE3689C1C750678AF1
FBF9B23195A124C5C991FE670AC0C86FD39D2B07B9A319E74EFD498B45820252
720ECDF7294F7B0B137CEB86D33BFCEB8606985A3260FD669E461C8BE94216C5
D434FD8854F44EE66E5A289A9F9E32BC36AF645D53F96652602BAED418C8D726
BD04A1B4617551FE4DEF54083D414F7DCE004E6BB2DC9C2EF7CE232B254BA2C5
7DCBD36C2072ED46FF711F121A701E2284BF1B718B3164382B8F453D68FA0377
DFE106503B8401D4DB87F5402A3AC9A442FA060B0610A9524D530C7157C26B56
AC970FCC1D5655FFFFA39246E6420CF97D08ADFB7B05822679BD40C638DDF0E7
A97BFE8918B611A145AC965C203F1428812F9D340AF499B3A915B22BE798594E
0F520109FC81E452180AE45B170FF999C5FC2761C6CECD8742A5A6FC97F16743
AD4EFCC6572A6D3F3E4E330C5CB2FF6FEA48A5B64DD3DBE943BD9918D4A18E18
CBCF598AEFBB6AB3CD2CBC9BFD6099272F6543F3E532E0E21E614BD2880B1023
0AC234CB705827BF016DB84E00E8C255FDEFA0101A842929540B7B4AA8A089BD
5EFF05B72356B6BC3727817823B5CDBB1B963103000D7F2A4E2A1472FC3E614B
5CBCB6D6D784023173DEFEBFA8F9ED87EC1A0A9EE98CA59CFC964CF943DC683F
E9E00DA718C4425A705A69D99988EC6F152525C790912C2E46A2381A569424AB
54DF4798BC2D7E7A361E7991641D4B756CE2A7FF4A2848927092C59C2C4B8809
E13AB84FB6B111E680D7FB9F2FFC2C5C66B0B501E4447C2E46C10E2F6124476F
A140C404CFE2DC9E0199BF61E035CEB481D438139A9630934E541D261FFD2906
4CAD99E20655FA746AFB81EDBB5601F5FD6B1D6832A01D585E2C55053F6A7378
4DAACCAC7608DBDADAAE732D66B3E7F87E79756337C1A961E53A4651BE7C77F4
038B89C87F650C54A2A90EB7F1D525BB353F33318551EE8D84A6A83C718EA5A4
B2AC0F7306B1E095819B87015A90CA3ED739B09061782C28CDB36BA4BD5E5308
5CBB70414E4112193DAC4A1FA30996327230D1E021F3CD8115E12D239D93FFDC
B645910EB29E40D830E7BAF2DB255FD7C4E776557BB38157917D993EAC245837
A3B515147043574157B8342D829C7228CCEA843ABC89D1785A9672A5923FC4CD
2F3FF27E6FCACF84E2D3136CA2C0FD3EF1EE7354CD04C38B5FB874553646ED2D
CEDF7E362EADD04B18051F20A8FB0DE18E152385B9D05F98A3A7EF177824E246
455ABE69E2F700EB78185CCFC07E3B4C6FA301112528D977367D30D0D5D59EDE
FAEB706DDC970A9E296236C725B2B55B09B9C336B8E23CBA5FB8692D56F33B03
16294E5FC7FAA42E96395A57CE51CA8DDD77442F142E2E576B778373FB31C81C
16840BB422CA827E30A81829648BDF1CA36700EA32AD888D097C1FE0A05B2D9F
483AEE40269DF09AF0D1AD3DF80C45DDC59C2A03FBB661C79B87853737C6D352
67626B657321B16198DBD6DB98A092F17878AE4698121E1006E53D6F9B0A3BE2
3FB68828EF854A0CDBAA68B37ABCA6AD4A3D809AAF0BAB1697A81FE59C98C472
1E33CD70A75A22C249DD11D76C2575ED3370A25892A16D2FD569CDA70C130770
93F493C7D47D6F9A5424A7A542BAD726BFC3AB225DCEBBE6AC4BE006F8C7C0EA
051424B08305BF2D951AB2986AAFEA04E078CA79B399585BFF0F1ADCED02E15B
8765EB6BF6A8E4D0901EFF2C3AA104924EAD9637A35D877E0C51A3C37DA78CD4
8643C8CE6DCDDE3F116A6C2390F948E5371BEB5AD2E87B41C5F01FB5C196C436
6E256A88D082E3F46E4EFFBF605B2EFF1E9D9AD5EE4DDC323A137CD9451EDEE0
06F7D82898D71FAF2362C0FCF1F726F97F820305B7CE20728CA08C63575083A7
84BA28B7DE2B916432475510E274C12FFD1660A717F51DACFDF0A102D85224E0
D6DB607BB72569ABB8A7BC6A10354CBBC01732EFE35B72062DF269CB25EA3DE6
DC603B04C90C5912D2C38D7A5ACDCDD3F6F116D884F0D8C528F69D5D47BA20DB
0A9E585C7D8CC3C324FE8A1DF150279F7E8FB43BDB720E624E5E9918032C02CD
8020636AE5C38DA2484B7F4B34163E0D0A561B43B80E97746DC05C871AB620EC
C5D47101ECED4A7E25F291184BEF8B80024AA7BB456C1B83A907652B331DEA34
754226C39C6889EBEEFDAD081E01EF8FE47751987667836FDE4C8BB8A3FD4406
1E643B4EA37BD370734D1A2DB17C2F4B74B4ED75098B433601F75A88C9A37A05
CCB157EF6E32023BFA33973F3E655A4D58289136996FCFA61EEABD70791B6523
1FF5DE71AB8A17038923118A5EED8D59C4C58D246FFA9BB26472346B40C8741F
153D19CAFF20DD2A86C6DB89154A630FB1761929FC3F0448EE2F089C1C953E02
905BA8DE75D101A982A611056C4B237596C10951DD98BAB838B742D3CF7DE718
617DB72E5268583223E37E029D1C8FD3F1D21690151F76B76C52C725CA135CA2
8666553E863CE188BFC9B99AF56AC2DB5BFEBEB12FB563D00244EB89E478657A
98AF2E1223C1ABC25A4500E8119B86EB3C26B8A2F3505A3E5610F89B7C34E278
53FA0A54A7F46D84A35EFEC36AE660A9E3C37EE3864106702DE5AF6C45ABF64B
888A4A51323138CE77DB935576FE6B4824B6942DF80625098CE1B5B32B234F1D
052A9D6039697118A9D793793775D8729D8574A2E74D7109C7B7E23BC5E2E87A
CA8E019203952A4892544E1AD3D4EDD22971611358AB230E9A2ABDF00A288501
A01B67C42B33F6B78C39562DB50F4663B922D9BE0D8A150311AE44B83C1F129F
07337323E9A23211EE58E16043E127C6F9574019179F5635648A011266677B56
B5D0201A4E1470B952A1579B57AB2329CD4C615395023C653F784D36B5EE3672
10D191F29EA508CE84763CA4CE7C2C5229E38E241255A5CABCD6C7CBAED901A2
CA53B5E24111921CDDF83578D33D463D70EDACA0E470D8F592303FB6BFD68B4D
3F3BE2D7C5EC8BBF10C90111A33E205F2649B56E8443F6FAA6C721C66575AE12
D4C40F1F46CF9E9DA675AB5D5840D938780CD9E4AD6736ECBEB6A4397613586F
849B51048AC5F9405E03E14540A5E5582F61CDCDB57EDDF95A8C6705F433EE16
648F098C03DED8A2AD94AE3DE202D629B9422ABB031318D48F2C85F9DBFA17BE
84708AA3B6C9F81F4508F7A5CB7B6646AB8722ECF817877B77D473F577556DAA
2BA0ABACFCF5DEA7498C47328E873019A956FBB250FD9D8885D21D368FA70CBD
2709D2DA44EE7A9869963EAB48789541906DE49FAE785ECE1F18A22C7E7ED204
9768896B78E9EB7A2BD6EEC1B26083940656ECD689D92942CC8AF05CBF82AED0
B45A7DF4DD7AA6526FB597322560B9ED3087A65B5EEF1371C328A021411BFE3B
D9B5088B2F1AAE381FFED52D2D1E02CD0DA78683E3B06171CBE94BE9760005D7
135893D7CC2DB097F6AC664D9594CF1C650F84DA80D2EDE04802DBA33CE3DAFE
EB7A37E8AEFA4FDA6252FF21E8673DD98E67124D5DBC7BACF361E57077B71939
C1D1FB923E4E35C075CD1BCBE0E80DAEA1320D55B43EAB45D9B26C366B278782
7519FDC482D98839BF0DF2E7C3A56A1C1A3FC0E57A75CA414F6536C1FE8EB7A0
4ADFEE3BEDA0F53BE8CF5F64230784A797133E8CD46BCCB3BF38BCE38A73CCE2
9E073ADE792F7128231DDD1F63E6156ADB2609C200837C2E8A2D93D2A7BC9171
050C709A71E44E32B1B03C92EB5CF1D3BAB1C38E027DC4ED9AED633D98CD7486
3F773ACF8AE332631CF2ABE6D606607593FE862ADE31803964E3F4DC3CE3A271
C76BDD95C87CDB3B87BC26FC7A16D567EEC62E6FF0D471B4853DB8A94D4CACF8
843824F818083F10E88D52FC4253E8203292CB40F1414AE7E51DD7347007C342
CD70E8E9F2D2A13D71213B841DDEAAB208AD9EA644591C15DEB084165F9DF24B
B91D3BBEEC2E34E38EF16A0C3F00700A7BDCBBFED2EC0D09601AD6538288DB50
3478B051B5E16B604A0341FE621A58718D960D699D3FAD284310DCF54EB13175
19A75A539EE98E804AEA24689D3540F0F12951A3C01FACCE9A7BAF4D0DAFA946
FF65A4D2A4C39969607272C6886F44E90ABE27CA3A1F12A29D9B32E60E8E34F0
17C5FE43D0E69A99A922D98909B2BBCD145E59A5E7F5426B3988F73B09A525F6
8BD4915663C1301323180E760BE81CB874B020FDA3AE63340E4261E4F3E4949B
CC0966BDC4426190BE9F5D77F76A72AD925662E5FE1CEF9CCAB68F0BD33DA003
F11EB91AC4502FBD6AE48DA0F9D07C35B96B103E379B8A83A05FE728F1716194
1F650F75BEBADB2E3810388F3E2DC7B19F1BA9E32925F2FD9F19F4E8701F3E4E
4069125D7C401144740691E7A460021A47B1E27997FC1DDABEC5BD0EE0B20194
2D579C7D6727AA124083242BDA46D8E116E2751C5F298851A62B60AEBE82A929
9B9F2492BA35690D1EFD16215B8EF14E7A3803B93C28FA41D971B05B6AF3B593
E74AD1E68A5FCE12A86E63B78BFEA87D3949FD164F12277A4688BE96356791CB
8671C49365608F3EDECC109321AF92B4C29CAF073DA3A7D73E913D0D83FAC5EB
BD884D4C686056404DAAAD6F82F94F803FA1FB0DD8908D1DF08FB87A8BB83027
04DE0CBB1C6FEB6B517FBD7CF065120079E608CE41893C2BC96A347826CCDFD5
C69E161217F2127A59F1A6F22037641613F191F22D5B4CDCBCC2EE5615623404
ABA7BE6C5FE475481615B2AC1A2412E54688DD21E44CC9AF5F16E634AFCA389C
4D740B7B51BB141BFAD1080E7C726C1606A28ED492E6BDE9F800EFACD1513909
84E98CEB6A0B7A2A6F3E1D1DCC3B2552795E0932673E59ECC56DDD37A1D52BA6
C3F0E905978AB568941A163F4CE3AAB5C5B16F86016EC47BA6F3F7AAAA77C3B6
09C8C3ABDB6D514A76ECD37C37AA88B5860630B3406B494F7725975596F84777
D9CF48686EC9C5DBCC1D78513F591C7C10AB9D153B3D41426B7BF668B0D04503
56BCB686258462C1DC61095724B9F3312316262FD7C1AEC6E54DE7E5A7BD8EFF
035299B8FD8A4A7B0F51404F4A760F4D8B4C0FB7A32FA4B2383AB6E9C78FDEDB
FE6A5788D38A6701B123630C2A6D820A684166FBBC83DB17069494FBD411B333
CB37E2491C5BD035A33867A6D3A3D420CC31ACF43AA07182CAAE67E40EC63663
B678F71D4C6E0EC3A0AAF904CD3AA66E0DE5E3CDE049E94249B39A1C06E3CE9A
F974B2484BB2CDA14282B9511E505B3C89F9C802218AE40D1A7541335C5736DD
CD565D4B9F4CC78F3A393737EDB4FBD0DA299E21CCFEBA5478EEF013F0552A8B
0BB11FF46CCDB784E8BDCF730A16363E66572049E42C695886EAB42A9AD9094C
B635DF4B5B9BD9B9AE8455DFA3EEFC77653190F9A8B1E93B7281C2A21EA7DDA9
33484745BDF7E3DD63C7AC66C286C9A5A698A5E4D7A91710B7FF943FB23609B6
4B442F83CB795788FAB5E9CF3F75D5487DA26170E4561C7941C910B088C3B86D
F844B0F340CF82786A3FCF347048463EBD2006281A816627065DDA6CD4D3AC5E
2024BC96C7D896381BBB567951E7A1F29D4E95351298B000D29E5F3D0448CB5A
CFDAE1BADE9403B90371C3A07D208948AFA022A69C519434B6813086ADF518D5
88E0B92072A44BA1B3EBB630A13B7AB90992E85B6D67361C8D96F3E0D826FF37
17B67E4B1EB7BADFD98D7F4FD17BECE740ADF13C141EBF0A91CB105DABB32FE0
55086D56A0D358841D15FD349E6B95512E4EDF4C430216FF85C2ABE995E4B40A
A6044CC8820AD885C07E052B3F91C2E9A1D163BFFD210F7BE95B923E2500DB50
2075106DB541C267BD450B25B670CE80BCD068D4DBFF2D82634175B61FBD3BC3
406131F44C7D6F18D375D1F2270829DDF29DC14DBB58A30AC193245D18DE91F8
AB88AB548D8138605BB5A50073295534E314366E26665AE70482B890E4101D6B
60E4F3B37ABCA1346DAAE8FDB8DD9C832EFF3E73BA470E2BACE7B8515CB43388
C27AF99FF9322175CF8D4947E6B3846AFF5163E972156847F58A66660EC8A3A6
5FB47C9F637B4CBB4C73B6A080B0CF6FD1E9665E92032540570FFCC747C67C50
822811AADC404BC7ECD1673E8AA6C3A2F1D82F39430B58C29145E2F1B679C46E
94EDC711883F1E4EA84117A54757E8895A40401A26E1437B39A2F65CAADD6E02
D71FA8AF7453668DC613F326A3344F74AD7AC67569AF399385500ABDA5EDD3BA
343CC5EDD4B558467626850E752B9959FEF1454E53E7A3DCBC2255AD8F6AB4FE
894455118A61C58840CB68A925ACCAD75CEACE863D806916228F0614191A1CD5
DC9BAE256018615AA3725834519449B0A88B4F396654E74099C007930ADB1327
DD119BF799FE3B0B223E1EDA04FE2DA7A1C879143E1C33B6C6344F4BA033AD6F
8E88C33DEF1977796B454BAB2494C930F492A518E8198C708A75FFEF8C49C324
A718AB59B889DED521229E741FFE53F98EBE88B0405AD523254FD3FA4BBE96DA
DA1C27C1C979A0DD4E61C3B1F4C4DE01E42F1C4435EECFC02D97994BC8AF5270
E7CB1458D76ED0229C5FFB4A23B8716018F9050970895D51722CDE8F2EA3D947
DFF374D84915D5C5D16463A6FFCD079D1ED416C4347BF831FF0C4ADFB61295DC
4D5785BB0852BF472CFC97EC174491CAF961AB90629F055E75DAA6D9898E8653
5BCF379816CAE46FEA62E7BE8E9B953466E51828172C4DBD0E1BBAD1CE28B5B1
02B3E36403BE80B49A47446A6677FCED438F01D60EB10F478C89528FA337D0D8
88D3FC123C076507ACDAF783A9A6E24ED73BF24B6E0F11C13E532DE5F70B1491
307A6D9A2F2BA5099C8A07762E70BDAA74BA5E2BAB260C1352107EB8A96523D9
4BA3082B99772D585329AB8645C3BBD11D72BA01F95CCF11C6DEBFDAAF7F5C4D
795F99DAE6A8D59462D759001BBEBB59AB0C322EFE02904D82B424649C2FA593
0E23281DECC5AA908E54244566055D418602EEDBE78843300158908F77C0AC75
9562065826D34C38C598D8626BFED7CB672F132E065E2C27932F709935988376
94901EBAEAEC410E2B36575A71EBB8954C3A90EEC264E6115950FC91D0D54999
323D8B4FF8129A8EEC3900A00CCB026E6943BE1728BCD3F6C1BFD503D55A6A7A
6376AF4D646B2F31B1AF935446DCC68233C72AC164BB393DA250B0B423D32887
C680509C862B6F49EAEC995036CF797BC11DD87159241A7503B1FC87023766D2
E1CA46A71DA0AC46F5351FA1215F3B82978F3DC0082D300490B49742609EF2E6
D276DE76E9E50E17C3EAEAAFA02C1F5267A4D81750E30D70C5444A52A1F5F5FE
952C82E3E05B19390AC2D899973611975187E4D892E8B7ABA102EEADE2EEE64F
251964C6DBA967DD98D8CE925AFF700932C8007CE627502531688D57A64FE518
C40D5EA1828E888F61B162E478E499A28A9044DB3B61CEE796515166048D9CD4
BC06442850D6F863DB40D4FCE6C55B611F52BBD2298D474C1214015EE6B7E67D
6ACA8F3ACFAE9D36CB7ED3C7E8A277AC1CA71855EC89327CC806ACEBE331E057
A94B653D0F2008042DD9DBC81539A0C0A0FD20C53D4E52946B065D9B3E42900B
45C44C7016AF55EAA81D52410F0C8CC1A7E1613441A0D3470FE20A284A6D228F
1D2678B2EDCAE7D27D0F5CBCC4D2FC787334F571C6990C167100BEA40B3C3A9B
9D949EB2EEDB5F8D970F2303518F89D367F1C867778504901942F6CA3277BA0D
8CA3576B33B59B379D3463341F976A05DC44686318A7C6E8B27AB0A121152858
B736C06CF123E1D2579A3C083CA880A87BFAD27AD7D379860912916E5338AD5A
133FEDC2617FF4232E949E9961FD8D0DE342CC08D709E4C5F6594659189E0B08
38BC04060B911682741FD8F0CA16EB943AF05A6DAE68EC152A5573328267E1BE
A7A559C2EDDAF6D32F2ED22589CF138AC6C3CC4E475B41D37EB419930C1620AE
EEF1BC130A74A47C3514D7BFA262BFD8DC547BA5A829835A45F019EB4F0E3291
01D0766019EAD0ED3D34399D6AFD324B2A5C37214C2274256709C39C130C5D34
ED410DFAFF1BC54F9B66CD4D84993C3CE108481E853CC710149AAF40CD75A3AA
71000EC535EF0D7B7F9B79780515B9ACCEEE3ABD6E17C1A6DAF43B0509BE0111
C3699A4DB07B932D9EFC4DFCA30120F5A7CFA30DD810B29C84D75B798040B587
FBC456637F3F195D29C3F5295F23D02BF18B672160560479F8645B3D81D637A4
AD7279BA942CB8557E27A96175386AD727639D26DD574C9A1DDC768A164543BB
35033C41AFA8D06CFDC34CDDD04A74670258B445DAA65104BD66A7AF4A7ED038
283C6D76D9559AA54C80BC4039D0C29BCE2E7FAC66A9F6CEBE0AF817C098E34A
DADE44E58A70262FC614F1061DC9AB898F7CFAA7D369BE0E5363CBE674DC57CE
FCFACC099B9477386E90774EC62BC5EA11F097190A4987392999603B0722E376
3C0BC40503F66487868FF2F5FAF8521422CE85B9799BD98DEAB8E82D5B662A16
3E971448C955D4246F9417D29344299F5134B3FCA712092F6C0FF681A2C5BDAC
67BAC0A2B4BE20F066930DA6B2C52A9C8060198738CEA3ADFFBBBE390D0D0C6B
CDCA985C5202020668
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: UniversalisADFStd-BoldCondIt
%!PS-AdobeFont-1.0: UniversalisADFStd-BoldCondIt 1.009
9 dict begin
/FontName /UniversalisADFStd-BoldCondIt def
/FontInfo 9 dict dup begin
/version (1.009) readonly def
/Notice (Copyright Arkandis Digital Foundry, under GNU General Public Licence V2 and later, with font exception.) readonly def
/FullName (Universalis ADF Std Bold Cond Italic) readonly def
/FamilyName (Universalis ADF Std) readonly def
/Weight (Bold) readonly def
/isFixedPitch false def
/ItalicAngle -12 def
/UnderlinePosition -125 def
/UnderlineThickness 50 def
end readonly def
/Encoding StandardEncoding def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/StrokeWidth 0 def
/FontBBox {-46 -226 1978 961} readonly def
currentdict end
currentfile eexec
D9D66F633B846A989B9974B0179FC6CC4458BB4CB99E3608702C78822367AAF8
905981B7439CE8FB33CB4CD20CD28CCD26E661FF85FDF38085D23B0460E887DE
732F2B1C30A8E32F24B2C6E3E2AC9E3958A5A6ABEDC1D2635A123C0044EADD0D
935F314C247C6B76EAC74C59BA3D95D42E67E229D9D8905597BB351BF74DA40D
48D0914F1751374A93CFDB8F8EE2A7A7E92932D51EFEB49DA59D7BB1D019699E
DE373B2E5E18D7E3366C931362919EF637CF35DF18D036ADA8E2995AC81A53E3
19E7D461C52803EC6678E213D5AE14DB22B1D4668EB6AFEA1BEF4AEEB9CED0A6
443919437D34ABC048D2C55B7171DA4B36AC383039800A77CE4CA4CDD58EF8DE
FAD0F086AC04F9F01459DA246F7BFDBE231F0C8855B5813EC19327C35D940728
2AA8708FCA214D5D53E4F4B1E599AD64678CBA541103121DE4136E7614E79544
29983AA285BE3B8FA59C03574DEBCA30E4C480B0DAD706D8183146A5C01DEA2C
0E5E4E4438BC8BC521A40FCC0B339B9E0A530426A77454407B9719AF4EB17D2E
E662EE3C3F9A7A8A673D9A0B5A9D687E9F2F39575057FC8FF5046CB5E721FD8B
EDE656E79A4D4A843A1808D871B02E65399B71C41CCCAEBC675BC89A137916E4
9BE3AB62B8A29A00821F2CDE1E190AB49D8FD555161CB21A28894F9B14107577
8E43798F49D9CB7F5CEB9CEA10B23A0C07E812621476AA6E78AA25E04A443486
0B279012464828B1574DD73E2119FF32CFD953B772BE77D585E89D4C3E1CB0D0
7B4BEF3DE932EF22D5B11E8746E853DFA7997B8FACE54BE96168E5BB6350130D
DD69298B0692BA744E42091A0BDEBDA694C4F02331E5B522F95B9D575F5EEC24
DEF39B24A67A8B036C46AD85284D7AC8196D0453ABFE95EAD6296B5A5923A162
82E9FF0C581673E5D5B7D991102C6E97AB7C155717D6A789BCA3C18182AE7D5D
2A4B444205FB5E7A572B5D98708A35ACBE3CD86BE0E8BBE114BE1D72C5C767B9
D3897CEB42C20E2DEAFA60E8F7A459C006A6F7D10D206D5C28722167AF503945
367A879A53FF42D135E91C105CC31AE3052A675A193AACB8CCBC5D37A0B0B20B
75CCE1272605CDFEF1BD4A8AA2FB383ED315F4F1C151F5A601A20B5FAD18C033
1519D2C8A2B779249DF0A88B8DCC773661A039572E34EEF150D1C98EAF0B5D48
E714A40494E0EF426EEFB5A8A5B70E7711167BECDAE9E9863ECF2D06D0F2DE5F
0CA975A43440F42E3D32827D67E754662CE6EC160D3C9E957C956CF2DBC9E30A
9137F72018A960ED3E5EBAD1C845ED73703920D87105CBE267A3991FC27EE7E5
7D4296547D34550F267CAB90BB67554AAFFA9DE22EAFF00498B61C0BD4BE3553
02881B4E95A073631F84C7FE400CCA599A70EC4F346F8FF0FC475BB22FBFCB0E
F7D52063591DD79A5B1028448A7F244E6EAA28E6818EFA78B7F07AFA791BA168
5B8664FB2B008EC4A3F7FA787B4000E7F20850BF0E572F5D3B53ABAF7D7A3D30
B09DFF194EE721A46059CE1A930BBACE2CF951244022767D711235C56586F63A
E7F133118B2A4CCE81E6B1F85730E19B040BBE0D7BAA457AE990FCF3CFBD4363
314976930CC889802A69810247755597C8F11926E63F66B7902D5EEBD35E00C2
2D706A4076712E1BFE998A80F6D4E8FF75F99EA3AE35A56E4D6ED97D8A4E5BC3
6EC37247F5C277551A84DDF56916810FE49C25F00FDE1054CAE598EFA78051B5
7E61017EBC13E06722735E03B9FB4C4AB8AFAEA2E6086B29E1CCB2A8AC6B8064
50244C9816D71A5B1BC5D47DBEE4D4528F793EC1612EAEF6175E7912AE81FE16
EBCFC4D6B8283D582D1847CEF423815CE6299FDFCD86B88B19A16C6CBAC59D0B
90F5A791A0E4A1CD89F06ED90166B28C05CC1687181320238E41458B00CA0317
A9A3AEC959A3CCE5BC8ABE00D657EC3F7170BAD2D302E9494DCCF8758F1AD261
B532CEC79E09B878600628A022E659B67BAE1DC3F02A700B4511E278AF4EA576
5B0AEBB98B7773A35230E1C619F5BFADB81D37A1403FD4A3CDDCB68CC66A230B
4B87A255A4A6FF49ABBA42DFB2C0BF11DD6805A72F95B97D32FACAE8B2509953
34881B7A00D53B62DABBD916024E7D1B1967D6A8814A028932D8A1BC77089ADB
FB81CE6AF5F5F18FBE439BE3AF0FD7634F696B66F69FB4CEC445325E7E0D0283
DFCA0966073B2691A45C20E3596E2140037B9ADD41F0F21CCF58A408F7C1CAEE
21C93260267BA50E91996C29B21A7DF27321897008C573A9876898D97CC2F253
805352275745D50690B8AC3CD0870745A4829A8D095C49971F6B67FA6AFC42A2
74D543AD30EAC08FC3FB80BF8CA3F20EEBAFEF17822B966A1760339E30454C9E
DCAB12E2064908C83574CAFA9ADF1F9D5DF402A88EF07A26B1371FF056D9CDBB
8813D26A0867DF50193A8074B501514D5FE2D2A0E48F857B78A296E3D12599FA
7038251B88EC4DC36693B9740D9200C4A564C49142A50FA9EFB92A361B16D8F5
E2E2ED7A9084BC3D8C21E36EFC37FDC991B89ACA2E2BE3F2CB30820B11F3D5A8
70335A4B31214740EB8AA06A55FB79F38C69273EB8A8710511714B0C70EB7931
450AF692F3E88E1364C458ECC4EC34DE82C1DD5830ABB4DE209C2B06B453B282
327BDC2E6CA71AAABA78680CC7A81B115D5AB612254644A7AA1B339E32BD1E85
95851854A41F7E46DA372946993513F52060549130C10C5A36971FB077313218
E9B80C1A842A5B6488B5DE0E2E81BD547CEC356688B5DE0E2E8197F923AD6DBC
8B84518B73A0B8D519987CC915AE641A02EB8D400357BFB1CC0154FB86920315
F478864D4431CCDE3F0872A8422137AE606C022B15037A2C2A3E542DFFA71DD8
AEBB724AF482DE9D0AFC285ABD220E4A9BFE787F77F77FD2DF41C56E4219B94B
10CA342A0F8B9E2969CD47E071C502F931B6A110A6246B64D4D7253A22B1DC98
35FBA5D0B7EDE52A775698E236E85084793796479F6399E8A2AEC388B1230105
02A5F5BF7736E7CBD945906D50792D49EE30FA2ACCC511A698BE25FEEC4A0FCB
17E4CB096BD9255D0D7B4982C5A0948032EC9205C12A8B068C1503B2B60D0FE0
0A2FB81B4E0F9E79A22EF0A98D2A308722FEA1A95C04FB3CB6A0B48C326B2230
434957E549F7AED2468887ED202C8CBB6F7E190C2FC33E79222822EA092C029B
CE30DE0B0B0351C9934BA9C3A86447B06C3E7E708C553C2DEC8036CC8AECB3A1
8DAA8052BED9171B466314DC8E6C75A49D4286EC0F6814D7E57ED90BA02E2277
928BE2050FEAE0D23AEDFD6C5ACFDEB8C1D193DAF1E4C2611FCD0057C6E31E9A
834C99FC7922D44BAD201ED97C878EDC816F8810FD361BBFAFCDDD0CF7875C12
EFE1013F2E3F4B91F0B2BD0A97DAF552095ABBC213457758BD3910B0AF99C5E0
1282800B9B69B5CC17734337027F7E16FB5F405D18D2E276646A355F3955D97A
98202C488BEFF5367D84D7440A068D9A798109BBEF4011D6E842DEDFF9C26CF2
C514672004E7F629B646ED1DAED3AFC0383964FD77DFC17F86B7CC777F81544B
33DCA8A9D67402B71767F4B8F1796BED20FA452570AED43BA649F4A1FA29520D
F69BEB521FB81F3AA25435A7A3EC94BBD8610743169829D33869BF0B66DB6ED6
20FEC7E3DD3ADF6B5DA9907215D032EE970E5602E0951DA74F8B2132809AAC06
63283E9C1316006F4C9F38DB06101127A60C7FAD15C1E28949AADA14D3F6AC1F
974234AA05BB3559AFD1642E71FF272C6B7F0CC84FEC0F732BA9348ECDE30D4A
98E2CABD671CDA6188ADCB2EAE8799D1277BBC5CA1B86136C9162AA6FCDEDC73
8A20B4709770427E84021AABEAEC928A9A22053D50065596F4A73CF0D219E431
2A547A2D9CAFDCEB330007A2C71D6D47DA78CF6C03EFC11F8E67562F15CE28B1
D4A0F49131E86195AB13E97E9B1BF3EEDF98702E665A76D096C8665E1068E2F0
53C9C19E842CF88994826C35643C6B44CC191174F6ACCBF9C7BC181FAF4D111B
4990B9B14BF0E87A734E12BCB802DEC328C5FA951870E8EA0CA0D8CEDF7B4DEF
955A3A2BFC3B5CF828496F7B83CA944262A2423DC45EB1C16A31F0D63BFFB7C6
6D2E8C87195D153AF76802EC0544C2519C325B2ADBD4CB5DA6FD5FB8713CC248
C07EABF27726EAA536AC73F13A194CD98F3493C3004427BB143336C2430CBC14
8171F34E211EC2C0A0AC66E7E6E613868D84125DE495B915753FAD9ED2460486
F01F861515AF50D664950657D58C092FC699B5C401CE0BACDC8A3E3B467D075D
4BC8C7385E322F6FE678C19B95D10304A255047E8FE5B93FA4351B87AF8C71B5
92E158164195517C69AB622D7D53AC3C4E3FF25D5FDE77DE6CF53FDA68E8C76B
EFEB458A47D18CF76557E433FAF29FE7142F734DF1992A96AC19179BC09EE5AF
918C6F2726C005B86D0A3B3BDC0282377906376FCD461DFD5F42BC5429747673
2DFEE53FFAD4FB0D520E4DE2825A488D9836F4CEF92A07427252BFD498C1A98E
C2CF0DEA52AC78FEB607F1FCAF5928E2857F091924B0F47CBF96356791CB8662
E270F80C4B3F22B8809A97ACD848F2D1FB5D5C6B65531B5B6625C9CAEDAA58F8
561864D3922C39D5AE5B12CCCEB3F3BBE4B1F0AFAF41A2EDAB8F600059D75AFB
234C19F6BE867BFB402AB10980907C04D760DE994368F01D5BBD957836871A2E
8C00C1DECC7FA64EE00E4ADC0F3A191447CC0F6EFF69944F95617A29D0762508
1C9E25B93FDAE96F693D9771B30B01B052FF276CF1BC385C846F9C5819FF847A
31E2777D006869A9C658B4729A5A2DB08E093FED142048212DF94CE541B97008
2E80E1622FE47CFF24706E24378959B9EC5DE44B314F98990D08EA13DC91D1AA
B4ECBD8892B6589E3E3794265F63E5F38AB7594CD514F01260631A7815F44B8F
A9B1903144CBF9DDBA4C0184DD7CEFEE94B4B9EFBD92316E311ADBB30BDCA0A7
14998057A4D3E1D0C49D3AC1B3E04A591FE61DBCF3B4E3C9D23A2E2480B3D38F
C5012618A1504EAC257FCCE1CE2E4BB52781F32ECC61A390DDC44562F2580C1E
7A3FF47CADEBC2C282241F924C83EE735E2FCAA20B480CBCF538982FB93E9FA1
8D770D0A3A040E3FCBD9AADBCDAFCA878619ADB941096DF52EF74F00FD91CB04
67B6E50F0713090B967D7C5CEE27F96A5AB0F3EC5FDFFA32929DD87FC66C67DC
A3DC6F12CFC98606432E94623C5CB14D22A5537A1E27B5A28EAF768310555FF7
80042E896D093FD3AC1FB8F8C761C9A4B2618576CCE26C32B1926D3755230B48
32922CC526EDA40DE0B6B53E483B5A7C593CF9805700B5082D96B837A7B477AF
85915A69AFCDB9433FBF24DA77349A22578FEBDD2815C3D77AA16C8F6ED5AE0D
38A2F1147F7AF5D161969D6C363CA07CB6B8C4E8685E9267E899B61EF7F541B3
2965A3A6C6458FD82F0C96D5457493618110F8837DD80D0FEFB7876C29BF4588
3DEEDD8A39984114A01C345078D2BDCC5B7D3A1591EBA4B4023F2CA978C872E5
88C68714852A4D05A4ABF9BAEE1A37596C5DE2F6800F3748C7B6725E4772E5DD
37D1EE62B543FF2B15EDA4D7FB20D10D2C23331CA409A69B6C4A7F38B9C91171
27D631DCB35D3BD5C1261CADBA3F6A4101D1C3883F49C954AFF868E7481B9C97
A9093C58A896BDE6A61A353D014A6F26F25937B6AE03CBFC35787A7B021F8F15
D517D6D636187C783026C7990817DA246E3DB937D61151C119F05FDA13F39A65
6B1AD55C1B3E6A9863FCBB16D1C5CD2EC1A540CE025161BEDE285B6665BF6603
BCF7ABA1F54345D20C0BD8402F2521B3E2396B179803EA4DC3F2FDA8705D3851
B17DA9B18A5D975CE2F8A8891D0C2900D7B0F2599BC923976AEE32C709D7D831
5ED2D2B0403061794F9C99FD23CDFE4579A1E1ABA7E589E36FE118FE1F53F074
60EBE4C8E2F26DEC9C1B49D0993BC18A0A4B6F0F95BF25B1A58EB59A10F1F014
2E60825956C344C6874AEC84EA6AEA695803D2C1156BD04E8D2DDCE114A9E962
5C28D22DAE4ED5BBFCA80728AADF7EF9D298508CA8A372CBC171C5BD813ACAE1
401E28734DAD038670CF837480EC5CB2313926950165AF3C8EDC7424AAAEA36E
8FA78B26F81816363F624EA43F88C2C0AC43716F838583C05407F5CD3EB9FA76
0C4D040956E9A6EDDF9FE1A008DBAB638CF276A4F0F9F51E5A70833FE51A1D4D
A46E68AF8834704319A63654C32F6AA7621175F99A6E713F8748F5B29C5FF114
437EE49B49865A72C8B9E368F103749E290F216DC992277217CB823177143C62
835E4EFEB8E1000379B24B5287D4B9B361014DFF744FA82F12C2D63AF1A88FBC
DC03857ECD526BC95EE3A2B8F068E5B022C23D6F0456C981B789FD74E16F8B90
4D7CE198F0709E44081BD266C6FCD40E340B26B30681C777DA0D96D6052FE2DD
9ABD9078FF8A74CF1B319B7F98037B9C9B1A0D340C2A88BCDF9EE7CDE3DE1EF3
BA3E9678EEF5739BBAC8DBC8D37E0EE78FC98A18EB559722AA109FD8ABDCF633
3A512745741B7CDFBBA3CB9C26DA778DE6CC8BC09EB545E33E83F69C1A24DE2B
C41B46871395717217A97A6E981456C59EF40DB495537E3E6FDE55993FD519B7
3A04A2395F235AFDA00CAAF181D253D7C36833DD245C5436BA68FB59CE593C4C
C30021208625F92178886C608AE765DED3DC6441160175C91216D15FC67A0971
7A8F484E4E9B6596184788BC6A1A7E172ACF5D7C31EC9D9253885A3D5D426E87
F92B5535696FC3201EBB645C61CAC01417571419A89B7BFF80CE1629CE0C412D
CE48066CED979336AFA72E638403BC238B96CF531F5BA8B511A278F437E58309
A09A1390E882F5A99140F0796F8EE6DDED06DA08D14DB9305953465FDF49E443
C638C182CDA271D3338CC74D4CA5599B697B0DB9CD6ED27C03A457E3BFBC6FF5
76A49EB08F76CBCA77D4D52F8F570BACDD214EE47F53FF154BEB7CECE1AFC190
BC7FCA3A1AA52EC5611F3758C7D23528C22C6B38BB11BE04CD269924A6A3018C
6FE4E3456DE3765DFC6D7447F738E23263937A324E4593B70FF50E2FDE9C267C
5E06BBD86490BC34389B21D5F7B63BB312A7A23504382FC27ED070CB3E35643D
580A68DF10EC1F05C4B63221862177F197F15F63FDA3D4762D75C0EB7168CA65
2D74FA7A4AA0A39B81F87F17FA62500C6BCB74B4DDB0F6DB0F45BC75E73A1CB7
42ACD5D52B1DD349163676C779C5E37A993A60F93AB96F101093FA5891AD5C9B
2388912AD702488F7FE23D295A0AB12B7AE6DCEDF887E810F05491B907E3249D
F846524F3548C37B6CB395A9400204D8EC1F9B76BE4054F10F3846B9997AB29C
C6FB4C4E81D10976E582B70B7D96865FF118F2EC3249B0DE91C176BB31AE0CA5
B3C9CDC93D17403066ECB89121E80090D1615DC8CF0ECAD4ED2DBD08E18ACD6B
1C001BB8D7DC9068A34B885B0B35CA79664609FBAC0244FC97894DD9D8992BAB
5A165A12124FFEAC77553C51BAFB7BC1864F28279E82A4FF5087BC954EAD90C7
08BBFCC27098D23EC3C450903158EAFA0F163886BF4BB24DEB24CF225FD420F4
56F3F065E3CB6C3F80FB9AAEAE63A2B300C94ADD95FC20BDB78188312FCBC5C5
D590C98573421A724BD2F4C6A1BF053CED4D6FB76614204586BDA3578D22DB0A
1670A67386E51A38E86771E1997046F8546AD9BFCA1B8B1EF75825C2EC6CDE6C
207921996A670697C69B25F98C9CC7B2E75243DBB9A0E2FC655FCC94E019E3F8
100A818DB83F3245E4A3BAB256F5EAE4200BE86C3E2469E05120CA8D8C606B13
49D14BC22C2AD000A7799688D4734032C1348B95BE419750151FCDB1E7FE0FE2
41CF5F464CDC2918CAB0489DDCE8A6B359181B4F37E1BC5AD0D08287B8364A74
3D9BD7797A90B69B20D3A2DE900AF847D9010E28DB8ADBD31B56027B0136F69E
D8AD5BC6D1849860F06A1E326FA67D066A03A7EC75662D2C69372FD22E660590
65E1FC88F44273F260617B8000998DEA1E81C52495A51C7CB567C2B40A2E36E8
E0412119F5671C526B56986AB84D07176AD246C3BD6F8D503DC745AEEF19B8A1
5DE2338F87450E376E6A058DA54671ADE13BE11E126038B25FAA1E9B207BA5DC
7B15AE478953B6D5C7AACBFB9FD4E46024816DAE80EE7CA9B4F68C49C64397AD
DCD2C88870D04E719B52E041064AC9CD769EA6165142E8FD852899B8E914C684
6B1710F387955D9EFFBBEDE1FB6C8A590272DF8197B4446A1EC90B14D2A9ABB0
EF206DCC84BAE29DC18FB2233A129E3919D38D067C7369BD25DE0BB4DCAE7428
92DA03EF8251B1BE7AE04C0CA350C71EBA63959DD3FD42BAAAAF50F33C309C76
618738308D39CC160C7D2B071CFFA792C7002E4EC0BBE0D475F3E0D5887A8343
83F2375ADDD0971663197B37188B3F494F898277C0AC298D9DB49E009256D580
F63197B3BE494349BB1B586B1AAFB4E31B4E6C689BB54227FD7BC1FB59332F7B
C37DDF6DC0006BF19D8EF0CC1D8120D3B291ED19D422F624A59FE2D808C32250
9550B37A27F1C640CBFA9D6884D973C8868B52EA9ECA37FAC7A225F6D9619B99
6F649DFE6AE3CE2B595B073AADC19543A80CB434D38A26A64694DFC9CB370B5C
871E5F56F8A539E404AEE2FFB606325BEF16B1FA0B374D194F984558314A256C
554C63BEF1D9FBE2AE1D7EB7B88E89F96062D4883163B01D37D363139490B630
EE4DA992D805B29D84C849F58F7117618A9ADDDB2FE4B33BB2E2FCA48AAAE8AC
689C191FA0A952442F9E111207C3C885746324E42D3BB0EEA9528E5B692AC027
45CEAB858134B88458982E63AC66D0BDD96C88817DEBD5241E89F4BFD33EBB86
3DEC42922DE37153DC20B9D8E7C18416DB66BE6275511E00044EB9D6E9765848
7458694DF4BB1CA1AC82D23C32B3EC010E730CC663CD997E2AB7D334A2D26866
90E55E6ED5D4DFED9E0838CB2FC2E4E84B3AF40166011A30D3721E56EE70492E
3C8F4166A65976DBC84051D64D53DE9BA16E3C7D49BB252F05A436F9B64B67D4
AAF17220066A6A87BDF4FB251B940BE3C753C053EB516EE47BE7DCEFBEA1576C
0730EDB15F6F26B2DC9C6B19FE345FCF8F1E35448577FCBC833B20403A554FA0
6AB29F4A0504DE82EB5FA4F7B5DFACEE6C0BACA04D67CF1ABDC3CF01CC664160
D87274C4690FA61BBB8A580F4C9CD3FE265646F6E4A71859C87973F483C3B8CA
F045383306CED3825DAB6C6EBAD0FDD3F6E025AA145641710FC2CE22C34CF790
551D1C46AFE2BA7DEB0E95E5C800F7B8D0741303E40B347216321A8DB1AA2629
6CB545FD263653B22F5B12D4F1E69881A8BB7FF25E58AB279AD865D3E5BCBAF2
BED6B4EC91B83428AA996680AC3324AD27BB940F9EC37C3FB5F1D3FAB7A698C8
2D5611FCEA560039DCE33DB22C073CA16242DE1B24F8D9CDC84B810A2656D261
F7600746F71F355898F87100E30E57A7B9FB492D5FEF900D38D721F88DF65D5E
946C65A4C35841C2AC15D9C66AA6F3DBCE665DA9C303B8055FC652B3EA6C886B
0615B42461B547A9A65EC6EC83FAB0EECF2CB56EF8713B83BC6677DC1D0BEB39
9BE1AB100CC536952766546BDBE7BD4E1471DE4536ED41936728D6C1D65F381A
2A8D1E432A2C5F1028DE6F768B0B3A583DB75106DCE52989EE3FF0743693F536
35D5DAECF77E2621AD760757753403E4F853802BE679D44BE1616B224DEC1F46
6ABBE25F62DE808CA1AE16EE3065042DBB41CF3E4A01E824C8E5694CFA9D42CE
9ED2AE839915454E65035B1158CB9A9DD667902D0150E97A78309881B2701538
F8154BD6448375D83484904792FA4A3533A6B0A5A39B0E0D39CEEA91B5688140
2F07562905FC6A562CF733BFE5EE43E969BFF4891BF8C2F79CC9C66A93AFD1E8
0B1173529372AA63A2ACDF7B66BEA904D529E005007E30E5EBF4CE82ED6318CD
3342AFA8C2997AA4650A0450E7DB80351B54AE0BA1503520C5D54CB21A5BE50B
B39E499346B2E5DDD0A830BC9FEF9670DE0521FBF9165C38CA80FF41B8EFCDEE
684313C171B4CCECB4D67BCC0CA88FDAAE688ACFE4B442D74FC178C378FF2920
AD491DC4993826F8506560D8DC44A6148AA1D8268015571F75661CB12D65D598
9587963E2451CDE071E88167339A5C647A2DD635CA72023AB7C8922183D3892A
8CC337251B70D69D802FFF174F4542587C63986A42B54D9F7F1EE63F8E8D9DA9
7B5511FDBE6AF633A517A2A5FEF902A5022F851AF557C16F2C5A93DFF138B0AA
F4EE462228AA28FBE8F88C977DD0EB7BF13CA419BC2D382349201491E511F49C
27C9B919A212F33F0051FEA4082EB3348AFEBA93505EBB14399868C99D30E201
0D1ADADF1135CE2560B65F422B9179CD0F8C738370C4876FF10FC5B8B5B668F4
9A6C669965C394FA8BAB7FA82E77EFC996B367BB79E694FFB7EA60E4785892F1
E295777759EA267A9184FCE49816FB7627FB3A2D301EF353CF958AE2DDEDF0B2
C6D55FA9C1CC263B05EBD89BACE1D1F81A332B982DB2064FF1C919F9DEC26A68
9C4E2B6A3693799DC150DD52FF8E2090EE099748019506EEC3CF06372A3CB066
9819BC0EA931DA293B0C76F514927BE98BDB14F2F3EC7FE0BA186DC9F7F2467A
6A1749CF9224CEE5A7E239477479688E4E093BE5E4E23808DCBB9F3140E55C62
B2E2367860FB22F3F2F1BECFDC5A6754D022D2AF881C608322E2F1C8DE42D36E
A586828C9D45CBC37E59B1DA90C2478983EDDC44A62197A93C7527F82404A36A
FA391CEB0963A268AF66074797CCCA4FE1A79C1DF992C7C675B14D1621F5C324
DEB56109FEA31E592ACF1335D15C8042ABAE0FE583734CF4EB34062FA49AB90A
F028658E6703E2B17779E029BE748CEF76158231CA2C71A87A9DD001D3BEF8D0
9021E4A0527BAF62AC98EA89EC3896FB5CEC12D33C10AA8F6B7D85B5BC672F96
27BEC800A3861FBA8AF773DD3AD3DDBEC1AB6374E1E10A9648D33DCBC1F0A9EE
6D9E5C61CFFADC53835443CE3A877E7ABB81D4B4B19D9D89D9F437A48BCC02BB
9749B3725E09CFE23D323472F1BBC99E0FAC6D53394EAC35534343E3827B5D68
43088507A8A50F4CCDC4E776557BADFC959FD4A6A7CB72275E476AA4BB9B2723
F86AD5DD1F0D91866052BFDF3E7C73B00F4B2F7EA3F002802820530D2E7F7625
522127AE6D56CAFC1E0C6F9048DEC1CF88A52C612866B6C63422C1648E964D86
DF7794A3DB160297277F53E5450CB695621FDBC5CD49AC0256A008D946532B72
31F0821422E5E7ABA91AF4CB1A21C8FC2A90E8CBA6CE75C40D0AE857595A3362
71BA46D06564E9F7D6A424AB4A52438C46147371FD1EE07A8A430AEFE34A4EBC
AB29B7063DACCA60E41A577F08BB990858E0366966388285EB6B480EE166CE50
00891124F99B5C322B7BD62F6E0599A4332845731BA80D7BC2338AC8975D40DD
012154D06FF254BA0B1F3D01F21AB752346550D3C5195DAD722D7E93C76D3EE8
7F229B4535CD104D3187258F550FB26677C0AEF495E36811653E25B2065CF74F
343D92B488CCED4B5103BFDE98C3C9E738AA848C7F2D01AF16C84CD3856766C2
198F6347647D530BC65A88EBB8AB5F305E4E592E043E525FCCC657F265CF53E7
07C2239C8D8ED9D040A4F606C51697666A1B533B5B06C0132BC4B5170B9F188C
7A7F8E663F4BC0918012F8FA40BB2B062C48DFD35685968587D0C7794171E7CF
5EB7611DFF5BF40303E28B606948C39DF98DF9B0F2062B7F50A2E9235BF5908F
C0AB02C4F12F948C8B99D489A3291B2869BF30D7FD97DD4DAF06EB5BE147C858
65614B2550A2D10759A70051588904C1C32E2590AD4706EB87ABAE6ED397A68B
EE6461D2EE42C5F71FC7812516C24C0C7D18C4FE4487F0641B3F7B198BEEB0CD
E52E38FBBE39AE9D8DE4C5109329FA2976655812EA036782681EF2A47F34E893
B8C01B90D08CE633F93B9A211B2FD7018541F6AC45E916D0EE2F2FCF40220BAD
0F0D5A8609AC527278C6917C23A900411ECE18DC74BBBE54FC3D45BF62203313
ADF7CECF0AB145DC2092F328C63E2E6147C4ED394AD3BFE0499BD929DD1B524A
15EB32A187D238311914FCC61D3610726C3513ADD7153A9BEDB341BE62ACC827
35A14F1B2301840D179F978D10258D179DD8D30F14FE3015D0B53B13ED12C945
7ACCC35798459B32B409EC9E6EE3B388B967846F430142E91347323F91C13AD4
645A28B0FDAA23D7E498170574A5D08DEBA49C9B9C9A9AB345E063C4B04192EE
3D550DE257CDB3FF77D03070E41D854AAEFB986FDB7A44DC4DEA23D3FBF0C18D
8C9D45F3322CAEB473D37F087D57E8CF690833D43DB71E43D5B7E224BF5DE6E9
6A93D4A2155043DAFBAE236A903022016DF8F58C94BC5ADFBCF0F37261A9DA03
2C3FBA352A9F4FC592041FD43BC91BC158AE392EC9C2245247F28B5E7A3400FB
29DDFDD40C4EDDAB006DC78F99C7AAA3E63D7956A84AAF908A0EFBDBA47A1A94
D0EBED7726AEE2F492C1CE1646CFF6E21190D48374185CA4BF60D9F0B2A2844A
5E57E1BEAB4D3FBC5DC260B1FA9BF388242132B066AD4EA20DF70F66D582209F
CA98D1
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMMI12
%!PS-AdobeFont-1.0: CMMI12 003.002
%%Title: CMMI12
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMMI12.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMMI12 known{/CMMI12 findfont dup/UniqueID known{dup
/UniqueID get 5087386 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMMI12 def
/FontBBox {-31 -250 1026 750 }readonly def
/PaintType 0 def
/FontInfo 10 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMMI12.) readonly def
/FullName (CMMI12) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
/ascent 750 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 58 /period put
dup 59 /comma put
dup 62 /greater put
dup 79 /O put
dup 84 /T put
dup 99 /c put
dup 101 /e put
dup 102 /f put
dup 103 /g put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 116 /t put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3C05EF98F858322DCEA45E0874C5
45D25FE192539D9CDA4BAA46D9C431465E6ABF4E4271F89EDED7F37BE4B31FB4
7934F62D1F46E8671F6290D6FFF601D4937BF71C22D60FB800A15796421E3AA7
72C500501D8B10C0093F6467C553250F7C27B2C3D893772614A846374A85BC4E
BEC0B0A89C4C161C3956ECE25274B962C854E535F418279FE26D8F83E38C5C89
974E9A224B3CBEF90A9277AF10E0C7CAC8DC11C41DC18B814A7682E5F0248674
11453BC81C443407AF41AF8A831A85A700CFC65E2181BCBFBFE3573BF464E2BE
882A715BE109B49A15C32F62CF5C10257E5EA12C24F72137EB63297C28625AC3
2274038691582D6D75FE8F895A0813982793297E49CC9B54053BA2ABD429156A
7FFCD7B19DAA44E2107720921B74185AE507AC33141819511A6AC20BC20FB541
0B5AAEC5743673E9E39C1976D5E6EB4E4D8E2B31BEA302E5AF1B2FBCEC6D9E69
987970648B9276232093695D55A806D87648B1749CB537E78BB08AA83A5001F7
609CD1D17FFA1043EB3807AF0B596AF38C91A9675E2A53196FEF45849C95F7DC
182A5EC0EC4435A8A4B6E1CDBF9A5AF457564EA72BF85228EB6FD244F2511F5A
CA9B71A65D53CC06EF5F7EC3A85106139A4D312378BC22183C09A229577B793A
1B7422611C03E84BF809F46C62CE52D3AE29CE01C32B202ACDAA5B72733EB0AE
C31D7EF7BA88D2D14F85313F7A8B9B7A5B124B03AB923744D336C969E5CE304D
3AD977A46664479EDEFB69F113024E761C05FA48A54072DF9E12C2F352ACB3E6
D04F6EEFFDE209E7FA3DA22E5B1D1409461F4286B7F4F8251B44E5CB7805762E
E129FF4A06A7458F3191926B1CAF70E32C6571AD2DC07C34FF62840896F4D200
761B1A7FA356526D1E3AB4C542AF13623BAEB9F61B1BEEF79A9205B1FEFDAE24
8799D516A9ACC30BC0139C63C9A0523E9D5439213B67D490C96F902958779B8F
68BD8E9FDDCE8A3A2E35877DB6C94B7612382ED8F218EB1157D2ADD090A2448D
10B99FBC9211C5629ED1C61C74FE93041E5AA03EA4AC3FFDA00C2B6E719CFAA4
262FE17F66804A6B54D3669836EE4367D2A2991580C5564463C973CA0DA38AC6
922716E13B4A807B50304B8826CEFEAA47C305FC07EB2AF25FA7945797237B16
56CDE17AB0834F5C97E0CC5741B061C6FF3A8DD1A79B9A173B66A6A750538E26
32FBC92E75BA15CFFE22A7302F47908547007402569158F62C29BA2956534FEA
7DACF1E507AC309DAE8C325F2A6023D2FBD81EF42146BFCE6A16A6310A650460
7B07BB7647C8760FADDF0DBBCD3DA6CC4645D1732DB3A22D8B76E1D2D48E4D4A
46F4BEB80CE65F3517283A1AE08391FD1C10ED452133706BC6725AABC80107FD
754A8BA47B0281D479F052CE26A723EFFACB79B213041A536542AB334769A2BF
88505D82C498ABDD5A73EB539530F47CAC52825D16A969C8BB56D4A7F2830B8F
CB63B92B576E7BD922A4B25E634751F8A3B7C4EBAFCB373EDC8B8281B1D1371A
7844E9AD990CFF09F0D7ED73A5CF873D2D5C9E8A9923CFA31E1A4B4CCCC40760
8B3AC8FC3C88BC08BD7407725281BB879A1A822D94997826418F1B89D303F2C0
BE7A0102E6F529630CBF1BC5BF3E4578C164A3DDE45E62A957EF3FB7F0FBBA6B
CA1E79A1ED195B6A11CFB345B663C5E72FA55D80476F604F6C4257B51686AE25
8F7D159FE605DDA0AC74BAA5034F29FFFD403070013C6E2D8EF6A0990D91173B
D5A3AEB98B64E412991505C3CB7C2CDE13C091FEB3DFBCAF30C4C19511102300
135BD5D444BB55692013F52056908DFAB2ABFACE81A58423ACEC59344CEF7D4A
C5A3EFFFFF70759BC3E593D878281225060B97D1BEE6B26EED90571FEAFA1812
1115C0EEC892F5DE6FDD68321A0B3F10A2D771B79BD85476AF6018472A499A86
07D64CFF4550866AFE590C471C80EB12CB3A989A60BC7BED39097C12D9286E39
14C7952C4C64820B4DE44A1827B7B0B535244E93FDB80036D6332F90F95B472D
7031E7E3819E881BD0313CFA112EB3AAE943C99C47635CCA7E34DC0306C04E5D
2E9F60FF037EB11602BE74E8E6B711392E866E3E55D988F7C856417A2B9C186D
639819B4786D039B77F8578EF63C088FF28BD08D8353031445C8498A8F445BC3
D08923D32AC04BF3CAFEFCCC1E77EA894F4E846F47EF62D6841B8D8576FEAE8F
90044626869D04D61D64D56E8C51AF8C18D6CC3FEF3B6C4F7D56FE3260354948
10104F69B117FB8269292579A7D52FED688C663B643D8D99F13956612271073E
1A337AED059B7A93819A28CDF01569CBEB51069D22ADAE25C47355560F402B2E
8C9900DA82B79C64497C8494F42FABE5AC41791C2010D98FB7E593C744F250DC
D837DB0EAA4F75D0016970F3AE8359878A08CF9A697A06C5EA945819151265B9
1A12122B98F79185DF852257BB4798E7DC03712EA6ED34F6E6AE1476788DBC33
9229FADB8D581BE1A63F596698DBD6DB98A092F67197A4FD4A50B648F2691875
EE2495D6BB310078F516785A0CEC7EB6E8305FDBAEB1D15690409FE32DD9CFAE
DBD3866FB63EBCAAB73E3E4BE5D7F3AA44793938AAF3F8341683F0790F1D46A3
60CE083F9BEDDA22E0639A92393960F86602216FA51E2754BC2F4CD0BDECE3D8
FFAB7E0E49613DD4956C9A10AEA798BDA1F756C755BEC12147ADECAB0FB73B7D
203A11D84DD2AB5AA98FD38C1C2573570FD49A4924A94A106D2A7D850E793608
FB135853E8C4204441CDBE697FD0CB330B1C3596F32D2BCBF263237EAB362D09
DA6F531B40384DC91F30674760CA7B64BA1968F6A7FC9EBEF431A1AFC5E76D7F
2D44DCB7F61C7F6B16196B3E8B47343F572DBA8B8B21B43E35BB6B2DD5C7982D
244FD4304D254D6CCB5E8CF70E77F50812F41A988EEB3B26BF0F6F69BBA18077
31134B5A5823D10FEF6201D045AEE7A24E0F25376E9FC66340C56C05F6CD810B
724D85CC4BB8D789834A447CBBA159565D08BA5793D8599035BB5063271518E8
F6C50E7DCE71B1D186270DDC860C6DC0CD506010EB5B1FDF6BE47A9A18CC15D7
D657E58BED9EECAD5CE5D49F63139A39BC52C6584BB2C3264D51BD584B40F8EA
AFCD8B83F548594386EB2B05CE803105E84931DC6E7A1398073D48E130E0D907
CD0F1ECC3254EDF5D4DDBF44415DC9BA66C673820CDB0FDF033D59BE2B5EFCEF
01FF9D33EDC88F8D522E07F1689D024DBCD09A16A63519E1764C8630FF36058D
CFC07027E0ECDA01E0E85B166C613B22F587B4D355EB018BA93E92A36007B4DA
287FF5A91F7D8A0EDF5554ACCF45AC8066E88865C5692E63EB99CAC81367B605
8E6C19EB98EBFE0D2D161B447B9A70CDD1122C7B78A413369016E6D8481E2AE9
9AA97B5DD0ACC9B0820F7742CEB2F46F89F3E2092621969A88DC0156B4F941A1
6BF1546D4B136657C47B082A8A35FE96016BAF3D9679B8C32EDDD6AE6DF3BFB5
7854074FA019707FC22BFA82299E72ADF9A980AE29A8E2434277E58B01F6B03C
192E1E25DADD49F6E3F69799AE62B56E00B60A031BF8721DB8B2CB6D4A4C15CA
AB1FDE010AB7DC0DDED977389B101B8E53A949222FAA126656E02817DD32B0D4
A49516CEC2B97EA7C78FD66229B044EB92F502384BCC6CCDFFF995EABE3BB7A9
50D5D1AED861E7D3BA8D333026C673C5762712E763E59261426044583D789C67
A606B96F97663F92BF104CE02FBFDFC521EC0D6670B7D4F85A229F51426DE912
3B729C4A535FB7C88D0A5E78074751B58885DD6BDD2DD9E9C83F105E8CF63DDF
CA7DB39D0319CA7CC2E73F42747F007574DE25AE1538B4D493D22D0D5F0F80C6
5F6FA3937C8391DE2F0116F81DB2DB0EF751EC838A7F85F163A6F48804E84B96
8D715EF25B7E2A5CAECC558D80F421052A1D698F3B8452AC27E30A4E6226E3CE
084C8A83ADA0818A110923CF7AC7AD4CB92AE4ABBE0A9EC1FF935FD02774C1F7
92A278E513012AD17722A23C55EF82E18F8847B5CCE47F4FE3EC508BA563F7B2
AE56C94285A18DED4D432FB0CEFC05A20BC17DDF9FF919C724810A8ED7358A27
97EC93C1A13C443A91947FE1F6F528EA7B628917FA7E554A1D7B31ED46C5ABCF
92BA57961C8876DB4041305EBB029B03D8351D5E2819FF87E97ED214D8F1CEF5
7F7668DDE223721C0B810F4A4AC81CA4EAC86EAE546E1B15D91E626FB9A31824
5BFF17C4E79FD56ADBF6DBF01BAF6453A81EBDCB38A5FC0FD0FF0646B3B0D199
13E2E59A1B5CAB6DE5329BE389BA0E2A2AB55CA40B711ED746C24F1E48892E76
6DACF7DA163CDC90CF076763008E7A899870CDED5A80758E6177BE6B93B07EB1
5800A3BF7B9AAC3FA825CE594EF5B7546B181375FA8F37608DF17856D2F8EBD5
6030A9E6F6BEAF224AD2AEF76D03B023E2FCB922CB8E3C6816AABB61FE6E4F83
F21B4935102C860ECA03DBEFCA461F0E5B93E5A8D18440BCF7D1D6252A24CB6E
A64FDAC8B67C4888519AA368D9C4A8C08C7155DF5BACD75C5196C571C3C456C4
7CE8D90215FA6EE8CDD72C48740F7F5930EC3632DB63A9C8D2DA125088C0F05A
9FC83D16B7F53163F4EB6FF372C6C3115F1E68EB35967D11126EDEDF0BF80817
E68A698183B3EB0A207DB43786E1B9D289359D75AD5E465328CAA90E712C2962
AE2A466173F2FF30EB535A6054BB0B875DC8552C16B49DF17CF84D98D35497BD
F55E273FCBB0C735899529A69990E09149FBD2DDE64B7FA8D50AE83925DF03C8
0B63EA158FBABB12A028803DA4B9DD6C48C0FEC469C4E730729F4BB420D5B003
1918B4AE9CF35CFD31E8E62A44C0484E3D00143BF1D330235E821E5CFEAB4D31
7CB4604DB1F310457FCF9075A3527279644D908DE847CCD00B6F50DBDEF91D3E
38238CAF550FDCABA2C3A46237218DCC5A09AFAF69997E1EBDA7EFE6FC99ECC8
5D4AFD5EE35FE2346BE79B499EC8EC436868154A947D13BC02C780EBA4B9E64F
3026F1BF5DC1F8D64FEA1281EA40B4BC355638A3A59BD9055BCBB232FA45EA0B
B405131B64F105814019BC55466EE78E9E9ABB62DB30EA452F7EFD7196C76A85
15B2CFCD89922CADC0F392B0C54A231F3999AEFB53C24EB0C63B0C8A1A1ABB6B
AAB2F93E5ECC7AB90EADA320E918106BAAFC1F8C425C617639984629018BA674
6FF4F338AC43E23BC3740542911C058D43A49A11CB3A0CC8E3088BB5BA6048D6
CC2AD250DE956BFBE83BB24C945C20D9C22E7105983F284EF478F9B68BFB0322
EEB7D62802CBAAEFF1C2332159DCC7243EA40CE15C734EA905E04C476B178B82
A08ABCB0B86A7330C75E62EE7844C9E22DDB013ADDF20AFE08122EE1B930A81D
806A0F8CC584CB7FF5F56F9B35E5FF78FD93E7E4A40C64537464EAA275FE88F4
461FC6A467C8A69B9A9FBC10D44AC1B753D313A8E7D97F5FAEB60F82855658D1
4DCEE043C8FCDFD8A29DD091F3BA55874A458B2B8989F35055C72FC411382361
9AADC717E602B48D7C9521D3971A6F7EB19D539445DDE9EFBC5B58FA9E5E426C
172C45CDA24985FC4632287FC3B15849DEB56F5A061993AB10A6BC59868534E6
69888175053108B77E4978D971B4EC57224C0F93EEA4C15AE92254140A94704E
ED5666FC06C5341F643F779CC88A9E81891565C63B6F7F6286E664F4E0A48690
356DC96F1B98026C563700772485B83BFA06435D4E0793EF822F423C93FBACA0
E5D889D2B76771C6F0EE997A5DB43C2F6921132890406E3C33F6F159B14C5D78
7C151BDFFDD02B697315F191B5490073EB418A4FF2A398C68D44F0CD1B87CF9C
B52F12728B72F94D752D23151196A256908135C87991E508B8906CE2539DCA8A
31F86809C8C6C18A09F6129BD7CDC6B37E76B648788056851F22BD3E3B5772FF
EC01D822B57FFDB3BAE624F05531292641FD6A7E3666152D18F6C653048DD7D7
98A942C840C4A0FA662F260B21C64214152BB86F03662A330109C5AC0A5EBA30
C6201F558858130703DF76AF4FBBEE069BDE45C0D9467077D85FFED4F9BA9C61
AED87D67CDCA453A6528AC5BA153E1039D9CCC556CEA5CBB542265FF54A1B208
E0E13740E7E7C26AA00AEE909F8F3ADC2726081A744D8EF6BB711BF5F611A900
76F91C26A338DA13A7160A9F42410CCEB3190000D963D036FDA05A29F598EF40
8FAE6F8E7E6F50C99C3304A573501C13A00023085F057DF331E3354CBE65D573
CAE73BF15B3B96B502E0AAF2B4A86237E98A997AAEFFF4227D5A26E8972C48E7
761F430733E6EF8AB2D903C17FAFBFA21C25F8A0AC157D397BF3CC1AE7598F0A
2BE4FB46B29443CE57F41FD5F91122E9D86F903E94D5B55E2BB95949C156D138
89883BEFD634311F9280C7F028DCA6408D3A682DF5B55B9F7ABF08F019190F60
D39E4F0E80F0594235B09A5320109638B938633A2C196E4ED2B43DCD8643C3CF
C6123B076B7F73352F906D96FDE0FBF50CCCA432712C574D5857838BAC30B485
D25024EB254A7EFE57D1DF0892C275CDB3DF77602F0FED0FAEBC644BCACA04B8
B424DB125E487794CAB36E01B5E1A26F5E1E97A739AA36D77A12F5B45338EB39
AF36CEBDED55DCBFCF497FD475FC6BAB5530AD6153C6BD982564EE8712185F1F
D5EA7ADF4104661168A01994C1FD773A50C8AD6A3E4D332E4D59521BB8BBC6C3
866EB4AC3EA4532477E6CBF6BBF0860031C3B916AA25E3492670EA67F55CF4FD
207C684A0DDB6F4AD21B2909CBA71BCE2E762012B0927BA72367A6AE0AF87F73
756C9BC85E4EDE35317E2CCCD138C02C7A8013AFDC1A48C3A4BB8EF257BDEEA7
60E012F54D12D31D18DC59D5E526F12567B8688B4B67E16B56713870300016BD
A3B9DA87FDC865246AF8E94316799110D86B1DDADB8A673402D4226C519C058A
1D1E5A5778584FC28AF12819B1924060BC4F54B1054EA6AB0149E04B8C4302D4
A56D8A347EB5D3D2A0E12CF7E35059BDB53D9FF6BD25F6D9619BC4669CFC1048
C6C9978B8751B840F27D82A69075832BE59F55C1737CBB1220FB8FF691FDBDF3
03BD7D225A9372AC221C38245E48320E1CCF898D9EEDD678E5B8C65B7F588321
1A3953EEB9B39EA9A8CB72DB08C3E9234DFFF5FDF9DF804C021D57E97DA7622B
97F4CB6E0EB640E0DC9EA15C5193F92A3A7565F4C7A4C9CC327F7CD2C44900AE
D9E76FFE62FC37FA376E77131B566AE67C3E09DA80F198BBB995EE8FA47EEDB8
4B467C6C7DB8AEA745CF8C56B8BE56534E9C56FCB2B7006426DFE93D728FA4CF
94F131C549814E54ECE7C914C5FE8E4961D3437CE7475D03534B62650F551D97
201C794AA877445DBEB11C85ADF6119B05360700F8CEDE4766E3A1D7A35CDDC7
9ABF7C619E3868A39D1852DBE1EEAF5D7898C78323873AC005542B68C43C5000
CC58F675EB595F87C879694751494676465891E8A897158B481F11A171CCBBD7
29603F00210CFD7FF31FE3D273933ECC34AFBCC4108D9B76D9ECE63EA06CF939
4799092A54A749DACB82C1424E9879672C8BC084C360014C9C1B6D5D65C68AED
66CE329C3AD712C0A36BE7EF03FDF339CAA2E0336D387A693B1DFAB5D5164E31
14755A158168962C9B399F8F1DF3FF5060D7464D5071058C30C572A2BC7DEE53
84BD7614A4BEC4C84E18CF7EC81C811724463BD46CECA5FB57B0F55EAE20CC74
6AD815D1897B037C197D2456797B992C20C70B663BF99FE28C513B4E221C8E12
49779F8C0AE8517048ADDF7CDF0D698E3EFE60071C4997B7F5EF12B6CB65390C
224F13FBB99FFC034C0710F05019899689B6D3350BBA65C7CE7C2AB03D81B9A5
5F3D65E4D462DAB189006669F7390A78A1B8908A4C913B15DB8827DFF15BB9A4
A6037DDB643103B937257A7DAB025F09D53FBBC2BCB6B0BCD8D56B2B2784E498
1F6CF8470DCC892AD0CFE11578718948BABF9C14270906014FFC731E49C9A3A2
B13072D67E5ABFB20CE24ED96E7E62DBE177B40207982D2001379CB47D6A7283
9E73DEFE881E4C77381AE42DF058D81FBE1DCBD8AA217A5B8C1B75606E5D31AD
786B21468FD963961F88CBF47F32CD5EA977310016F5279CC754F3D13AD666CB
A8F8C56E27E1343B4C874AAD2B92245CCACDC805315D24D7150F18F57580B62E
6B59CC31BF4368E12CED705A5823BF6AC2348B46BB5353E1B4B548A0EC5AA55A
9FACED611429DADB394837D3E87D399B65090F5CDEF1325975357562C9D7D2FB
69E0425E6B527C4E25D28CDE453EF7A4E092C3E8760F750493009BA9B13FD300
A78B984ADD80DBCBF7FB5979EF5F012CAF413DABCB3290E29A0CEE1F4DE1C6C6
3C0ACEAA1B0280C4A7740C14DA2F7B6B1A532DE5BF0DA704808D7B0878A09BF1
DCA721854E8D7F0C0E7F16A7D1761BD80997CAC753596D23D81EC0BF5D498496
818C244467171449C73BABBAB53F489CD2505FE87A03025806340E77CF18F450
B11BECF3DCE6C03B4E655BF2A7957D95FF01CAE1DC020E577ABB22FCD1AD8EAD
CFEE7E92637D00097377258E81CFEAE1FD98697E21F7AD3CF2FB3897152B7E9F
7C4C3271BA63CD47F5B91A075F5BE42A3BF17038D2ACCA782E6D038B3E0E5E88
944720EE44A47E6D5C64DA4CD35E7A7973DB0D3A6929C8706D29C8F9469F0752
1A6555AE1254675CD0EA94A638DBBD0D0627A5AE85B3B061595BA4880CE60BB7
BE9A862223C5C6E41197EA81A5C5381575900CC6F06936C89A0CA3F1783DC42D
7700D73B67BA0FE24D41D94194E5FC2564ACD7935C70ECECB89C6B7E2213C6BB
5DA31DFB05876A64386E863C5686F4F22FA5546410F5575B56D3A484AF5D02AE
E6CB517109806DD2CB6704EBB0D4389D1217080B75018CB2E68751997E96F9ED
7A2E4DCC52B55ED92B262BCCDA7CF82CB2855CF7DFD25D8B7DEF7C80370B05A3
9A51613E3E6A46C9B7B1052C0A5491130E312ED6D97D202BB69739202BD31EDA
A120CE54ED0DE7EAAD0663A4B86A2F487BB059DD7A3BD1CE641C8300C59652BF
D0B62B8429F77FB1EA332C7A1CA8B004C731816ACD4083FDE377A8E800BF093C
C74B3F067CC1DF9D5244305A7012568991AFC0C327003830F7131CC30962C96F
B1AF009BD9BAF06212037185E23A7BA268D568CDA22B8B3B2374CFE22D5817DA
7E88EAC7999AD59024388FB285B72C05B6AAE575B67C26D06A35A0D394EF1A33
2D55D8641A502E7C51C52741BF812CC89EAE94F1908928FA612A5624A93F4754
E28F4ECADBC97BB43F687E2003D7484BF4A034CF2FA7D9FF944DCCE92FADA46E
BE4A677D798B431ED8640CB015F6CD3E4A2D87D6BEE02E18BBA2E6017118C37A
B2FE439C0785F4006CB6D67EA8464648521096B1240EDC18A069CEA146770040
3A19665D7241643523B8C6A3BFB4B3DFDEF5363899F97A9572E5349F5A5A7C1A
431486EF03E082C5C6A9F2D1D038F03FBABA548EB67ED18D437A2AFB114183DA
45B17B93757530AF7AD352563063A1A6B764F66CE61D11CE52AB036715EC18FD
6FAC7D1476A879CE94608E6C4082A21BBF80EC93F7FCFE82F4DADC600746F71F
355A75F01AB676E600823FEC28C30D2208A868EC0D076D127DFA22DBC6438DF6
62539BEDE920BB2CBBD7D1643D98E1E5CAB279BBB39551EEB707FE4AD7CB25EC
EDD7B5F506FACD39FC16A0261A33DD1B6A331F24B4F35F9A60033314466D7858
BCE4C8CEDF7C3D5EC001044998DA7D0468E20430E9D2ED91A720C13E9CDC31D5
F15BBEBFCD70E15F89CC21BAF2F34DA94B4B8340676896B1B6061CFFE8F3A0CE
C5C182171486B128D1B9CB3E7A332A72F74F026FC4E7E9FA9232EEE326614224
A5D67CB53A4EF9BAA163FFEBD55D73A5C381186F39ABF5F9E71FF58B5911E383
915F92E43961266164C711B59919C274F4F5A24C4A7F1778EE99BFAEE7177CE0
EEC16E2C68D8472C3C880DE68E65567094FC36A43171983134EB0D04DE3EE8E5
02A3E067880A00D731660FBF32036AC4954A14062F82B02AEC078CCEEB609D89
1BD7FDE4D96FB69375043BC0394536C01FA7ACC0DF28F7F0406C33713FB8F571
90F169A3CD73CA19DC4C553A2E4198D0023953625540EB03014B9AD15E850D14
0FABFC41E8B42AACDE2D2C0DB130FFEEB2E49F505F7BB454A5E07E155A3BE586
5F2E4DF2F0E9273E74B788496863AA1CCB4ACED54B272ED67F11A16F283F7BCB
4B5EF83915082057117FD48BDFC26A23AF70D58AA2DAC924A9048F4B69D422FC
79E0CFB83263028B9C062CA57D54FBAED620D723ADC584A1351B15166403B67C
B88DD20D79D530F44BB7CC5A9F2919644BC439BFD210FC3B5EF76C388B11EE46
61F8B909D2257880F76918CDB673567FBE4EDD6392B56E6DA5584FAC9FB51FC0
297209D10D28EBB70D4A955039C15A454ADCC96BCC6143F05DFF04A01B0B06D1
2489BC6055618D5D6FF46A4A7FB4F62B0BAC6DBE881ACEF0455133096D01E50A
18379FB0EC7A2815547B7C5BD822E8F6AE219F551273331B6735953F4C37FF61
DD114254DB30DA6ECA588FE727AFCB3431938502C796C16E944F7E51EF59D7AD
33ACBDBAF7443CAE6BCC88224B8948A2CEF7BBB81EB4609221DBC89C79620CCF
04927A72C23C2F56863C8E4A180988CCC9B11C26CE8E3ADC76B98748E867285C
4C63A51F023439CAE1C3650A89BC187A2562C65AFD366B080380B0413C5A67FE
A083F7DB4933AB6BB6EF6E302DDED416CE50A0F53F0D1D6FCCE1C9A053582DB6
2A440B3C3C7809D9BA6561E70CA99D47EA8D580A5A99A98133909944001EF821
4980C0563AA6CD226915FA5A14B89B8D742D5836F30C251C3BBA2E144AF49267
A8AC5036246254DC35B5F45665C05C5D5D9D5A63118F174BE95F91696B71DD6A
29B0BC86DFC217BE02AAAAE6C661FA264D3D30B379BB85C878F903067F6C0D0D
5FDADED3F25291D6401C5282F935636405A07482BE24E7AB9C7BCA69F9A67DEC
3B764D8B3A8676DACABBF5C648646ADDF916E170417DCB4553A459F703AFF1B6
6F64CCF68DA25B8FBB5C4AF8848BDA193A89EC756D69AA6E9BC16B34A2D1B8B6
4C4E61043FA4F14251E133F51C548140D4CB914BADE0D2A8B0B8756F553BB132
35A9C6E6C5E940E6EDE20C975F8A6F28151E8668CC2738A92E2E7BA4C83EFD29
251D819FA406E548CFFFDB1EF9DECE7B3B9C9A8892D0698A327B98A7277B8FD3
B59D0C159EA09A107D5A19B4958B23BB4D2E2419C443431E65A1F064C1A7F618
D52984F0BEAF86DD2EB48AAAC3D2847F293181F9803964564377DC0A288C2186
9E9E9E9E2C91B23C2987DDE0C95BC2EFB58AE165984AC43DCA4C55A2FBD31509
F3A43643F9B70964D1D18D89E914D2A96A465062A16DB1707DF01AA33BEB1B16
10F0F38A7106FC778ADF98E616E3E5D30B2734E9AA5B0B4E80C6E559133CA73E
49BA1D130D8958C3E5B0BC7D3BECAC33221358BFE3525170EB890087785F1A2B
65AB39F335AD3DBED496ADB5F5AB0D23F392F530391082C28E81BB73C1512032
AB8095B26A95B916990DE3BC2538098BD30B3B2B4747203D28DC3A86BD7711F4
1153C123954E8FCD58755A993FCB9C0BF25F061A31C372B29E643FC2E123DC5C
8ADEE3E2E1F11125050D419C79A7B2690E701CB1B7647F19BCA8CFD0E549D663
4CD0E8A3DCF0344C21957FF7BFF207FCCFEF2AEAFF48D654C1BF4D54F40FCDB3
0CEC07D115957E4B10C527DD222B1C11D61C5A04C4B298DF585EC9C4B6033117
E9A95533FB77B32DD3C02755E7E978D81C968E734DA3CE501E3E89D19E1657DC
754BF04FD92E00F984DDFA3B3BDD5A2C7B44B94DB4761FC288260892C915825F
07D8CE4435F0EFFD1C7C4FAAF0D68C66BFE67F1B70DAC44C080C07CA0F7E4128
05A28395F91D90DBC3BB5B2EC263F4A565EEF4F6633F9C23CB44A0466815E29C
470F0A7918D36B71EED9CB06AD69BA165BCE5764FB90DD86B89DA25C4EE22BFB
83C77161B929E79EA7A93586D2E0E2397F5EA10484C7FD4E918785EF83308C18
926F98B21BE22698C124168915FDF79D18EA864B80C22B3ACDC94B6062B6DBB5
8B144ADBBDB17EDB0E2E66224492ACAE60DD9F66A0C70488ED5076CECB378215
C9D9D0B4E403364C3E1A64D75F0B9EFAF473BD42357510C264DF71ABB5866B48
03AADA697FCA9A45D72E9E38936C9AD77088A4A92D4722E6EE6FBCCCCB737E67
2714105AA913F4B44383D96764F81F8DF3BC71B9D04A5E7A6FD3903C96965529
38C870FD451F4AEA5113C9E457C477343CFE012EC894072F084BC497C79E392F
2406CCCF6507E89B97158EAD493FD0C67370992CEFCE1712E2FC21DACB3B9628
14803FE1E52B23FD6EB151FE792FC235A00878360F7D4E75F250668F345ACCB2
B590015B418FB31A893CD3CC9EB6B303B02A3C48A6CEE91522B74E08668C989C
E8F1E9E371B614FBC99AB81B0D7DDC51443B57CD84A83C733C5BB74352D824D1
7FE40E884D4E943C28F25C8B0D4C340F755307B9AB1A44D74B272FAF98A0600F
7714FCDAEC2B8C88ECED84551D4C5912092652725748B0413C737F43D483F5BD
C6C844DEA9036A177B301B286F92A733D589E1DB3B6395066333430767886CCF
366236C1EDFC07250389DE8C34FA46C85C334D2ABE0699A9523AF9F44DA2604F
193E6E005DC405B6E31C0D816EBD3C206E2D32E7873003C88054C0E4FDA6BF03
920D76AE8F2290492DCEC656D2FA6F91AA5504CFE1EC6E2AF9D07A5266B1498F
2B7A4C3650CDD023DAA3296C155701B980D5E1C9CCCE9F5C1DD7E133AD394549
2D6AA2DA88EB80DEEBA8EA9EA5DB993DD88CA8442F5546159CB585F3C541A7EA
9CEC14174635F0A409B666DAEA5385DB01EC62471F47826296EBA5F12027E89E
43E77FE9D330CBD44A109FD895172176DB14FEC7DC217E209ADED8356E962EB2
58440C835D54D6444CDC7A1C99B93C3540C190837FEDAA65B80DD865E8F45F44
1D396D7FC71404C4CC0DF036E9B6F5AA300741F4B509B59E874BF10C7E8DB5BA
3CE4EBEB368E4A6CB34871272D0D335891BF3116E188478485235BB439B9F41D
5EC7A509D7AB002C995EB78B3A2E694C97AF1C49BBDF6AA01F84FCE4039CE45B
1E0AE89C398D8BC14CB5CE8A1C0360D702
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMR12
%!PS-AdobeFont-1.0: CMR12 003.002
%%Title: CMR12
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMR12.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMR12 known{/CMR12 findfont dup/UniqueID known{dup
/UniqueID get 5000794 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMR12 def
/FontBBox {-34 -251 988 750 }readonly def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMR12.) readonly def
/FullName (CMR12) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 2 /Theta put
dup 10 /Omega put
dup 40 /parenleft put
dup 41 /parenright put
dup 43 /plus put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 53 /five put
dup 56 /eight put
dup 61 /equal put
dup 103 /g put
dup 108 /l put
dup 111 /o put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3DD325E55798292D7BD972BD75FA
0E079529AF9C82DF72F64195C9C210DCE34528F540DA1FFD7BEBB9B40787BA93
51BBFB7CFC5F9152D1E5BB0AD8D016C6CFA4EB41B3C51D091C2D5440E67CFD71
7C56816B03B901BF4A25A07175380E50A213F877C44778B3C5AADBCC86D6E551
E6AF364B0BFCAAD22D8D558C5C81A7D425A1629DD5182206742D1D082A12F078
0FD4F5F6D3129FCFFF1F4A912B0A7DEC8D33A57B5AE0328EF9D57ADDAC543273
C01924195A181D03F5054A93B71E5065F8D92FE23794D2DB9C535A5E57376651
F6823308463DC4E0339C78699AC82C769542FD3B410E236AF8AF68CF124D9224
FD6EE92A38075CAAF82447C7AF41EF96F3ADF62F76FB425BEDE4C4124E7B1E0B
8BF254D91912D3A99557F5427907A56514C5A3EB961B94112077FE9417B70DA0
B2E1C1FA3E1D6F01D11F640CF848E45BE3E205258E64FE36AFBD4DF4E93F6B1A
966C8E7FBE2CC8FF43C1F67BF6C361678B5E90F4BA524FE8A4CAD6AB28183E6E
CA6C9636E884845105595A2E40CDBE8D4807A81AF4DB77B31873FEB221BCADD4
2C4669459704CB58A7BC230FC59F867EEADE660E49AEEDEEB042BA9A7DD8193E
56C3A36A1F639F7EA512EE4BC6992F52C2FC82A890EFDA730105B0AF7B819295
EE00B48F64C2B5BCB275B1DD62F289CDAD4AD9B7EF057684642FA6FA6322C277
E779CAC36D78F7779CB6DE12638B3C65B70C6B5F8A8C6421A379719B8DD44973
5F52856A4A29B2ED37F2B1FBE6EF4B79B7C0CD6395C756A00FACD763C235914F
847D1D99831023CE1FD89EFEC83AA7E313131C0C197248605EF5BA773D0A4000
72F607551A8EA6F0FF19441ACA179177D1FF7B423FEBDF58B0C19CAE3C10EEF6
3538D8FC4762B77C5AA023A8186C40D0365A4487DC3564265B3DF908572DEAA2
57E29EC669DD72974F806EFF5ECAFA9ADF1F9D2A63087FB7BBD100F0F81C6FFB
B1EA1C9DD46548AEDD147EE64B1B4894972DAE1DC3E8569D6A3CEF9F9E46DEB7
547E10BB2959D374A33E47C58F1B20419920AB485F166062FCCC08EB5CC9AC88
F388F0C0155027B727729488E44CCABB7064A1432E179189C4627453C5231535
47D1F2B8BA43069696830CBB6E5F9A135CF22D3D1FE490A3A63C088EA32FF444
24A2427BBA63033DFE2E06DF8CE67949B6AB02F26335A376B57376814D2A7DE7
64A4347577EBE9A6E33DD2FC214A09C6D889C8FFBF1D567032548851B8F97204
49E215CC7D222F593E1EF1439ED60AD922D41E0E9EFB5CA48F2FEFF75AC5FEE7
FB6676D8B8D4DB6885FBE8B61B586313E4DAFB09D94CEDC0507E93000104F3DD
F83865A2C6F6A7DA8562BF86F5DB233CC9B53391273A1462E40876A8AC2B098A
DBADD5A160DEAC061F86A5FCCAB495EF8A9D121AF07928EAFD56F618E4EAEA97
CF89A3AFD406FC9DE1E9769C1E1EB83BB883786BC075EB5DA2692CD59C4DD7C1
7FD2FF9B18AC740A390C1DB38670DEB18C67721A1DCD502FE7368F47DB4281D5
459B3F020595FA3B10544AAE9EF786A0645FB7C9BB29D091E1432CD878A05918
1665643005BFD9A4B0FFD347ADC84CE22D6F9AD4EDC05E8C7179DCB360AB57D1
6ABCD200A4B4AD56825DC345984D9A3DE11CDA5E9EC1E5006EE4181E4EFE0846
67D8C27BEE8F84A1E01947E945BBE988702DEB2240C4BED952E433E5305484E5
71965D3DE95C4115FF78CE9EC18E323C599727C8B93CDFBCD1CCA780DB8C81ED
C4B5E596E1603624308972FFAE9A57B0EDB51FDDB6E23EDE2946F61BEB241345
2A192D8CAD53E823D687F9C64A70A4B4B703291FA6317C051DC6A44BCCE0288E
3839D726A8F2E39BFF429865E95C726E808E02CD06F36C1CC9AC77999F8E28BF
CE9D74B699CA982479E9D0DD98EAB24D29C981EF0349721D6819549A39413801
F80182D567EE316E2F0AB208068E15693E4C399A381BF9BBA625E597E6E109B8
16F3A84C8EC92F2ADE288821092A421A8D3B907048FE947230810F0777EE2542
29A3485223FEA079B359034F70464DAD2F0E420271A4E0CCF57A0ABBC20AB327
0CA71B292126D395E0D083B19BEC6B48A9DE2BF470C3D01A8C3F52075BD4BE02
A0C518355814478202FD4762EC542F8E7B9B1F7824F0554660CEB83E35635E1E
DF0D03C94C903ECB36B4948ED98B6324E0094EB1DF70863142D4ED3A932D7346
39D69F8F044B6084482D7748C27328AFD24A3A70B99D1F7D32CB984488672254
28B6A9E9DCA2C9FF6A1B311D72413404B3CE5428BDB7FF3C36357D7975184F56
FA6B32AD54C37D0AF7576663AB1397B80D4E998F0B4C4F6D90B483029EF2EDA9
D4C4204C1546EFF3100629453EAE01918D09FE104E626ABA38646F17B6A94CE8
116BC7A8D9C319434CA5B830859B4164DFADF1D7C3ECA5C78D8DEA930EA4AC3F
59DBBF3148C91A2E807FB934E3439D4F67C6DBBA9972854E6E3688E1E0A34B74
482217CFE031CD7B5DFEF727C3EF8DAEEEDA08F4C90289E62FB2AF2357EB2E45
4BC547980FD479101FFEEE477AAC6268DD659E8DD9E244676FD3C6909713B71A
323B211E571BE711D103FA23B5B9AF077D84E2D20FEE805E81D20C03501F0F17
C3B081946CD0FD577F00E50B76CC37CFA97A61B89C25DD43911B28857284BEBB
5BEC61FFE3A14C64BC5425A7A82326617F6F1FA4FEAE56071C9F559F91568179
46369B394A5CE96FB7420FF8AB7C61CB83492FA5AE4A4B0799578594C9EA67E1
E54498AA5CD6ABA34AD3417F04F5D8D664A7EB39D41E2D17643CAEBBCCD9C38C
C5C9541641A09335EFBCE0D276A54253EFD68141807A66F1DFEB4BEA5889FFA3
4D20BD52012206A9F8D3E0F6AFC03FDBBDF3E51506EC6336E249CEFB571AB84C
BDF8E471E3795C04E38A5306BA6D450D72E50910D1AC385BB06CCD4B8E433A32
5A4B7FACC976BB31FCAA1E62DB2C4FE06DDDE7367930E336B49F47DAD91C8735
9A35D80CA2E117E86B52E41E9278046ED923454989E48610ACB3B1663F197117
52659A9D7BFA561C7ACE0771794FC778675F83C5EDCB132AF124C7E6540A140B
E0A268836C73A3C746DC964E482E63C56C0D396515283970FBFF182F9F684FE2
655FD8F5D057D22246DDC3FD11B77552DB4D90ADBAB77BBB1FB1592129DE0AEC
F822D7D36E52BCDABBD560B403A5C56C5E1BE789C3AC049318C7FAC5E5861E42
FD66C3C0F46361078D7E036281682BCE9BBF77983C93ECBBEBA9B359769CA442
87FCA1B98F4EEC4935CC93B08AAADDF355C99816453587310F08C50B9BA3D107
5388A1F3AED2AE32BEFADF0285DA90436D1D7EA85D7B9B6DF2AC4B778CFADFF6
6EEE54D1A1C5DEE3CCA7EFF57A7C2931933CEED90CA26DAAB45E4388EC4DC366
B9E88518D6CF094861D2A59282044CC06E63EFB390A6DF4BA5EAC7CE39E1EE03
3D84099F5BE96612789AF3EDED07266EF10A0FC23EA1EA97040B6BAA63138B1A
A9CB8F5DED781260962D7618EDB200C3ED976033E8967A8CC676E9C11F74BE34
343A7ECE7EE97E8F76F7E95517A6D6163527406EF5A669535CB2BF4031F29046
BB2D0FFFB47A576F5EAB1D00A582965C56F28C00B3BB7BE2CC8D8391F789070D
775EB775437F0CD53DA840BB3575104B63E4B0BF14E3F14B320EDEF65FD4CAF5
8596DA491BBCF3153DED3B718F833D106432DF8DB8B8E6B34D5308C9010A5DD0
7E0E53260BB84BAB3EA748E8D72F75901604F80F4416920D69B4B983DCDB72C5
E9928F01A4A85954FD74578AE336C782CDF81D1EB7EBCEBFBAE7ED8AB4862584
397928F502D65139CCD582CF0723C5262EE54B9D2B8C39614652A8A90E1C3B65
7D26B99DA298FE4B9A7E98848F619C9BB4FF9FD215B72F99506F06355B332689
37D80AFD9F9ACD8172CDC51FCD3A759ACA0F7D4EBB07840840EE42C2D5B8B257
2C6DB3A7657B75F2F0B9730A20112745703E2D0FE709436CA6A5F36F59E64D9E
37C0A23D6D289E1AC1DA273872F5FC5C3DA2B127F078A4D7AB3FD7E124455817
DDC796D54EF26A1FBFD539D3A21B86DD4477DA49213259ABB3FF241424F2BE5F
89151E02FF87E0BEE26E85C0E518D8BE7CC9214B8E9A9EA1DBB49C6C212CCF08
90C0F23E9858947EE344062EBD9C574979087439975EAD4E85CD7BFAD3C91CF1
EFF577843AF1427D06CB2F3BB519ED1591974218C43F0D2038665F9E2E3960B7
FE68CD3CB2DB6B36C7997C6B21EC11CF1DE049541001FFF26D14C255E3AE862C
5A5701292FD2FB3D04523D6E2F3547923BB117718DFB6E6520F0D0B5450C695B
8C9242CC8671B7284CB2E1E9EB097A3DB1B4D5E8EEB93B4DC7E38C0A10474665
54DDCBAF079B92EA494F6FA75A84C5AAFE280284D0823D7C22249A21044BB0E6
4062074ECD17B62E03EDF4945A294BFEFB51F5FD870D9D7230FC91B83C1D85A8
86CDDF326FC90E04362145D6E8630C50594484FB829DA18F5C078F2EE67D2F2B
08DFF39AE2E8C9741FA989AE494C7166F122D2C5F71B97C973B7CE8500E9F87E
D59C30F2E99CC4D34713DAB680598F41955FBDC26A14CF1E73D6BD6B9AAC8D3B
B998F2D0D647356CD236DEAD6561389ED3A6746221B0CF15D6648412B35A6B54
6A0EF5BBB34AA376D9BAF025BFC650C1B74333CE85413D0EBB2F4D082A26A5BC
3C0A25D2B12CB159F140E00E262F1CFECCB2C802FF94CD34DA0CE9B4B3830FB1
DA85B9B670D5169928990A2E9CC869891CA2FFAD9774E6B92549644DAA5FE00C
A5BE4F5FF91A0B6D2FD8F96121D766391EC4ED3E73DADD476B7DAE1A50AFCD98
DB7E27E44D30416088D9BC07D4661D9ECEC0806830ABF14CE55AA3CA2DF66E8E
748B8ED46466F1EEB072AC0674FE6FED231E0DDA59ED7C42BC05EF00E176050A
C4834D893DE42474EA20DB1E25059E84BD137EF65A02CC295B0FFDE4CDE95879
0FE88BDF2519ABAE7F8CC3E6386ED35E04A14F1E3861922645E3A3F43B48A5AA
1999A5EFE192515FCC625C829FF5A7B337AA422F5E920545F9BB269C869A821D
6C4C26DD2AE746EF0F0B4C1E7E9871ADB5270E1CA9BE28225F7A0370D4C52422
E25263EE101C4EC1C7811B05AD42F364844A56BB91EE72FC8ED53CC6954D2BD6
F945D739BE4C61E36143CE890FC0CBF2F610018D678ECF7CEAB18FF5A0E48F76
FDE2463D40A99380D679B3B76D39C664F4992D23E5988B0D1AF33DFB04894016
E852EFD1EFFE586153C0F31ADBDBDE3F73FB49C5EE64D0D02E1504248FAFAC3D
903FD44679BB09C30288139B41B1E90A10139CA3172677250B16535A1F3E5E4B
6F4264DE58896E66051FC677030A121C5A285C47B6129CB5A3998830CE070D21
2F093FC1B44089F603A21F45F60960F134A47226874C737EF6C085634B0A4A66
139420501351F737A73F39D960EC38420BE46E5B09D298E7C16B8E32F01507D4
0141FC52DA1DE718D634AD9C8B00E46EEEF84356759324D2B9A3473C5DA38DE9
E30182B87F91B6A7F7BACF29A93B44C879CCDEDB063F9D2E51E0F1FC9F018FE1
2433D85AF24B55DE3A61C4D0A2DA4FDE933F5F6FDF17E9FA9932BFC46E2D71F6
585EEF5B2E4E89E797A24B799D7F064DD1A817A53677FC9EB8CC3E7F93FE50E8
D50E3191052943FD6C98B573BDD1F6D70349E1F8011599E3F8FDF1D6E80A710E
51E434E85801617C6FD8ACCF1B77B4BFCCDD35CB4C0367F4EB4D8D9DE8284D5E
B4F43E2F8320C2C5A9AE90ECBA7E65D377E91DB69FEF27069235366AD3E126C3
A73CE97F4C90BA00D206FA012C327FD69EE59AF4470A315B1799CDC0539BF90E
512C8FC3BEFE4D1B01D969EA9E3FEF976CD6E0FA4C9ECEC955B265CFD58AB8E5
F7371E479279EE14B689269205C5B506940606CF3E24A1E7EFF3CA96ED30AD6D
E243DE57690C3D69A401AB3315FA49E4BF4ACD4DD1CA39272533E82EFDD508E5
1C2CD286CCC5DE1202C7C7F654521750632EB637F918667E2233A43DF75239EB
F28F3129EB5DEE2FC5BFC331FF709B0FE9B327CBBCE98BCA2C861C6547E50407
1218CEBE6EB5F9BABA4F2E11BCC6FB553A544A567B459E06375102C69F8018DF
BA6A227CFB13E2D74E6A521E01B74F2963E9A0A1C9FD87A88EE6356E3BFABF55
BABC751D2BF85E6712E8EF57914920775906662E4BA68FFA21AD422D34E15578
43CA0568B431101A1194F8AB1EF25E886BFCDFC10F4A5EBD9530816548BC298E
AE4A0B6B52B8B59C644C409B4191B6F4203F52314F2675F02AEB65A72C66E92A
2AC703E15D8D381522C0AC30C165B822A9B8D18CAECC094EDE020756018DCF51
D0701B507519C4270B70D8CE94B436F640C15872F9B5B77892AA3D110E4D6A65
8F0815C61A5127BA25815378683F46E69E54A391A8675977E7DF9C2D4E6FA991
9F029E50CC2F266B31EE9F9F24452D5838905F330CB7E416B8AF836C5AC26AB8
BE2ECC6EA4BDAA08C30995709E225C21D35DB6369167602CBFA8DB2697635925
969002CD1BEE745DA2E56C17EF3F0C05E3847147F86963C37A221C8827195A8A
3D38993E4939AC915BFD9A212F5FF3F826F742B952018986F9FBDDB69C3AC65A
845F7F33C55D4BE60A1817EBBCA7E1538E8087E1BD5C083A320D52953BE65F31
E8339C612A510B59CE48D2EF7061560C4AD258E7DC59694493E3AC878246F37D
6DE89253EBC8830C6B209E818213C4AC4CF1F391AD91D57BE76FB0E2924A1407
E4A949C905E44F54EAED6419F13D59942C8079336A172D4758BEB5D3E786FB93
3CBE4FD2EB53E4E1DAC34E821EB30FD44BC6CB4298242C38F848FC23AEDC9733
52BE6F32E31E25F18301370F8936810B0566B664B042C7AE0D78ACF0A87E5BF6
F9B66E358168B2CEA30DCD940074F3ADB793CDB136161FE2522905E87B8E463F
95D4DAB7E14A3DF7BCCE8141C5A08FCFA2BCE9F2D1B05A7642E75877EB840149
AAB007CD239AE47AD115929427717F219B0A8907F0EC79ADE1B901DAEE87A2F8
39361DAB43DFFF69650F601B24061A9353CFD619FF9626F63275FD09A5B13BB4
8B3379EC4D147C41197E8387FC04DA7BE409524CEF74EA91DC066808A7FD0EF3
957A44E2503EDA67B1C61827479486134E922E560A673BF314D601C66003CD07
55569085AFC8428389A140EB976CCFB8F29E27587E46C413ABE2EFB51AF5913F
53EEB74063162E0BA1E24CEDCA320377D3E11BD374F0B44E132A5C35835B6E2C
D32948EF9DC7931D104C1385709DA882DED6458319F21C2329938396BC074106
CB9CFB9E0A915F8DBC8435F386917AC87A2BA45D857EC30ECA66FB4044F5439E
CDD556B82A0E43418D179AD883C85AC276E1190CEC242E3E1D86E725ADC39E46
BB6C47FE9E17E29F8EA81E870302A00D91434F3B7A05F243176E6EF1082541A1
B9052191EE5C2B8E94A2E02DB65FC769653CA8D1C07A13CB853544AEC7FC35C5
218DE3128AA31952DCE19C55C23FD69BCEA2C661F57B11B8F9E86BFA718D1521
3346E78C701A5E51923D6D937E62FDE3669B214D240538F069A100A542720A86
31DE88116DE775F7ACC2A49EA6C02A24408271A846990669F2AF60AFAB4C16F9
7F4E88E917F0FFDCE68F22998AC0AF2A60A73258C3A4BBC42A2F918123128195
196D0E150D79AC3CF4628503D1F3FC528265ED8324E56849A47B3B07C29940B9
1BC270071E221D355EA51E9942D3BD7F99816304FFFC8F5B036C953B38759341
ED5D7B9C8E6B70C409DD8362FD291201CC385E4A98D73E8518A4C0E544152563
82032FBD2FCB6E403D34B85ED4053A8CB619BDD4DE001F4C3007B1F317579651
E6D6662189CC2D95AB85D7473F65C5D7B4AC63B0FE928F3400035D5A9D443D0D
F3532B99F3AC26CB25EA3CD64C341159061E02EFBC7C033C05CD919BBD827A6A
BAD47EE10B9AECC871B76227228CA161EA7B61DABB252EF91E607AC8D3F85774
DF0B1507B60BF52E4E9BC0FD04400A548D553D4A6EDB247875E0A2E013685C51
D23EE8A56AF57025AD67D929CE8BE791BE91A4C4D9F00DB8B4F16252C04F7BC2
02236296A9052306639F4672E90E3B9DDE466EAC17E200523B2AECD6C05A0A83
66D4EBC86C0DF27B789D5597FE88BCDAD2925CFF60F5A8EA618FE867857D585A
CE25A158AED63B8FE391030C518692F2EF74DC514FD192BCC93C02373CE75137
334A9C960EFF02B687E7B8F18FE2D9EAD2EBBEA3A459D8476AF51AF6C85E1166
08A0A6190D8FA8252F5D38820C6950A8B323B1B8648E3AFEB827678CDE87C535
EBB201D3A169CD9DCC4C3C256A0960D963F3C6659BBF4D2971663D0AB84621F1
5C186C05504839AE3421349C49878E3945DE280110D3161CC9F2B6F442D72535
354246F33BBCEBFB0FB9B2C07E4E2211F052B895C6F7A078147C874CC443BC07
CCCB0475C0DCD6E3F93DE5CEE44D8F7F6D1588A8B22886C9FB1C9D0F43E0B494
314CA6C473EE4AC6F971923EA0354859256438AC0FF0773FA937A248D6B99A4D
E739E3A43555F7BDF08E3F47C9A582C735CB99E97048161FDDF71302340376D4
FDF94DCBA95E2FE4B11A6D3893400AEB31ED453DEC0E7593CC4758DC0B193C4F
A1D433E814610EB745501625D618AC27C2AA77BB62D4CD6EA3DC8082FFA3C0F0
877B83952C38BD5124B938F68B5025CA733F4B766366462E747E85E77DDB7962
A8779DDB8765F3AC2956B79858461A9C5254CA9A7F73E978CBFEEA0A49636468
E0BAF95774B6182B1B4E4888D4FB111027D040EB54F2AF508C99B1753652A9FE
FF94AFA28570CFCFF4075D97972A22B24A5016F731460729EE2495A8D09A5FA4
DC725CAD20D6FAD540592C08585CA30065E8D10774E66A80E19D22F8E2E9490A
9A0922F06B776444D0DB58FE5A93C6D1BA928ED328AA4CE1F83F20A8042F37AA
7A8D23E258E4AFE772F0D11A18A86CA2C2F1B34EAC3E8C852389ECC6158BE657
9F9CE67C8E92C2C91F6F4A178CECA1E10F441BADC966827545E398A1327FD188
A91B6E6883F3A6E7EBAA7F2659BFA800173494380BEB12D0143BB941F9082DF0
BD9B35AA80B1A2F2665682D1AB9DEAFD93FD8C313EB2A39B9C9BFBBD86D7D20A
4B6976B682164FF565719358738EBBC21928AF1A6C07CFB3CD889EB74CEC284A
B08133B0792118A419375C4B098F3CC567E9DA503EBE5C7961781B8EE8A6DA00
ED5494F1D152FBE891752EFAA2B3113BE6DC22E226F017BD1DD7EFEAD18D6A80
585F90199DC36745E0D7CEAB3D51D13C292556F2CC39CE542CCA933D619A9855
5621D979C8FE2C1E2CEE04718FF85E036310B9DEB6616AD90AEF611AD12CA59C
77EAB2D6E9979556CFD400B8F7F1CCBBC02722920BA3FD4B3A01CB917C19CA10
2C7555C7012B2FB7DEC251DE91336F5FAAF3F93EEFF8A9F9EB27F5D08C99CE6D
63D2A522CD635B8145E29CABBCBD77945EA66852B3230AEA376871A579328E36
7E341A10BA09E020E097124D0A83890FB34B80E5A62A3D8785398A49517DB636
26EB916723451ECF6D341286C66248529A97D339730A9F002733DBDDBF0BAD62
EA8990EE20BB387EA30CBAEE4186570820AAF19C34452BD183E4D8391775EF80
F08713FBA843809D7FC01EDF6C326EEEA39BEF3BFEF48AEF407162DAD37644E3
EC32F13C7589E791C25C087BC709BD17E60F618D0AB3234C58164A6114A69D41
C15364A0CFB2F7ED1A906030EAC50BA4EB5BF98BD41141C599FB05C38DC937D3
B4AB31E491ED64B3FCD9E24D99A5AD24EA7766BE9AE608A5ADFB9561F522D445
E912F88F40B530286319219601E45481B97DF0E69BDD0439E0D88F4B0A3D12E5
73E913023C0328743DC90FC1FABD28CB542088E23448C19D1D45E5AEF4D7943D
006FA0D36477B339C1469577F88689A7E599D5C38EB7B34A48476D645F86023F
5F853152E9CE8CFEB1D1794CB3D783F53B6A6E8C4678C8808A2ADF67AA95DEF3
26C738677279AFD5EC10D984813E678CC07BA373BD73DF4403C6C7C7E0A68D85
A95A189DEE31740097C231213897C7ABBED01488F990C3D06F7BCAF99A6E9B2E
A7AC481D33C0A25FE506D1B18C5BC9DE58DA7F6C2390939633F50EB9518A907A
5B4C09D19D477545B4C250AEEB39019E874F2C339E7471798FDE50FD68C30C48
EB5FEA5271FDC6A41426E37CDC30E0C063C7827D038E73A962DFC2BCBFDD6088
5BFBE654B62C1505824A5FA08DF9C96D97536039874F18D003116E043ECF3BA1
5AA2FB6E46547A101EAFF67F60F72856F7AEDDE4F8841E995FEF0B6906854590
EAB6DFD0532EE2A726DC5CDD49E1FD42E6A583B303AA88EC30281CB7A7C74D65
2F090B3514526A20D200AA94847D5B4180513A236C42F3B3B1C4BFBB06DDAFE0
7C722F5689E6559D1D762A1F8E333AB95902DEF32B55EDB6A83477459F99F3B8
D2BE4BDEF12D2A7308280391464ED0E9F83215B3E1C0E74E5D70DB4D735A989F
28EC9197C6773A3AA46B0AEE7246DFB12F7F402BC72D6C5AABFD201CC0B8FF13
60444ED68B1A3F744A438B3C560CC5546A55466D7A7A1B17E58736513F8BF290
C925F65243A087F0460B5369525CD29936D0398062F395090F90D46CBFABAB10
A4EF4D5E1C2EE19D7FC04350607B038249092318827BE3BC2B0EC8FCDB66964D
4ED09BE95C96F9EBABE6C47CD01A9BB4D12A6C04477962EF45748662D305EB64
0674DB7551ED76B595C1A61D7B23BCBEAEDD3F941E1EFDBEBA5953B805DEE9A6
FFE25F9B2CE793BDD857B709E57DEBD5E46ADD8014F9F3FAE389D4EBCA6D0E9A
D28D1A9275363D28FF9D7A59A7165E33FAFB7E5A1CD8D86FFF72EAA68444524E
512DDE722C2EEECCDAB59FA761455FB1E2F0164C59E6518ECC9DCF87F35EF862
B131AD07010F0969238A7DB064250DF497E5B362D88415C88554A7C3D9F54669
8CCCF0B8E7F97CF8D7F3E36B58173101D21A7B28CFADE004D5A0C54D7206AB2B
97D1770E931744A0ABEBC3E89D3E62AECFC00F27662F68FD70E972EE164FC6F0
BF08C4445D32E5EBE895730E0DC08E37F7F14750629761EE2D182DD7E892ADC3
CEF3D04D32004027F2F37C43A2C7F5551CB5FF6E6D9D2A9A220F43C5DFD7D6D1
6746E6E6CB633C08A077703614B3192B176DC9112775B0A9CEC4AE54B6D7DFBB
42FCA98A9A674E0759EB6C84FD7EF32159D3763BF8FF4BBEC5E88CB31591B551
B5D978E943026B5AC2E923FA78C0E8936280D57020C51335892D191B24DBA418
5D23767C2B0F0AAFD9C43E2194FD2A9F73A82E2201178E97DD27DF52402DCEDD
459A98D7E517486D6D5B7578A39785B8E8A9E98971E2194A8846760E5AE6C0B4
AED54B86B076D6422EB595DF6EE375F60F5F33E5A7DFE64E6AD172C10C23A3E3
1D7659D465F3D02EE0426B636CD8C2529930EF0C249961FB0DB4FD26F98A3117
5CEF5E41F3AE49087A498197B410F397C507599BBD4C80D1394201DFB02F8E77
AA68B229F41CF6C61F24D812F4F182043FB5240B4C2A2D072CB85FEAB6EBD919
B60908CE8CA8673980CEB28355CF67671E163B46C2BE0ACAE03AA833D6F3C4B4
42E014412354AD4FB15DB96D4BE65F1058E1D0EE69C35ECBD0071AD5A2233FC1
1974DBB335AF48402B859C29F9BAF1F940C7614D3FE7ABB4147C81F1F5477F87
F631126914E24759A41F1085C2A37C9980DA3EA3A8F1DFD9ED1F6C09E9E267A0
62B7C6997BFF7E5CB44CE877CAC99352312C2566B750A15080D78F071270294A
2D1F96D48D36863B442DDE51D72CD6C3560E25163FDF2D1B76888BFA1F8A6C73
7896BFDFD3DE00221E12884EFD53D407DC4C6833795F769F3BD111C75B055006
EFCC62C8E91653EA057306C85A40B4F23D4924
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: UniversalisADFStd-Regular
%!PS-AdobeFont-1.0: UniversalisADFStd-Regular 1.009
9 dict begin
/FontName /UniversalisADFStd-Regular def
/FontInfo 9 dict dup begin
/version (1.009) readonly def
/Notice (Copyright \(c\) Arkandis Digital Foundry, under GNU General Public Licence V2 and later, with font exception.) readonly def
/FullName (Universalis ADF Std Regular) readonly def
/FamilyName (Universalis ADF Std) readonly def
/Weight (Normal) readonly def
/isFixedPitch false def
/ItalicAngle 0 def
/UnderlinePosition -125 def
/UnderlineThickness 50 def
end readonly def
/Encoding StandardEncoding def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/StrokeWidth 0 def
/FontBBox {-61 -225 1931 961} readonly def
currentdict end
currentfile eexec
D9D66F633B846A989B9974B0179FC6CC4458BABD05D76517D9C24FED216BE906
1643B22AABEA637BFFCB75FF65A91279495B00B8B92CFB39C8899C3818357033
2BBD344CBB263D4250A46E5B09E712D88275731E98C996C69406E43E9DBEFDD7
161A841EE17304D49501F13D3AD3CFB00DA1700EAD2364C31908F18B9F3643EA
E9514021B52FFC8EEA03D195015D30E3BB12C272A254955F88A4DCD045432CDB
693596BAF5E1BEFA2D9AC1CD0CCBC3EB428243AB90B02B35BA3A6C5B66E6A2A1
ADDF72C4E1C85E0D1616279E70578303633EE7B6B0DEF67A7EA923C661949BF5
268AB6292E269673836F782A5F1F502F0CF976E5A1AF07E5D710EC224D13DB06
E049F6645565A56B9FFF636271F68AF78FDB79A911C41F6B33F523C66194AE52
F9867577BCB8891DDFDC77A47E6A480D51753411222110E169D0D7A382E8F222
0CE601E4400EF8AE8B134BD0575CE77B780D3F08C1C45413C1E78610BC279BE9
25B2E83556FACAC179CF702AE567B893E8318A741745997E180180E6DEE881CB
2718E4D3551846AF8943F2B241D2319814278F1E4B7C758FA67E7548E6EC8866
4A45A26FD85570EBECB9ED7E9E67AF40F1F1AB060C8C7F2BE4D3FD67F0480B2F
A61F27BDCADAA38292C4A9491308D22269243CE391E4286A4160004B98FB7502
3996074FF3EFB52B2C9B8C2F0B5FA422A2B9659B02B9F6E4CFF387155BC5CD90
040A03AC74ECAB62F5F066C735292606F3F8F0B6641AD9F834CCD4D93FB5FE02
CDF223C1FBEF7F8F5298F9A88F2797AD1AD68B05B841A6D50EA42E5F3628FF14
A79AE0695778BA32CA143A54BB90E7F8BCEB590DEA5732883C49FC37CE11FF40
6D91C5305ECE4DC3F131E5F8CE9BBCDA9787652779CD4E3DCFBE5B865F0CC82F
E442EEA5B5BD73F7FE48EA7D45F08BB8ABE3FBA5A696DDD4FE8965650497A8ED
0B22ED25B58EE33FEEB9D1D2D19CF7351152E4936192ED52E2C2C19A56902654
BE7E69BC833AEC4A45DE462EF5A7AC19B074B84CDCF9E3257D60979CD161D393
D6D62CC897C0D75CB074C4025AAB81DF27B516ADCB83D5BA55A43739C3DC7733
682CEB9EDB6F315C240BCC11278989FA9653196ECBAEF0EF40F92B61507A5865
AB551916A5F9425B75C3E54513E5FC871DF216F79FB5D24A60BA3CCA1F7B90A1
E03281E5B2D7A4BF1D4E80050FB3DD5CC1D2A1DCD6209C0C6104FA7634F03FFB
223E8FE41273186971FF8CA0D4B3D8E53AD081DD29D84332DAB4AC7295FC434E
8B244D331892262DCF3890FF6F71C650C553F6B798906F11B17EF7B80FFA87A4
84FE64CE11DBA8552E5D158717D85924724C74AD1E6CC473C3ECA9E39D6B95A7
B76AB9D10146CF53FA5A60675392AC25CA9F3A5D1C8B59C40E3CED6402BDD61E
AB5A36C9B6C15112E7EF868F38BBC0C703C0C24297E3E6E348FF36263CDC87A1
20A54D4DDC6934054EFE49EE4D67FC676FD1FF2BE887147EC84799A53097BEE7
C9BEC3B29B8B1C35C02EEA1F31F3FA178F851AAC4ACFAE72AA71D6D23A000756
1B3A1ACEFDB61265668E940EC8B4B131DFAED453672E4A0FFDE15721F5820776
84DBCF0225BF3DF8C7A87ADF02DEF28896530BB42115B5C50BFBC92D794F7AA3
2EA445E702BF763D634A142EFB8F890D301E8CE75D233062EC9D79C1AA2C5FE8
B7E66F63F91B4ACF66DF02390454EEA4F7449627B6731ED9CFD381F388C987E7
F046322C76C6E0A71A31F569BD850FB0DEDE5550E55B9729D36A0EBDEAD60DDD
AED6152C6B5EBF0A3D2575F54FD5BB948B61862DB8A8E076EE1A1C50677E55A1
0A07A0D358BE002B27CB9ED8AB0A7DFC361711EF9F43D5452891EFFC7DF9CD8D
B5002FDA1879F02441C685643EAD3DFC0F246EB7BB3E9C404E24CA5DA6DA2AF0
7859059A78E2B6B7BC7F73F3EEDDA024A6653821899E66EC3BFECA967B103DF5
D416B9342C4732216CA5AF5A90AE7F0543D846EAD3EDEFDA4F0B6BEF219ED69D
228D811CCCA4896FF60CE7FB917AC7084F750149F81B2D0FE7BCDC0CC731C624
A0687DA5489100973DE6CDFB3BB7B82A4B912ACCAEB1DB5D5E0186290B527DB9
C1376F992A7E2D71BA906D7E27939530982AD2F145E8E7130449E3A777D52543
BA083E513647CEBE7E43E9E751B9F3CE9AF8690892A6BC0A0823AE1B3D52045B
0C76FA1E114C83F12798310D294F092359772015DC9564B06A617A232DF6061A
02741679F28CD820FB51835DE9BBC164E7550B904FA4650A92722BA2D7222066
1D1A11D5E93E4E82988AE50DDEEB10DA70DE694B9C4DBB0108286B6C7D14B275
E4DED2AA2FDAEF0BCC3A5C22B471FA3810CF0795A67075DBEBD15B1B54801BED
EB1BB24920E26E095AFE7CF39FE63D960A21E94403FBFA13B9DB21531C9D5674
96DFD7E7A53E88F0F1D789D9FAA0F082D1732CC7D7D865BD5132E3FAEF17EE3B
EC9F02EE3B8ACED5235B26C459A5C99E560B7ADF44DA4ACD89B067AC711A144E
16C4E92DF1C2ED0798D312130A1DEB876E5E3EB31649B1FC20D6E6C386D833C7
EFBBFC2949BBD7F2F67BADB05066FFFD43379C2075D8072FE755417D2C6FC6BE
B892E04DAD0490567C4099F43BD1E832024D13C27E49F3BD0092B596BF7D05B6
CE247697E9316089CF6D4650E75BB7BDAAEDAFD9B2AA0F0F2C070D9B7B2D0B17
2D0E8B96568410DA7ACDBA587CD37303030DC6284790079CAA8F5418E3A6B94F
534CD9B6641D4D349F630021C975E3968DDB0B328A24DDA9A38CD55E2E1C6562
55D7A0032D8303D99F7926C9891271B9B01DEB2EF4FA6784896B9D262EE5615F
FBB80105D7DCED50EA60A8EF49F452409D1FEC95C6885BA7A347667BA4EEA4AA
6AA6C9F20F24D982E80C01387E73FA3DE32C7B11F0F18DC1077B4E9574227207
BF2E727C01A963E1E318617EC559C70A83DBE03CFD2421EEBF37CF8865226AB1
78ED365FD8138EF50B3B3B0A523514129CEA955DD7C4B917B03755B478EEE790
78450BD8D2DC7C84D12CA6F4931A7461D6023B93BEE489E7AC250A0351C3CECF
3825F03E8EFDB537E8412279684E8FFD69D05F98BD984C9381E300C7393251AE
48B5453EEF9357F3A9513C289E39C6C068C78E203413FAF8FC5CC66DFE433A66
AAF0630B17D407135357EBDC756D1621F4D7CD517DE1007D67E26FDD699BD460
49456164D5E8FB93DDF8257A0642DDC74B1A30E7F0D38569CCECC9135C5EF4E0
D247AF3F58C6CF5423561A311862AD9C214C5CBDE37E4CBA0394C9A305FA1FDB
796EB5A57C0A95F576AE410B68B61BEACAAC658EA6114685420DA493148C8591
19698EAE3EA306F53EE39810207E9707EE082FE8F81541DF035197747F489AFF
498015FE17D6D86896013939E9EE3B1A1E845C21CEAF116EDBD3C96E507B3963
B513E6D905EF7EA38792EFA8F54D0EE8F97DD0DB48F7E392DDE88CB0746172F6
AA1F3EE9023C3F172C134749A0E2B1712B29257B90E845341A2A460A7F34AB2A
E89B54E0C2005293CF085009925893A42D0806A5F2CEEB8E04218FDD2394D500
6713FB268123BF3D14B2ECAF02A96063A06D8531A287E336042D46F310153E74
E3C8B0558D5D039C69D8F82BAF47B695574468F471187021DCD4C31D6ADC17E4
9342DC6CFA30D13D11437157990199990583CF15F4CE7D5F1FBF6A23545E982A
A74F879FE6472A50158F8214D213F5E24DC8C30208CE4B5C6A27422B32A445BE
3423840FBB376C2B7DA39DA98D33187C555A28C4C3A4BD8FE4CB417DB09EF44F
4CB23682A7B41BE0ED876AD7FEC9EA97B74A1FB53FAED1BF1B41315513FE88C2
3A9A336B9AD3CCA2B4CCD3A1581EF9B84C7D48375DBBB5346BE84A55069FE6F3
A9A672790C9322152DA86EF26CA01BF765C74A441D83C1022879BF938A1943B7
46482A85B4A3D76F2F649D8FD3D57402B45C01F1FD5F859BCEF5B690E3EBF8B2
ABDC1619545E6A917769202162B35AF58C930CD14E7A76D8B047183E2AB94940
0CF937C73F18E8B12AA339DDFD892C5E15855492AAB0175DAD9942F2ADDE5B7E
81A784ED56349884EA746DAFAC160B32288A4B3FEB2778C33C9486A3A1A55214
BBC2994D735EABB4C3455AC2BF822EBEC03D618EFCE6C119CDC0D56057ADE351
9AED36666090C3FBDCD42D9C464E5465671394FA2DF97503841B2F0414292116
CEA893CF88655546994E7A1C713B58C8473C6831604B034E899EE63306E67209
BD257E2A9B5BF0AF06B27372367CD17CA6CA52379DFFD871544DFDF1038006BF
B0123BC5DF7D7DB553821DD9E0D64F928C228B1F3DBC53210F90E06928963BAB
9F620DB12BA697D87207A74FEBD1F3D6AD769FE5A7A1DC3CF53F21A596BBF44A
20A75196450986A2485E0756E72495B865B1CD2C81BF533CF373623247E5D558
D17CB30E778DCA36C9F037907CFBFCA01CC4870DCA388F56B2058A860D095606
BC2100BCAADE5E9D4155AA189D32C347DDFB6DA15D321295CF55BCD5F36D751B
B62B3AB2DB9B7FB9BBDD78FC6E1EA1BC4FA730EB29FE13C052AECE0871786CAC
DC039ECCC11AA0ECE480FF14FAA8354DDF463210750F56A7742970BB4523FE56
05A6538337543C10DC178727097BB4803BD71511545BE76CC91ACC41007818C4
0272B7D16B4EEFF11B88508AC66EEF5BBCB427502835177360E68A81F7C3D870
CF587E8A51254930C07B4531E62E559C0A47D20F71E7891D3E2E8DA73BA4A7F1
37120866A702CA64A80D0F2430BDA9A5706B65B1252EB613CAEC5153F2C25900
755D49C4549EE654CD4C868102EEB6EC0B7C14376FD713DCB8FD623A7F7210F9
593D0EB782D9FE87B8D957C2F97D012DE0D340183530F88899A3D3112EC0B97D
0F2D4AFA23A70BF218C420C6776CB42E894D05CD781B43F99C694C15EFF4EE95
48B459E42B1C9847BD9E57A41CF33BABE376F097740E0EAD0096A82CE288E986
8B8977B76FA6D818195377ED75070934BE5440E0C89CA79880BFF75F7A65D57C
54B928B3182791A869700C7A40D6A9058DC9E34D8B3C3BD069891CE95D5F58D4
AD7549DD82D7857B69AE116F494CB2DBBAFB2773F1A3E1C75FBDF8D66FA5AB41
32194E28BB3A7CFA8FA96E1C81967408B21B738E79CF0262BFCA41F65A3FDB3C
7182A6E9F4B85D58204DF29514A2FECAF95FC97A4DCF39ED47355AA62806CB08
F50BCB6C8E816DA7287DF8543E14CCE3BFFAD9672661522A2C7C6E236E02B9AD
78E67ADB451A4D404A76A024E8D95C09E2BB1460AB1A6DA9E900EF6C3C9F422C
B3AF83509D270CA5EDE3564BA9070182336B14BAC4956D641B1153157E31565F
D890987C0E44DE3AF3A70B9D6A65A95A042DFCEA9A982D05E3104024A334CCBA
4FD3DB6971CC0C17D18DBC201B93B29735649EEEB74581E70E4C66AD6671992B
22CD2C02C4E379E2743E524F7B267A2711FCB63C007ABE0CE36BF6BCCE92D5CA
EA8D05D4474EE029782FC4770149F8CA1CDF77427110549C7CF476D224E021CF
B23642DCC41F98F4E28F22B9C66E5EEE8F92E3AB47919912A9F2790BAA839AA0
8A134A241EB106A8201A45FF73D1B040306153938A6F1ED37A7656735D278E2E
A633CB0CDD135EC0AD64B266973089C17CBFA86068DB7BBD17BBB62A21BA9D27
42F2A1E987FE2EC8B71189B9D79051839C1A8A980DD31A1A663C5D1C3E088343
8B13DD23355F264165B699228193AD7174B5BC45A03B679597CFB8C5C1F03641
CEB7B9B40787E70BC6B049260F17D0A2F9E92242325A907E39023923FBD60BD8
5C3FB7473F5E8EEDE2F33826BF84244F6021EE31FBB7B974C06DCAD2AA192DE5
ADA229B3D93783E2A06132FEAF01F3624D3D523735194411D1F54B4F38FAAE25
ED4D5C7E4B50E90E3BD99C9B059EA1F46D9E5E40C6D843318D1C5D9380B7FC34
6319085D4BBF8EAE5FB8514CF3F18BA6F9E831FFE3DF3017592852628BD9A324
7BA5F248B294B7F8176366D30C21AC1209FB540DC5729B82B3E3E03D73F2B14F
A44AF6B8559886A5E0E2DB8A8DEACDCC794D5BEC0A895E4EFEA8D15C14A2E48F
A9B521898077AC9E90B5DB9EFF6210B83E2B5BFBC668B55795A858A3E559EE3F
79BACC1E47DBBF86D1E36779239C857DBC1103AD7090D2B2731DEA440DF32B5F
54A361CE3A816C4C9788D9D3F654302BB9DDCC7E07623BD261411801784F770A
902EEAF0A18FF43136F6D124F1F4C12A6CBAA7081BB8D881174309949DA872BD
8C33DD609B6D5BF61ABB1A7052224096AD6907E12E6A27E8B8D7F5C538BBB18E
DD2D1B11AB2C9D8FCBD309603C89FD9D5A6F52C47FEDA60F81B58F63D2460437
6D0DC0B68C1DBE932723E07FC806BD49ED6F567D1A79887C11A9A3F86AB32BA9
870772A3CA13C6D4D058CAA16F48EBEDAEA041CC6E50040459A09ACDA7A92C9F
8CE90462F428E53E08279CB2AD5DE64240BD03BD86A8500526D45B1AD554991C
D5DA20D2FBBBF971644B1A432229795AA3225E4DBB09CDB14103589CDEF0AAEA
5FFD2496EA78AE33271F8EFF56FE81FAEC8D49FFFC442366385562CD9E5B54C0
76A4194ED94B31A6D9B843A24702BBD4FB46528E17902A652DCE624EDD189D57
13F4F57FA6D1884D6C595964882736A6D0DAD1CB61527DF82A3FD147A723F720
F70615CA1D54C8E245B84AFF1CB0FE97B6B10AE9082CE5C6182A48A2E0B7F1E6
614E4D281D28C40F6EC7A807CB4901371DEAF233DD1BB14359C59EB9EAFD4309
817DD928F1CC380A1EA2BC7922285B2D9CAF5E37E259544F9D2A0DB976AFA7E7
9EB183BA223780F27161FC9968399EC79688CE9054BE501311F001CA4C72CA3E
CA3396536A4CD867345B299FE2F7E23DD8D8C8617CF5A2E0EBBB26F02D5AEE50
EB443153AB63DC47B93C9C73194349E0E4D264FFC10405DB9CE2447A4EE748C8
75F406FFA31911FA7AC5162DC5610C72FA327EB90854F8FDDB46DD3B0D200723
713CFD716B60F14D4D91694755B6DA3B35F373E637A2FCFACF49B3682418E661
51B7FC42E4CF250C997F7705E9109C469D6EBACCB3D0117F588D2C9559876E84
7CD812B892C1A46EFDC414BBFE97B925A9C0C3FEA86B5ED2E339E3CC46935460
241054295291862EF06A8CF665793E1F0C1816D3A9A0CD8AA1941BF5CA15C2FF
07D742CC02BB81FE42A1F051326A6FFE733D591D9166114322F9C8FBB369EAC2
CE298D55415E942D6C05392D03DC4B2BFB4AF2216634BB48A48B0BF41F24732F
BF4E4ED5D33FA6299B923A40AACC330D6DAEF1186427C30FCA3DFD37FDA60319
B8DE3A5EA10CA159EBC7E45077E3499C649F6BBBEFC0455F37D7BA0398A28292
78943164BA08E0D30F74C29947690E09ABF3DF209E546F3F491380B279981D11
454A4858E12431F6D80108A5555F7A0C275CB4DBC61EE13D69768ED2249FF107
9E2EE704F9672DF9DF9C8A41CADAE9013823FACACC1891B8DF4ACB1A3447DBAE
8F55FFF672157ADE1F8145721FF110756E69CFE85EE45372615A24B502310451
96B5036BCB153031DA7A616DACAB60C9135BBE9878E579F6A461552F3229A0E7
DF6ECA67C1414E823C122DA4ECF4580B717BF25BC2FA283987A6C2E95AA3B1E1
2292C30B45A2BAEF348DA497E5997BCA11E47516AFD58738EFD375E0EB68AAD3
487A4FC27A1C156313F82E6482A968947497E4927EA42594BE986AE690D2B0BF
2FFC2BBBC01E8ECE2A53BCE5514CC439B81C2D966C5FAFE38938F89167D898B7
3BA8017F1FA90369FC843936980E6C25CAA7CBC14D0114F5F3641245BC405C78
D785B3C82D90E8C68B033DB9A934D472B533B68115014E76BD4FAB6925032FB2
60FBFEB5C6EB9DFA1E2AE0B5433904CB37887419FFE5FA065687CBF75C16E932
B03B002F77151C45A5A506135386C7D516C3D87E7B99704D9F60B779A3BBF316
5AED7361C900DB7FB3B719A5231A998B666C2E12FB4059ABB91A4DFF98053003
70AE61C14227A525E3376F407F7B1384A42C985680C1E7D3AF81DF41ACEA49F9
60132C79F68DBF2630534CF600B7B7A9005C2D6F5419E8798EAD8025AD630505
06BC90702AFA0EF14ACB86A699D13607EF692BC208A77FE043657C0301246565
C7E609908C3F5D008CE9C86F86D411B254DA5A7C54D6C327ED4A47DFB0390FA6
2CBF30616C93342A28C7CBB47B4B3E70CB1BEA0F21A7C38082CB6339C5E151F3
36CD34037BB38861C00C6A772F266749417B4A4C4515676DBAD27117ACEDC775
5659383A32CB54E84247EFB1321DF98A766D5F97FB210D86C8AF42A11BBAB339
E7AD3C1C9F0ED267A057D452BDDB55E2717D153D09606CABED6E1E460CBC2ECA
045018B639BDF8CD63B130CBA5336235CD4FC66E95CA744EF4DA29B76C73A96D
E69D536D99057E3D378D9E317A8F13F4C1DF6244C9B6128E1297DBDB9333901D
EE47D4CB2B87834E4589841D1BEF8D52DA4A3091C0E8376B036118955AD7A05D
4767DE8FADDB989954D81E42476C12AD52E1DA81437A85FE8316113F25E67C0F
FABA84E80BCE3B1AFEE4760A9656E043F4E76CC0EE566FFB715A94C7F11082E8
D0507C649E02B1A02AD9A811C20FD9971FAC61B95AA4EC64AB7F4678806B78A7
AFDB6A128899B4629549E941750699BC2902CC7472F21F90B8B6DF84EFC5830D
796F8107A37E85AC594FB7D21F6BE904ECD31224728111D4F133C8DBD45CC1E5
A6817C11CD8763F7FF82ECAA21B71103782C8DFCF8BCF3AED3784CB873F37C0E
1CD6D525F34B1A8A6E6687B489A864C030E1044C443D6E1C3FDB669AE6B550EB
ED8769911DA825668FCB5BF5093FDC460F4CD42BE364B0469925FCDC8547452C
3A9F16194CA8AE77289A074CE0EC7CC389EA374D422A315FD93CBDA474277B83
1E52C0CC6212A93881CB68E9BEEEFB521D7D4B3FC1F79D25DCD31676E39D5777
C506BC17D3EB4BD8E2137A1A1A497CDD10544222BBE305B474731328B5D6E93B
96FA7233584C79D6131190FF9CAA8B252379189A85CCB80AE2CE6A5D0545375A
F4709C301D1481669A18D11D2C41ADCCA0F31B26C54D2E45D205E1F823539D8C
5F42EE4F5E01DCFE126496F40A927C7E0AF3D0C67D6DC1E54CDD8A7B08A776A3
4982BAEA71FA21A4D8918C178014A83B34E5707AD015C447E8B378BA7BAAA5F1
B74E8713FB04A74EC2B3ECDD7BA79B48147CB884B0BDBB02A52DFE0CD75F1762
444C55A1B7FB99DBB5E08AC9CDE4D6E8434BE772553D38F682021FD9FC98D455
3EC689B5125F3168646E12B00D19B4ECBFC80AEA92A60965D72FD06E20CF506E
448C5466E4E40093B2122CB0B171A5D0D6F3E88A5000DBCBADFEFAE2C8C2AE53
C97322A2D9909E4DFDEDB2F4CEF1BB35AABB95BE15BE1C82C1590CBD8F0584AA
E93AE2E85FB09BD3D9402B8E7739963C3C8E5F99FC3FCF39BCF9DBF486681939
4EECA329A539E1925A0D5B6354A92E0E58CBDA36272780CAC0AB657307642AC2
179BBFEDE2C0DD526773DE1E37104941369F92598D97EF40BFBE09360B289D10
13BDFFF56823BF82341280C866EEB643400B048D8754CB38BE4EE7587FBEA021
562FE24A3C4C07AFA65AF4FE994788467614880312431D030D2654651F37196B
4AC43D80C680A5FF7DA9B3B6C33B83396220BB79A72ABCDC8C53DD3E8A0B2A5A
3B67A05DDD2951D76429AEF0D6A65B67F36B826D279B6BFBBEFA044453C7A209
9295DC5B9E26E1ECBA15F2049C00622C36D240C5D8B71FCAF0641C7637DBD1C3
0DA344F53E184D5E71BDE3B60EC51914D3601BE414D277017B88D9BB0C45553C
D184D5FB13EE7FE3A07D3B56D68791A864588FBF39609F5F30FEE7DE780C2299
3AB0B2984AB0CB15C1E3A38CC7945B95C47AA9277A669A201DA41C11CD86F0B8
0DAC54E27051D23EE8A56C47101370ABD3E4AF6708A85CB82ED746C75A56E4B7
681BD2A4E6874D9A0C4A7E2CE80F18F485370A435C5EB7C713DAF5A206147935
4D59A3241EAAF7E7C32A92D997EB580B568E7A50F89E716E828DB377DBE6781E
E58B973EE3D87D706A30827AD8B004B57C3F9836BBF2307F7D1E8F3C7A1BFC68
C27E0637B85DA3C9310C96D44749B2DDDC4745442FB7EB6E6CBFF97821C5B4B0
EE24E61250C5737A68181307919E4A201831F71CB16389399A3457929B162EF0
502AC9A3A20481DB2B8032EE3156D4533EA77D663EC228F4CFC3DCDAAAA41583
525D6D9C9F3B820BA7435783E73197F2E345C1A7344ABEC0D139E4C2C1F0A9EE
6D9E5C61CFFADC53835444FBCDA13BD183B8A39B4F34B9919AD6EC8661B01E1B
20C30E7C216E5571D4EF1650D80CB148948BB98D0D9F411B53860DCB345D461E
3FF88AA5D66BCC772A6A6574447C81182E8366C079A1634D1F59AC465499FD1C
0CCC30A8D5EB9646BCBCDE44BE8FD280BCDA44054C989A3EE9B3FD6393E680BE
A39D3FA781908086C26D274EC67FA6ECA659D043B910554E975FAA817ABE7967
2CA10F3182808F1F3E580FD46CBE94E2DCF692FDADFD2B6A15CC7B08A43A3262
EFD7009D749E7EB74D34A4ED68071C8AE5E154100BFA236CE21DC15165D0CAC1
FFE5BC3F3E2793F526A5FD94C653AC8BB3F54324112DC66E4F7A66EC82A85B74
CD8A1ED95F08F9644F1B7AA2484EABB9B2787C33D3D483BDC2D9888A92A589E7
A3EC3FE2B22593F7EDADA3A7DD72A7F1E6738B3B4879DAD8D22F960F9C8C59C3
7FC9540F4E61402F74D763BFCEB4A74B4158613650E55D03BC679A219E5E1337
21EC68DE41BF99512921346A87A21FE7ACFF91A368FD4D6D3F985C07AD6659EE
B53006DBE34E767090910A9D3DE178FFC7314EF032F1FBA346FE9F894A786CED
AF415E67E7CBE1CCFA4B07A5265E7B37A79BEC51253FE3DED2DE827973AE3EED
40413F2F04EFA42029A4E4D84599EF1BF44C6CA1C17D19567AE00FF68B3039A7
C61909D66BDD52A6D7761EFF3FF40B470F64731BC8CD224EE79571B219B38875
D1493715C7F455300669F0B9741DC96D068A6AEFA4DC688549FDD788EFEA74F0
2FE40CF82F1A732792B0F12864B2243961C99C251F4C61166C1564EF88E75722
3BE5797D7311718546A3B83C633E4DD06D4829E03C39AB702BA6E6908560BDC3
DF2DEBF0BC70A92D3B64D1FDF723D18E5BF282717EBA208638F730722C5EC8C6
4CCAF497CDC4B39155C33B65E0BD29DCB007222B745D0B23C18060C4CB1839C1
D52EDE2D9B548A4305614A12DFB4717B4A57B113D9F560F1A870AC8B9D95D2BE
EA401E2A3A190C846E5C95C42DEDEDD3267D0F21C3536434EF79D1C6DB84F0F0
4D7D461ECBABFBDC2D35FCF22EEB85D35E074527E260527A0541AF85249F4FB1
14500064BE35E020C26EEE192AA946A4419ABBE64AE52FD50E7C2E9452F63ADE
389BD7B71A88D227DBE4146ED2D16B7816CF2453E2FA20409EA9B70EC43DD61F
5C3DFE91A020793E66AAC88E94BA7020EEEF360CB61156981495CA4134A0613E
440B67C714CBADBE362EDD7D516E7307BD387BECE67D68412F9FBA33862403B6
7345F1FCED3268F7F51C1B692431A07E3A4986D9477B88A2C26260F2C49ECF4A
2B321794B4AE7D11C549CAF7B6D62B7EED11E1AD17E5B6ED61C622813B81B925
8075B95A2C02ED8BF300ABB39F230647439976DBAF2D5E334626F3BC0119E671
1BA65181BC1EA07F20F73C556667CFBE5191DA8929361920C6F1C7A3728132C5
2A288B1491B76BA1E5A277D6A1BA3232828C8C98FBFEDA1EA5585F8EF3CE5C0D
0C4EF7DE5A5114B0E1A8C2D5BDDB2548C6300BBB0649C022B7FE130EFA8DE4D0
CA87052D046DB51202A1C9688BA5E4613CE3E52D755760270632F92C086231A9
1DA3052DB6C0FE1C6D52502BD71B368E9A3E39C30804FC21FF7AB661FA15F716
3B717CE18E7019A496710F4258320B814E34D992A77074C1A98CC80E4A2754B4
5AC215894121E8CFB525885785A71221B195EA5C2F290D74871260292DC44974
058D48D12FDC5422EC81BF1592888272C8CA94F7D4CFFB290B661EC9DAFAA961
9481BA0D8E2A721A47602923EDD91F171B5DC033C69D03CB3E4139D9E154961F
655817D833F2B5782C194A1E1DBD810C1530612E4499525CB40969452074829E
8BD664736ACFC73F19A6749B563CDD7BB8523C71C106B509850FC71815DD87A8
CB6D24D83FF3CFC2A5D9DB539BC9D4148844453A231DB46F3CEC8D31DA82B449
38B501866992FA211DF1FE34BB2F918D8F30387396F53ED568F5144656275D79
11DE1E389CB89D6C7177ABAA16EB6AF30346B5399576020D4B7071C905FAC094
D1376926B6BE0EFE08ED507E4919712897DABC5375C2AE4CAD31C9E9D72CB2C0
5CAD5A79B226F0735DBB56FE1FCAF39C0855166E8183A29DF0B43C96B58CA676
DD6C9EA6D03DA6BF61F0B2EE5BD04F87FCDED0D3EA4ACCADF5182E78B7270C7B
BD84F97CAF4A26C6A2D806F6B972D1A8A7A90185135F0594BD0B77B112D51C7B
D8FB5D11A9DE4326B47A788F2234C56AB2FEB5EA67EE69E714567C63348E7E97
A667A19C3FC93AE45283A9602CD6EC744B0D9F8C847DC614AD01C6655292FB84
42D7CD75D509D55716B6F04548BE650ADE52EEB598CF06E2E91F48105FAD4D4A
4106904250355921390983BBD794573E01A8D2B462A7B1413A3AD6E30169ED30
02AB1DAF355D34460B4CB2EA8229BB99DD0669F834E382A2992F17D336E79C5B
583312175A6247F6C48155A19185394B921FF32AE941986C67201AC4BF8ADE15
F33BEF6C650A79047E9EF6D45C090C99C599D5DDFA96C0E5A79C6260A160230C
6C0D368794B247860B9AF1608E7D41401A71D82DC8CF8901C5759F304384CB5E
8A4C667FE880AC09E9DD6754C5A407C4A47EB03F84462A7D691090E01003D17E
D8D61C70E2C90516D12CE090E11284DE9A69509EC63684895C3D568085FB9CB6
987005F2AE8D789AD5A56E50EA7EAAC2688307E55F115FD2E533BC18E0BDDFFC
2BEC05E71B3DD508E7184F3229F58DACBABF3D410F11ABD384229E85FCDB8328
BFDEABC961FE2354A7D07DDA5812CA4AE9DC260A8341A82E2E95BCE0E4B03559
C97039CE74BEB394308684DE0BF1E946390406A784D8BEB9194E3E7AC470D245
6463AD0FFC196CE82D3AA7E39F1FF403C9068EC0038FDEE6E4EF88F645C2D76E
3845EE800C993705D54BC0F6C42AD5CEED25D7E4608981317E90A6C48D922629
BCB9692F8E6EAA8AE9E2BB56B96C24663F63B2948DBB8A1A5AF477C2C0847834
D03B4508573F9286063F9A2789B74E60F7D13B8B400E42E71DE93FD7AA50ACAF
539AA945A98CD325A64CDAE7DD3D33F33285752FBBB149F4247EE40624DF6610
44E855642AFCFF4BF1CA6F680FE16D39E58F3E55927460529A98C62A5A4C3BFB
62D1C15EDAC2792C663AD7F8E099F8BB856EA85A7FF5B19ED1BE2A609DCF16C7
94156E8A7724F553DB146F4F0AD627C7D76891305C8E7AB76AD9C810123A55D8
DEDD04E3730C8F3604A34A001CB19045A4C01BF88926279088B7B0B78AB578AE
7A9F55093F0FEE24ADF9B21AA9AC2E619DAC20BB9F1F870AC465BDEF56662CCF
DC3CEA5AB43AD5580EAE6F3FD0145DD7514EB682DF9004064B733884BC081F33
CB0675487E85ADE1266A1D4982CF9708791BBE4A3F10DF08FA9290821D722E59
AC0478E05A81B562C579510B9B4C47E0081BD85F601BB2F62B37E3021D3A3628
DE84FB69E0C1F6CF8C7E37F9117E9D953FA9A1DB10B50109FB5C753FDBA67805
8AE9043A853ACA9B28384BF244A807198399F06A11F2C406DD70344749F23903
6A6A79A8BEE48EC4BA5B76DA116953F1416C45FB84DDE45FB5C80A25165A0D01
AFEA1971F965719AEF615098A23C48F157AE8FAE43681A970842575BD3846D77
B3F3F78977B926B341D0076A79AC811B591BD16FC724C830EA954BD3C57673B2
49FCB2BC7806155ABD773A3721BCFD1D32262AC87DC34E4EC3D132CEAB2AAA22
39DFBFDF49A6225985A0F41F6C7564C80EB1E0A3FEAF25A910309DF21A36F683
F9E33947C2BA01959BF7AAD4E6F7706C03BEDD767DBA29599F0C0EEB1F403143
D132FC9354FBD811DA64B14005995AAB5EE59F8A4DD691A9CA3A9F5C3330A098
558EB054CE2B9209A44B1E90F28FFF9D5C66A7E35F5D7D88A1DEB19FDC36A40A
9FA2994CAF9C4D8716D3D052CBFDBC744B697A278AA939A36D7407CDA920C4D3
DBBA67EDB65EB5DA84E4773CD8308ACACFF486DC38EFAF8DF27C9922156473A7
A0B433B3FE74319842A855C6F8FABAEE877029B643ABF030A3D40F0BDBBDC4EE
4015D46C062C2EAB24900996E0A5EC8E809FCBF231C051E114EC629EC7F11998
E3C699A2493385C51B528F53938EB25004CD0E892DB06AB136E4DE1AAB7CCCC2
95D4394CD527D0EF21F8720AB3AD7ABE83F99269D2EA4A07D86E79821026AA8B
1D32CC3298251D083542697B886113443FF8ACB2255D6BEC532E66EC29B3D436
5384D17C3989D30990D166EAA7466161BC9461C881571FE96B2BAAD3EB264C83
3BF3AAB5C11C77E109D41486192A46362C588EE16460D00E50858ECEFAA170E7
A04DAA42F833F8EE5A6C12D2F536413E200A807CB16C582FEF3FEF1BFD7D0F5F
C280A82FDC84CDEFCABB734D5E6447FAF38FDB21E98901914AE520474289EF3D
857621CFA941DCF0827FD734DE3A79E17C78B8D859DCD3BCD40553E9837034A0
A960427F1B1343AE792B9190BFD2B3586612A7BA5BF4A53B5C7395F0B1BE5B66
DC7B5D8A940B86065CA7F9D1E04619B57FB33D01DD285B93E3371899136AFF34
A3CB454DEA82ADB70B977268F5D2680C6C36C6ADEA158DEF25D7BC6C987D55D3
5535E249C6C75D20482E312B25AB03DD41C99E05F0E2A4954B7A5AAD40EC483C
961AE385D77BD674103CC03826CAEAC4FDAED57BF61C3A40E02E35C3C9770892
F14C516B7E62ACCA674F08C1035024D65CC3819FC01FA6FFB926E5BEF2087254
F1C0B6CF70B1E4D44210C63071F955E866B16466A80509921C2AC49E99C5ACC0
5029ABC441DA0E7E607DE7978B5E1B8321B250C1E4CB10F763413F1FC3CE6FF9
719A6C7A71EA9B4E433D266C6551AEA701BB838B749DFC55B4B55B1853519F1A
FC16CE58BBB239F06A58E5288F3C7B1D775AA71DE75E9367D32ED557372A684E
6104F3669BB64E6940A405537F56CC5A4CC18AFA22B0B3710663C803CA92FF94
8D9EAF3A2E54AB376583DA9E923C451D4528D7F8BE7E706113B98AB1783E7420
885B9C44952917822BB55B0047452F8F1ED66321AC8544F24343A0442AFDF690
0863EBD8256A9568F86F6306E0706BBE30AADF0BD80E624FC588C2279876C4D6
A9BC2CE093C1337C5B794147817B33650F19F8D8A0AB96D6CD13C68754DED946
3435C768F442E5E0271838D76AEE4F76DCA0BB9C97B35498D9B01DAB57FF58EB
EFEE94760B551428C85C0CA4DB77CF457D217CD8FF050E114AFB62978A8344A4
F3C2FBACD78FCC8B834EE625022006627EE0A61C24A6427536A1EBAF0CEF3470
3BE7E532D297470E50FF51E7E7B2C3D1E36E1CC98DDBFFF7DE69CAF242AFEDA9
AD671A37BEDC30B223E77F194EBEF5D3F720257D43D54BE882C61555419D5D19
A780866C3C8E57C052A10E28EFDA6DE22CDFD2A17177EF64D763B52833A9AA70
5317EF7F33A8247B4B61228979AC23A60142BA170BB686D1AC01A044FE019CA1
15D2334BEF5407E3AC07A1E17074DC8F6067CF438926329A942F5ECE5340AFEA
06FDB521D465B7A766386ADA58E10D7AD0CEAC4E642102033C00B1D7FA1E2AAE
612C2D04906DD4A556C9CCF6A2B3D557877DE100AE13EE0134EDED2BCFE45F02
843EDB44F75BD44C2DB1FE2945C32375B2AC91D89891F396B44591E60A6C559E
0BC76900F3FD2BB5A75FE00696EC48FEFE8880C37D6B57DAB04526882AB025A5
035D0FAB3948752664BCFDA58492815D1678C14C321A5CD1C7DD9F67C1F5EFE8
1FD39434D790C0D9D9905B43CB654DAAC56CEFD8E412E38B98D2225BD506EA90
A0FA019D350FC9F5B090A71E5057B318C475563F5D032BAB1D063C547D120C8C
0814A731FD5BCFF219620D4F9C8479F505C0B1B6892D00FD21087C5C45FFAA06
A48F2D72CB021AA33B3C1F23990E9A3EBE326F7A89A9A7823FF9ED9F690E08EF
0EF3E7D85E7A9E80EB47827CECFA9F3B7225B73900284B34A6951ECF7EA5ACC7
EC3C1711D06080CE0B3E5214AF38BF32F704ECE0E2344A1E749C17D721DF6B47
BA813E6E1617B1380AF0DE501020F3DECBD3B97B9C4623C9B1F7B089BC17886B
AD89036190F0A66B34D3E43DBA3F1ACCA7C549B63A57727EB85F5D2FDE0B958C
A7BF6988F86EC90D390EBE74A51A3FBA4B63D0D893030A300E35EF7C7B3930D1
71A41950070B5CCE6453582312C1D42202F1B3139E6B0AC9DE215929DD1B34F8
0EF1ECF636DB96EE7022E8ED65A4252C1673C728899BAC117FB3785A096E9B87
E77C8C7DC8E23B65FCB204913AC037FADFF1617104D2C8ACA8F9901344F83A0C
0A10B20C3D0E92F598602193A4BA03CB5576C4A4B3DA2440BB09C1E58C70D76A
2666E6E798F5C51E44B24A383B34A9CFEDE60FDF64BFD62B8F54AABD203CA0CE
8BE6813B2BAC838724892ABA0F67B163765D36619A8531EA4FC86D06CA9DC2C3
3070CEA4B6B549099D7C38651130AE49FE6CE9228DE8D140F2FB9716083FE108
081E5F057C170DC824081386BEF922E58E5A1DCBC67CA513293CC0BE7AD6491F
CE607427F9047F0AA76CF7EB555A9154DCBAEEEE92239A8CF6ED95B501A967BF
CFD6D64772EE9FB9AB75D859FC8EDCC73BC8CC8E3F54F8CE9993537BF1084406
68EB9F7DC1A99EC9AD39C7E531760158A7057A1A21276EF56F4C98D627827DEF
14B03BE40BEC6B103399DC8BA01B8A682CFDB8631F2BC94AB019812A5422CAD6
9A294EFCFF6A396414AADA855040F21F77624F16848D6F35DBE8F90B93A7CB95
2C7660F54BA01E058A8C0AF083FE361F0480792F619BAD98E9C2924F7B09DCB6
C516AFD0BA0B1FE417ECC6B0F2DE9184A81A8D6E94D640734223E1B85745CDE4
7FAE4A885BB59C7CC45F6D31C4A84CE14AB57475EEA45EC4D9555972B73580A2
418B71195FCCC51A5830A80FB5E11DBF8008E593E032FC159648701922B6C602
1E49F8DB9AC6088D38E04C44713FF0DF28157468F39AA4474D2356BEBB51669C
0BDABBDF00990D82233E151495C51DB763EF37488B97EBB18301DB55CC0B5015
041659071131ABD3936F13AC07EFAB27DCC5B3B731B0F5D270EC7130A2D39B2D
DF0D1322E2CF67C4062BEC6246DDBA7D6ABCED117D10B9BCC9D93FA9A3824230
41CD452D7C008EC396CFD7BF1B96FE238728D15AB7BC72003964350EB97CDD76
9ED3172D5C02BD9197714E658EE5FFBD8BD01AFEBAC8B3F89CFF5B4FAD9B87E3
3C71BF2B7146E18B1ED4C148FDD9B6CBB5AB10F17693B297AABD2325C42E9F46
E0F0B3CA98364C57A30E78EED08ED55E0D8B8E7B0A3E06029279BFCE6041FD62
BA54F7CD684525B53E98D5B1CAB9269C9E0804F122723D0675F454C6157AEAFA
3CC05BF868E50857477FE1F9028A69F3F185084C8B4AC0C0346538B097A88AA8
244CE862BF21163EE8CC41643CF27F1199C702941D0E5415213DBBA9BAE64136
E0DBE362D63E8B6D6B6BC888D21DE57CBED39ADA800C6B4EF85D6B85D7C0970E
BE231CDEEC27338BD1D4367DB980EFE89DF2EEA95748C8C1D1DD4633503D4D7B
01832306E7EFA5AE89F4960FC036C99364C86228AF0A606C83F81A24C45A8393
E71F7C3F052D7AFB17CB72355460EA466283EE34350B1B1EE56932C1BBF23522
4288DD290EFF3402395DE0FD13B3ABC409865421C8D1BB0978B1988255481898
45AECE2D741B8BD0B266EA050A4DF50C746C92DA904B974536B01F75DE0D3C70
3001D1BA6663613B7A779D20D9231C1353A3E7CBB4AAF58C8573992A1B45DB53
219B99A49FD90084A9E84E322EE78E11289307D6040CE21F8CAD18781D0B0991
3E70C6508A80AB31E44C7D83E98FC124FB67275A231688A01F035CB9D8B8C352
2AE9CEF36438E9EF1D752E0EE462E95EA1073EF38C2FE7E85A29BD454D3279EB
39881EE82B57650E07E20B8D2541B0E8C676F7FE2576D678C90A4522E499C97F
209984B6C913A6D9155D70AD29C92C098CF40803498EAA679892EB3082A5CB78
42554776F0ED27963DFA8CCF7BE75783C23684AA35BD2149E0FE048546F12D20
0AA26F7A5169285002FDA52D3E9E9199BB070308EFDF39EDDD13313F503A4166
609C209A578A141946A89948828C55EAEDD173C179992FCFB7B1B80D0D62125D
F612490DE7757CB31DBD4C8F67B91BDEFC80BC83C2B4F1967684C4D19CBD421D
DBD34D04C33E734617893DAC228BFC78977459525BD0254CE448D9E626822A3A
943141488698199D6BDC7E01A30FC8908323B633D2C0A44C6F6256AF0D1194AA
23F79DE403AA270E7CDD70EB37A108981C6FA8F27E121E5E7DF63A2006142406
1B38F014DC297EFA303EA31875D066264BC46D7231D4266B7F9759D0F69303EF
1B748D7119BB7A5FD787D3817B54C92D255199CC39B3E99C1A60B430E090A61D
7858D40DC0A545F48F477338A814A30632B61B8BD7A7405F14DACB3BD79F2AB3
4AD5632335FA0C1B5BB14FE200A94F6D2190734CB61FC06D41B892611074D71D
3629B736EAA20B82AFBFCDBCC143D90448DBF3BAD6557733C1F7E15DAF6C5BF2
1801245A95DB5F266AD4F8AACA1F0EEAAE2B6C3FDE25BFDBC892B16AA33CB571
1CD0CC5F163982344634E3ACA70FD9E33EA745A563AC39BCBC273109A9D25D08
F1693A2E3CFF9760E7863B1524043EC4FA7770612621EA11300BA42F817EE333
9840CA61AA15FFBD38C97C0A3733690CB9054CAFBCFBED98AD23B233EFD7B5A1
8FA9B8F511160E23C32CECFD92BFDEA0DA080D029FC09B62AFE86B09088C3322
B7552276B5362EAB3B6C4CF818682540B7F0A93CDBBE68DB97CF7ED3953D0A49
18DCCFD73A5657ADFBFE85E9BD58C4C199BEE20010792E6AC7328B41F02F22E1
02FE528F06887C8EFCD17DDE5AFEA87AC7172FFDC8C957551EA166E4330B6C09
31EE88B38C05AEE7B53AF25E0C5950C0A61A51C8AFA0F54A32799D3484042CF5
C9BCE3ED9AABE92C1451DCDD7D0A7DBD8390F493B08E735A2CC38128009B1551
038FFB6B75DACE4870157D2BD0CBEB48F07FA91232A8CC750C5A1B75A532AB73
75DA4914B2CF72106742FCEA5769A539C39E26186A5A6C849591B72245A4F3C9
C1DFAE3FEA0BA64EA650B96F7608FBD062484EBE7E55112E26A5B935BBF1F138
AC4B9959DE3E173EFB43ECE0B94DBE34EA0766F2D071ED6620405C7D09971A8B
979E04F4FD5BB69D2095BE2D636DEE9DDD0669F8AA903442F9B8973F99D38987
515D91CEAB2350B819342AD78D40F1C7B17509782A82FB5C8CA6A19E9D553DD9
9C1A3C69A7D95B1D9D365C4A2ACB3EAC37B1E51356A79E072AED7A850BB045A0
320FC3D2E373F5EA228D3297D846B5430FA04F0297D1D168A7E9DE2E5D7F6BB3
606506C4D3F40CF84F323C798F8CAEAEE83BD975023A07F434CB7EC372DAF0BE
9340F37BA01CBD72098BB038FDCDED782CEFAF409561D91979472DA1E34352A3
B93C3BE34DF8416C80DF7928355DCD478E8D38C759197F7C344ABFEC1BA328AA
5EAE1414D46E173E81154984A06AF411915FEF7DCEFB0DEA041A7C67AAC3FFD6
0FA48420AB0A4B08221F70BD2AFA485319EC58F225CBA7EDB2CE07F11AE9DF02
935F44456BB5F6AD0AEADD891C350C0D85EDBA30A0B94EFA1E618E4B07A11229
BBE64D9F4C4D85C6AD5AA32017D9C86EB466C34A055831C494416F88075225A8
102B732751AC0D1563CF5FD14AC4F4DBE77953CE8231581325C87407615282F4
7D401D307F46507AC63F8920B177755A10172FC3D0D634DAB54569968C9B659F
DC3FE6307F8351E5D9EFA7AC8C2EAB38105E7513D71CBB159E16E9688E9EFC40
6940F3EBCAE0646EA1EACDC7BF0522D72C09A03D276A38837C106796ACFB199B
9DE91EDAB505246EF35988738CC4439F7E5DE00CE69265BE3E8C189381610D33
52AA80CB93375CA21FF35AC480910177ED73E761B3A8409F0792D4455B7E1845
F0AC35D7D23D89872D6818F4E34BFFD98ADB0950ED8A2CE49E74308FA952A19E
BCA2EC61FEF3C8525A2A920941411A1E64A4EBE1C868B1DCF11330C3D5051B09
1C73BFE95EDF2C4D987C9F7E7C8B0790EEFCC22256F949F8162732608CB80D76
A8601B0BA24D6D8C9450DCF56EB4BDAD6719AE9156BE9A843EB0714F8BFB4E08
6C4DE0DF6B293833AC1F2B42E9BBA95440B7BA27D89EF30C7462ECEE62944F19
05C43A2F447EE933DAB0C71A2C7721F33059ADE35C451F163C4329A83AF67761
06796663E6A842C4F191076029C0176BDFB1533BCF8A0A10168890340FC74159
E279826514AEEF112D314F4186189CC84B6C2F180584693301C1A1B9F9E4037D
926B9C7A9F4733C481977B923121DB31D91053E9E199E756DF62E507EFCF9C91
2E96287E8ADAC687DE1BB693347B257A88735B229BB8FEA5CBA83E93F4703515
ED714A1866B9C62F30A623855C5DF09B99D827B1F3461C4FA7F51D11E551637F
46DA31C3322CB6B08831CC825011CD17D5C0275CFDB5566CEA3C4594C463B8B7
A0936B732FD19E1BFE3297BA1B42823BFD5468BEA96EA053D8684CA579DF8C04
62D7AB1F6FA9E403F5BE2AADD3B36C0982151339C0E8EFD5FEA214D8A2084E6E
11E5B426603F35B91D03F31F4960ED844BAB76B9ABAF50368DA90CAB5FAAE758
4E7C07A33172566B0ADE7045C307EF625FD42EBEF8D4648646D5B832DC7859C6
DDCBC5516F1FCA46746038952F86ACB728AC1296914012C754129F3011D6ADBB
235E2D6E35443000B380B7FD930685DB60139629642B501832692CEDC2F76F77
A5B0036199D5C5B05D22EB0A72F1F0500CB06EAA0D307DB8DC9B5FA1870B089B
93FC76333D7A5D43974B764C5D994C22FEEC2DD78F337BDA1CBC878CF9015251
6312742D888033AA2D1A7CA5BF2B25B25A89353A679CA8D22CCC7B4B84BEDE1B
9A92FCCCF18CD40D99EB5778C902DEDF6AE80C48C88E75578624214144ABB3A5
0E02D12303D1AA627A21F27B97B2524F0D9E95E8239352142552095A9E4BA7C5
2E1B958A5E57AE78B7237E27FA90FADE7579EAD35BE3B5EF4F0F6D53AE9C5E66
2147942078F283F92C6ED33196F32092FE0F43F16F19F1D8D580A4104879DF3F
E43126000DCF216224075204BE7E60E593AD163EAB900162415BE2041A21B868
C783BAED4E296FD95B55C0769638461EBAFC86DC3EF8590E5609F93D6320BB4C
039394A3BBA62E0AE0934507B866A63D78631CB6191AA0B9A12AA11BBF
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: UniversalisADFStd-Italic
%!PS-AdobeFont-1.0: UniversalisADFStd-Italic 1.009
9 dict begin
/FontName /UniversalisADFStd-Italic def
/FontInfo 9 dict dup begin
/version (1.009) readonly def
/Notice (Copyright \(c\) Arkandis Digital Foundry, under GNU General Public Licence V2 and later, with font exception.) readonly def
/FullName (Universalis ADF Std Italic) readonly def
/FamilyName (Universalis ADF Std) readonly def
/Weight (Normal) readonly def
/isFixedPitch false def
/ItalicAngle -12 def
/UnderlinePosition -125 def
/UnderlineThickness 50 def
end readonly def
/Encoding StandardEncoding def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/StrokeWidth 0 def
/FontBBox {-64 -225 1985 961} readonly def
currentdict end
currentfile eexec
D9D66F633B846A989B9974B0179FC6CC4458BB4CB99E3608702C78822367AAF8
905981B7439CE8FB33CB4CD20CD28CCD26E661FF85FDF38085D23B0460E887DE
732F2B1C30A8E32F24B2C6E3E2AC9E3958A5A6ABEDC1D2635A123C0044EADD0D
935F314C247C6B76EAC74C59BA3D95D42E67E229D9D8905597BB351BF74DA40D
48D0914F1751374A93CFDB8F8EE2A7A7E92932D51EFEB49DA59D7BB1D019699E
DE373B2E5E18D7E3366C931362919EF637CF35DF18D036ADA8E2995AC81A53E3
19E7D461C52803EC6678E213D5AE14DB22B1D4668EB6AFEA1BEF4AEEB9CED0A6
443919437D34ABC048D2C55B7171DA4B36AC383039800A77CE4CA4CDD58EF8DE
FAD0F086AC04F9F01459DA246F7BFDBE231F0C8855B5813EC19327C35D940728
2AA8708FCA214D5D53E4F4B1E599AD64678B891BABADEA7EC0B8191F1C26BC65
4A4BFE1DFEECD5C6270946EBBA3CA0F5C25DB381A6A230DEA0A358A4198A9D15
D322D0E3A1C2AF13DFBA3686678068C7E8E1124E64297100F57BCCF02136C824
55FFA8314B682F08AFB15DEA10129E661A6DB44CF794833416612374857C2749
92E09DF08E5B50134F0B5ACCC001CE2150684C85B53FE668A4FFF3CC17DBB184
ECD1B89CD01D6890B252AA43F268FC91EED63E8C0B4E2178983DFCE81A1D029A
8FEDBD129B44918E3CDD886012E233734FF62FF87678068C1DCBC1F040722774
DC375A4454F168369CA602F870A769B31917B744E01BBB872A6F3353E1D93C33
6653ED0F51DBA0DE34235097373CA4583095151642EEE76B6BA6714F37031F5A
D2ECA4875FD02F65D47541F5245588F0CB5933A759342FC460ABF99E014A85CE
3BFF948BC38F3D29FAFBD205400093EBA5C194624B38BE27E09A493BF1DD4399
98956B9896FFBCBBB77FC1B6675F1E428390144B29367ED224EA9E7587453689
EA57A8BB5D117B62A1375D9FD73F090C42DDB86E9F9921E8371D27BF1944B66E
CBB39308FFCE8478F68DC8F26E0EA7B46EE000B06D36DE1D45BD6373DA634C73
461462AE7A16E9D68C89FC57D817F7937DC65201ACD908C7E25A461D4F18ECEE
FC8404A75D6F40879E5AB5E040CF82786A3FCF21AC6882AA6CDF9F4DB476254C
A6DDCF754D7CCCA98A27F18296F065E6FC48BDADF719943CE36E52BCB547D7DA
31643F081FBD60A5D30E9257C5CB229BF1062F8BF360E36273487F9594F3B018
A19F5CB5118755F6C0E3402D99FBA966CC6D1ED120E92E5ED1A18DB98D7221F3
560C1B4B9CF476FC51CEB66917C92471164C66F3D48147C9203379F0097F2A06
51027C502B5B2C96661BFAB76306551A4241F84983856E13A52B77CE7024B472
EC3A789EC4C742532003D6D81AA8AE5FBBF48F18D310030C96E1A107BC0179FC
9A7C0228324798DBD55BD35D410AA32A9C3915C895AEAA659D6459E509E9A2E9
30F74CA51272D71A4C9CADB54AE44E2FC6A4344AE8D5D20A70F315D9EA388A6B
1EE30E0F23A0BD9B12BF9ACFEBF0657351C41A461DD7047501B5B5CED4DEE56F
38762BE1F699E81A1FBD0336A14046A947F0A252682B4E941AA8BF70036A7888
7ED4C00C7721A383F73A66AE33FB4C028E5CEE2E5B8C0EFC0F46483B5DD62283
4AB339FC03CE0DFA171D750F806AF9531D21E6714F3FE38E1F1DB29A6E6D1CA7
B0AD076BD5943CBBE91316CE4E7C49A391146B8EDB9C4D8C08FB2573A217FD75
633D33416508BF3F67AA772AB8333CF00DDAD41411C18B9402DBBB5CFF8FE434
0BF894B2017354BEB6EDF6306CA116B2F3B08E3722DE166D32CC2786F21EEE86
95BC0A2D179A0298A85142F0C77D5010A8328BD2BBFBAA43B93B6CE18C3733F8
B547F051562ED5A6856A53063AA7E7137877A5632EDB7D5D2DC3FC1F214DCB3B
A4579B3729AA67119F55FEE0ACB3E06A2B468EEFBBEDE28E109C1055785EC62F
253D382F7625137FBB52696D344F845477E37B733A989C724C2EE67A382A21A1
E40A9669EE57B0359B63BFB34A97FF7ED694E5BF9774528E86881F97C6D1FBA7
6DDBD70BBBE5A81DD0DC39B8B5ED12F741F52ACFC1375DB1F41C700AD1E96DEF
F4E82DF77B16949AE746D7CBCED9A5C73EE7E2D2315FD6633A6A242F75058B60
ABDA426597F76E7CFF3A8EE8EEABDFA0F3EB9A859E3AFCFD6B05B5812BBB2881
2F1598228F95C08B6AF93A785D07E94519A5A6BBE219B241292CACC29F962FEC
8BD168347FB13496CCE36F954EA283B41B70687DF92BCF247AB1C29C7FD5E73C
E4456415E205E8F8E4B854427C67E14DCF9D9149A4442A4971D60A584F6BCC13
AF19863508BE4FF96A012CCFEAFB6467FA0C51BD16A8C7662C2B51F7503B48B0
B6E09B0769AA60E748C7DD8DB7B3FC52B14D92D2E1013050EDA09904926EFDD9
0CADE5B0A186D8C9D89BD6A6000C2060B6BFD1D0AC50D487A04F5DBC7BE52687
953E7C41EA5AE33E720EAB6C0C35C9AFE932241C19B24CEA94660F924A31F338
6692F08B2C16CA111701D64C9A1FD8AADDBD4C8D374D70D264E972EA9227133F
9E7D2A870B1DD6E04A9A80F13F0B21FC96FEC1B2458245F431E92AB4E1A7FE4B
29DC554296AF9C654DA29B5506CC29EE6F5BA4E7E6B8304D0EE4F6D2991E4E0A
32E14C9ACD2147DCA2728A200AB65A44B03707B09FACF642431DDBA184593434
1D02E2593390E4802F5DBF1C5B52C78C7098033CAE12D96730E5263C32B61A5F
4BF8E70097E84F416670F28F4522F8F7C7244D32D2BF38222E5BC026A2DE8D62
063F260B0C4E59B4A049B1944AA50531F5E7CA6841AB81EF8C32250D5A3F214E
8730C7EB3CD622E193764515778D6F3AF763215B1203D96046824183334994F0
2C46E88E317C4B8DF912CD1A011E110107946AB7CB67BD85D31BE25EBC0C754A
5E4A9CC49FC813549F35A257D473761E6BA6AA999BE01E6D6030175D07A1194D
F73D59312537D49A1BC067FC0CB9673FF089DA8E7DE517E3875C435C52BD160A
CA450A0A12F5EEDBB615FDC405FE4BFF8EF4BD7DF5A982072913A0D3F843924E
D6C9EE79D70EDCF1A7CA9FC9AD3061B0075BBC8F194CC6CD6116987758894EF9
0E0561384EE4561558279B3A4D7827D1BAA0F84713AC0724B5C43C7720345B67
5908310CC7EA7E22DA8B2CBF0D13732B70196176E5658CFACB6A26A3DDAADAAA
38B9875918F76FB05649ECE16C57C03CA26AEDAAA71F71A0B94C9042D6054BF5
25786C349452174612CA4A30DF146016C6CDDF46FE756290D2AB042B63AAC85D
47845C0EB7934E4948FFB379963EC2D3DE330FFE23DBCDEE06260E0D0EFBDB5D
271EAE132C54FF6D022ABAC044B566203ADF27CD4FBC02014CF83DA4F0E8E396
0ED6D61D427EBB4971CFEF8C7286251D2F3440482AACE1C7EC25A4B6D0D0FBA5
04D732A3B32E874CC7B87F407246BCAB94E55A45B6DD2360A1050A1F76BF2218
B19E3AEDF2E39D16F31F0F433CD652DD9F05E50585EFFA912558AEB958D9299D
00086943AF59CB2076D9262006AB6D503F243562398C78FA8D65368BA341847B
A18842558F528DAEB8F1CD867195E5BB6EE8E51890B23B955F7DA902E8DC09DD
9DD02D19B77DDA83B25D852BFBA170DD6EA1E5060D734CA8B28BFC9C4A181600
5F873AD37501BE0FB46364BDADE2ECE81A53E6BC4337A98EA2AF24DF6AB608BE
B36EBD5CE77E0BFFC93BAF751764BE11412F53D7905B9DE8BD0B50A853BF81AF
AC410144642B864C60E00957FDDD7B91F582DD7687CED21F096009A14A7C7B51
2AD8BC570D2EF44865C5EF88368C8899B8243B92B0016D411C36D21E581DA140
18413FCD40B28E66B7BB832ECCB0BFD9B6063F53095F6F340FC8DB9874E2D0A8
41B1DF5E1C3D718EA7E49677CE42EC43CD5406BE24ED04DE96B79E1AAFFC09AB
5B9AE26650BA7492A2CB3D7943229F30AED0216AAD0B053CD5B7E540700A6E90
E2A79FAC92BEB1C56F212053CB4208FF7D2E5911B079CD540161DD7FE61850B5
B758DDD0309993199C511DA6CFD6E8E0534FCE15A8EC58A07CFFBBAB0B6F645A
6A590AA230DC4C3EC6141A6BCEACC9817BEA3DDD782AEA21667F675C35788044
AE5FA544D003BB1150E412B6A622E3A3EF54C7413A565E6B3AB06468DCE41636
85DEE56C1EB1B30C14607402D6E1698C5F291E1CD062DFB7C9AC4AE9098CBAB2
184FBAAEE9B7B03DB354233AB12C79E2AE007C001A7E54F631B5735E4FA6A2DA
0FF3D9B753628DA37B2ED141B415D53B40B1DC70BA668589E8BBAF973E6D4131
842A65298A67E3A218AD9D710A64F949F5EC4BC8C1070DB673BB15466D60E249
F40D102DE53664059334C3AA4C0E8224737388B1C6532B8423E4A0B6427D0E09
54D6C73D5B86C7D305294EE546F78C99EBCF7BFC636FE52115426DC4BDE0D34E
647EBF48EA0A114AA194EE87ACED84637EF70229AF60FEAB61DE2DD0E90134BD
D1B2EFD4551C16C157CCBB77DB98361B249E8A5070F052BBC2AE97FC8068FA16
042D09A28746809BFC01B8A4759B039F1480721D22C798703BF4BF7718E0384A
195BBB273827E3A5440C9965ABADA84D6CA90B0EA6FA682D67B2AFB341A2E40C
AEA3971F02EF74BA9A071703B7D73152340E70A9FBA026E72A5CA1E61835D300
961E2DFD5CD638D759CD61DA0B04CA079EEC03CDC64CD4D75E4606C059D1E56E
DDDDAC0A196E6E76C20C38953FB15A56A51B5ABCFB48180118BA1EA80F7162D0
78011734718506253D7123D618594615CF2E67F4017A8F7AE0E7966D192947E1
C2B595DE7B5F4FC5F946EB4E3F6653DBA8A923C6CAC0512F7C71F602E701622E
50AB2365E9663B0D7CEC2D37BB8656A5DC0502E8F4FD061AB3DFF3667FC1891E
C63E84F5A9F33B2B212273759B288B7FD5E629527D46A4EB535C6C5AD4A94506
D6F66D31F4E64D014218F834698B0A2052714BFDBE1B9DD7573D0967FF082E09
F5B4E9428F0C8410DDE3586D5BB736F8870E64E024A466640A884FEB08015908
5AEABBD36437F1954FF4E4B509F5114C63BCAF7F31F20BCBBB2D9E7857F32CFF
316B225321DD53C45FB324DFFC1C131C1F8B1BF64E5975AC89E089B6C71FBEA7
75876E868BC89680916AB07B0D53ACB7EA42991C023899848206B36C9804BD6E
5A8F088BB08BD179379F7D65973AD16301756071C50D742C29DCF9384D6392E2
6F6C359F6131679768C3CD6921D2E61E0C31D2753876A8329AECE64E7396576C
0059EBEB8FCF32A286AC71980621FFC8D17589C9C08493B9B835B4FAD9148F61
5A083F0BCBA7548AC5CA46DBE613335C35633722D95BEABB56CC7920EF6FE6DA
AE9A24323076A971A496B9B71715491F587C438C7B0EAD2FCA4ADA77D3007964
B6493C3B2EB0CF36D9964256942BAE540BFA154C87C5EFF41B19F87510ED1482
1F09955914DB072E4A509DBD5B95BBC8333737EC1049C3D830B1ED15FB112601
20D877040FB1D718768584298CB7D54139656DD31E921BAAC3BC0A592FDC0D9A
FF31E8D3A7916946DBC89EDB74ED7306878BB6C4FC4F8AA68C2D4C3AE78CF72F
15AF741EDFB43712754F0671DB083F4FAB93B64E06C98B079EC9BC2A59900A4D
4D4ED4E44B375948DE41E000489879C5ECA842F14771E30C9CE4C65514A5828D
543B8321E5BFD525AEA526C16EFB98FC13B451A602E0DF4D64B9C505A9C38AA2
6405DC100CD1635D638FA92991E64401BB06B93B5200B3C756B7F823FECABBBC
46E9112840B36514CF5ECBF1B347C84E2052D6F3564FDB055E540178F05AAA51
3A9062D5A05A1D25E86CD39086A2D612B8EBC7D8992E5EAFA561DB080E478BFC
E252ED55485E4649AE977254EB526E626E8600FC3E7D61AA3B68384E32B6A1C4
1C0BEBB6838978E4A1880F90D6CC138E1B30198F67DF4F8CBF71F45170A026D5
043CC1A7E1F6F53F9FB8FDCB8C35C2DA3F6F54623FFFA7F9099771816E716327
AB434B9422D3A6228797BB6248319F541F83AD4CB4C90324A6673C37E5BC3B6E
5077552E3DBBACDC89768589BE76133901689B9C644A42E6BB540340450E4FE8
2EB0FD94056CF6605F03C37362935746A63A12F79109C97DDC7248ADB05CD0CA
C222BEFC81A0008959DBA001BB062123AED7A6AB397B1A4472572B9D7937A4EA
6A919E1337FAF3264A20198BAF60EA1B780955110C6995BE653FEA4AA7A2A820
36AEEEA036BC203194F43B36870E7E64BDB88E50584239B41E2B3784066F5A5E
EBADCA7702D9E34F49BD99050FA5C44B1A65B9127AC1B759F7487EA7875C2180
D784FD6A81592E4A01316A29DBA31E977A144394A10462802525D7C3EDA9D19D
0DCAE786DFF2258BE681880DDF742769C6AF466C9E74B61E82BA6F2F8BE3A3DB
26981BA1CED42B141915F482D497B60C96DDF2508C49BCE46330464549A20104
60463A7F347DDF69E22C04549A2C67C23571B821A7DB43C3CE500633701B2E2B
713FE08457DD01D9CE2FB5D56B47E1CBDC420D1541740FEBADA0C6E28E144847
76A61CB98F2B46E92DFA1C6C2D1E81745200049B64225C2B8D93EA1B621CCC7A
1DF23CD1834805104DB5759D2D70C7D7DA9B273B1328F97873BA3F56B7891D75
2EEC2BE5E64A747D374748DEEB07A405DD1B761FBD17886F58FFDB83480B80BC
A9C1A45875A277241538BD70D852855733FC2821394189FF6ED12DFA7B618512
29040E4F52C62A0F83081C24F085CE38909A393520FA03D2EDAE6B451C3BCB78
BBDAF18840E05BCF92A6A808B2C2BC3779CFBD5A4D75DF50CB122C3825DE53C2
06B0DBCC8053F04F51C14F4F5DAF8A88C4DC944376083B2DD7189DCB8C571E24
2FD3B0EBE67FF5C7DE2A82A7813BF719A552AC4400282ABC10557A0652670F92
4C6CFA6D325F6A3D69CBFDD0324A9BB13367FCE1626B9FDF065ACEA21BE42A05
EF1CF7674C4A33E86D02BE9D3D0E6BB752AA65273A88B0BFB3F1C6E3D9771C6D
FF45A385788AA554734DE038CF4AC89AE3F742167B1376326DD226EF9846C33D
8B5233CC24165E0D4095CA82C11B34F9492D90680EEDF2A27A05C0511477397D
8800294AFD34825A2BC6B59C3C31C573CEF519278F611F5B44AD72A716EE499F
7AA7D621DB64DA500A1FEE176A33D4DD689D7A4722DCC59B2EF7BC364C10A419
4B6335BBD71BDAC21D1DDBCC83B60B76BF77C8E729FBD5243B4B152D769BCC5A
73B24DD1B3BB62330FBD6E1F1159F32115CB62E9866C2EB31B885267E77FD166
8E884BF89A93A94F41452077982BB15A9416FDD23D41B20AFCDC8887F6EB6050
979E6BA19BE25E231050D55B94BB1EC48A6F98FFD9693051185AB5DD762BD2BE
C980A39E8BA8D89BDF118418B48CC27E303FC882C45655BD6A87F82A9B0B7FBD
1C16DFB3123820319B40AEB3C496AAC0B368DE2AE811F6D6726E9EC24A1D7EC2
5DED7E99DDC766216C6D213EBEA18D5C45F8BB9695CC2CFD95023203484491D7
3D70207527005F713BF97A3406FB61D1915043FA7B872A767A421ADE0656CA97
1C4A34CC4ABF57774924F99E5E59D84C48772877306B5AC62E662C83DDE69AE9
5F13917AE2221BD31884A67D971B018BB7F7749469E8F45A8286420A10D0D1DE
F3C99376315040BAC8C65659A13C4CBB35486F57623F9F3C1811E80B21634E84
38E631C48BBE1C367E2C54A7D669DF5BCC1216886B89457902741B871CDDD11B
198C46AE6488836CE96E8BB8634DDF54CF21096D04D7118D6BF8EA3D82BAA053
A355A9D080026DF03520489EC15E7BCA1D9E070DC964548A5FDA03EC995129DD
80E5E976B64AB8E5E75A7EA1DA671E65F70A62C1F47DBA7100AE5115407A1FBD
58F8AAB66F756562B4A20A277EE0BB74E305815B12BFA16A4F865254DC4FD69E
2597A4CBEB474CAEBC34F45445D0C21DE8303EC2FD2DA26375DF573E50F49F54
A55847E3305C6EDC77BF73F759305EABCB73DBD305A69E6AC5BB208E3CEEEEB5
0A11E2811C9CADB54AE44E2FC6D325E86A7CCBBED6679AB17C563848A9A3210D
A37504D8985F544539FEFA935B802DBA3F39B61F69CFFDF765828CBB2576AB20
04690C6BE37F2021CD86422286FC177245EB634DD5DF84232AC2A69EB5FD7D11
5CB6F0293DFB3389DD94497B572C3B2A010DA81621B33254DAC7DC9F7D21D153
A56AB135E3F558817EE8D5BAF95D944D88E82A26963D07D748A7D1510D509244
BE4E52EBF953165EDACFAA9106B72FD9DA1909F3BD53E0EE325204D7621C78FC
5CE6CFD00E924809EF5F38944863516B1C688CE787EFAB2C3C08F3AA38FC9743
F598E800C3E68E280067FD5B133594EC5136970B4F9B36F73F82034D0B4AD4AC
6FC526679A73D1C264EFC606DA74D25D965F89F0156986F47917C66C7B9AFD0A
58E4BA3600733B51CE738940E0ED59AF16CC0A3987A9748B2D3410D19439E482
37911453E47F8099B17E72E7D6AA2C4AE32546FAFDAD0BC2A506F69906ECD642
744C912BAE2C0D0CECEF0F667BCFE274CB52B4E914FC04B7E71D0BB1DD0E65C4
4DDC8DE6EE76B3A98EB6C575AFACA8AC73D997C48763D41231AD088E61815BA0
D589518434BE9752E4B15956A171AD001BCAACD3ECDDBB7C57171F5C72D1A178
EC12E8AA4D8392DEF782F4698C29F8C95B6B6EF413B76D303D89FF97EB7C54D5
DD66777C47D40707EB6612EF33A54D23A4E0DD01A2CADED22616C3EDB2BEC90C
FE9F87509F138331B41160D37028607DC944FE95F61C0B95CD24F35381E60FD1
B88FC4A4FA2E41842C07B4719ADAFF25F5C4E3D418DAF9E5744080F98C3D7F99
9A71E34F7DD2E55EE432543BD79C7B70C5AABDC9607BC997F44E591DA7696E12
2BD13CD45048789BE20BB38F712B15AF23BBEA5ABC33B70E67D25E836DD7066B
DDE88D2154A8F563940FBC018F44E80CA16D50A808F368A26B74394B049452B7
534E02C10F5323242BF336E065DF71A898FDA362EA25FE9FA1E7096B0E8F195E
85A94E60E77B2B5BE6FC84C20C855F5C75CF54EC13629D019D94DEB539B756E1
2586792AE5AC2E58BF100A31787FDB0F35ABC9640D69D544B0B82B6DDD4DC93D
634EAF4C1A47D869C2A448938958FE9A62B1EEFC0DFE6CDAFEE3D02D2F9197EC
5221382A92F49F936E90E3A6966211D6EF9FBE586A54E40437FF0038C56BD1FD
889EBB6B3EA8FE525C515D106A2199F33921912308EE90AECCF76A300EED5227
D5B07A01258812D3074C41893459C50AB746D41A04EDB8E7E1F7728CCF8C375A
7845674F1AFEE8F18FD08E7B3B0460AC4D52164DEA4B31AA7DAB50DF131ACB44
A34DE21571C8F897A3B1D23DBEF12ABD9D7CE361F88A2B55B3832E9BA4E7A4EE
CD472D7536686E73FB596F2A74851C8617BEDA82C8192D1D7C767E44EBA12F54
5533852CDCEEEFF00D8649F2868EC52EDE61B72F9C8EC904F9B5F6B21788C91C
86124DE20B58133BC73F013FF7BFD88AF285A3680D2B87DA8ACFC7EB5FCFEAD8
AF1AAAA57C04A8FA81406F2653510E4645616EBDDB0E34F4EEE140C891ECE932
75A3DAC3496D2ACE9C63D74F95792B28DC9BE01E86D622100BC4F14B99244125
7B03362FECCB58F1004411957AAF9C33D3F1913071DB0E3AF79BC99A620CA6E7
B65FE8DFBEDF204A91E1D4406877D7A651613580254EC24C14F1F3333B17124D
2437E54B0EDBE6D809647D091455815D8F7986F6013FC43746042B3FE900A7DE
AD963BEB1C14901BA4583C6870EE9E4D5B2FC25CFF7E453FFF5AFC65829CEE27
DEB400F272D854EBFF8F25CD718151C53D223A411FC719F4390767ABEEA1F865
3C2ABD5042FBB229C405DAC95467ABF9FA7371186ECA3D2F062637B25AEF0ECD
F6D939F4060A9B2794180F7533130C31ED8EE87F5ED7F206CFB912D7D1007DB1
C1B65F7955698C10C8BC40A31881CF70EB9B4FF18344E4DAD253F6FDD85DA7B7
AC84DFEFB1C3B1D24C285191CBBD78AB4209915249E88AF0774C1F63FC325E40
4404B7191E43CF288B47CF93BD0040BBCEB10BC29017C40E00ED23CC892D3CEC
C51DED0C295026090BAE98B5401BAFA50300B6270FD5A6A64A7969B9E1CE8EE7
07017A5540A2BBA7BEE2CD033DF2A805FB9720FB43875FACBCFEB79E54013B09
0E06291366B48A340B10042281C8F813550F0BE9E5E37D207B168F14EF5BCBE5
4593D38F497DC8BC02F0CCDF68502CCF78BFF696BAF63480BCD2A7CAE8D5B263
A7B256827B108B4CD4568A91AE4294DF0117482F625C65F9A0719D44CA8EE79F
AB1AD93D4878D9B361C5898E03AE31DBAA34305F9FE9824A0761D8CDE9F3C80F
F3CBC6E0A882D4BBA1DFD8A1373B617E06110B02C80ADF1894BA2835EBE869CF
3B0AFCD71A77C3937511A093C573E74B0DBCABA4B38EA6086071E868801A913A
EBF55E6D86C82E50ED1362D9D387E567B9657F333693F8999E47D2C566D820C3
59201C28AF1D01AC327E84D1966C9BB490B3126B5D143C64BD1B19E15B6AD1AB
1028917C24D6066953C599D2A0A228C446BFDA4D1F95F8577A6C92B660496D46
5B17F59E856E2CB247F78D9F88BEF4538275F82D0B50B7D796392BE80D21B464
A35CA409709FA7CC2A6B9CF9FB2CCBD54710C416269AEE09252962DE119AC5DA
1AFB74AA66885ADB60532554B9673FB763DACE83E44F3CAC5979E9E37FB3DAE1
16DFA181E014DD11362A28BA742006BAC7BB3E8BB6645971E035F836D2F6B413
CD4E2F7F1FB2747377A0936A0CF430CBEF3DBCF17D487EDA382D8D28E2B9783F
F97A998B7B917606D4797F7DA529C1C83A9956CDFA95D5DC405759C978FCA80A
768D2146ADE0B32374193609249A369CC104FE3B660196BA29B2D028D797135B
1DE6D1CE94AF174681EE2526509E1A6FA26CDF30319D7B32722B35C2DF1DD852
1D3C1A65C15B6B20CDC616E4C3D5841379A75BE7CA330A903D291F4FDD94E3F6
BF4AD751C71EE26DB138E9745DE8A75402330AEBE5B3E9EBB9811EC1A2903B39
9CEEBF0940034205957A06605E0F5B24F400933CE7A2E3A3D009108A45EE959C
E4233B2AB13349870D17368E7E0C761049C9625FCDDA16D1E500653F2599ADD0
094FAE825AE65B197B600BD19C525CBA732D56CE2E4490D6F0B4A3207812AB6A
1C609C8D47E18477E018D501D0DD619691DCFA83A57728345EFA1AA131A1F5CA
630CA0AF8AAEC5155E19B82ED01E746437FD5F20F1C4ED6BDE8C1BA32231005B
8233EB72A0090BBF846E0DEEDD2CBC9D6A8C706F34732812035C3938736CF325
69B61C915A7E74A2132AA582A1D50A282644EA7E33493C68DCD752E7FFF9F5FC
2821D740644BABC1510D100178B306244781C1C5562755B4F3842C4F0CACEEB0
5821094C19FDF49243641D4C43CCD5DA01B4719F5B38A24AD9D5C3475B98F750
955C10EFADA7295F227E4C7F981684AA07E0C249C5573393600EB011D4971A1C
F9D2F64131E44C732F959C3D2D46B73D2F6E7C59A667EA11834D7C0C4C34EAB2
5B263DB6337C884A2AED8817CC67038EEF483EAAEF8907B1AE89616FEE349F6D
02006EACBF1DBC23377599B3DAC636CF25E948C00A3E64BA64DA5EC24BD2BCB4
3BB23DD3947464C3BE803C1E08C2F62948EED697C1CCBEDC51320D3222FC59B4
CBC8184FDB1882BCBD8B75754F96C4532FEE83943CD0646538354D6121F94FD8
DD82F407E4B9383C1F14AAC10560964FB2EF3162AD030A8D82BE5A32B5DCA88B
DDF5858A344F9429B77838866AE923DE34B2AEFA1814417923C5567A49B6F185
70B4333980BE1355EB2292B08C91C3D185A8D2ACFA496CB88564640CC0E197E5
94615A05EAFFA139B8A3086A1CD145311F4868B2C53E778A6CA3A6D88EFDA867
EDDEA82581E844FD0A21AB9B0BAFFAC4514D724BBDDB127C8BAE905EEF022DE8
F0D05944302952F5DF45923DBAB2712FA24ED3FC190C29C5497A9D91DDCC1CF6
289165A26F9E5F210DF100CC77FA8584D710A4B94791812ED35E161136B86E50
622E5D3EDC72D7DDD34F38A68CCA6189C4B588FB85A9BDF1037F2ECFFD9F5526
88AD1713123A4C8D97078C1FD2D41616073A9F1E34262FCE4E362E6F546B88A0
E2D0B71F15E4AC67AC6A74699C6E79F3082ECF6F7A87D947861EAF50385FD970
96A4A921CF4C42AAF4BBD6803823B5167A3DA2B0914C5191BE645F79A2A66D11
1E69BE92FBA0BABDD1A230A44AC857A66975BEDD03F03284920A5BDEEDD6B9FD
66C9DB6E6675DE6EAD7BEE22A27C877FA673B40C9308644A34BFA6F5B743526D
E0B1D2F91230E8CF9C367C39A20332E3923DB1A358E1032FC6130596E9B155FB
BEEF82DE75A174429DC17D178B5243EB9D3EED5017269D0F4A81EA347CD86B91
D05E7BC606BB4CF2819DF2C86E8D87DAEE0E266475B4DC5E1399C0B4FA9CE900
F7E1D1EF09D0A5D8AE189FBA1B0A9B2C4EF7E749A9A6EC3BB318980E59E55AAA
5BDF030B75010FC8A2CE3D9A8337BD3A95303C7CF77126D3762D59AFB9317C8F
B673327DDB532CB560E6B11C56457B29489F06BCABE09CEFAA45909741C3CCE0
58EC36EA43975BCCB644C020D079C8E8A3F62AC2D7FDF6E1613B12CECE8C3289
3C689BD93369AFE23E790522806BA318B166C41B923780BF1698547E5BA0C518
925B21BCF5E7D202077B6DDF150A355BB1002CBDEB4511215B3CFF6F12EF73BB
5A186005E674D152D5E58B01F9CDF45000128F5B4757B85E048DDB1F4945123F
503B3D659B9CB2DFCD8D6EEE30D39340EDB7B381BE789BB7E8B9F3833F3FE34D
F9CFA0CC9AE210BF2E941E093A534D94483A5A6EE65A9C0538DABADC4A1E7B19
7E9F5FBCEDB3F4BE089D1EFAD7BE9460ECCFB206B89D0596B2D0E493473D4F22
D36BE45455AEEBE629C388A60BA8F4536C8CA1E1665FC8336A20BC7CFAE1560F
079528F11B3E172D096F99A955CD5ADD909846780C6EA12F5DE52CC3C9E5D7BD
2D346F415D169FEEB1D7BAD7ABF070E3AAE09F68C044F52D54562331BF8B1A80
FE076BDA59E5293A83CDBE188D170C46CFD5935100C0A2423054386C5BA2929D
F5ACDF473253DB339F0248F3D85031AA9D2C62AE6B4832AA70DE0CA533588783
FB7FE5D6B2B872372CF30649AB19CA99592990F481FE762D045C51AF620C1682
FBEE9A475DA6F5DF666F158794BCA4B7D34FDDF3BCF9CB81FAC5A1982B34B5A8
67AEFBDD0F3A9C2F01834198DF3990EFAB0B367DE7BE5C17AB567CB0A6D762C1
884928DB1B5A90FF9D7BEEB441640E62F694328A841E0838C9B30B261CF032A3
CF9096E6A30174FFEE535E98E9548879814435CA8DF1860F151D8247FDBE8FB2
4253FC1924EB4F67C035E5B6F3FADAD55CE0030B3DD82B3EF22F4434D6D1D2DD
A5981B62AF78E5559DE055BFDD5D2E49F11CBCF31413C4DE181CBC0439768EFA
9CEE1E4F4449A20C52CA0FA705EF834047A6E124E0357E5EE62F87FD7BD7F596
0C2CA76AB1F70CE2C2F897CB53BB7F7959A9C4F37B6F7E96301CA03712D8B34C
DFA24C83BF3BE3B5D9B20CD817ADE206CB985E509D50A35644E67B2696579E06
CF8EB9FBE78EE3D7FCBE202B67E8AC1B97DA4D2A85FE7D4015F9D17B29E78314
A2CFE8F9168D47429AF8F97F80DC35EA8B0D5B2CD451BEC9A8793FF1BEF0325A
4AED2BB210E47E84927EEE465190A994893365205908BAFD3F254406432CDB2A
62D84C0B1889C3680DCC4AC5D5D7E947B2FDC0F1DE08D6EF53AFFC2E6D994348
87A7162597B60616335C06EE8D5B4BE06497BB38E7E47E1DC2E937CEE092A716
F651BEA5C564B652FDC4DC9D4E10E5B6EE26AF75CC498378294A4CBFFB0999AB
CF7641B0620C1D3057FC8446710106DE38AE1FECFCF5C5BA8231F810BF66F197
02DA421A0452E33BF457EB8E43FD8C9D18E6BA7A5339FE2853A0DB4F9C7DF5E6
426B5A84B5597E92DB56700B680A76C681E7A48607218CD2238C6B2369D36CDC
B6E3DAE6006518196BA87E1ED17C87C5B27B27B621D1C1E81E5C05294A91579C
C54EE19726EE9C5648D97C25B202FD1C23E4391F5B4280EE314A7A93D3B192D1
F21ACB61BE9FF3D6A192F1828CA4AD6C3F5516C5A0458AC11E08C4DE20BDBD17
FE3B266D58827A6EEC25DDE4E3F21C109F2B2E2EC483F23A7002E26471E3E5F8
1E335872E2DCDF5125B20065534AE31E2823CA6232F07E9E8BEA8702FEBDE2A8
899F6CC2409CBB844D20C628D79D65120942CE67D0F7543206D85C916AA35726
DEAF36891A6DDB01E8331471C68748484C899C381CA0785A18709C65BD80722B
2F598A59251100FD3D14671156AE789B242F460C3FB9560C1E825A028AAE7075
403ED6048D3510F1673CA4E0492ADB4EABEE115EA127309F24B4DC3FE95D9627
0BCE23AEFA73DF7844C3645C1A5FBD5B6F529A686067E6D1A6BEBD4C375BDF6F
899C76B3BDE787E8CBECD5335A4E9B843D19BB482AB06A575F678B2C7780C2C0
CC6734FC0CA9546C1D0C8619B8A8AD4B22C64F1B1A3BC74FA13ED0C21B4EA369
569EF7D4DB36E0A201E7D4D3999AFC9A1D62CDFF0BCB15D9CDF7DAFDDF0B3774
A080B7D91D1E062F5BBDA617E9801838FB7EC7C378023F81CA3379E4F1B700C5
D25B0940F91F2E6CF26E42296A00356F8558715FA08F7329B527F8173AB53952
F250AC4E5473373DD73442C10FF631E8C6DEABE15BE589E1E7C3261100CB4390
C5DC0680F5C2F7DDE050ABFDA9CFD88A658EABD0D929423C6FADB664B3CCAE77
99F3D3A2521D2911CA3821AC4B032704E68F179460C0AE3064BA37B6E834C091
FF06EF8216C2F678AADBC61E9FE8624A0CAB441E3804E772215AB494D42B6D29
79BA90D952EB34315A0289C2B9D8571AA7BA639CB5D1304C219F078F666C249C
AFFAB99A3532EDAEB45AB90781BD4F1875700B5E4202F74BF8C32D761333B259
77BDA1703739DC83440DBCF87682E57FDD17E042E0ADC12646D868E5D56017DC
58D611649017A6725FB39A0637ABD35D71FDE3C5C86ED9381122D3C602226C06
0DDA78D34EE99078703C7F60BE7E9B905124626CA5FD88A6496DB0744DB21B34
B3CDCC0EC28E362F34106C4C59B912949F54DF3BAADE0D99233B0D030E07671F
E36B821742AAE2F95BEF1D678CF12C2A55B1067C6999CA0792BC53663C4532E2
4574E801835FAD02A815E74B1458A052A86DA958AEB5EF9D9BD8799E9ECFB056
3F369DA2C07BC180FE1C33D6FAFD69AEC8BAA1CAACDFE15C1187853707ED2077
0CA09A8C14673DDD6BC2591C173731C308B0621BB413ECC8266B89D2EFEFF0C1
5AFD6E6B3D139F0CF2A9409A01BB977179E3DF1909DD1F5731C175BB93581C7F
2DE18A564F4688FF6EFC2BE81A16AA68ECD06E0E0DA2ED9B3DFCA2CAB308E007
F62F7F3C8C9987DCE72562DDD474B3BDAAC2DC54A4727C27B855B6124848C722
20824E4C033E8199389207D4CC075C2E7BDE8BDDAEC8C5626D2E7F1F64204D15
4F8885786D6B38410C65321A85FEEB30A44141955579FB958D6D33E3414765B2
503CD35BF52CF5C94BE367E5EF621035575F72F83F473B1ADCFD8EA3FDBC703E
A3ADF796A62272278A8611B2A80C76D9CBB5CDA3CC3C8F677D5791FB53B4E0CE
3B7B9D8FA80E809118883CB567FEE101EB3BCEC22079C7125084A8F37070C401
62C5C01C4D16583380096D6CEB8C4DE6CFB2443D147DB2066ED667BB488EFA12
3EE20CAA06FC97F6ABAD480DF3DA1A9C56D92C5228E4DA7D6636F89382AC504D
1BBB0A9313F1CDB34224D1B1753627A111101A24241A8C79158BE1FA7AA49AE2
626C2ACF7E9FFF6399C2A5D2BCA0701E60CBA1A354AD3B8671B7E15B2E9E0382
50A2EB3110CA4B6A21B36D14239A08BB04C311E0CD2B38F5E9F16BC16AC08FBD
14E0EF4D92128A6DE8116879C8364963E104DF030055AEDD324098E422561E83
874FD8B91E197D06B07A7771D7F2478D2ACB01FB63ABCAC1305FB50849190167
4E32AB832649EF62AFA5AB9E13192AD911786F776D4B7BCFBCEEE221F740FE63
3C0EB8DB317B8711B06E0C97B442DC4854A11B15AA3C3E3A9DA7C4DB90DA04D0
338FA22C0A7AE9433332FB3CF916D5F9AB643D2866BDB4E8B93B60CA54E95E34
02DEA1253FF0C2158FE5C4DBC09A0ED209359A50C51871316060F5FADF60457A
2F14CF8AAF9508170E1EE605EE4F23C84E121427B34FC905615DD9EBB30D50F9
AF82E87AA9F9EC8FBA94B04ED9D17085041032A362CCD1690B9295BC3B0F5C9D
D4B50A57F24FD1872DB272E1824EF243362B19AA6CCD547399F643F7076ADFE3
2D36FF91C0DC70626B89F806D25080D37E6D52051AAD681A4133973C2DAD92E3
BF85AA924A257F89481027D07858D777B2A54B98E95BFED6AF66E57095778A05
172E870046EF7A892EAFC9D81DD99FF90A064CDFC8D79E7F5258E5BA83705061
15E70E180E9D4A370522F9CC8268C78241295C2428CB038BB7DDFD41BE19C8F1
40953F6A21BBE2A0C0F894E56EDB6384DDAD3918B534D48A1B5600E9D47A244E
5A1252625C62AFBA6B838A9B161748A608DBAC5FCACE1D06E08BB13BB0B580B1
71AA7944D42C6E5741B7E2D1A90197E5053B5861869A3463B30CCF2385156CB6
D8F8979CC0B7BCCED4DFDF108D6491A9BB972A872F6059F3DB8F9ADA6D48900B
462CD802675DE920CAD685015D477B87D9BC7BE291E3DB78CDE4298C38177F68
52ACB269A8D24F629E35F984304571EE200DA6397C1E542778916C7E9B2812D4
BC2556FF89F7C6F0026CADE1BE2A8427080D35DE02909B6CF8FBB1B1BACF4E36
C361E20B5C22EEE43D4870B8C5B27624843D3BF7A94F56ECEB60D9BF47057BB1
51BB67F5F8D0D1B16064439A3E0D291E74F74E880B03350216C5D41D36FEC544
19F2DD169E45A87DC2A2D50575BA8C9D18C5507FDB2BA8A9D4A4A3C78EE7A899
24A80D629585B8192ECB02C228FE900F3BD88E8936C3902748234F81A7BAC2AD
BA5A3EC0486C34056D8CBB97E8F2A2D0D3756C05AAB17CA4D6F8FCFAE3D7A2C9
FFCCBCA3A1A87F23CB64BD16DD5D43EDD37C679AB46F42A0A07A86A19481C531
70D1C7F4B3FA10200719E41D257B0583DA0B03FB508ADB49B29B85CA91D885F3
98534AE9ABB857F49237B11F425C7D85AE4CF929B1862F204626EA2CD8B64A41
3E53C0C59D95E10F8E5E37197C893CCAAA914AC0DF8E7933908A29FBD17CAC25
FA220ECE8B6D3850BD82F0E7AE0E0EF332C3CAFAC9CAE5B4643A4828882C68FE
3A957BAEBB4AD6AE9698876BF842A271DD2C2265DD746E8125EEE8343BF14032
4B3B14E2DA4560EB0F3A449C07A9BAB69C36D3D325322885D2B5A5
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: Dingbats
%!PS-AdobeFont-1.0: Dingbats 001.005
%%CreationDate: Tue Oct 19 1999
% Copyright URW Software, Copyright 1997 by URW
% URW Software, Copyright 1997 by URW
% See the file COPYING (GNU General Public License) for license conditions.
% As a special exception, permission is granted to include this font
% program in a Postscript or PDF file that consists of a document that
% contains text to be displayed or printed using this font, regardless
% of the conditions or license applying to the document itself.
12 dict begin
/FontInfo 10 dict dup begin
/version (001.005) readonly def
/Notice (URW Software, Copyright 1997 by URW. See the file COPYING (GNU General Public License) for license conditions. As a special exception, permission is granted to include this font program in a Postscript or PDF file that consists of a document that contains text to be displayed or printed using this font, regardless of the conditions or license applying to the document itself.) readonly def
/Copyright (Copyright URW Software, Copyright 1997 by URW) readonly def
/FullName (Dingbats ) readonly def
/FamilyName (Dingbats) readonly def
/Weight (Regular) readonly def
/ItalicAngle 0.0 def
/isFixedPitch false def
/UnderlinePosition -72 def
/UnderlineThickness 36 def
end readonly def
/FontName /Dingbats def
/PaintType 0 def
/WMode 0 def
/FontBBox {-1 -143 981 819} readonly def
/FontType 1 def
/FontMatrix [0.001 0.0 0.0 0.001 0.0 0.0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 110 /a73 put
readonly def
currentdict end
currentfile eexec
D9D66F633B846A989B9974B0179FC6CC445BC2C03103C68570A7B354A4A280AE
6FBF7F9888E039AB60FCAF852EB4CE3AFEB979D5EA70FDE44A2AE5C8C0166C27
BF9665EEA11C7D2329C1A211DD26BB372BE5822F5EA70D99EB578C7BEFD44CDF
045A363056E5E1CC51525EA6FC061DCEBB337208EFF729802376A2801424F670
0E7E6397B28F15BC10B40012B0A3EAEB2693E8F7F627C4C9C7C6C5BFF105C1E4
1B2B9E8F09253B76040D268B80719E1B3F5A55AB737CF9024F3D038DF9A0002D
8FB689C5F5000C3ADDAFE55EDCBC4E54B36A58190743E32FDCA7A24B64F5E7F9
DC901DE44A25E99E322B3D3CBC10C0412B0531B14E81134FD1DEC47BCB7514E4
64E7550B900404A017C92336BC792744F6F38904282AFE8C998D4B9DB7893830
A6A01872E9D6AABF66C4B08716A39BD9E5ACC0641E506B70430524E780517E59
81EAECFCF9798A634318B8D160438435B65CC6910E609F13A4963AEF2B2540DA
DDD64E0E1D15EFDD5D36D4FCD9E4D81E21D52784DD3DBB741AB5FC052F481B1A
A701AB81CF4EB85075726F3FEC0872C02EBF4D62F5DFB8990C1A0CC8161F83A2
D01108B6C4AEC3845BB4F61288F733429B7B558A225D582AC04BEBF127E8DB14
B59F027502AF59E46E0063B792D35B2DA4EE7DC3F2A64DB325318C1CB1A57504
3527B10BDC733305E18032A64A1002439BE13D163AEE778CAAF5A7A8D00CCCCA
673B8FA9A99551594E85F21580733527E4E19743F4C932D443625DB353CA959B
FBB3BC7996F1F3559E8738D7B3FF1FC8AAFD28CE8C9CDF3CC10A8E7DCE003893
8BB497D690310A0380F290601BE482029578B45097DBD56F52352D7F931A1A1C
735A74CA33FC62A04E1D1E1B023877B96EA2AE6E5E42682E9F4BABD109F039E3
CDCC6B0F9404DA157F91B61905B34C39BD0543872FEBA04FADF1DD613E1E9822
560851385E512B3754A099D21B332D2C9547EEE2B94EBC03B2D954DE0D64D28B
5C0305C968BF1EA14529BE16F9E7F147B08D71B9332ABB7B5EF1B8B60A8D19F5
22B497164EA1A20E17E9B45FE94A09D54FA74709C83B0824F96BC972F4FD728A
B8E7926039EA6587B515F5CA7573D7BFDD954B8056CE466542BC9EC45D3743F4
45B27B34656D355AF01FCCBB3BD7A5041E460D7F1783EAAB8031B74D4C0353A9
FFEDFCBFC3351159D29DFEB6C2C499FF8DC9E25EF7CBA2F89A078F4689E6FC4C
AA83E5E08BDCC9745DA9C17EBAAAD74BE406A863A79523292425ABE49DC95854
12EC9027FFAB4AB5B577F0B60D0EEABFD1C0DEAA4412BC17B5F06637AA0B5F20
A3A1EBA78F
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: SFTT1440
%!FontType1-1.0: SFTT1440 0.3
%%CreationDate: Wed Sep 12 2001
% Copyright (c) 2001 Vladimir Volovich <vvv@vsu.ru>.
% See the file COPYING (GNU General Public License) for license conditions.
% Converted from METAFONT EC/TC and LH fonts:
% ectt1440, tctt1440, latt1440, lbtt1440, lctt1440, rxtt1440.
11 dict begin
/FontInfo 6 dict dup begin
/version (0.3) def
/FullName (Computer Modern Typewriter) def
/FamilyName (Computer Modern) def
/ItalicAngle 0 def
/isFixedPitch true def
/Weight (Medium) def
end readonly def
/FontName /SFTT1440 def
/Encoding StandardEncoding def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/FontBBox{-198 -360 1322 830}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052BD0CE60552BD63101D7CDBEEF5B11
69C468645FE4ED1AF2541AA0770C1DCF81623DE0ECDF49F2B522618F650CE6CB
CC8C21885DD61AF8A523AA677EAEDDFA51A1F9B1885EEE0456196D634E04EF89
F17499DAD982502ACC349B9EEAAE4A71A73D1147318C60A8BAC10510DE90D8D3
F46E47295D27129A5AFE0C65E22BAD10D06885A2EE623FF8E1D90287A083E00C
EF25195F68A2A98170E4875AA0E2F461BA11E7AC15F01C3384F89075B25B2605
942C0A2CECA9A7B578D31EAB935BE7B9AB3ADC0F524C109CEDC6C957EC56766C
0FC50BFC16A9442F5E255F3B0A67EE59204698AB70A1A39761E9B16DD89BB0F3
B2DCDF661B96C1C95C934AB9466827D2E4AC2F341B8CC4A08AB82A5D1E25B865
E925740538369BD1FAFD3AF962D17D14899B1BAD67B780B2D06D6D6743CEACB9
A77A234354E7767050119B9EE47F033B8B3AD59BC17B84C3B929265ECEB12176
454594C17B4C8A9BE7CFDB06CAE1B189B7B72FA023F2F671095CA1679D71C627
40DDA7EE2E28EB5EC2FDB5C3E7625957CC0E3A3C3B73AC83C9DE1D5A518FFF23
8574169741CE3B3072645A77AFB34B51BBDB1837E3AF6A87C797CAE6CF629E6F
6D119DC288B8F677CE902835CE4ED0A7C36DA80C9F603A02954CA4A6D076077E
2639D83223A67AEF5DB2441A5532A92DCD25E71754D9818209554A1EFFAB67E3
CF943E08C3D96A72AF21FB53833DB1BFAEA5114B26176EF010A668A52F51FDA5
2E38F9D4D04B61171AB0CD257959478FF07F00DF56EE8D81F3050FB06A89EA5B
C139158918EA5FF9DBAE24E6C0BF43756897D90415CA50A11524BA26208E1F6C
42214B6B770372677D70A5E8066B2E8739F1F984A5AA4EE9AFAF71F910FACE8B
CF9C09ED54B41C3B766C111209980CC379027B5C052AEA00DE5CEAB1DB5CA7FD
21DB7835682E7236FD58B24A06C058C50CA50449E414CE104AE31CCD1962D004
710A80B93FADB4E72075F01EE8183D0BBDAAE3FEAA25F6112FAE7D168A4CA8F3
9636AF221D1439FF59E24BF48A054D51B73B289E81B36EEBFE55C11285162CDE
6749BB6272F1FFDE7FBEED1A5D999CF279BF9451CBB53DE62EE50ADFE9949E10
AD33331754F93E682E26303F8ECE5F46A0C1D1CE42CD0E5D8CBAFAD5B8A89B0B
E1A6F4B5BFD8AB72D2643ECE5CD33021157B38D14577D8A9C8235215980E635A
C2EE51258B84C0C7F3CF111A7DC0B91D4BB0CC8C26792C220BA49C853CBFC1C1
6428A09571F8A0BC1D9ABAAAA032CA6A6C6F8D535773B6C146E4222BEB3C08E4
E7A40C208213EC85ED68C06D64B371BB12C5CA7ADD3B5451984C846E0493CC7A
3BCF9055E4783EAF74869A80C5673448C6C6EDFB996BBA9DA31E41B328CFFBCD
37501D90AD4C111A01616F21DA48981BB0F88B565EAC2124372601376869A676
906BA3181115A66834F5F55D75CFB0AD3BC26028CFA1EDBD85DD5E44372623BE
D9C884DDBDB44D673D7DC1F9A0446C51F462B92B6DB5F9352B1B28D244315E92
62C145035344201186811BB519B9FE8F76F5063587907363FD2082E7363B612D
BBC52AEEA4C6015FB66A051D8659A891FFCDE148FA195ECE203D69FD06AAF8C7
26595FE6A9FE11D0A9AC74725E3B3062409183C0B0D58828F2FBE07EF0C119B8
0A5EC565DD878C83266BA77FF48BB4064EAEF763C63B4AE0D30C39D6E5E43CAF
D6838CA5AF94255FBF02D7997B7BD8E0D6A70B43E192B11ADCF090B1527D439B
C2354246A1B73F21B1789D32C01DCE1B89A214844FD022A35535F0DAE95C2870
5A1142104DE9FB4F0DEA229A8CB90819774D5C788391F7B71160E6CEC7B0B61D
ADB958D7E6C965746F064B8E6FE1879C37A1E1BA4CEC361178D68FE73154A621
41A8124A872D2976F271A6FA3C7FE09C53EF7314D6780F8916E0C7983A842398
C0FE65EC60FD35550469F4584D9684F502CF675C3EDB4B1F08B828448C37F4A4
453F715D0AB0158EA8903A6E2C19453B40517500C11A0FC1159E11098A0A33D3
11387E6DBB2D8B490EB7023A1B040858EB3F507C946A3C7AE3B122DCEA7B5A49
AD185DA8CEAD20C3F2A48B61B16C9E65CEDDB2EAB860942845905AFEAEA28B48
E37064B4D048B7EACBE1DA3649C83F6CA655BDB357787522A157A0EF55C49978
A94A5A933C101E3EE1D09897CA4083D7EA5E995F6ACA3FABE2A790586C8182D0
5BFC7185D6FCE80AC28673F4F4F6C69AD7377C5BAA2AB893428C2E0E53B541A5
984668683ED3D485899E599AE1711EAC252F6CABB44D40B1CB8CB60C0DB64F4C
CBE0957A809D79C1B7FD27227E7933A1311501349EDBDABBF0AACA0ADC2FF232
8F7D5820112A04542F35566B6D4CE2299CD46298CC41D0425D3B2B52D65F10B5
FF1AE0C4B490DA0223F5ECAC58F58C6DAB6DFD478B194C91D92AE743B4607BC1
4EDA38BBB44E44259299A70CB104EF925650F19DF61AA44228318AB1A03EEF38
37812E9E17BCE545087809BAEA456C51466E9EA8D26DB09E4A9D896A2384F822
BF828D7497CACD79F51FE4CD2E2DAFAF5278C9D31D0D5C29D2F118506E1E6C13
83C1F62132709E7442F9E6F0CCD926876A97AEE8766F15C3E11CA368F1D6A566
C548B377E7B7A8B3DC819752AC5D41C6D9B23679FE0105C040A7713BEB9BAAA3
8108E52ADF4F46A0ED60AA130149651F5744A4DF18253371030BEE736F20ADD4
AC1C13AD784B4DC1AB49B9615B30A01122D44356393E959B19968EF90F27A2F9
AD2035B4BEFF2A81E852660218116F12009125BE63343CBEB9BCADC17997831D
98B64F1F234415D5C34226855B511453A952DE2982E20837D90EE0F77297F12D
70263907B8F6432B57E55D5001B8E3306F74A9CE53340D2E28638E7CFF99A4AB
CF28F506A69202E47C11DAB5D6B68DBC3D2ABF833185A18F10F21A04C3CE364D
D0022F7637E407D055C19A7E1ECD23DEC40E6EC7B4CD1E7299A207DE1EA99EB9
5412E7AD603FBB995B9633E1F10DCD828F68915604A07A62D2C9D5658A0F1857
9FA9EE7DBCB809309BBC70D28B513A5D5AB90F1141722A0513DB930A456E19DA
CC83F0E7B4D94115A80F331A7955A71AF0BF039075B36FF6FAC7FD66141D825F
45C115428E4BC4C4FB7F627A842B2B9117E62678DCDC4CD2B6EE7224E66D6241
D713E8A06B18E8B76D7B58451B2CDE1EA8520DBFE9190325FE92C4F80CD1038C
4F5F642B69A5DA9B6FBAD028F92D0A7C89305D2C425B73BFA4BDEE882560E266
49F7B0100954B5389EA863F330FE0B68B6DC10555D27837551A94A2E7348E338
061A7AAD14E9420F3AB3BB141904FFB59BFA3B1079F7FA036FFAB56586616C09
E93802527E838E0D65E6B6D96C2ACF1EBDE5FFFF60D2D3A2CF47A4A71016AA9C
2C134045C1F2905FE1E0714829F14300AC335AC233E253FABB454EAF6FA57844
D99FFBBFF39611F32DC7AD9234D9EF6560CF6251D01EB8C9203C3F857F7779F4
3602BA6119B95B760219E59DD6207CA6CC9AB1CAFA17CB809A6D182F86363104
13CCFA9A312A9F69118ED61BF32D8F4B0C6AC44AF7A4B1170E26B6401ACB51B1
08F1170ACF72AD751DDC5C8FFE3774342D788A6AFC93249B88C6181A6497429C
542FF8A6B38DFB6C2526FC59D6DBD09514E5B8248C2BE3542D6769201FF76FD6
AA9E6E9B3F1ADA7E9F402EDAB4BCAFC3F6D7BAA8CECDD763D963F700D5C85EAF
FE33959A117F176C4A85720F2C4FAD37B6DC6D77D0BDB06C986501A5B4449A61
CD129C1F598D8C145EAEB48B744366B27DC98EBBF55011AD571066E5C94FCB74
F37C1BA6F12369BE1FB27F0642BF288FA3AB0D106A4AE3E0284337B73550929B
162EF0502AC9A3A20481DB2B8036206853E9AAC46F7B59C61C69BE68899BAEC7
377C9F061DA8132A66FD0E8177B9BDFEB8BF1F7F2AAB3A5DD70C54D282C98740
F42C44803EAA84D8B5EA4675B669723240EF4253FD2E3A3BCFAF16270609F102
67CD6AE95BF68ED0A8F927E8C1BD16B6FFB4B9523F5488ED740BB8937D8773AD
94B834074C20EE2A3B3FCFC5F810414634BCF507E7A4C393D4DAA78F67F1CA65
899615D858CA24FBD73CEEA6F6EFFBE3B43261A0008201F21DFC80B44B3F03E5
A4745D1E0010118D340BA67DCF965B3F63F6ECE5866A2A07325033BA5D0B9255
7611A04680CD1049EE3C458A780293A29C29B867756308626093D94E02DC0A68
7F4A6CC3E5DBC1D6B74C3531045B8653AC76DC1E6689F05347880DC9D6F83F0A
EC83B2D15746DC7C3A1162682A719FFCA5CF3BEA450C7DF727B8F63BA7AD4804
D1A04E3F8DA150B0BA0792B70AE878B9FF3AFEBE09C26B0FDB236C5E88F7AF12
B053A0CA00349524FDB6432A4E3240957A1B5B72D5C098A943F8C330CC36EFB4
E69ECA95CEB9EB80FB9CB698F7E773A0CD4248B159E694F551E52AB7B7C0355E
7F1B35DBBA46AE67F9372454E0D3389656E82463D64080399ACDBEC4DE16A8FE
84344CF76BE6CC57F4A9EB34CFA8FA03376B20E4F99647DD314D9929BF4BED76
6BEF1DEA20C4BE1B5AA3E27A11E6462FEF6165B0143AC59698E0865A8B3AC56F
758F1264209486B3CFFA93999C3480A31C21AFF8DEFB74112EF1FA850FB17C3C
7CBD8B129AE4368D48704CC13132E12FCA8AAEB267F221C6CF77260EF06A34FC
DF8EC132A17C55F7302B84C57203C04E1897BCCE81D02FCBFB1D42D977B1C572
0C65D192300CC4933DBFC87ABEAF2BFDC190264F070D05B583576B7341CB4373
0DB058641D5ED3372AEEF4F12F415205D7B59E0114E4245A259809ABFFF69422
0D7DE362D6A28B5F4D7616505CB27F53885AE2C67A85ACED30CCC66990D1AF88
8FF0D78EAB67E940DD8E75FAEA5DB0ED85C3971BD1FE386CF7616F489A87C771
CBCD432C32D769F367D22975CF2814505DDE3A9324B5BC879E714EB32308A2B9
5531349AEDAB6A1C69E80E3362A50FEECB91C83BAEC39919B5F966C7D0C7FC06
B8E84D93FDA5120EE98A018EF8C65AC0FED54776F52973B3FDF77D85D430A03A
83BE387100AB891AA9F608A676020636EF116D6B406DDB0DC4B49AA7F51CEABB
C34A93CF0C156F51920356A5E33226D8EE28CCD1506A63A81812A7D4D142D0E8
D87A52A81AE4FC52C46F80FAF63A6C181536F2E84F82C3CCA62912F44EFEDB56
EAA02A6F2527B0A648E14E5C439561E72A1E7A2EE9520258AC737D1C1372F88A
320C8F34A8022F9AC555AF6889BC0ED4C4C012073C0C3337330694165FA99A06
1CA3C8F3FABED83A7BE39AFE628E02FD3DBB76EF007043D73E3841937E24BF41
5CAD0BC9A050397513C41B65AFDA475B518230A0CF54F0BA788AC12D81E6D414
770D3C7A1D1828643E8ED2186B58C0159E8C5E67E8BB86CE6B4C714A11B13EC6
AE76C2ADBA3125358ED3BC4DC8074EDE3B115346CDEF66B458A7E9FD538C4A88
B433E947302946316432A9C52A86F3935545000030EC1E14CBC867E6501F47A6
6062B33B7EF5B14E4B56E13C67417FDD3134600D20FC54EDCB33F2DE2E88C187
4BE8C43ECB4B0F34F73786F74D14766B6AFBCF3CF721D1268D14CBAB5564C89D
E944C25FE00502240A98955B94B8F9B3C73D34077A76218F07C8149EBFAF73EB
897BCB334BFB049F3F47EC47E14FB8DC4CE563B9333E6FFEBC98E3DB8A1547D7
A6468609DF5554D8FD1F6DA1EC4E05F38BFBF168F0D25DEF0CF5F770AC0D6485
766334EB95ECF4787CF3C88B8374F09976BAD8B0A6B188786814127964391519
D2A0B4ED540E4B094EF37BC33398C7A7602DF5641E7D0D59A1AB8C2DD025D0C4
55BF19962DDBCB0944F1E152127ADDA4822908109F3BDBCC415733F62D3FE4A3
920AB2E5F2FCEA2F63E605271102112616C3F425187F254232B9ECFDD0C11221
AA27F2E107310856FBC092CF20716B559A93F9668495706B9E66E257986E24E1
42F3A047F9541D222AE43890F66B92298A3999D91F1970DD6C9A899394FF1903
7D8A673AA4413687AA06F2DE6C47C7644B50CB48A95CA775E42690E47A557542
3D084A8A27F23E725AF545BFFEB1A3126F867E0B7A0962E50C2D01C5A9C52439
1AA570CF46C31C8ACE8C3E78A03B6BD9FC027A19D4181FA2DA8EB502003E1D84
9C76D04BCE4849FE094A5F97249DA7D997A5EDB1C7865C7B751E3E9467A64422
F1536A0FDA075838E0BCCFFA46D90439B61C6ED6B6F0F5ED7D437AE3F14C4CFB
CA5B1D3629A090D5A7E045608100C7EF9974F99F6FC25F0B9855BFDE953FA6A6
1CBC5337EF78BEFE17C2D518B07469F871F346FC2846483BB59CB2EC012EA2AB
CB6CCB601BE57A821D802704BFB6A13FB6FA40C5DE35FD98AAFA87BCDF729B56
C22E2E5B62CCDD1820F503511BCA3509F190AE74B9E2A04D41866B0093A78475
FA18A11C8FE5D793EDAE621F12179C9E46475D97D33027B876BC29E7A3F6E9BF
5FE13915A6EF4DF74BC922F444F52CDAAFAB5DE7F13D266D599FA2FE7D6E42E0
7E45E0C4BD114B877E71A5EC560C6B36493C692BA5F4EDED8B840CBE5A089D0E
793201CBED380773AC3BCB388C41408E46D4F4A7851EA03255B9ECFB39FAF025
BB6F71728D7CB289CD36634EFB88A2B53F7407B2FF9D23B193235479F0D8437D
5A632AB54E99BA4D1870ACA83A36DBB872A183A59CF1290FAFF54148789B6A40
7EA81E80147B8360EDF4F0AECC6D391FEAE0DF5C5724AFB033C28C40FEF0FB0B
0F65947B1B64F1EE4D93A067C3A48A78F4AA5C96E55AEFDEC66BB795A8A4C511
52DB586338B372C1312E096363748ADB403A2495B3D53FDCC0987DDE0B7C832F
94322BA388DA3495A69B546FCD5837A7DD6619E1CE79E47B295F27D487DF73D7
3878ABF61030B5A9733F6F7DAD868DE52FFDD83ADE45D7B5398124CEA548FDE6
DDD3B3023C908794666459CD59E79D41B10A838DF8B96602F8F6CE590E8F24BA
A634B6D413CBC814AF034D8886EBB116EDF248031C5EF4A64AA34F5891EA3675
F930AE99DE7B5BC27F3C464816AE987745A826A37B440D0A65A6C56CC5D185F4
8C60A3E21599E7945E6D9BBB8EBA6FC48DF96E955CB3943B9D00568942AB2D85
E1224B6AC93030BE87C9F1E5CE110CEE6B46717AC4C8051CF106C8619AA1EF10
65CC4536839AC953868640F8C362C3B21A86F4D253704C020024A911B2A57E36
BF69CAF491628292E5D7DC9C71752F5A6F1355F75330C1B9CAEDB7065C2ACEEA
BE81471E0F410914E8DF966806476C35617E8C9A08231D2920B1BE9D48175DE4
0F3F1B5069FEF2432F10244820D5E0964EF7F2A3580DDE4F376D3F0E70C94870
A26C332D3D8DE9863A4D3B725CDAA9C0D224E9FD0C1410329DDF2702FDFA31E5
21F84B1D8C0E089797CFAB74C9EA611AA6325754C2F4232E833E30AE6DA65696
7935C360EC2A05BA730AFFDB80FFA13B5A104670AD031BDF03293D6CC05D38F0
18C417D68B942CAC8AE28CA1969114E73DDD383EC661C1658178E1C3DC0FE83E
C18C1D761CDA0F01CD4E367FA59676E6BCCD2299EE4A640047D28E14AA058A34
FFA56E5DAE58970509624D17CB1EED0C41547ED3D5590102672471C2DE178404
10D6E0CE786342842CD1E398F015DCA2A94B5A8BCBD4A5C092594A446BF56AE8
729CC272431F91B8EA9D9BF40430890BF5FF13B4D6B761FAEBAEDAB8DB7C9B4B
541287747A307CA70CA4411EE531B16810453FB990F1E06217567E423455D5D3
BA03048A200E359C0C635B437AEF1F32E69EE14CCE1E5C3B9F5F57AA77C97128
9F85C778C7C79E98D4F860D1FE4D5BA8DAFB47224C9F7FE7020BAA032922CA89
396618A6C4C9C4F89FC4A3470510226F8E30F0C72C799AB4D33D2CD6D855305C
3AAD34F6D56AE7D06CB3BDD0D09FF870058252DD767E69E8D3F2203FEC8577A7
E164B1EFEAF22C4C505523B4D39E06B16A97268DA46EA8EFDF23EFC0B8D4EB2B
01D5A9F66C4F8318A3B7FC77303BE9A0B5873B8B67394836E8B17D722D56FD33
329217328775E3B449E0A847326BD56AC3B79BFB4705319E03CF67C6E03C9BDA
3387A344BAAC095EF935694091420954A259ECBD3EDA4D448641380A190C8392
FA1530E1E8E629FA237BDBAABBDD3E3EF74D9B376053058A08C699D459076E82
D706BFFE77E070862930B2AD398A9A55596128DA858D558BC52779A8EF9AFDC0
BAE302E9E3D638E15ED599B9A4E1A8F60EF694FDE8F78B5782616386454D40FD
1176FE4DA4B5C6E171F657319FFCE63EA61889B997414842F86F70304CC79C44
C9C6E094817A66BFFACD64CB39A99A44D0C2556462BD7E259E0FEE2D8927D461
51756160504326E407CCCFFA67B1AB5C4EBF2C58979DFADB94E6BD5B9D548EB4
5643F18204616B91CAD182221C623A9EA9B09B88030F3411F46D95648A2D2BFB
ED4AC2D75E5EEC3B88611FBA436A649D4CFFF5139E061FC7BDAD67B9920211F2
A1FAE0D25E69716C8398EDB5F657EDBC6833ECDC982112E53EB4C65CB786E5F3
49D306ED11E5CC54925C5F87A46C7C8A598ECBB2B36E46818E79CAEF079C5B8E
EED69F3A31878B1817E10FDD8220D2AE0F9715C9437C02C8ED058A822D70E63D
B629ADA9E9F5B010AA035CF7C58ED4C211498625F282BDBAC2556AE99B622059
304EA20A61DD0A88CDA2190A7C4F0C306BC949275E376FBFF3DD2C978561DE40
8F4A86D930A963754D3D1838A2837E1F9FFD40571E02B6C0EF9C7691424DFC32
8BEAF7A17DD0248CE95F03BD83B701F2F47159C55CAC70D0F08894C96441163A
B3E15F0F40CEA9B2DEDF98939FA168FD62E9FE7460D49D49289F9FA56B907D4E
496BB4EC0512D3D2123395E798C16C82FDC11833C9333A660560192D808840C0
0A026BD1B23D77C5AB0AA5668FD3EAEF44FF4B019485623A46B34B528CC535EC
1655EAE3D9A9FA3B7E08013A5F6C1D44D7A44409CE5DEB8FF37C2EC9AAAD0D1F
C5818F220B2C713BA3B6130A12E8DA06B2829DC81792C1C42F403BEA03F2518E
3E835894E9BC6AB4D041902FED3E28BAA634B6D413CBC814AF034D8886EA86E4
9C30F8089EC539ADDEC1E338E66C75671DDFE92EEA4D44E9F55577D929DC9CC3
3FAF1EDFFE92A4DEE3DB725BBD80FC88BC1E672F3D26725AF64F82EC77BFF8C3
7BE24794C88600C780BEE103DB6AEAF89AA074D56D6E3E569D04278D3F1BB783
6B2B4CFF27A123A209E4871FD2A186B7A875F9939AF1F8EA9A969C18BDE6332E
D0F73A09CEAB1B517600F0ED5552E71334C3723024E23AAF6FC7E56983FAA67D
B4672DDAC6A751FF24CA8B31DF5AA0FFD5B9BE66F059426073DB92841A533B09
8D45EDFCB4E7DD1C0E0F88AED310FA4D477BBD8147CD866CDB1536699D049A0B
271B93EF7BF72E46B161E4E54822FC0D79430F7F3AA71E7D5201D31284A8B23D
E57734CD286BA704AEC2B7534AE6BFECB95F53AC696EE9EA2293C4E2551F1FC3
C5BB9CFB2DAA866AC440D058A0C86C7B245DEE77358E629020903C6AD923C9AE
DEBC128C1B8256CE65253EAA542CC2D5F3E82618257F6D6A72485DDFEF4894DB
CA3F299826D6DED47F0F852E129736A10B51E9662B71BD789A66AA9FBD54205B
9422384913108CEF19F2BA8867FA0FAF86A9CB5709CF89A8B9318546BDD02D36
CD00AD9EB380161613E320876782654ECDB437487288B55ADA7AA9CB2E5038BA
421987B49F9BED16F7ED89C55CF22D55FFFE3A249F79E7494DB3461DF02025DE
5CA8D7F86B434C1FA9AFF3A2335E1BB08E3BBF359E31BBF79938BA65BCAD09F9
BDE28AABA73A8866950C44AE2BD5A559E9A60023F7355DBF8B24815C2EBEC85E
31A9DAAFDE3F0A7DB4B12F0902609E327CC105B195BE02D61871F84D7A0176EF
1D6326F847ECA4DD9441BFC24061197C11F1A03D0032D4F5EBB1D3B145718A88
BABCB798BA473C731F10DC6F8BC76EF77C6E76E464D81ED49253D2935C676165
F558F6608BF0D3B411BA64F22777968CF49FF6291ACE3139C1C1EF7432F9CD30
A27ECB4E7913FC7A6DD8E5A0C89071ECBE2414669E32BEC52CDE53406A666275
9B65A8135C8E1DC6545C7AAA36FDFDF7F88E3AEB0105CA91B11D3F67D8E96487
398F0EDC29B39FD107DD0F0021DDCA88B03E179D01C3B303C6856115B98EB3E4
8CADF2C8AF6C9EFD52CAB7B3EB802A94101FCBFDF88AF6DB84343C3BA12E865C
4E7B3DE356FFEC90CFAA907DAB20BB929E4B1F89B9D759E533EE00260B500D1E
343A3B0D9FEB53FFED2994F529E8FF57451044A034B28DE8C054606C74228EBD
EEFAB4A400C2B5E8396E3C226A101E1F33FC51FC65C694BC0C532891D2007CDC
6DD099C6EAFC4F92CF90EF2115F4154825C9B29A6531F1F8798837C616EA65BA
0DFA1F5947460FCA5E99CFE691D71BD29A6DDE8802BE6175C297A4CBA83A501C
8DFF99CA74B2F1B66D01A2C17D9F43A4A099323F33B410DA64D99EA29FA542CB
93EF66C3D262EFF19460FFCB3FF666A0EB387276C69F3E71E5A537A7E9006C59
8C6B84B9CDEB5716FC08868E0D82B681A98D2FF06C761763422CB0879A6E58CD
177CA56D015F934406642BE1A8D59230BC41E98FDF0149BCDC59354FBA9D45BD
BCC78BD24BD0AA4B085CF2D3BD1301890999B406E03AB83AD8AD9F239D989C99
15C9185D3A00EE1ACEF1C93FEBE1B7B9204A02753455C5F550FCB9B7C18FDFB2
EB5D27C2A0C3177ADA265BF70BCE5C40467BC363E6A5F1B867DE401B09EBE71C
A5DE4E227FCDF061D45906A25569A5E7F2FDA0209B25BCE4319A1F412CABD300
6786D05D41957145040A9C0BE99830A9EF1F982FD30A7482E830CCC66990D1AF
888FF0D78EAB67ECD0E159A57C1B1D67B5F907B4B1304696B7779B10EF405DCF
2351942B10206BBE5A343D9FFC5A8153006042E52532B2ACB83E6F70E19983A6
E5DD3F09FC4026FA1B3E93D8FAD3E7538098DE0F035EF43360E849EC86CF15E7
4D5010380D740F2AD1C9E5F430B384433EA2C29429B292F8856E74D38961A91A
A02B3CF438ED351381D66D058BE17FECD8A77DAF2476A28AC1D042030FFD1FEA
BC1AB41F7F2AAB3A5DD70C54D282C98740F18604B7984F18C81BBE3FBF1A53CB
338FE643E73F13D44F0609D946D6A0ED37FED653B369F8A89969A4F41D7E4403
D8B14E755061386F6E252435A2F4A39F7853956681336B21566FCB135A4E59D2
E8871F75B38BDB8C36A1279185AB6CE4B7E0A048A1AEA308A28A358FFF3A08B1
3E2530BBF0E1B4D898F563EDE4E1EBE6D852A937D5D814AA6BA13C702D4DACD6
4B60F438B0ED97AFF68EE7E82139ACC235797D06389C0E6D5249BFE625E85E29
17276ED538474AAF3390E3FBCC3BE9AB858BBE3B63F02D79F5809F8EF09B31A3
0D07C10128868272F8D6706CCC054505983C2C23378E7B9776EAEF8C6493DB37
E1191A85C48BAAC56C78BFC4BA41857652BA3EC12BAF01F104EE85705F8015B0
5CB9F7681C9126BC4B037F08E0D40CF07EA3AFB6E6C0AE87E06232F71C037F94
7F9CC09E99FDC2494E24654B5E115722E3B5982BE4994C1594B27C30E97025C9
F29EE4BC9F734BD159DE39C56B8442C61621CC37359E6395A72FF6B0AC66DF65
512BBAB3555B265009C06926511480479F0307DD5A7B8E16D3F8AEB8D678A3E3
BE9398FDC5E94BAC3B279E8B1DBB9FA3C2571FCE16D3094F5C09CC2B50E70B5D
0C5BA4A4C78E41A4025CC6633130D6A067928934DB303F2EDFA3E829B73977F0
26D77A9782DBB30F18098C4BE329170162F7006B9DA0813F18609B04176AC90D
BF1018E1A1443CB8897EBB1FC1C2767CBE11F8EA8D0235C76342A9A713A00574
61AF161CBF5B4CEB8CEC09962CF596FD49BD178579DBFB42B66D6A50EEAECA99
3FD699D619B46D3EA39E95B9793C97C1DE55B85F0A6E61F10E2C6762761CDAF5
A4DE5BF8BCB0E36230405F4B4C7E2E37BC569396194A5FD33069F9295CC34272
6463DCEAD5EA7C8C32E44B1BCAFB40E14892D6804000806B575E1323FFA28FD1
ABBE4CEFAD429E58069FC79BDF25A621E3C9471246E8884A783376AF443F21AA
640AA78A5AE4B9BBD385726ADE64D080F19C67936247A9F121A12E2D76C066F5
B94EAE5F9CD5E13DE00E9BAF2D2E29EF7BA32755ACFCBF77BB4C4FB26D242C47
FA18DCA5D050551D779A4A279FBBC936B8D96C2ACF1EBDE5FFFF60D2D3A2CF42
BA70CC7EE277DA2413674511CC92AEFC1807F5FD711072F4A195980113ACAB1D
2ABF02CC6C540D08D499BB2BC9FE41E797FDC1C4FF14AFCE671A239BB45E96E0
EE3EE6FD343A28D778A262844FB112A5C09FE173C676EA4448324D8703BC41B7
539B62C9F307B3B7BB014DFE87BF0CD087AE1A432799B821B08BB02D1B373A6C
47D1DC55F549333B79E26AF8F1278E207ED31803B563AA12F0B18B1837562EC6
8A3DF988B864B822E4BB550950170A486455EFCEBDCDD341E13F834D6E3D4121
85E38553655DB2C39CA75F02D5B41562EBB02E40F725F17817A5C161B746CE95
9BFF93244F75EE386A097AAC9BD2BED7B8CE847D5BC31C18657706044BD0556B
5A22226C91939C4019D05122B438A5A45198FE91B390F4D303E06A2EC370ED60
3AABFFB0B1A8C29D9CA9FCB788794DAF9F6760352D3E2A349BCB0A6E8943A4B0
1D70AB83E83F150CB351260EE4A86FA23E83FB283737367C81EB98A5748467C5
D8CCBB281EB899C64E0AF729DB9A387C4D23A7A4F54554D2A8213FBF8B186BB9
E3F6C85E86E4283FD1BBAE1EC0ED91C92E6511C1A179E2C59D2FD5B3FF77D030
F0DE78306BC193F6DD6A124AB6B5C1F425772184557DFC573A251F4FB7F7C536
C45CC4380DBB9E5CF8DBBB181B728682D2F6B61D839F23EC3B3EDCDA25C906C9
96E5CF586F2E88CBA4844C12ADBD5C3239687800B071E8288F1AF5732A5AD03E
BFF03E806358583D16E1C38CDB5F17613922C2AE735247FA120EDE4E53006482
3CF3778E377F54AAAA6CE6C41E243EDA8344E2C0C102F2C09ADC011C2B44FA25
89D9DEC83082E9A460512DCFEA19ED2A9D2D366E67169D1D02B7DBE1B514EAD5
C8185DB40495B265D5A302F2406254E8263B9677469E9943CF44025351940A9B
4C146E164A745DF00B3E2FDDB5298E72FB76777454D4215FD32CD879762A1DA2
E699AADC2BF18D3D511A257CB43F9EACD62771EB3D39C8E6D0CBB0F6F9A95FE6
1459159490317737F63CA0621EE76589BD8E8BD13DE2B96A0B40A9A0E1DF27F8
50FF69817FAF97B3612131A68EE0B01D01195CD56464B9DE8BEA1505CEC2EB97
EAD7B417106E060E236F64E78BBBF1CDF030C38FF24CC0210A0111B76369299A
4B3B927361362849D408D6DE27B03FFC9848B8EE8F495EAB058950420006CE3E
9ACCFB28F8467581A6FB4A16087A0EBC9653F9329EA892C40BF15FF148379E8F
07D1B21D9900703A35B829FE5D20F4E8415EDFE229D19E074247A41AEB55EC17
EBF96D173289F7DEAFC0CDBBCAE98A99E20E1CFC04C3743E0EFA703D8F38668E
5B029DA4752800BB429A9D33A6C611BEE0304DC92A25B8491659A8A71C24756A
90295A551DC347BCB55E34B7AB73B2213C1370B0AC0D97DB0883E7148AC6F490
88DAEED56150911D347555EA7452527B27B936FE072435C8E3740FB2D9D24718
A133690E6269475B5E4B670FA6F77D88135BB9525550DD7729C3CD32B816EB6E
ABE87E09901B7E90DF442EE12E199F0E571CC81E82250FE4B2B99749E610D021
8DA386395A5D74DF3EF2E53138987841099AAD9055EEB5474725F376AEBDCFF9
6A87C72E81871A160FBD10D2A8CFA1276F91964310F385E5E1D8DC7FE4E0B4EE
C3E1642A82BDF645747BA3E9F143C7E347570AD63AF4CB32BB7CFA94083E1630
C801CC25791C6D0E11FF1ED2CBEDEF4366F1E5E72A5E7572BA6FB83296E39167
30A524A32CADD0089E2E2A454471E87C9F573B373001D829EBF5A1CF8A1DF50B
569AAF367832CC8A959ED1F176679DB81993ED79791CCD73250329CDA5207349
5CA295BE6933B1441A82533F1D23226198EFD9989D152E9A2D96030C8134216E
C000852A744AADC8BA2C0BDB7679972927E45FA87477C089BD5495A5A98EACEA
1F9772EECFD8735067D82C4CC353E04125A32B882CF498FE7B23F81EE19692ED
621B9D09E0585464ED7F91C226110DFDBBEE1F0A4AEF3D64BC3FD2EB6BE18511
7A40E48A35DB5BF97339DE634BCA38D1B9CA046341C78DB569B44E4D9F3F26C2
31610AB97E4E4F8960E221269D5D560CB3BCDCC053D918ED889665BFD5CF095D
C10B658B1D2ECC504CB81EF1079B667C86D9B96239829EA57661AD804CBDF5DB
951054DF1E8A68FD33FD1AF66635663629765E30D632FCE69B486DAA34AE4A9F
79AB7EE5CBC857D99DF78489B34C017B65D376515AA0D7975BAB77F28BBEF259
1F64092AF06FD7B68CDB7C90D51FAFD5967CBD52E5EC111D92525F8D01141E92
364E1C2D85E9BF039F5A3FE8DF5B227191A01BAE46CBBB2643FD00DC5B1BBB12
E759E1C77EF109CF1F3A21F3C5A3E0FF835BC48C2CA5031ADE35C2E6BBCE3B73
DA65A757127C872BE8C63CE7B203895C5B94661AC1ACE4829B709035EB448329
4509A4B01D11F2A6F353F0A125FB48E3FF565489EEB0B9802B045770D4104835
AFD491F98D836A334D436E3A3D6E1C289B9B87015A90D0C79A13E186589FE981
A60E465827E8A0B550AF36E180AF523BC0CDE2AC6DC0C39FC412CE86E6C19773
2071B4B711BF19F5E6E3A652C01122D18B276BA8E8B4B8D4460962D8BBFC548E
3309889DFA4E2CCF93615937578744288E79B2FBAE3CB6DEFB663D035BF72040
4AB967DD658DAD62AF2A244A3D88ACEC046C4CE762415EF2334BC06848F7FCB6
8C2451F8642BDE04D1B8AFE8B5E7C495F28F3431EFBED225048037E3C1B6D3DA
1BD517257DE8620719786111754111044E6C8E442523EC60880FC421088D56F2
47AA6F4CE5B9F002E0E963A85D37889376D26BE35098FF8DBAFFF3C66C77DB2B
ECD5821609AD5641802B3DAB3D80EAE718B4D22872F90D7FD4F6F6CFE3429CD0
059A9FA987376A871885135D3599488D62E4949895D672D7D77D99B1CBDE64D8
3F8563C0F1CD987D507473EEA5001890B5171723890FC7E35E8472E7CF14B9AB
B43E407B209C984618D80FF1059ECB3CCAFF38E4A86A6F56A4614EDF543CB0D8
0FAD50C5209ED666BCE76DC6CE01D56B73A26C7EC1074F83CD410B347F3AAE83
74455DF29E5C8BB31EDF8E4EF5950597A9AF3310889438048C02DD5F5B323295
E504598674EC03DE2D53092A74490DBEE688707241E23D0CBBCDE0218E6BB90C
96AA32624CFD5668912C805088E9FF01B22C0FE47219C0366A7D54D469CE3FF6
2E75FCA7D5C5AE6C1B02B769AF3E7F42656C12DD541FA14F1A9315E7B2BF432E
A8E7D4B1239181701504F69DE72A86C264E1F6FAA1EA9F13F35D950DCDED7415
E89D5D1BFC89A8515537272D5980A3AC00987DFB8E86535BD6D9F3043341A0E8
4DE820186C4ED33D753B2EE90FE5927569CB3E59275202739AD91B91CF493AE1
F9780474A2DD0922392F1BD7A90C4AD32CC2C43A5FCB4B9DD6CB1D746D54B83D
B4B4FC54445EA3270F2BAB32DD9A2366F2980C5E88C168BFEC75BD7242ACD470
9E96CC5153167BA36C34DA3D841B0C3017686A6377D95798470DBA9315884369
E4322DB46096A7B43CCC37D57268BA44259E49CB15FADE607870D4B5287C153C
87C51A4B3A4952DBF12F158B5871546C0A7B151F27D983E84731AA40D9538423
8471AD59C46623C4494DC0DF29342C28FA232E4AE9688F7F0D5F86795D343A4E
EEF97F87C5929796523E0DE58CAC967F7B7626E9C5B2E79B5F4E92D04D91D99C
5928D8B3FEDC85A3A55F4599BE018CEDB94FC6C7CA82C64B7ABD5248DC7FBFF1
9D42E8753073D2254EFA2FB21ED9D65A25842E65EE2E7BB01514BD9964F31F8B
F42CDB8BF2C085CF48FBF19FD75DBD984EEACE0FF9108ED6CE238F31C8D0CEE4
1838597972E647F701DA7E57BD2FB329222BD14323C751080105AB62872DAFA0
7782AEAEC1D680D87045B7038B151CE7DC4577CD5D942000E392C915CA446B18
BF0443982B245EFA2CC611AD308FB45642B3C62091AAEAB7C5427BBF76E39BAD
07616B625C0ACCC51C00E86B378F07A32CF7B87A38CEB0291AB473A00410E7BB
E87B957DFC093BCD185EF056B858D4D90F3A29CEF45259B6C1384B20144C3379
2FCA0736EAF6D1A30BE4D6B28A4A54B5D2D82022FC4BF826BEB1FA56A8B8CB50
24C500323682A81CCF920D0CD6C2C2F1378598CC70B46CD7200BA01189B5CC4F
D77D7C4A1A158226AF3FBCBFFA9B14DB55CC0B50957E7031BCF78C0D63E7546E
88572A7E034E189D292756DF7061B1AAB1BBA3E92751BF4083B295E46F4C3947
5742FA3127D068FA5C3EDC07749B45C72853C701A5A54F5B20CF3A4727F02A01
A21A7B0951ABF4C2B0CF36F309895804413C57A54A65B1434E2BF270693720F0
2A01A21A75725C7312BF338F5F65EFDBC5A3974893FC8E70BD6566614811A944
CCDCEF246CB4B07E53F1C18B8C018340646E6720D7FE729AFE907FACC0B60DE4
AFB70CA523FEE93A8FC306B3C07408C7AAE52BBA3269401BF53C83BE387100AB
891AA9F608A6760201CCFDE5E6B879B9C2674E7A36A8AF511CB8E3E7D2F9B0AC
B1F324000D5520FDCD2D935596E2E20B97547B5646003DAB0BF069AA3CE4C370
8B3ACE529931D86CF2748A3D66F2FAC07680D1A9AD9007EB369B2A6B80ACFA6B
806BB2154E6B118DF33908E6BED58E0808D2D9A540B2C3898FE6E5178D6E02C5
86F905FFC0DC492F4D7E318426FD7CDDA80A015F9B3F92EDBE30A2447AD54A7F
A480B92FBDA4AE171095332F840366BDF9D405662A2F7D54CA39A46D97770DB5
11DF9CD918116E7F4603D36FF5D512C5E6EC689DECC042803EAA84D8B5EA4675
B669723240E8FAB00DEB860CF66BD6BB3493F3AAAA53375212679010AF1FB6B9
75F8D0C723C213199C1F7BADEE7AF4F42580333BD1B8490BBA4923B1330E4024
889B018469DFE590A229A9F17334570DD073B719BCCE356984C42537943E9761
FA9EEEDB874A189A94A6496012FDD6E5857A592DD80B23D2C2F18D67B8031B66
B3D3442EBEA550D41586A94C06850962DA27FCC1DF2A50C14A177F200389C70E
C87D5E16480AFFB4A7993E5C74A64CC324BBD659D26BB211E531663E230D0A9A
6A5200C2770032C3E7B45ECBAD1E993050B7C1F72DCE4D59DA9E625DA7395222
C1E9BC29EEAD09A8F8B9277B47D82099F4D9EFF9AA7138A5199A744735DFABC8
8DB06E31E72CD4B8816CB61BC60FAE1D03444DADA7731DAC07C11E9848170A39
E20D60F86764C35A6C2B7FDBFFCDCD204C6A557A983C753838F0E393318AC9F3
2D30C245DEBA1EEABFD9C8C76EC7AF358DE71D38D56A5142B2E25F4EC7B86132
5A9758F70935D55B1F77CCF48F7CDA781388F3BFA21F9CCF16751CBEA8991EDC
F8E0536F0E0A766224EA5D456B331426596E952453318252D82BBB50568BF16A
547244661C1612F6E01D909407C939A2B9B354B51AE29FFC41FA65EF7C6391C1
43B9B022EFC139A013037903C98440DE5B35370D32FB5A54D04E088FD99F8C01
DF7401C9B2F647EFA25B6D2A9665C8D2D47CE9D30B461077CE8BDFD1B363B71B
D2E1BBBD236F2F3BEE0916BA17C6DDDDC6FF153BACC004F05A63B3F886B09FED
9429FD1AD357991528ABF1D5E115B3E64134EDB76D653B46FB186A608E036651
3F3353B2FA4BD42A32D4D1372D21BC4343DB4D790D552E9D742AD187DBD12F19
A0A598F2C98F89AF22A7CDBD03EBDAC05B554BE4EC38665ECA6809B9B2328DD7
CEFAB5F7338B1B05F2E629B32F46CF63C260370374A3C1BA915E2D20039C8BA8
9A6A4A79537FD06EE7C6E6AB569629DCF8FF5B36958EEF8C6777057D96CFB67E
9F33BF3870875287143D5950FC91D0DA410538A6D0F96BB81512FB73170B7EF6
7CA8B326E81B759421CFB49B1FA698571B157AF925E8A9E19BF4798162F4B4EE
15553C382AAB406DD16C34DCB5DA798010F76FBD841993091B515AFC5CD9E366
4940FAFDE789B7D8C2C1EC7FF6BBE42414D6E10BFBC7CD564793BF8F582A3F92
126FC304D46FA725BEFF389713191D0F72D2ED8AFAE28D54857095F3C14F12BD
4707FAB8572443E10F5CA16660CE197359188E81F75D29536CFD17A7F2F53E73
1E34969AC9D5E8459680BB48F39F7D8CF3BEA7242888CF18C040619D7FBAB80D
D04CB8516801E03AD41CD762C52AB36679E5D3C37E06EA08CDC4DFD91251674D
AE00AF1B5FB4AB5A8720A47BA58EABCA8564E7D4D0652D03E8F108B6F6BC35F1
DB6E4465C337471F2DFF3EFD6B3CA54BEDCC13069B8AE624EB81179E351A1199
22D8FBFEA1CB405BFCDADD2EC65CD54295C5E41DF8590B94D152657C87BD553E
FA10D2AEA57EDA8AC9017EA92B1E130FCCE5F79060EADDA609FA477F4038A4BD
F2C16A1FDBBF97475B97934C2ACCB6B9264A82AF5946FE5204A507843DC5CCD6
571C9D716C1D35629C69719FE85DAC8542C532750A972AB44737AF7BF80C048C
5F979C46B8785BFB6A876AE430ACA2996277290C864C18AEA81E9B7DDB925131
11286F60DC32825F6C50AE883390125943BBD69BCD56D88C433C5CA5E067C306
762991F88B99EF1737634F7C143B2FFFC24D0AF11A161E21A6AB4CAA2CEDB52C
63B4F30B4D7F94F4B4DD1AAB6C22FC9E5636771805121F59D3E1603AEE414049
206449500FE3367FB78108208D4D86AE19E69E627E6089114AB17269EF51EFC4
3325663FF587B33656524DCF4234D167F6AD72D8A4B0F64678EEC85103C9E2FF
E07A95A184D79A2B25923E64DCFBB87D311E6BAC376F6AE9BC8F94FE6942AF06
A3B25F02D3C223CAACA9529192B990DD89155E893486EEFC4821E5DC8C40FCBB
2BB86ACA3D96BE9DF699E5F91C9907A396DBBEF785AF8D9080EABD61AD84084E
7482DD6CD934C3CA302F3640CE28B95872DE4BD0C173B8631DEFB986940ADCD2
9DE1D58D771E57D8350C28609294BA65BB4CF375C7102B4B96EB130B5C45CCB3
7E6FC286E21A648D752E99A7CBCE67B7EF769D60475F75B0D8D85732DA28DF0D
1307363325BA78488136AD46C835CE2E3A0000F1E6D548759C7837513B64D21A
8A68971221BDA638B481EB66BB00B7EFE75E99332C8CFC8E1692E83145D0B1F6
5AF4CE741D8D20665862CF6D7C75BB6F0D03471085AB70B09D91F40DD6797733
1228E210803344CC82283CC16C996A1DC3C68663444DB44210BB3DA9F074EDA7
A577FD2BF4004B8C67F5E3C3817FD2B94198132570951103F1A5EE6872229D81
DB103633A6E33C3E6D70D309470DFFDC4A0ADB476821803E88923B72ABF70CFB
AF96C839AC458F135173B7AD95A127CE511D90C5D5670781D1349A4999CD6DF7
4DEB2D075025A15496E42772AE30D50BA429C6D309D1935D4B12270221C596D2
D61B86B92A15E6CB3B15DB4E00B462CF72E6F7997D86B4F23D1DDB10682B8954
16BD617B9F0761959FE4332CA9C483A41C40962DF81E1E424444BB684B00FB54
9A92871D0BF33AB0C1F78526E27C88BA1C774F9087FB63F10DB5D1C751DBA878
BF941F1F720A3328D501348D60CF21B56E9BB66724E404200A8ADB7F5E116DD1
FB0641EEAD894562C05F0EBE48EF41DB07D9D34D728AEC73CD43F53238F43F37
310F91089186F1FF6DA4BF7093B5DE28C73FDDDBA701141598FA48A22FF9B65E
B85DBD76E150AA6359038D53732862978941F646916C431E0E308512DB563238
E7E4F0B9BF31243F791A848AD2A919EEBBD283BFB213EA1503A941EA2096D40F
A2D3344BBA848AE39D505DF76ED453A32680A8DBB0186533642C6D89EE6E8F28
DB8DB3279DF1E4EB1D91315F66AA868C2D52D96BC1D19C5D19F43DD81BFFF224
FF702ED4DB33DD1283966DE7E99E0B2048B60827CEB3D34FDE93E95E824821FE
060E59E7A129F978564357C31F9C1A8A64C98FAB5E40A85E6FAF14BDB66F1D21
691390B4AF361C2E2D37FD0EFD4BADFF237E9135E7FC24B30A0C3568B6171BE0
DCE7AE1A4CD3B5B300E8C5001884E52AA7C03A7F891BCE2E4C785CADE0B6A5D3
184CDF0D4ACB0665B51A37437B857D6B65DC64461585BC936E07E71B7763DF35
C102925FB4EC9A276AB2F4DEAC5B9C552E019DC7D79DC6013E21D17FDCFA7C1A
92C23FADF09AFE275D1E49420A1E25D5D129C0C0339487A7C4B3F01AE81C429B
3BF323FF2243757696C3F138390838D4DB98B45EA419B0974C5A18DA86D32906
9EC53FD5E9C745E978091C4C8B22BDEEEEF5006AD13FA6EA2D5D2F2940ED5515
74BE529B96547A2A8BC0F291309CBDBB47570BC09AF8A908026EDF26D85EEE2E
3142290380BECFEFAA64556FD599C07882FED89B189AA35753AA44C58100851C
C85FB8E2434DC18655D0E86938D93A74E2D3C6BA446A8E8EAC4845F31650C2CA
F200E1F89FA9180C7D5AF716A075096A48A3C7C8B8A55546D4EA469F29B77A47
DF88082996940F47C8112008A4F2447FB544C3DF17E4F25D723DB243938D841D
5C3C82398F0ECD902089DD16BF5F30D78C191F56BC182CB4A94C013F04110096
87C4DA5D89A3160110CD4D2EC4A138B25CF357BEFB2E11071E652BDC468D3309
7E65D13F6BB15B45EE9FA75E237A027D4FF8632BDB64D22CAA5E73A63B5D6F72
7A09594A6454C24400333D7AF33C82EFAA99C9C8E1773288AE47B1A35F0E7FF5
C1838A4B14A1C9EDED40BAA220D4770E258A5D9E3B3FF6B081CF0705814ABB80
D1286955DF8E34928E2AFECD46C5A6320DF9C0B0E1648B439B3A711C2DC1500D
E37FBE4FD05EE5F3DFE1E220324111FF3BA0C2BE892E888F7086D1DEBA086B1E
A02B2E460F086E311AB4803B9F4037601D1700CA7934C29BE4C15A24DD663D7C
A52551DD10E2B4D77B4E85BC6A33E9A1317E6DE3EE1DF963A9055D5543D7ECC6
7F1800D41B514E8E77CFBB0E3221EC68DE41BF99512921346A87A210F4C88B9F
1C3F5C60FD2930A58B99CBD6423AB5A7E201923F7D903654C4992EA47CC8C32F
04F6C843D401476BC6CEC6454D27E1A52F44D8EE43DCB006FA1F5277EF22943D
1B4A5525EFB3747F4997D9079C10E2B96B1EB87A97DDE16994523FE190581DDD
153CD6B52C493EBEB81392955105AEC38EE03606EAA779C4F57EE344751BC098
342260CFCD1B994978EF49DD1AA7D07B2CB60EAD2DA3E1DB6B25776E9D370B4C
636ADF062E9EBF26D48916E6A19FB998F518A075AC7F06126B17149488C3BD38
D2A17BC2C6F1058C057FFE4E5C435BBBA755FD6E807CF864872C38B2104BDE8D
FB06D252EC9D6E9C1B5D205C6BF8A460A6997847DE1349C8E1D2910966BE2D89
00684EF3D347876293A1ADE396BF684CE84D9DA7EEE62F26C313F48E1AFB98C1
9929F34995728F4B225616FC5557D28AFDA2E48084B968A4AA7793268BDFF09E
C3DE31575D754852757324E31AB358F74AD4932B5C621FF490AFD5F86DB88FC6
CE5C9FBC9FC01682CAA91CBEF0C684F4A04CB68AD1904B3476E0A2CAEA1D9C64
4E3FCA5941A1D7F1EFD169E73D7D1894E8900D77BF6540DD2E0DA0494936CBDC
BA9450A2B428ACAE0B2C9F9D2011B5B83876B8DC19F81074A9784185BEE7B613
03C2DE3216EC2A84FAACF595B034B71892C454F5D7A6DB616D25E745D8C964BC
672573139F173E270CAACDF37E9A6AF2D9A1086EF0D3361D0AB86DF62D63C86D
DE94D7190AC03C53A0FF1BCD12D42351A72369FD96114D71719C118E25D8A9E9
B4B5025FD90A8B104589EF388F42047C246572EEB7D55FF5AB04D5315404CC24
1B26E708F4E454A1FE2107B371CE5444E898D9344F025143778C98161F825693
7AD1F3742B6FF2695DDA75E791EF3D8B4D367705C75F16F39708AADA1F323D02
11B30D9B23A94D7E62C8AD81CFA833304CB4345C8A478ECAA0F1D19AEA57944B
A8B337BFA6A270869F18F4FDB4C1F501BE45F4746B6BCFE2E0273E19D491BA43
4328765D189749B5BF6E4B3CF06DFA30612CB73F0C4EC8E64AA8EB9871F4E399
98D69F8AEA936CCBEF41837DD803717B7B2F494AF99001661C8D6BA1F96C5BB3
3055C63CF072963A85D4F82277795E2AFFBF28963C9EBC60C66CC4FD5FC02C7A
2AC39B1F984FAF2F894A1A6578FA0C85B38EF88B95DCAF3EA27D79CDB0A26FA7
89C766B1104C2314787C93884718FC3859FAF24766DD2684B2737A6A325BF051
784EB2B5D206DE7349D32FD60CA609618DEEDE01145C4C19DFF6C2AE8698A561
F1E0847C9E99A35074CB1BEA0FA116002CA02CAE79C407165CCC946DEFDC1238
A94C73FC58A39A712AAD760757753403E4F853802BE679DA6DF3E20732D8F212
7BE9BF92C09593CAC1EBD0A86EE3FDC79617CDD3E9568C0E6EFA8C6D01A342F0
D877A1BAAF50B8F483C8F7C4346D1FCD9FA0BC16430C6AAB94B430CB40122046
9BEA6168445964C7A4EE7A3FDAA140B11415303832B19A3C39D33A87D5AD051B
5050712C9C187AE054667F1E47982774246FE2CB6F44ABE324F10025983279EC
F2AF644ED083AAF478F55FF699D8D1489E7443E1A964ED6C627D70025BFD7D46
FA8791DA1DC29C20040DE30BC17E1D0D806E14E81B5E952353B26F0CD678F2BB
7B46BFA2FAEF80114F89CA3F95C74B0763255F28F0675312E6259BDA1F541DE0
FA27726E57B24AB26A49B84BEC2C1B5BB1074B8D8493ABEADF59D966455B9612
453E5EF16C7733BF56AE6BAB085B69A265172F7BB490C7F57C89305D24CF7A59
F04CC6EE3BE16C1A080ACC735BE4CFE8E2A199BA9096715AA377C0AC75956EE3
EB935CE23C401A45712337397279F2AB3D1CB46E01BDC256801F25694819EA9F
D0FE633400441262AF317A4CC295991CB9985AAFD87A92FFE43F7ED763D73991
B3D280A00726418B07FFA30D4B3BEA9FD601A8AA4382BDF4FB251B940BE3C753
C053EB5164F35D72151B5CB7942B73ADB19CE8AA275320013CC2B5978BBCDDBD
620A6D5C410631D15668F66EF1B00BA453343FA6844ADA64A7B88FDA3DD91194
17CD8091AD6BD4A9870469E1AA14A34516BFD002FE02904D82BE251E64610341
523137D15DF9FADA0222FADBC049696E3D89FC2D9ED262A92291FFF2F79E50AE
09594793FB5EB47B2AE56319ABEFB8B0576FF87B56195E0156ED0C13A96BB694
2DACA4147BB87D81B3CA5B558C2CCE5BEDB95D1C8AB679BF7774FD3632E6703B
0453F2640EC8D94D1BA7D1860345F16D9DBDC8CC09D96E7C7BF238622127A46E
9DB05E56B817FB061CA0D9FC5A4640990DA806E5C1D7904770BFEB00068298AB
8495E9A0D81CFEF82379E88F8292959BF18F27DCA20392D89933A0B74C8C9D7D
E44D6777D90BE4434E36952448DD1926CF3E4C6725EED62F6367CE0A9E6BC3B7
4D807F7DE678CDC6C6812B2163064DA59C8458022C86E54E370978B90B4AF2AA
83CA126B008CB0A1F82A998610EA02F8DA0DC5A3F55B678B6F1904B911F9C6C6
654897BB2D9147E5D3B3177C937B60C99D0E6429B0C12535CF9BF81EDD66E2C0
AF090A53E3A482230E55E126E1D408247B727C428CBBE7C3D8596330893FB13C
A04CB9B98A404BE2B515F1F3750B8A5517AA25281D675358850D4D893C79F1BA
2C155E9F169EB250BCCED39EDF754B713A67318787E73424D9F4ECAD3CA64FAB
FEF61DB1E78C55F1C6CE31AEFE7C8215D750341B88782BC023287E0596E8C702
1CADA860F5953D0051FEA4082EB3348AFEBA93505EBB1248ACCAAAB09A79B157
D0C27FE57345C300A41C6899A7BB06238E7635F141AB733277AA7A9C4F1F0EA6
473D0E76DFED27FA18CC450289B7ACB44FF74149D1CDE37647092B4D0F343080
BE57AF5E1A194F88BB05F453278DD685BBA2AAFBFF978C423E9FB15E5D751EE2
7FE97633F6809EBBEBF00235ADAC687DCDDEB1A1728EDDB56EDC5FBF6C40A7A2
D7AFBDC8849017E6E82DD897B944989A42B9B3C74D4E85FCD8D5FCABE9B03220
9296003CE197AD689B3DCDF563169C29A3AB65B87A27AB2AD4C34677CE62613E
39B2DC806B963D219C690F3E7BA157EAECA7683B0D7543EE4DA3DAA51DABE9F5
0F2A05B84A25BDFDF5CFC9F21141884AD41215A5041837C4D8CF831273356F26
16952AC6D77EDF093F9655CC08B086858658DE4A287D5BFD43F0E329FBD4DB3D
2341C8FA84701EE47A902981BC9F89D820F68EDA57E179813A7AE7D1F4D5501D
CF69FCD3095600E62CBC99C0E02D1CC26702E68F736F88509A62DDF7768D15D1
CC26E18DCFEE5808A503C743896DC91B20EA372C116E33FE94627274D50A315D
A931A98BFBB545B453FC7FD5B7BB175FAD081E0C483D7F1153422C0BE413CEED
24E591E3585874F70E7A58609B210EE71FDD7AA6C8BF44B56726321BC2D4819F
6CC2401C41405AB4179BA79BFFAE7129F6D5314F0B7971AD959C81143FDBCC12
1D8FE4FF4052877522B643BFBF3B7B1F812154063EE2ABADA4E4A2A485143B4A
3C19A5CF2A51F61981D2A539A4556B94976DC29FDC3D07EB1A5628B5E80FBDF2
1AF8BC522FECDAD5E29A7ADA0E2FE392959B1FA365094EB11D4693D97779D31A
52A9DFC611596BC05AAB1C6EF139708E0F4F783D2C58A633A3DD3835E99FD03A
DA152A9B376681164F54D55031369D99FEE0653356866237580B9535D834E2F2
4BD77D11B92C0D5FDBA52FF8061DC9A3A2C7E7BA4D5421A9D013BAC3D14E34FA
DEAC68D4F0DDB7D177B8F1161B56479F4B2C9F6A2FA7C43F180AFBFE00C7A25B
48EA66C49ACB0783681097A7C70787E20624CF500757712F7A57D06F292A9A06
109FE8002E8949FF0CFACD9BDB7EF25B5F9C18B7D725751821C8FEE0E6B8BF15
6DD1A129222BE57F8FEA5231FC9E48BAC24B719486F719117362E24C324335AE
8B74298FA247F28D7E5A9EA02CF70A46A983162FC80B0DE8CE8587B259D373C1
220939CEAE3A5456E364D2117D60BA66CB7B460B9F09E0E68D2D6260BF41D33D
9E3568FA6AF4D3E68A01E86B622129A7FAE6AEE9D28864D69A376A7C788DC65A
A1AAAB6BE71B9C9ABD26C8A97080243017A0AB8F65ADC12A56A96568419DC41C
18B7FC1EC0418A997C57F563FBA0C2583BE36A28528987ED97444ABBE512E555
3FFD7315D712BFFAE19F7673E2974F6CA6047539791B71DF39AAD3EE125CC543
2B48890A6BD93A8C2E912F859AE2009B962E3733D2298ED89ABE2B26CE562FCB
D4980A8A7FF811E92FDEBBE69DE1721D4E6CB5FE0010849754FA587A90D95537
F41DC596317FA917D0D600567C7C9113C550C7F6DDF90B27A3CBCFCB361B2D34
9D98D2ADF82AEF36146541FD499E4B7E6726BFFEE86744AF3127D52801145CBB
085A46D19285B8D4344AE2330FA11690A4BA405AA0188959D96F399FCB8E7813
3A796FC5664490597DA5F2CAC7C0013B19EC9DE843546003A2E67AB3AC7EB56B
E27A947F18E576C67096156844D7CD0470F350DA816E14DFEDEA2AB4D75AD98C
64950DC5A7D03B8A700FC5876903F5B52ECECF74BD96A2FF355EF4DAD463E4C9
A8E628FB695AE74DFBB3144F2C1DCD5B03C5D1BFA746AE8F304FB738AD641727
E520801B60550B98AFF4D46E8B52294F56586989C46B832631F461AA0478A60E
7C8995CFF23E73CC286A26036D290EAF0ACC90F8A55074CB1BEA0FA116002CA0
2CAE79CDB19167F41FE27A569E54F287E72FF971C3640BA9A31F9C49DFBEB24C
94C93ADC954B9B3B39D566F57B5F9EA0BBEA35576498BAA98F84EE28128C1D07
594157372F8AFD21F1AADFF54E1AEC58E826624B98A19C31B9F51288987DCE0D
C0C2BC214D920E0FD64145F006BF7BE9B10E83663A2D91481222AB5BAA477D07
BBE072099DA34F1E15113F1F0C94AA0D46F3A3F921178080497067F457EDCA78
244D0B32FA2715FFC852DB10B61D47B82F5ECCDAE5AE3843B9A6E36C33332FB1
D96FC7F094FA9F93B6F92C0ED01FF08EBD3EC192CE3CC46227A84A8CDBA54134
D8992186AF6EB6873AB0D27866E1CF4D23E63B47031DBA44D2E6061A21652104
F722C196FB78A55C9AF39DB421A8F5693E13C5A4A83DEC6EC827533377EE962B
78D053752DB1C471BE7191E2B5EE03D751F0A495337804D2DAFC1B93ABFEFA99
0E3A02996C15700EBB3963CED0FC066E8B1E5C8BEB2B5F75EBB7B505070BEA53
2D7A9D9B0B899F9846C53E3383DA3200847CC1B654146AFBC5585C31DA3DCA50
EDF153DFB465BF0797E412D690765D23C8BB1767C35802460F53EB8E4F89930C
9E26AE2F9FF3BB81AF51DFC34A0C0551FD1140A4E2491AB18A39F7865FF0EA1F
F73C43D4FF3F483540B6CB98D369E4C8C5BA741AA7E4BD3F8FF803BDAF9EE61F
DD0FB86C4B8DD564DD7A51B984FF268194E15B119EE5251103E5674127903F97
BCCC46558E7A9E73F41162443F7414F7D7A91815032D5974DA63859AC97006C7
4E0D57FA4DE9E4F6F5435799D3F20879DF15458DA4C25BF1CA152F7F3D6349F4
F52DE538CD8CAFFDECB354AD4E6652080F3323EA950B41324DD63E2047CA1336
0593D016F19EAFFBC3A9F1F6038F07FC10D735BA9AA1317F148C1C53C344B38B
AE24917A4E831FAFF4E98D2060A61BA20604ADFDE323ADD015842D694DF8B5A9
CF4C9AB22D0C60B50B7B314C784BEE04878CB8FD1227FCD8D8EE63589387577D
67D8F906E5DEC8F02D57373A3F45BD25A5D100A2D26541E2F3ABD7C5C1196C1D
94586DD11A01A819FB16E93C1F23A619F93CC946D421B421F9D4CE02BB9749B3
725E09CFE23D323472F1B968663B704B84915980CFCA03F3DE0BC5351B85DBF1
8C291BE7B3DB17E8FDB124B11B61460063A052979EE79B616B0E85A05CB8C607
F691756466C2D0C37F234C195A50ADCBBD436F0DAFC614CCB63870924D3BD4C7
264564C809954F1D5EA030D6B0D2689BF74B98D73883C778A7EADA044ADCC1E1
AD42918C8C67320F6138ACA3E14E53111A74AC2CC405693F2830C03D547C15BA
DD31E15B4C6F384C66A4610688E42F27E7A53EC4A1BBDF2898F79D701A90E3C1
D68D1A004B586D29ED63248721974FC16830E065C359679764FBDFBC0C34193E
9439E6811283D99C80800FC2688991AAF6BEBA1A24D09C78E0F7D53074BE07E3
8A1580CC9FAF439CE5FE83CC32D3D367E9000141EE5B103930611A876623088B
4B8B19C78C1A0A48D9720AE0BAF005173C16AEC3CCADE31E226BD21E75756A6B
5CD2D8AB365B12EB90EA3E440E4C3E03F22141DBAA14A314864C999FF81AD0F1
56E7CA96F63B91ED800F53C3D07706D953C1658C769D0CF40A6070C311D6E3AC
B9643115FF15805E8520DA1781D0CE220A124711CAE2BFCF38FC0FB13AD7DD60
15882C948093629F5C40C845CC7EA6AEC3594DA32A487794284ED0FB3C3B495A
115818CBC5B448D5AA92EFEACF121FA2B98397DDE23BFB018A6E1ED0C4AAAC54
C93E5D33FC7E42B3F9B0267B8C54B3A526D7377C3048B1CF36C21F68CD19BA8F
C48F2B4C829418B836DE21A3F877B7437C84AADE434B433562341FCD30FC5682
ADF171B5C0745931AC98ED8F9E91F80124F9E8D0EE2F707301AA9A58F5899AFA
1300D77B26EB9D729F36F90C4D836FDEE09D265192AF69322B6309C10CAFAF86
87C95123BF2CEE4BD500233537190A26F36FC57DEF4EF0A4DF772BCDC438FD29
6B32C857F70FE653702ADFF4541B4326BD62AA5881A8316BD7314EBC0C090F32
4FA5E2D3B0FD2A227D37FB7D893DFA6C5546F42C884FC002D598C01DB574902B
83396DEAFC24FFCBE32E12ACB6B6796F09EB3A7F9275A5FFB5A8ADB9C393193A
EE3A19BA91063421988EA0AEB42E3F44BC06577610497821BE256AECFE771369
B6F0E49F8B0CEB4DD458DAC1CE89B914E4B4E96ED5AA6B8268B2710BE5A47692
A308994F06FD888C7218F73060EE99780DBAA19D644CE1E426BA68DC0CDD0084
6E75B44ABB275A51995E39367C5FBAEBB73C523B30CCA645BD334EC4A9C609BC
4CF09EE8C6E41197EA826E17FDB01F85E6274CD7F2581134B101D1BA144915A8
4ADD47CBBC4218EEECA811C2AF6A87E0C884AECB87B03A861DAF3C4D59C19419
28C32DCC0FCC8983F5CF12B4ADE3EFF0213248C1324B0B782A82FBDCF64CAE5B
120F163C071B415B6807AAB68211037F4F2C1768DE55D5A2491C679617ACB8BD
2F5C8599D51DBC707265144F6B14FBC50E1DF382C634DB5A4EC3ECD99FD530B6
AD81CA1B8E37988226D1D7ED2D25709B88D7C8E40BE6C4C35DAEA5041C654E98
8610EA02F8DA0DC5A3F55B678B6F190CCF80B63473557A68F01C0C99CA2CAC35
CEE74DFE948579C9829E4B23EBEB76456B69DDCA390CB2672296E2823BD2EE16
29AE7A70CC048D6D8165DCF3D8AFEE0DF07A543EABD0412F149E86DAE6860EBD
F62FE4F7FE74ACA3475C9A76931C253024DB79F400D52CBC5FA902E7BDE4C9BC
29CFBC517B5109CC428AC71A76D0CBE3B4C221C070478AE42928359F61755355
230E071CD6C6C0B29CBE640B989E0752A84CB3809BB35B2909540B293844AA1A
F3A022D6191B027AEFE2A3C0D3C12A76B86E0EB1BE0C2C35E6155BB8AA346083
47CDDB20718EAA7F1335FA00C265873C923DA72340154105583650663663E121
E6B3035DB6E0A12CF4B2481E422198969E39510DA4C360B0F46EE6DC5B5775F3
44135E01B3B32F989B0D34FC3DADB6FDE84EDF66599A626218CF81E76B28C527
C328B9E745D05D92A5E89E0418A8258111779F35F7510883C23D7866BEE47D12
AA5B1F928222183DEAA9FCDABD706BBE5A33C6003F23292A43B317B9B6D41977
104AF92A6EE7938A36C5AE8732B7A9EF583A03DB4C97F0613EDEB93DE98CDD6E
A09D289A5773E21EEC6D54CABB0D9132086F40B0267920A5B2252367EFD9F776
C2C3B55AD97984EFEC3EE28B43154084CCBBC6E46C758A7CC5FDC0C1DED57A18
85D1F64F3296D036A8553712A3A549E68CACDEFCAF9972101508D37397F01E8F
C2179D17F62B1EE0E1B147334C276BA5CF382614A15DE3F85B832842BB0F218A
C63132E57B963CE446FC3616B308EE8179CB19224931D557B2628ED1A1A77123
8AF7AEDA5044E0D7B7F1AFA9B3A1AA0ABCF6003F74F70A66AC90550CB0DE9F99
A919873BEDF8F1306E76031817835F5DA7088991E21CBF255D2AA6714A65602B
95CF2BA78D4E5D006499B8C1DC48D348481F850CCB77143E8DCCA79D9E3489CC
5173E662690A5C744296180C8B04678D8B6A3D12EE58610495094F15C5CD2576
5AECEFCD64385D6B2960E68DD0C202053912E7B9939329E2537914886C7A6709
2EB8E396555DA9410069FB3F1F51421F2478E890062954E2490763E190FA8FE9
5129C32660B9C9280A961E771176B5999AAD06E09E5F174FCAEC737A14D9C699
ACD605974A0B3707E620B55F8E5B5F42C1C211203ED6EB5A3357167C2C3115EF
6AE4BB2288B601895DDC8D2CB5FEF29DF22D8C445494FB879005788A5B01860C
BB2DA42D6CA989094194A4D791F756EABA2D848C9F1BDBD530F71D944DEFD0C7
F2FDA49763A057D452BDDB55E2717D153D09606ADFA28B902ADD6A84E892C6B4
840F2B1B8D83ED846207E71B7763DF35C102925FB4EC9A214DBDFDD9462C4320
82905E2C7B46AF959F7E5310F5B599D1BAD7F631E2DBFA6963E77ACCCEF3A3F7
0D7DF08890CCB66011C6813D4C5EEE7C7F9188B8B1B8C05D0A67AF2BCF74B600
0C67A09F06C0EF750E0067EF568466C9030A8D63143A22757D6D62159B8B4474
3B53CF0CD517759371EEC9CA7D4E88AC6EC9100A4188B2D7E15031624A248C26
519058625F9BE81DEE16188A95AEB82FED39A4734AAA7A8E15FACF0C08E7E96F
7C5306125BA5BACBC1033A1858BA35A8277F8273826F0492B5DD0B068D6CC3BA
E5FCFF585633EBF67280B6CB2BA47A5DB36107F965305B168ED629EDBDD2C814
2EA8F65A7DA36A2B614C3E62CEE4D2D57A88623713A7560EDCEA4F6B3CF63A79
A37EC8F5AC96BDFD45B5A3FD539727DECED3E87238BC7632C030ACF4785AF0D1
2380E33C666E66BF183D5845BE11A21C26F14E0804B04FEC726E5D594BF1C2C8
E02CCF1C4692586EC8C3E0EC7844C8C428E5AC49C9EA48D681E3FDE5948A4687
4D2F126916B204BE803E8ECD33031EB5DF8B284BCAF0CF112256778B0EDF7CE2
18FC019233B161D6993484042C758DD37C80634400F75D764E8990713BC3470F
9519BD31722B422C5A62B61D46093C727B88875EFF3F5D09A96C0D2A03464475
5CAFD7F71429B72416469B6AF849CE1A90F3F012E6D6E4C5D95853BA4CA95F17
F5EACC5D48EDFD659CEC8F8842251417894CC4F76C75364BD7A4914E7CD83090
98C780BA2AA06700572785C5DC13939FFC5263B4CBF3AD4A3A9DAF4807CA4A84
196D299A8D5AA17B3DBBBD6AFEF739FD28138256CE65D63F1ED7D6BF79A0C5A5
02545D6704F82DC3237AE0ADA552EA27EF8AF20AA903B7C99C138C55F58EE5B9
AEADEFFDB30EC9DCE4B2FD4CD652995F1022C4773DDD5CE3451F2429B1B0AFA8
D22FC355A50C24A473581E43DD6FCC9FA4C2119171450E1F12910456E363E493
E9939CD7D6FE60E17D71E48501B016E98864F88C2538C8AE5A713959FE14065B
D730AA7F96F3C483C7AC3FE37646AA4943F88E68ED442D264832DC823A819208
CF7A4DDFC88404CBA0B45A91123DBEC0CB0E8F148660FD1FDAB879AD833B8802
67B72205CC0D0173316228C335F9EBC360DCF265399D1E5C1B29AAB49602CC24
6D195A8444FEE424736FFAB14717BA9FDAF54BE074BD85E57DB1B5583C22BE71
86FCAC36D983D6F2490EAAD1E4E24EFC989711C9000BF9B4C89A6F9E2EEE734A
2D43AC2FF8DCE4404F4DC1DD01C4F38A7BF7FD02787E513C4952E23F4BC776A4
4FD51617FCBA2FED702349A6B9A7EC23D75A48C8674E8CC40F700071F33DF89E
828BCFD650B86999D8EE26E54AFDE1ADD7149BB49C3847F1C88D1D586F3855B8
A3414BFF2C8806B7E97EB241E30C54447709D5D66370BE2542E8480F74148545
9BDE663CC0ED242CA12F6F9A50551F8A5F9DDCD08C53CDC09A7C5D77D5620FB0
7AA8BFC7FE64FC28CB5037D3A9708C909B0D644C42FDC3DD6BB9BB87AA8FF842
16C7315D6F9E8AF92AC23AD7C20F66432B80E9113B72123E5143AD4E96196F21
424BA65C5CB46515B547A8D522671FFC1F7FB0CA3ED9384DD04353F58D3CD3F0
7D147D8FECD654CC2B00FFA154C915E554EE64333BE492EE4F5CACAF629F43D7
BC13E0D55B391E5FE31C832DEDED383DAA28EF0F47FBB45290B980645A94C2E7
094869A3499F55D3858DAA12CE77C37C83927B9923E0B65B809A9B7E0417CAFC
F0F1C4423C9B27688CFF2C6A95BBDB4DD376451D0F5C7859308581478BF242FC
191C1FCAD91CDDBFAFC69C94E6D8621602F1F82FF268693D3CCA86D18376C07B
A165624DBE7D353766D32F21BD0F614FE260E0BE30C795A1EDACCDA90E6A570D
D6E018624BC181F899D2C9DE8F924E9444C267A521BA81EF969D1BD495CFB90D
744E1C4BA3BCB96BCF84D7E69E290700E75904425C684AA298356FF55982B241
92ED344A8DC088F35D9D0E7D47E1AD7BBB9FB5D199BF425A9D5B8C9A8DAD5663
84E50173BCC2AA5C159B914F07AB007B991D7AEF9F75BC0EA7D1AA036BD90E1F
3079E6268E57E64D1BAB1D0F8E1B8575A81452EAF8904D94981E0B031FEC662E
E7AA5D2DAD8654D234543024E86C95839BDD8884E1980CBBB74091BC88E64B1B
D3FB9F9952AE7959BBE474873E230E35763D93EFA4B2AFF5A9708393B0E30747
C42C4A6E003993A695164788D6A6CE724DA1D7A0699D3F130EFD6447CF326219
17F9E292CCDCFF8CCC1FB2C68EF4186A4A1F119028FFC7A125A4CA60B4FA94DF
FABC22759C1855729FC18C31D11C559B6C369711ACC3437D26FA51C76B413CF5
33E888A7569B8541F5DFB418CF16CAB3FC1BA775512EFE753C8DBE9236F92E47
2FE7603F8A7CEE7E55682E789351A20EC3ACA6F991B1198DF5ACB45FF360F4A3
117C321B924F631BB3FC3DE92EF8726DDBA89B7181C23AEC13FCD216D407197D
2739C0075C98CEAFE72404A406189885C9F29457696EC1F762A88D03201BF47A
07D027054DC0E17C368B8F1E9E10F23E2002779DBA7E1AA57A75BF2D75FBCA76
4E158746D4B267D11AE4AC7089059CB7ECE041024DA3D7766059F3BD5C355D78
7A9A945354BA2F39764B9A4B3BFFF4A6BA0A2CFE4BA368C4E2BEA4E53F53C4C5
17F4E87186D661B2FBC0457C019747CE6C3865E072F9980E07624D5028E59140
C2941FD7B122106EE10BF2F12E89810F1E7B1DEF995E9EE0446E4985A469B7B5
2F400CABFF44CA993A7353F7E09079A0E242CE52E45BCC15EA728A3EBE275E63
E0C10C90D8BBD1CF1597469F603D90351A9F2DAD1BF516F28D6639C2E0B78A34
ACFA438C4857EBBB77B79739264A371C4DF0A7524484DEB8F7AA29A3DF933AE7
C5DDA00652F411737E9CB7A91CB5124F76CF90DD8BA3B29060BFA5B499A23EDD
6BAD9F6C147DC0128B0B21C62B1B03D6869F836D2620C17BB30D89AF461C5E53
C660DDC4ADA770578CBED8D2B9E9AD8D2FD88ACB96077F9A846A469A0A2FAFB5
0887F93CA68AD13269240DB747B51398866D3195C2D2FA738B15A8F60C3F3401
9A59DAA2BF23B01C215ECB891EED2F724CF17EAEA922BB03A40911E71D16D345
0DFC7686BEC17C9C2086CB659DC319A8761CB5A091DEEA5A721F2D0A2C83ED33
B79D8260A5DD609915AD0EE643138A53F23A3FBCE9867D22665832E527FE8BA0
A0A1168A2066F3DC05E77F3F0D2A3B98C02CCF14AE17DFF40DB56601E17EDD29
83F03A9FB92F0EB9C21BF28B3E7C89E9B13EE4144256D9A981C61708F99F81BC
B3F4C182F152786AC55A52634C2648730CB166A6672A07B4213C747607691C8C
37C821012C4AFC8A26249976A842FE1A8E8AA6AC46489316B31863B504E9E4D5
1011F77AEDA257B7B7E4DA867117AB485B1667B50648098DF2081B3A28039ABA
38EA9CB2892F6615B55F22AD12E8FF24032DEAFCFB1DCA0D1CD3E6EEEC4BF17E
0DE7ECD83A3AC50DAB0BA1505E23313F95BDFE41FC33AFDD9EA61B0FDDA30983
6FFAD97F3E8B7F47C39760406D08C0F891AED5E3D1993189966B413FF1B53234
0127730E91C38E5F1A73AC92842CB1893F15179CA965DD49D9AC03D992E56F8D
B64A658C9F4DCAE585B43B0DE1077219761653CC90A63D288A6BE8EDDFDC6078
7693F6F02CAB729564A3938DDA8EC96219830BF582D56D077CC9540F480C2710
791D5F738A9E348173826AF29B105AF01C27352333FBD5E21CD9C8CA9104DCFB
AFF275B3C874CE528AC77B55F9D3B76534E9DC73FAE51678CDCF7A89B25FB0FB
53FF6D3CD9CF5D9A80B875F77A
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: UniversalisADFStd-BoldCond
%!PS-AdobeFont-1.0: UniversalisADFStd-BoldCond 1.009
9 dict begin
/FontName /UniversalisADFStd-BoldCond def
/FontInfo 9 dict dup begin
/version (1.009) readonly def
/Notice (Copyright Arkandis Digital Foundry, under GNU General Public Licence V2 and later, with font exception.) readonly def
/FullName (Universalis ADF Std Bold Cond) readonly def
/FamilyName (Universalis ADF Std) readonly def
/Weight (Bold) readonly def
/isFixedPitch false def
/ItalicAngle 0 def
/UnderlinePosition -125 def
/UnderlineThickness 50 def
end readonly def
/Encoding StandardEncoding def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/StrokeWidth 0 def
/FontBBox {-22 -226 1922 961} readonly def
currentdict end
currentfile eexec
D9D66F633B846A989B9974B0179FC6CC4458BABD05D76517D9C24FED216BE906
1643B22AABEA637BFFCB75FF65A91279495B00B8B92CFB39C8899C3818357033
2BBD344CBB263D4250A46E5B09E712D88275731E98C996C69406E43E9DBEFDD7
161A841EE17304D49501F13D3AD3CFB00DA1700EAD2364C31908F18B9F3643EA
E9514021B52FFC8EEA03D195015D30E3BB12C272A254955F88A4DCD045432CDB
693596BAF5E1BEFA2D9AC1CD0CCBC3EB428243AB90B02B35BA3A6C5B66E6A2A1
ADDF72C4E1C85E0D1616279E70578303633EE7B6B0DEF67A7EA923C661949BF5
268AB6292E26967380DFFBA4E50822F679BB138795C9FE7007F0E1FCD4719DB7
5A46EB799A99B43DBCA06EFC7B83A71B48C4A47742A2287B1FAD4F3E67DDEC5B
BBED997424827B2583D773651445619DC9D7ECBE671B07CDA2630DF77B39A58C
464DD43724C9BDE7E917C52C54E65E76E264BFDEF568B36C0B9166004DD6327A
4C132932C1D7774FF0F44710DE5A99A68929B84A36F693B5D0E220ADE2BFD2C4
5E5868199780117BC919B6E2B271107BC74BACAACD4B065EA19A437E665EA53B
7248976561E8A3C7E0623F8B85955AE8EA2E2E4EA50190F0F04F33CF9CF5E7B2
7BEB467DAFA2F8844D700A7E85CBA8FC013BE01C90A6EA2347E824350E35DCFB
335539365AF295862C38312B2BA7E7E4C930A6C6B4155EA563BBE6BC63ABD803
F92BABA09FBEDBB208611DD7F4A0CF8CBDD866254971BF440829505EC64B7E70
C4998EE3884166B4DD401516370A8BF5ADA7DB18EED3F9F18A641C14F03C059E
4F2395CEE4C7F59DE0EBFB705BA8CB35C06E6B13A5E9C5267215077053225B14
A648DA64571BEB3978008E6BEE7254F14FC6C8F3A3373FD6A1926E2D41C03CE4
A298E5FC79697BA67A610DDBE9DF3CC538273F770ACACFBBBEA4A33F6E462291
D1525E4568D7EA83B6093255F39959C227CF7F5CD07ACA85426D9863F0BFF023
B3ECB440D2CCD1B5EA561D31E0FFD7FDC4BAE2876D601A7CB8CB72EBE3A6E96C
6D3492EA105439801B33BB33FA468F303E08F1A55CBBBE975259D32BC026C61C
0E0E9BAD878B2E827F5EEE00FCFACE24CF7633C84B3984B2C737CA18FF640908
355F28C9B6F11CD96950027B4B90A624721557376F0AD1DE5474FA90C553C13F
01A591FD3F6BFC325CD92B00926462208EAADAB2D221CCA9D833408F220E3EA1
A64943C1EE5B130690F1941308E5D354AC0DBCEB1D9BC02BA425D3FDBF13E25F
108FA75A63DD4604459A89CDA1719361377E95123CD08C5D00031FC8CC5CC7B9
DE511D7143C2B2607400C494AF80053EA77BC3425B3B4930FEC53389CC0FD47E
8BD786828251B594E0BB86028C60FE278DCCE90738AA7AB798D933E3FA2433A1
D39377409C55ECCECA8E7610B860F00BC419BD078AC51E4DECE583E5BE3C037F
2D2388E113E040A76D4004BA2FBC7BD95246C71CDC9055EBB9D2342409F64149
9A031D92C542D5B430350B3E158C81BC232CDD83C9990CD74D8E7EAA24AAB915
B9F346E5FBC6D09E8000EAB29320AF70E5644FB7D4CE3AA53A912111D8437B2B
7F4C28D10AF82574519334640C9D4C5F82E96CC477F6A545071D853E7016B78E
A7C16CDB06CC62764678B2E586D4DD3B8551BCFD162D55EB3DEB94B6912A41AC
DF22F929B990D6E4DB516D5A7580E1F8CC42D6CB77B70BB1F133AF4675E0B859
874F20D46962B63E81E0D7BF7402D129E1F9BFB51C5CB5A5D2D837BCD4BAE409
64D1056CCDF69AD646794AB2EB25C0C2B23E0954F171C428FCE5BFD6028D545F
B7D1A14C8504B14A0873E20C3700C0418F487B0F99CCD911B26ADC1E8C900EFB
4081C709776AD89C765BAA6CF7DD2D6C0C10A13D3241AF562F1084F03CA51820
589F72AC7B57C283B933EC59F47F4527DDF5889B79FD6C371FB248FACD0B6937
EE3A0C0B0152040B2ECCE9F94E75ABD1189DC921D6AF22B4EF63978D259CBBD5
2ACD0CF313E751524E8428E7FFF6956577DDAD827BC62E2185073F5F3473E073
CD55345589044DA47E1DC07AA28C614505BADD7C958B91991A5CDACF1B884697
DAFCEA85974BD4B053939A547F7317697AAD71AE50E9B6EA14EBE036BF10B96A
EF72B8A3BACE84565DBC57452F3599AE1482339C101A6D78D0B7E903F0D77717
5AB67138A1B6DFCA012BF388B8805628CC77759F094A27C6F21EDFC0FBA9DA0E
253E4BFDAD3346C0712E4331D3F2E73873A596637DDD9BD366608393B3E58793
6D8C502E978832B93B9DCD251EE65ABEE99C551B124A5FCDC30B0E833AE1839E
9805BDA20FB03470CA6C51AA58089487E4550F954B3203A9D088DE3D220FE854
34E1503154B0277BA3B1EDF466D2827A70DA5013D74E09F1329CB0BBD8C91694
550E5420A6904779C81218CEB70FEEE037439B2CEBF638FFE4A2D02033AE5F08
30EC3A3D5C8D24174629E2C3FDAE46000CBAD460C4A35ACF8147FB423C6B055D
389E1502FADD6AA221413C07A8E7D171ADBA04C46299A4E899D005A0472A4492
5C2A664E998C7F9256C61F88ACDE9817F141CF5A21A73A0142A6B1CCD6F27ED7
1DD00AD8CA11F6C6AFEDC6A6F61A41232B88540221BFBCCA33A47ED97DD6076F
BD2B15F1FF4A2CFB2EC03C5F864047F492C23FFD9FF31FD8AADDBD4CA72032FD
F0278CB5DB739EF36C1489363D1B18E4F808CFD259A0E627BE25EAA04BD40273
8488284C18683F9DF456E66EA2AC3B0EE7F276306FCFEF4DF98C72F04F108B07
2A0D0EBBB4BB7CD63D3C64F362B431A401106F8436C60B159B84FECE7D8448B6
5FEF3816F51CC88970EB5645D559E0B8663A0B87CA8EB00557136FDB331CBB87
BD0D18BCE1BF5E44241E5572BC728CA42DF9C65753FFF4F12A9E27DE19A2493B
5B1ADEED1D5C2B629B9237F96782A6EF15465063661DCBC0D855F8EC23BEA52B
8233435E270563A30FF5344E8FECBC430574FF0EDBA654637291BA5873019056
7C46893E502EF8D65A1A6F7A44F5EC5F50AF2C9A1C771D55172DA1B7461538EF
D35C79D765CEBCD07488CDDE3E912F50F07C676EA15F7FF7AD5C583A2250D7E1
42285227BF08270AA6378CED43CF6FD56CA824E1503C1041ECDC1D33B173F527
FF9D190C92B76E90BFC61922B3ECABA975A19124DB1C41A9BC0423A86D722A14
5632481FC751504350305E7FA4AEEF0B4F45DA4BFD994F35D4C8F1D4B04731C6
D5827418E833E9A773849044D97EE8874C138734F75F4F4854BC16CA5382101B
163AC63C76B7D886884224F387A3924A59F6EFF09C8D68CFF776BD1F43BFF5B9
78EF9119D1E4D27E0ED518720065E37B1A5D25C151315F99A3B02AC23D7D0869
8ECD34F27BED1333F3998BAB39BCA2912A64CBAB06496195DFCCAA9D42DA7AE5
8E1173CDCCAACFDDB1777B78D3C7164A2C3436422A395C36A9690B7954255F97
6FD0C7852C95B17A75E8D0570C8F992CFAB2E36E32ACA3E9BD5EB4A4E0977DD9
FEE182EB6819E913455B574BDE3ACBB1C1CFC733206215F8A0A9BD2569B19364
7674DD904DC18435B2B182DB302E54C9DEC7E137691550BDA903FB7A819DA116
3186E452BAA8C082C2A2A549D9CA8E97196D5040D0799FABA7597E5F16BD9DA4
666742929DE520B67CF5AC1564E374D3E07125FE9F838B159C9BC8A61A2F9ED9
E3F5A3A664596A470700F53274C0BF9A38E2EF300DB5E655D2C1DD4CD0CDCD8E
CC5064FA68D02B7FDBAE3362D05538F0C35B5062CDC4A4EDF8B7860060709133
1C25CD3370F671BBDD0016E55FFAFA9C0424FFF7029EFFB273D8C1D99566913F
2DEBAD0DE724D93BB4616DEC1946E03895B5883E9F91B91E6851C7C7DF474334
177E452EF9B7B896FFD6EAD05D4F63682B7E747DCB0E5F4E1DA326110C359C2D
4DE3E39CD39DAE5D93B290839C40A60956BA8C2D5F0D6CA14E8B4476338F5BD8
020DAD2BD5DA794A61B79E766C0DB8C84E15C5562FC1A5B8FB73A7633A00E1C2
2797EC1670CCB53BC9BE0DFBB31E6E1716B26773CCC48A20719D65F61ED07579
65E6DD9C03849C2FF2F0EE3AB067313A4215298D2AC175E8CFD1D512038023A0
3B9F9D1F1CD07F6E59A796567716FB53C07912B4F168891CDD454A28BD9D5908
1217C1F89C8CCB431990293B88ED9BFB96637AED5E048F11055738BD31654F29
983978E42A843480ED193595948EB7AC5E7137A250346CFF854BDB64A11C8A5D
5817B6F76EFEE856198A4F2AFB58E27DD92B5673B6A497309C4C7A9459B98598
86D8CB566E220A47488D6D078DFBE5B2398E22336245F441C7BF9A0CAAC91451
2D8F6D6720A77DC2295FC8458AF3A3439D06C749580FE604220BE0D9240519C8
AD5B61CEB345906B5EDFF614459811D08BED3E494D7860C4D5E0331717AF5B12
6130604A16042253AF5D32C4669C6167BC67CF2E66F61A14B67BE72AF23B95C7
6710B9E43878240C8E0C25A25FAFFB53C4AD9F50CC2314EBB80532BF837BCA6E
CCE018360D6C185A42A18DAAA11BAB41CFBB28533F4638780AD647C0B95D3483
D0A0AA3484D21D368FA70CBD2709F8B66FD66335CAD7E39960479564A2EA0E94
F6306F9538392F63AE62FD5688EB53C7055DE7383879B346F0822E0702A67524
BD6C6FFA9C79D82DD413878727C904ECDF3187B320E0B4798E606DE426032E52
A4625D1398E6B902C70D8F5DCBF4AA3F827F77DA2A4FC2A19D6924A6224D527C
2475B89854555F6BC335E35A5387113CEB19A5C592357B1CA613F8383C90FC14
9EF426571919612C7F6F9767CB63E725E9C700C310E263BC7790A66C931CFD16
41F2C12C33BD7295173A9D7DDC83F6246E2F2FFC3ABE76B6D55A7224E3C9DD1B
1315BBB88F4D7E7CAA567C0C37590102D00C136B5297D0236BA2E7A4D28FAAC5
730920486A6F33E588EC83A697A8CA2D3187786C04AFFC2046E903B40B32D737
CDA0ED8705B6C483B86E3D16586E72E572F00F2E88B2A7BB8D762BE243CB7049
86E95E63978EC5C9721020DEA017A54C578B6A988F233A950092F346FF08C9BA
9C4488D4989B67BA81BAAE5386B1D30AA70D60EEB9D089712FEE531326E248A8
F15317CABCDF16399A08B6B06DD55EA03A8A464D12ACC5595416935CF49BE26A
A8E4D0C5255DEE89E26DE279834A7C2FF9FC63E5BB9AF6B447AC2540D2CB72C9
9104D82D2295127F1B388AD9BE03A4A655EC576C00CE46F8FCB4F8769563759F
E5F52B5FC4ACA91E2FE9B8EB3EA6F2BDD4873929D31D37C3730A478D083F5480
0A8922E56CB606F8CF70B671BCBD4F63EB63AB8D15E44B38E92E906C138E641B
E7634A4FFFA89681280D6EEF0EA09BBE79990EDD29466BF6077A10B9F13CF15B
B463D9782F909D90FEB99E5E849667EA30563F2CABDC1ACD9D4706449D71F573
0D4C75C587FA2293FC19F8D98B261774E3BE087868932AA6FB1FCEF2468C8F73
7666E20C1D4789C317D9697A3A94C210FD26CB55AC35AAF0B08A974AEF31747A
B7B5DE4A20FC6C0ABAAC07300F359A6738CE36F2D491273F66B3DC0478994D2A
B049367737F05902DC5F9C8D7F105DB4D44E100E2DCC7291E9C72C4685653B4E
DE0E94CE06E726BA22193A636C4C147F1AC3D43A89209B91EF23746B36A15849
56E3E626FEA2A1829B20ECC11BD0FA0C4A21B2DDFCB20025FB7AC63C698086F1
150F5FC06C05F6DDE99789BAC6E2BCEE2F2AF416A1E659D6CBD4B7D465FE5E5C
9301A794B8D82454BFE240DF454C5CD0F2305B049BCC6F28E7F0D56396B5354A
F449ED900EC7E669AA97CD742235ECAC4991CBE3E3FC1A5F8399639C8332B516
328D98FEA424EF66375A20A968EE9B4D1D2979D1C7A1D0472C87DFF6E10EF2B8
506CC5F30F42AAB1CF8DA4A6A312E52DCBA80A356201CEACA72035A20E2C3725
83C26800728877071651D482D9CD48F497DC826417DEE35D440ECCD5AAD5C980
5D895D8A8CDD7858625AC0CB944751CDB31B4E1A6E98CDE1BEE40E7793165A66
984AE3CCB0A6789E4F3792615D8E68C54BBAB9C1D0BF6C922850205392088B2E
842E11B5ABF767C377591BB0B0886633DB0EBE13FD2AE07EF7B784BE4B483F4F
FA01336667E3E172A459CC3DD8BFFC746C17FD5C0631DC67704E7DBC7C124CB8
066306FE5D306CAE305917E082B1F00599D6E9BB3FD3B455EB536C0BA8F34526
BABAF71ED289D613272C6DF9562EA92E35C269938DC3454AF31A95FA59D6F924
1D49EFBD5AB321FAAC15A4B941B8225E153AC79B82906EF63BA5F65BD9812096
18A5633CE1F6B5C00A2832CA86DEA9642C9738B242B1D8532EEC1C6CDEC13B6F
35ECA122B1A12685C82D2B88623E486B4E0132F7414701A3A6C8CD439F2C93B3
5DEF928438B479D0F3EF0E375E8A3A044C1B5F7E46A18364460BF5D7C920A978
5D677D047DACC6699301360F9E9055FA1E0665D93CF8F34F334BBAACC9651FFA
5CAF2908952074E00275579DF557CB4683CBEFE7460350FB4C088097BCCE669C
47C9D60B6D23FADDB8089B5995309812E0C9081F9835A6A9BCAD1767FEBBF933
0A24A39AAF26917F22DBE0E039C7A00B7671E1EF6741CEB4B2A2E2A9661291B9
B4FC62BAE17D7440870F68D80896BEFDC97B5CC369C348FE80DD3BA539BD6B5A
58C76D236ED9A3589593BA4B7EB10BBC1536B0BB070654A5B1F43815355A8F96
818BCDC5B0001E14BBD2385B979B51DBB9BE95E50DE7F0F800FC1F38EEF3DA02
E719072D5B827CE457031BD038514C7637E2F98E861C1372B43851CA580F2B5B
EDF94E37A8EB39CA38014C625D0BFFDE41127C005886416111C891488562E1CA
0D0A5A385A453EEF5565A48918EC09DE4BD8041E30AAE7683C0A83ECADB4FEC6
BFA82AE0AC17980C12D751BEC2B1DC53EEBB2A41E5813020081C82AB051C73BF
1EDEC44E278A7F4D01400C0590A6CB10BDD954D912EFE3A23BEE3EEF7B28B0A6
E3274D2600A07AA04F0B64656846CC62A5088D9663CF3D10AA983A4E9757B5BE
E3BE7748B4EA31E209F0E76944EFC8A11DF0182D484E2951D8AB96754BAAFEA2
2903DC4D8CD2237629C9DC1C0688A85B55CE57CA7554B523F951CE0A846699BC
F93F9D051B7E66CD6AD2B671DDB75917AE8A4FC0C95025B6960BC5B750C2039F
5140941112D5462F796BCBB88B0701C83DB9EBC2F09B1105461E7CA942399EF4
DBCD8A0CA9FA7F0BABE0BD1A30542C2B33DAD725DB6A044B889C799BDF7BA78D
87824199799D41EBB67D851D552B924F969CDF9934DAB0DD525C7A9ADEF6A7A3
9A04F6720318D3DE8E0F1427361FE46B0F8E694A5E1D15770254EE7B54C22A7C
64540D88AB11EE92991FBBDD9BFF9C46E2ED276FACBD31FFCBB0CBBD25BB552C
EFB237C1A4EBEF1B289FFDB1285252E6894639862E8C699AE1F551F5176FB24D
D39F12C29C60E8ADD9D96D5EEE6E74EAB9BEFCB3280EB28A1DCB2D4AC580055E
EDCB93BC5EAE8DAE2CEA1A8EDDD27F2451286B4AD359D4BC348B542F4DBE285F
CA6D677F321BF6FD1A498E2B1BFD34C4426791C9E9F79E960E8C459F8B82CA50
33DF83C51A4359A14404B43605CBFF204D6E1E10ADC60A1CC0C37F85E68C36FB
6C4FE764054B00CC92E728266A1DE63420A015BC9D16D23811A6B0577D4C3DCF
B9E5C38B340B449588DC017EAF4719D073EBE8A9A4BB6CDE1D29B3304B815404
B41254BF6B819C6D2B1C9F6CD2E52D6461C27C755D9FABEECA59FC5231A6E696
4E9ECD94B043955565A1BE5544F231DFB077DBDC7206216A3AD55304725F78D9
CF1D77FF470EDA192C0F8CDEAA6358B94EADF0D6A266537C26C4BC8F1B7176A7
B0B5F2DEF1A783238443C671DFFFEA9CB4A3B131A8D16C29EDC0E95A8701741B
151FB404AAF083B7AB0373F7D0C28A0FEC57263E848B1B78D8277BDD2E9D316F
B5D62E7ECB89BF8485735F28E1ED4C99D2939E7771B1DD1CA12694116B0D6F0C
08F9F486C80081919E199675AD612122FD0D5D54484D48E7D69CEDB28275529D
0B976580411E7B7ECB49C5AC6BBF55A60B5866FFC4BB9A73019A2C92B2AD1619
2794DFB0147B4340F907968C69028F75C589011AD0DD793C5A2068BE18F33875
81B1C80875377BCEEC61547F9F815F0F26FA2C5504853DF216A0D8D0709EDAE8
ECC3C3F424CF02C616A2EFCA13F00481AEEAFB7F8644983872365AEC4EF140C5
6A7E6994E410D42A2265FCFE3CD19716EA10F532099A64AC49A3C48F0C0431BD
B4E06E1988D30B77B0CBA5B897164C3D56A0FDD66CE042885BA8DDB244C1DDA9
A9793505ED0F0EE99A78391980EB2CA0828C56DD38E25C02EACB0C3E6F1A9864
D45426F2119B7372FBEAB15F5DB32FE1635AE0A3C17C821AFFD4047BC3147310
8E45F3267CDD117FA8090EE56330502C294DE76165174F2A9C64B22F44636F17
429FA80959392DB9CD0398C35E56F07F0650F94223D4EC9D5F50FD125C5874F7
14B0DED88E90FDFE976BA027B723CB91AE68A887F6E971A1E8120FB303D9A305
3D2F6D7B66CAE1B5FD80496C27125C79B067492DA642C1EF81D9CD3C67675552
8A3533E8CFA15CA26AFF3A56AE8A22C8B0E9551CB7A461A3B5746CCE8AE6A824
8203EBC84AED876E6F63F897684031AEDFB494E6453B55D8710277976399F3AC
CF715E63468CB8B11D61C8DC9FD2B8CEE84F69B133A6AB7F078AEBFBE7C51F4B
0A57ECF987BA62492E3A1D12E610F6C9E6C9298F3DF2041457EDB4EBE36AF915
B560B5EBCD64AF081E0C483D7F11584EED09CD35F172BA03D0CA6E71F3AB5899
9EAED87D9773BC5E677DD36B33BD3E063F75C57342386892092FDD82641F0519
86877E4385C5E7E99BA977AD5B108A1E53B5906D041F25266DAFE35A96FA3215
DA3A1519D2A0B4ED540E4B094EF37BC3339FB63AF43BEBB437E8E5843DA6DD24
853312E7B9939329E2537914886C7A670AD74EB2E029DCE5D2BA848AEFD493A1
4CF4711A067E9E668CCD5937FB915F2627AFA562A52FE55497D2DB50F915CF03
3385C41D5E0E40E0B9A37346E8FF003132928F91019DAC21E635D8A7FFCDA4C0
5B09F970D20EB920B4939D4B9B8F6C9E68E4E719601392464217B0186E12B930
43651C650A0EADC58BEC3C8C6EB690BA2D0D14503B39993737BE0E6DD4DE610D
A663EDF42ECCE3CA4E2D249AC97478CAEF6ACBB028B8F206C4868DCE06FEB594
B263138E1E1850DA98153D2AA304CFE108C4F3E653621D329E49127F5F1A08BC
6040842D63C62E80A8A7DBC0A47ECE30C3248F75EB84780EAEE367E0442A7494
656A2B80F6C050E13EA4209EAEC17F78ACC7B656AC7F504C823A60782844DAAE
63CA50564022ACC58A68F9B87A9580B22876B4DA74B0A016E5A6C264207CF8FF
99F6EB6AB5A494701A5A4EE95A4000F8F4F6193EE921FB507E6728240F8B1D0C
319A46688F64E0285BCB09BB63A4D1272749A1DE02BA10FBAFF06163658B29F7
2EB24176C9184F8DA9C5E05365392B6D0941E67376946690E31A15226D31C3E8
4474C1A88D08A60D9BFDF85DE8F0EAD7629DD18933BA1D864771900481CDBA17
17B44F5827C8A32575934D385554B7BF681A360E436DDA4A664CB8E829BE3AED
A0A68DB70A53DB72493D6BBC9280471246A63E7C62537769856629702C573352
A76FDEB53CF09F1C8F4445AA6C877F16943C6E16A948253DBC8FB030C0F10EB3
713C287508688C2DA574871E109DB5FAE4B53033066A1F98CF4441D9FF18D9C5
6F7C45265A68D76F7427F9813183DC23E00484C793159A4BD8DB72178B53AB65
182D54274F1944B44F472C111AC9D393C3C5B14835737C419AD4E8023394B796
2F88D81943ED45F0C566265584EA986747BEB5B966874BD73390DCD5B45022C2
1226D53A6918CD4165D8CA3E5FC003D7BFABB2C7042C2EE2907A4F67CB1609A7
9263C40422227FAD9C4C37FE51549B2FE9F104D2070348602B8AC2C6FE461085
47E082D31AA9BEEE78D2A90D24CD29D18419C78C2CA5031ADE35C2E6BBCE3B73
DA65A740978C7EF757EE3E1345C0B29C55D55B9ACE86F982EBC388DBE2988C00
C409F67A8CB00F446D25ECD21B236424453AAADAE34B0421822632DFB732A740
67AB438C7203ECC022C0120A16DD84FD33E56F2F3732CEA7240C30C602488CBF
10A2E598A76D82C9A1BAEBCF7F9B68DC2153757B639148E31B5690E6ABDF8B74
6D4AB9E4CE25CB86FC28A0D2F3D084AE1B3E8675EE641B77C2FE385C36E2C5B7
BF6334AE369885F99C25B80FCB8C28AB49641E6CF7ED7DF68A0E7139AB929E54
C97F4EDA2BB78E3E1A16626EBE12124FDFD31DC1E336BD6FC65597DB9B12C600
5B9D3C375BC0FFD7B372DA0C9A2A32E8F4AED1B92C0BF9A82DE04EA32ABA3D35
9AACE46BD5AB820C5811E0C529BB14FFE9E247D29588B5AB84F74FE3EDF6E48B
9AB6B9522D684D74D1A15ADBDC51BC68EFAB9881D8AA6E489A5B2C1DEFBE3725
FF70FC7A3CBC3367DABC8F8E86E7ED3B5533274C821CECB8B338B3E8634AEA50
366D644CFA9EF3601598018B676F0E037CF9F0C7605D070C828C5ED31D6498E4
84B9919C7495E917B288940D4933B6AA4CCBAE94FEB4C68AB1E7177F94AE4D69
97A19F67F7F0DD27F190B06EC053D712A35897E4671CB0AC98F32BB3D72CE493
015FA5EDA1387100AB891AA9F608A676020F76C2956D2694CAB38D1146E96C97
441E47F280A931F7977848C2CFDFC77C8DB5AD64FD21504300C5EBE49A49661D
2C00FBF3739231B5987E90268D173BF1E48A1B4468EF8B351E58812ECB9DBB80
AB1CE1D1247F4BE8EA33D99A4E9DCFF96E810F97D5317B41CFD1355A990EC943
3AE4A9080A7026E8322378369EFBCE2E543520C013A368FCDB3450478CB10CE0
51D26A0C59CD21A7157A426FBDC56D12B0582DDF3E221806D7B48262A8E6EE2E
EEE736CB10EFABDB3265849E3D93B2602A890FC5A340B205B03A9A7333DB8843
873935EA60A88581F21DB4F040F706C9782472D7EBB48201897A622A42E25E75
EFF87ABF77C67AEDF0067B5D447B23622379DE103464A4A0586058D692C78771
69BB375C1AC88D8ED6C35400D6BD0A946CD26C271064618C244A27BA3EE5EB69
F69BA58B6AF1F29CD7B63ECA0317929AECDB3EDD7D8614026A6237D58A62B766
A79051647CFF73C53DAB1345E7BA34C9B41302558B510C0C22CD5621CC1D691E
2D29331D9968FC0D479B26712B73E88FA8DDC551BB615F14C511C7ED5F7B37FD
80CE8306133763A31172C8495A028DC36AAF162BB34333C807DDC7F0A4605E9C
B7FC9AE91972F446B1ACCC064A7F5C6D70D2A2302713A2471AB61BDDCDE3C467
D111342F692C47527657D199CDC8B4D059AB61487E99C47D1DC5F579BA7BFDEC
471CA920C1F9CBE45876DDBC0DDDECA8A52394EC02B7DC8144F2E9812E57F4F2
D842D72B0D90C0630A952CF06D0FFC6138CFF4CFD3C41F2F50E19CCC297D02CB
F73271E72A378B6A4238891CD897C79F4FF6C382ADA01BAA73606B23CEE5D632
58DF1865E6B0414C4ED10989CBFB8EC97D715D8547404A0251D2B53C7A06465F
4394C81FD692FBC23D95894A68EC455EA8D0B88AC129EEFFA622421329383A21
6191BFECB1E11E22BE19479FD0506C16759781BF9FE9ED826DADA49721395CC2
987D4F4F13362D7ADDC3D3BC7F1CFC013FC43746042B3FE900A7DEAD963F27AE
BA2C0A958D3DB889C98FC44AC55C1EF9B4DD28B065C22E160EB74339C799EA83
D3BD157EFCDA78AB7D64C1490A505250F80547C0B1BD98D8D3CADAF119EB95FB
1402ADA7B66CC8C17CC5C20E75F7F38A6D94C6012C762DAF07B534B75E7AEF02
FC4EB7669BE3D225D610B06E909ACA428E1F6EBFFAFE33CBFAC5E6B4A812BD40
B5E72F5BE5C821B6CB92610B1794169AF2C8AB2536A447F62712B23A1B8A7CBD
7381DD71F0378DCCF6AFCD0020FFD3FBE4EC8FA718D977F90CE951D7112C867D
B50C6489E07458583101DBE8738E03872DB469B401C46818260BA77B28C27488
F03795420D0C0FB8CD9A2B92B00BCC6ED70454EE68DC7A3400604B560A58EA24
6F127EA088A7BFBB017B9BC1652F1028141505DC06C11E2F537E8016BA4C0A51
266453FDD2405CDDEDF6081B4A5D1496B906E3EBE22A900DD9D9C621DAA3FF4F
4564D288AB55BDFEAACD1CE8DBF69138A2087B61FD69FD050354E9ED0796BB2E
74215D05298EF1CF9500A2C241BE2B06713CE5644EAD1887289F18689C062018
8B57D88F217D5C46F7E0BDF89A325D955346B1B24094DCC9278467CE4BBFBEF8
870F3BA33AE2F73011948AF3AF50A7940DFF8BB01B2C6F47309C874EBD0ED83B
45B63E83C8512C9A0A1870F543CD47E14C12CED32814C3361D920DF478A7BD6C
AB5EA2E61D0E0041B34736A0B6259B0F5CECB772B417773A6FF8D43B6FFC7B5C
354EB8D1A89516E1739B2A8C9DD5F9C2EABAEC6DB49D4228DDDDCFF3AA588E28
9D4A774DC4272D50C21E4320B5047E967651FEA3FC310DBCD763C457B9C6DBB0
420F021D4408C37E26F463FD66F6471296064F27AD82AA8BDA39E53A443F3C43
870FE0906B84527903848E21F239C5F10D8824270A111763DE4CD4BAD0A51732
02970BA498E9F3B22532C6EBE692427B1D68FDCBFE8AD68C41E833C4D6C05558
AD9B08649BBDC88C2EE1D9742553C25356D5F3AB50495E94E2E246CA36465595
57F0F1557FC732934270702F22E14FA714BCEB9D1A3A2268162C6871729A868B
A78349B8017818422E6F172BF653C99014DDDA6A873BD0394979035DA7CCE3F7
EB009223C277E6B0E3E71CBD4239EEA0D6119770D68DF141B534B921D2B652E2
B75E995727A3C0BA1764467159EFA397FBFECE00A8030902920B7C591E00FCA2
6BBB9B36EF68DA38385BD4CCD187DCD0654027AB026CCD1B21B70D768E34B77E
FF55063D86AB48BC5B5882F1C662A023D75D6271ED7A5FE86494A4CDF2DF88C5
18558C496994773BF018982BED3BE70A977967DE16A5BA04858F5275EC62EFB9
EFA4ABDEAC2C35C140CA39ACA2155EBB3D174D63750662D889988A41D1134BFF
FE80E81161D96DF0043BC0D394C81FD692FBC23D92766919FABEC590EB99CB87
E972D419F6F85744FD849E6F85F318152DE8B646F89F451D6469A5F8B8512EC2
4DE2FF386542FCD0C1880AD2B4DF00B93E84D426A4ED3976CC7CBCCB3AAF5BA7
4B00F105CC68176F2C19452B57361A7B9A6487FC11857108492C90A5EB7235F7
56077541F67D09807CA1FCB3F102FB8FE66FF81421EB62646649847E7FE2AEC6
47E477516771F270494DC73D3F5598FE199B980FF0CD0DD7C1D4E6BA0277E6A6
6024E93DCFA5FAA0C7BF44EB0AB637072C1386781A3F1B673D7A787A742D7A1F
9D7A6644A0C8B129D6E01187677B56310351464EA1BB57BB49B49E3F655157F1
35D1D77E7850F21830FEEDA2AF3CAE7159C21DC25A77E2058D9F415CA11C04EA
286BDE84468B0EC8AAC37C4C5F9EDC83DCB9C92AEE47826EAD80C797E35D732C
35CD8AE52EA21A86DFE5B7E6EFDA4CC9A55FFA267E4EDA44CA26FED678D32F2E
7E803F0BBEC10B246F448F7789DE43E24D4123A1F7DB12531D57F0A3A49B6088
97007C15A5D63E58F62713AB8386B393D4732BFCA6D4EFECAE02DAD98F60A9C8
BCAAB4D44A39687E8BE6075A0874580112CCEE24A09D94F8E02C568DD99C1E52
2D2CCC88B9215EC86D22CC3A3EB86603D3980A14E8ACEB52D2299FEDB3E55C7F
5414476DC0F9D84788D0D2397865257D082C60D53748C98F213F191777573084
9DF604C1605FE89BFBD7C3FCD9C99307E7D2EDDB612A8134ADB0EB49F3D6A754
9C59237131BC2DCA8773758D8D9C2872A401DB454BCF258EFECCF5F8F3B70574
EEE16E4FCD64B189E2902E99E004E0222D6042D8470CF5CD9E53F0FF2F9C9097
E1D5BFD089834F8DF49A8A614F437CED0AF62D11AB45A7BFB25853ABA69A20A1
F7DE9D573EB051F2C1015F97437C46C37BDF9BE95ACCD3BBD4E588DC3E8FEE0B
4BAC6FE09ACB88D1A1788CD58912F623892A76D3E3BF1DD4EBE817F5D92A0250
3ED79472071BC144A75C3D6741C894BF3C3E88307AB6C0A757C9F2FB0EF98641
5EE5AB0A16643A8DF1DDEEC5170FC5AA95B6DAF079BACEC494A3A3E76038A8A2
AD0E7AF312582E9024DF80A5BDCEF599B12DECCA2D785E1DFFE4D9113F427B47
DCF76724FC76989203C3B42BC1541BC7F126F5CD890470AA5241BA863D8895B0
57E4A1D53679CEFE6316DD82F042FFA329A98D4ECF53D08212FCBC9181BBB102
3EE030171FC17E0756D67BDFE7DE78FCD63100D525A93099A987EA3EA722336A
AD4CDFA6045923AB9B445F3D2024DCF12024FA0F5BB3C1D4963D45A7BAE855BA
6A32B2EE0DCCA899821B38A2837E1D295D9672EFD0CFA6611D10B92C5A6E0F70
FD21FB131D87EFEB1227B67655CA63B821FE30F1FBF61F913902A0630A793239
D4A08627D55061CA1ED32A05EBF297C92AF3ACD16EE2E919BBF6C78F81177C83
BD90338BDA9154F8404A4DB344AEE3FB4A401FEC2DD30BCBA452568F30742CA7
08D36EB5AE41BB11FE31337A78B0066BE6298A66633CD5B2E32861F66837619A
9FDDD58BED83480F86AEA050F9273CCAA870A19387DC56C8848D78C553FCC3FE
B766DFB39FA92FB469E11C88EA74D34E42629D2ACB900F32F06BE55397C2CE80
3978B07DB060E7FAA3F598EC43CD2147F424086A4F3738881329F8E516AF448E
04C52AEA830733F4429B47E71C7290AE21A08E4B09B9A3250B0A3833B18EDFE1
D74E6A7F4FFE50C9A44DD108A9C3B9F2EBDF2E59B19CFD45DE6E934A2B73268D
57ABE48ACE0C0D43F84BEEE35760E5FCCCB40EAB5AD8D066DE3E0F2AE9D4603B
00E4BD06C1AF321F40E40B0AF03578105FC8F358D51E771B67BBD3BC57885419
9410C6C85D91455C61B76D193AD0B7E6CB21AB575C6B1B66F9A7883E99378DDB
8DF3B9EAE1D8B911AAAA3B641FCE2C81147A8049455B4BC6505535FD398D9726
AE93A06DE5534638CF4E71E813338A889BAEF6EB9D461BCCB1797B252E7CBCF3
CA9DCF335B09503C2DB9E08993197CAEA9080AA7076D3654E020E5CC6BD0714F
88A5580560D1C7C9877C4C4CA54589EABA7C71AFA82D8BD0BAE4F1F55E7ED03D
F726103909F1E2857A496C9202EC49FE7EC6CE0AE3E573CEBC565EC971CDC6D8
AFD7CE9EDBB41CE9C1BC2FB0F7A38ECB6066FBB549D5CF081685A278F5D162EB
CA6B6A3C781C3E57206D6A3AC7CE3A568DCBE328E4A4890B9606431AF0C8B635
FCD7FE7AB40FFE1942BC22E16F83DBC1B4AB75B13C224C4F781AF3FE07B3BCAA
34B6623D72AD10C63AC034EE46BAA274A10B59DC1111E7AC05FD32BCE641F028
6BBA2CEEA9123BE8033FD8936A6F84ABB03C806BDA83195B7CF6BEA733AA8FAE
44B9A72E0C2D6B2173E87DF2869126E1E8839E810EDC7E5ED8F3EA1C2A92461D
574F1DA8549C4B0905905519903A7805C53F841B8E3C4438C6B10731E110BEAC
793B4917A2139827BF6531D6B667021CCC35A737A6AFC9FD7851500C0F251A5B
5A19272A01AA3EC36FFFC31633CD3941558D7C7E833573562821B2BA61AA03F5
1D0912A96B4C6FC7C7FEA29E585202271A2A95F6B4D53FF1C0301A8EBB01E91D
6ACBA87FCEA671D91E643CB90D61E80461C418534D4815589F7840BF52D88DCE
704DED85C43E2EBA85BE060FF8989A4DEC264A5D472858D69CAC3121D6493B5F
025875DD3AC5F0EE7E005B47E0A9DB4A8BE9E86B897D5D60255C6835E2DC09C9
FE3F6FE7E11DE00E0F6AA8AF49EE5473DB6855BCEF2C83DE4F692AF684CECB16
92D785E60E91B9CE76EEFF776BB9C59F092FD9FE1942CED0F45EE580B96B545D
8732F9139FF25E27B0B4F22F4570B44EA98CFF1E19F45F0CA802D27A6937171C
A544EE6F21F759E9D6E6FBE4B317C19115AF7AED389C373A27E7831A39D5DA3D
1579DC39DB852EE3B82C2DDB07B316377A75A9D46BED6EAB5128858A99C51245
2654417D0817267CB250FF096DF557EECD9F6A0F6466A06DBA95DA28BAE0521D
A1E17048A38CD9F172567EE66A4345C3AAA47EE94C96612C160A5BA653C94782
51E1130557E8E4EFFA533BF8AAC855D74446C6A03F0D97A992F03C54C6C5FD5E
0C9E06C4B2B57315E720A5E35D1E886BD710D67EFB57968DDDF22854A755C029
E76A7E22872B70D3DDE9B7227FE6F2CE141917D202EF7F655163F13E3F492F15
DF18C45E6694D18D43D3C378B3386166D72CB462C347DEF84ABE8E5EA60DF86C
E019BCED43EAE5FA4C50B7C6A47600D55EC51E14358248E2E9C0B41DAEB56254
43352D1E70BBAC7EF2E3DE2FEFEAD6FBE77B88EDB41342DFB7E8B71C47FC09CD
7823AE283DD892A7C814D3CF803D9089480A8A81E298111AF5E4038C790FF6D0
D22DAA8C2F7AE847861B5B0089B549309F0CA9F6FEA24CE40D04DB4437BFFAFC
4413FDDC82DCAF4AFE0B22CA7477F325272F561CCD904A27B99AFA8D60EB09C5
CE9FBE970C22E6F7CF6C88B559A79FBEC44E6A45E7D7AD34FBBEA29487380349
019FDD1B525042844EF0688AB0183B4EBF5ABBD98ED4129955C4810E67F75B6A
FC5D0F5AF0C8F80046897379C452AB7DBD0239CC55B07DBB46C719570B81B3D2
DE01043D10FCB50F1D68A942CE900AFE0BBBACE65DF87E20F76084E527A38737
CB569533A08C54818579D44777B0DAB171259D1358A428C44C4DCCEAE4BAB07F
3F05F0E14DFEEE6BF2ED773AD341F76C83679293B918C5F1C02C11C2DFC29369
E1267A07006E67735D5713D7427E98E27A8784EAF16BB325B2658DE410B43F61
9C6A5F6A389AECD49D745326D7B0DFE2422F69B49898E82BB7C8B573E93D4356
D134C2161166C2C86E32FA2266C80597D6DA6E2D8BB709B3EE48B9A5B0EF8889
2E31EA94D3D1C435ABCC0746D64FFF80CD1A173ECF3049344A0349777C69028B
44F04C1D95300B4CB64AA7715489E267AD1CF06D957FAE7185A3FBA231DE2AA1
1C7DE4406E95E2BCA210F82CC7BD5270B22CB17347E6B101CEC95E2E15D9395F
84FCF9A2AFB697C42339686B12D189F8733A393769AC1942BDDD6BB651AEAFFA
40D0B3F21939F5B9E9C4D9C6EC09BEE1DEA4C6A6990F47BE44B10B988817C89D
B0B012648D05E82B29D4C9B053AA825E42EAD92B94FC167ABC9F4251AC164CBE
B753F400D2FBFDB05C5BBFE0420989B4E36243672F83B982348F3FA2C68A1DC1
F65D46E800FF0995B36E3545F6D5C4CDD70D73AD9CF42F409642DC5B408B7703
1C7AB987D3BD1B7C0698706664D1BFDAF87F51CA9AD7B7A97A2A7FF9B6CD3A36
03966BCD1CE8A250C1EFD7CC363B18AC71A002861C50899E46226471DB8B1A58
4DFDA8F3847423427097C35981A847AED988C5AFC959B2B10369C3BA707954F3
ABDB19147A19491B4E7FFA4622B8CF788C8A87722FEC0CA3C4C9E0F8812081BD
A170E274E8F756EF0B56D1E54C4057F887A0597040225F6F0E5C4A0EB6D43E74
8E6D58D1ABDF2D63A774D3AC9966540BF75A518F3B7AFFBE376FA87784DEC45B
FFFB0C39FEC9E47474D4AF047D7D0184A37992795A4036F3E0D1A7A3C07F5517
9D062FB9392D11AB8F835FA9C346EAA0A8DD8CEBE077D4742A21C2BCE91F21D0
948EA04322FDAEA4C112BD8AABB3265EC9C3E4F4FB83A61A27525C9393D68ABA
0A5A829E2CA36F0CEBCBEC437309EB9D9C9587DAC2DA2A0B927B0F2486BDEB66
F46B8011926C95B38EAC614F03BA18358C0C554000BFFDF4177ABA5033134765
A978E0268840F5CE66E326F559C1E8473F2F04EF24E50E95ED7F2F7EC01673A7
3C6386B61E88E45509D8F0FC054893645BC31C4759A0FDAEA4C4F7D53F8274F8
73C033CA930B94D19F6302BDF17E08E3AD0522A3FCE2ED4E3FE9561DDB408605
9A2F8C384A6F53A2BCF7D38B05C006FEB18645CDFF17B7CE0B73A1C010BE8061
0B6EF7C995621A60AD748629863B1AF230E38921A88BC1CE14A485F931AFFFC4
F1D6201961E802B27BF2E6381F355D8CD64AE0BEEFE1CA20DAB0103FA746DB9C
6B2539658252ECDCA2E9F96F4F9F5C6E261A47335B356C4C35D445BC4AC3C343
65B678A291E620E7916D12428095C19F2942341C294435397485C1ACCD00F8D0
B34FE22DD96CE2027C1D
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
TeXDict begin 52099151 39074365 2000 8000 8000 (build/sample.dvi)
@start /Fa 245[3677 7[3965 2[{}2 5508.23 /CMR17 rf /Fb
135[1634 7[1790 1825 1[2689 807 6[1718 31[1660 69[{
 AutoEnc_sjpjw4ssg32e5kzaeiwtqme4ud ReEncodeFont }7 3825.65
/UniversalisADFStd-Cond rf /Fc 205[1107 1[1107 48[{}2
2213.92 /CMR10 rf /Fd 24[1543 3[1785 115[1801 1744 4[794
3[1718 32[2120 13[1929 1757 1734 5[787 18[1795 27[{
 AutoEnc_sjpjw4ssg32e5kzaeiwtqme4ud ReEncodeFont }12
3188.04 /UniversalisADFStd-Bold rf /Fe 176[4385 79[{}1
5508.23 /CMSY10 rf /Ff 144[2738 5[1327 2671 2727 36[2820
20[1999 45[{ AutoEnc_sjpjw4ssg32e5kzaeiwtqme4ud ReEncodeFont }6
5508.23 /UniversalisADFStd-BoldCondIt rf /Fg 139[1127
3[1567 1501 1863 2730 5[1495 1539 1447 1[1343 14[1830
4[2386 16[2428 2[867 867 58[{}14 3188.04 /CMMI12 rf /Fh
144[1561 2[867 4[1561 41[2428 4[1561 2[1561 1[1561 1561
1561 1561 4[2428 1[1214 1214 29[2254 7[2428 2[{}15 3188.04
/CMR12 rf /Fi 145[2684 110[{}1 4591.67 /CMMI12 rf /Fj
22[2314 1[2034 3[2415 2415 105[2218 1[2213 2342 1198
1887 1671 2415 2424 2470 2374 3687 983 2[983 2374 2415
1299 2314 2415 2034 2424 2415 11[2737 7[3545 13[1896
16[1001 1648 983 16[2424 9[1791 1805 16[{
 AutoEnc_sjpjw4ssg32e5kzaeiwtqme4ud ReEncodeFont }34
4591.67 /UniversalisADFStd-Regular rf /Fk 22[2314 112[2218
2[2342 1198 1887 1671 2415 2424 2470 2374 3687 983 2[983
2374 2415 1[2314 2415 2034 2424 2415 19[3545 7[2259 5[1896
16[1001 18[2424 27[{ AutoEnc_sjpjw4ssg32e5kzaeiwtqme4ud ReEncodeFont }
25 4591.67 /UniversalisADFStd-Italic rf /Fl 12[2594 8[2475
2[2222 3[2571 110[1373 2071 3[2594 2512 4[1143 3[2475
2576 2167 1[2571 18[2888 8[2452 3053 2718 1[2792 13[2622
2539 1602 2[1134 18[2585 27[{
 AutoEnc_sjpjw4ssg32e5kzaeiwtqme4ud ReEncodeFont }23
4591.67 /UniversalisADFStd-Bold rf /Fm 12[1715 9[1607
111[1725 3[1626 832 1310 1160 1[1683 1715 1648 2560 682
2[682 1648 1677 902 1607 1677 1412 1683 1677 12[1655
3[1569 1[1919 1[1451 2[685 1[1996 3[1808 1[1824 6[692
12[1145 45[{ AutoEnc_sjpjw4ssg32e5kzaeiwtqme4ud ReEncodeFont }31
3188.04 /UniversalisADFStd-Italic rf /Fn 176[2538 22[1771
5[2125 16[3188 11[2480 2480 20[{}6 3188.04 /CMSY10 rf
/Fo 10[1715 1[1715 9[1607 1[1412 3[1677 1[1677 102[1400
1725 1540 2225 1537 1626 832 1310 1160 1677 1683 1715
1648 2560 682 1559 682 682 1648 1677 902 1607 1677 1412
1683 1677 3[854 1[858 1[1674 1[2487 2[1655 3[1569 2388
1919 2461 2[889 685 1932 1996 1415 1569 2002 1808 1[1824
6[692 1811 1[1482 3[1715 1620 1014 1865 1[695 1145 682
16[1683 9[1243 1253 16[{
 AutoEnc_sjpjw4ssg32e5kzaeiwtqme4ud ReEncodeFont }63
3188.04 /UniversalisADFStd-Regular rf /Fp 145[1685 110[{}1
2213.92 /Dingbats rf /Fq 198[755 760 618 753 676 723
715 675 422 777 48[{ AutoEnc_sjpjw4ssg32e5kzaeiwtqme4ud ReEncodeFont }
10 1328.35 /UniversalisADFStd-Regular rf /Fr 139[646
972 3[1267 7[1243 1[1193 1246 2[1246 40[1371 1[1350 3[1219
802 1400 48[{ AutoEnc_sjpjw4ssg32e5kzaeiwtqme4ud ReEncodeFont }12
2656.7 /UniversalisADFStd-Cond rf /Fs 134[1618 3[1618
2[1618 2[1618 1[1618 1618 2[1618 5[1618 1[1618 32[1618
17[1618 46[{ T1Encoding ReEncodeFont }11 3188.04 /SFTT1440
rf /Ft 141[1030 2[1521 2[673 2[673 1[1492 829 1431 2[1492
17[1384 1[1699 9[1766 21[657 46[{
 AutoEnc_sjpjw4ssg32e5kzaeiwtqme4ud ReEncodeFont }12
3188.04 /UniversalisADFStd-Cond rf /Fu 12[1320 11[1103
3[1312 110[720 1060 3[1320 1288 4[640 5[1103 1[1312 18[1493
12[1395 65[{ AutoEnc_sjpjw4ssg32e5kzaeiwtqme4ud ReEncodeFont }12
2656.7 /UniversalisADFStd-BoldCond rf /Fv 5[2644 4[2738
1[2738 8[2611 2[2286 3[2721 106[2528 1[2446 2644 1493
2198 1939 1[2732 2738 2671 4065 1322 2[1327 1[2727 1[2611
2721 2286 2732 2721 12[2694 4[3729 3096 4[1355 3[2594
1[2837 2820 2892 37[2732 27[{
 AutoEnc_sjpjw4ssg32e5kzaeiwtqme4ud ReEncodeFont }33
5508.23 /UniversalisADFStd-BoldCond rf end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 8000dpi
TeXDict begin
%%BeginPaperSize: Screen
/setpagedevice where
{ pop << /PageSize [594 792] >> setpagedevice }
if
%%EndPaperSize
 @landscape end
%%EndSetup
%%Page: 1 1
TeXDict begin @landscape 1 0 bop 8000 4901 a
SDict begin [/Producer (dvips + Distiller)/Title ()/Subject ()/Creator
(LaTeX with powerdot class)/Author ()/Keywords () /DOCINFO pdfmark
end
 8000 4901
a 8000 4901 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 8000 4901 a 0 TeXcolorgray Black 0 TeXcolorgray
-8000 54901 a
 /pssetRGBcolor /setrgbcolor load def /pssetCMYKcolor /setcmykcolor
load def /pssetGraycolor /setgray load def
 -8000 54901 a -8000 54901 a
tx@Dict begin  gsave STV CP T /ps@rot 0 def grestore  end
 -8000 54901
a -8000 54901 a
tx@Dict begin  gsave STV CP T /ps@refangle 0.  def grestore  end
 -8000 54901 a -8000 54901 a
SDict begin [/PageMode /UseNone/Page 1/View [/Fit] /DOCVIEW pdfmark
end
 -8000 54901
a -8000 54901 a
SDict begin [/CropBox [0 0 594 842] /PAGES pdfmark end
 -8000 54901 a -8000 54901 a
SDict begin [ {Catalog}<<>> /PUT pdfmark end
 -8000 54901
a -8000 54901 a
SDict begin H.S end
 -8000 54901 a -8000 54901 a
SDict begin 17 H.A end
 -8000 54901
a -8000 54901 a
SDict begin [/View [/XYZ H.V]/Dest (Doc-Start) cvn /DEST pdfmark end
 -8000 54901 a -8000 54901 a
SDict begin [/Count 0/Dest (slide.2) cvn/View [/XYZ null null null]/Title
(Introdu\347\343o) /OUT pdfmark end
 -8000 54901
a -8000 54901 a
SDict begin [/Count 0/Dest (slide.3) cvn/View [/XYZ null null null]/Title
(Conte\372do) /OUT pdfmark end
 -8000 54901 a -8000 54901 a
SDict begin [/Count 4/Dest (slide.4) cvn/View [/XYZ null null null]/Title
(Conceito de Efici\352ncia) /OUT pdfmark end
 -8000 54901
a -8000 54901 a
SDict begin [/Count 0/Dest (slide.5) cvn/View [/XYZ null null null]/Title
(Complexidade) /OUT pdfmark end
 -8000 54901 a -8000 54901 a
SDict begin [/Count 0/Dest (slide.6) cvn/View [/XYZ null null null]/Title
(Efici\352ncia I) /OUT pdfmark end
 -8000 54901
a -8000 54901 a
SDict begin [/Count 0/Dest (slide.7) cvn/View [/XYZ null null null]/Title
(Efici\352ncia II) /OUT pdfmark end
 -8000 54901 a -8000 54901 a
SDict begin [/Count 0/Dest (slide.8) cvn/View [/XYZ null null null]/Title
(Efici\352ncia III) /OUT pdfmark end
 -8000 54901
a -8000 54901 a
SDict begin [/Count 8/Dest (slide.9) cvn/View [/XYZ null null null]/Title
(Nota\347\343o Assint\363tica) /OUT pdfmark end
 -8000 54901 a -8000 54901 a
SDict begin [/Count 0/Dest (slide.10) cvn/View [/XYZ null null null]/Title
(Big-oh O) /OUT pdfmark end
 -8000 54901
a -8000 54901 a
SDict begin [/Count 0/Dest (slide.11) cvn/View [/XYZ null null null]/Title
(Big-oh O) /OUT pdfmark end
 -8000 54901 a -8000 54901 a
SDict begin [/Count 0/Dest (slide.12) cvn/View [/XYZ null null null]/Title
() /OUT pdfmark end
 -8000 54901
a -8000 54901 a
SDict begin [/Count 0/Dest (slide.13) cvn/View [/XYZ null null null]/Title
() /OUT pdfmark end
 -8000 54901 a -8000 54901 a
SDict begin [/Count 0/Dest (slide.14) cvn/View [/XYZ null null null]/Title
() /OUT pdfmark end
 -8000 54901
a -8000 54901 a
SDict begin [/Count 0/Dest (slide.15) cvn/View [/XYZ null null null]/Title
() /OUT pdfmark end
 -8000 54901 a -8000 54901 a
SDict begin [/Count 0/Dest (slide.16) cvn/View [/XYZ null null null]/Title
(Observa\347\365es) /OUT pdfmark end
 -8000 54901
a -8000 54901 a
SDict begin [/Count 0/Dest (slide.17) cvn/View [/XYZ null null null]/Title
(Bibliografia consultada) /OUT pdfmark end
 -8000 54901 a -8000 54901 a
tx@Dict begin tx@ovlDict begin InitOL /TheOL (0) def end end
 -8000 54901
a -8000 54901 a
tx@Dict begin tx@ovlDict begin (0) BOL end end
 -8000 54901 a 3099 x @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.0 SLW 0.12158 0.21176 0.33725  setrgbcolor   0. true 0.0 0.0 397.48499
298.11374 .5 Frame  gsave 0.12158 0.21176 0.33725  setrgbcolor  1.
.setopacityalpha  fill  grestore end


@endspecial -8000 58000 a
tx@Dict begin { 198.7425 14.90659 } PutCoor PutBegin  end
 -8000 58000 a 0 TeXcolorgray
-5377 w @beginspecial 340 @llx 278 @lly 461 @urx 321
@ury 484 @rwi @clip @setspecial
%%BeginDocument: license.ps
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 8.0
%%AI8_CreatorVersion: 13.0.1
%%For: (Alex Roberts) ()
%%Title: (by-nc-sa.eps)
%%CreationDate: 3/27/08 4:26 PM
%%BoundingBox: 340 278 461 321
%%HiResBoundingBox: 340.5 278.5 460.5 320.5
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%DocumentSuppliedResources: procset Adobe_level2_AI5 1.2 0
%%+ procset Adobe_ColorImage_AI6 1.3 0
%%+ procset Adobe_Illustrator_AI5 1.3 0
%%+ procset Adobe_cshow 2.0 8
%%+ procset Adobe_shading_AI8 1.0 0
%AI5_FileFormat 4.0
%AI3_ColorUsage: Color
%AI3_IncludePlacedImages
%AI7_ImageSettings: 1
%%CMYKProcessColor: 0.74902 0.678431 0.670588 0.901961 ([Registration])
%%AI6_ColorSeparationSet: 1 1 (AI6 Default Color Separation Set) 
%%+ Options: 1 16 0 1 1 1 0 0 0 0 1 1 1 18 0 0 0 0 0 0 0 0 -1 -1 0 0 0 0 1 0 0 0 0 1 0 0 0 0 0 1 2 3 4
%%+ PPD: 1 21 0 0 60 45 2 2 1 0 0 1 0 0 0 0 0 0 0 0 -1 -1 () 
%AI3_Cropmarks: 340.5 278.5 460.5 320.5
%AI3_TemplateBox: 400.5 299.5 400.5 299.5
%AI3_TileBox: 112 -56 688 678
%AI3_DocumentPreview: Macintosh_ColorPic
%AI5_ArtSize: 800 600
%AI5_RulerUnits: 6
%AI5_ArtFlags: 0 0 0 1 0 0 1 0 0
%AI5_TargetResolution: 800
%AI5_NumLayers: 1
%AI8_OpenToView: -381 756 1 1566 923 26 0 0 73 75 0 0
%AI5_OpenViewLayers: 7
%%PageOrigin:0 0
%AI7_GridSettings: 48 8 48 8 1 0 0.8 0.8 0.8 0.9 0.9 0.9
%AI9_Flatten: 1
%AI12_CMSettings: 00.MS
%AI7_Thumbnail: 128 48 8
%%BeginData: 9390 Hex Bytes

%0000330000660000990000CC0033000033330033660033990033CC0033FF
%0066000066330066660066990066CC0066FF009900009933009966009999
%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66
%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333
%3333663333993333CC3333FF3366003366333366663366993366CC3366FF
%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99
%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033
%6600666600996600CC6600FF6633006633336633666633996633CC6633FF
%6666006666336666666666996666CC6666FF669900669933669966669999
%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33
%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF
%9933009933339933669933999933CC9933FF996600996633996666996699
%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33
%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF
%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399
%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933
%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF
%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC
%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699
%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33
%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100
%000011111111220000002200000022222222440000004400000044444444
%550000005500000055555555770000007700000077777777880000008800
%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB
%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF
%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF
%524C45A8FD7DF827A8F8275258527D5258527D5258527D5258527D525852
%7D5258527D5258527D5258527D5258527D5258527D5258527D5258527D52
%58527D5258527D5258527D5258527D5258527D5258527D5258527D525852
%7D5258527D5258527D5258527D5258527D5258527D5258527D5258527D52
%58527D5258527D5258527D5258527DF8F8F852A87D837DA87D837DA87D83
%7DA87D837DA87D847DA87D847DA87D837DA87D837DA87D837DA87D837DA8
%7D837DA87D837DA87DA87DA883A87DA87D837DA87D837DA87D837DA87D83
%7DA87D837DA87DA87DA883A87DA87D837DA87D837DA87D837DA87D837DA8
%7D837DA87DA87DA883A87DA87D837DA87D837DA87D837D7DF8F8FD127D83
%FD207DFD0552585883FD147D52522D5252585883FD147D52522D52527D7D
%83FD0A7D52F8F852A87D837D837D837D837D837DA87D835858FD05272D2D
%7D7DA87D847D837D837D837D837D837D837D837D837DA87D522727FD05F8
%27277D7DA87D837D837D837D837D837D837DA8585204FD06F827277D7DA8
%7D837D837D837D837D837D837DA85252FD07F827527D7DA87D837D837D83
%7D7DF8F8FD0C7D837D5227FD0AF827277D7D83FD0F7D8352FD0CF8275883
%FD0B7D8327FD0CF82D7D83FD0C7D27FD0CF8527D83FD067D52F8F858837D
%837D7D7D837D7D7DA85227FD0FF8277DA87D7D7D837D7D7D837D7D7D837D
%8327F8F8F8277D7DA8A8A87D52F8F8F82752A87D7D7D837D7D7D837D7D27
%F8F8F8277DFD04A87D27F8F8F8277DA87D7D7D837D7D7D837D7DFD04F827
%7DFD04A85227F8F8F8277DA87D7D7D837D7DF8F8FD0B7D27FD06F8272752
%52522727FD06F85283FD0C7D27F8F8F87DFD08FFA827F8F8F85283FD087D
%04F8F8277DFD08FFA8F8F8F8275883FD087DF8F8F8277DFD08FF7DF8F8F8
%27FD067D52F8F858A87D837D837D837D8327FD04F8277DA8FD07FFA85227
%FD04F852A87D837D837D837D837DA82DF8F827A8FD04FF5227A8FD04FF52
%F8F8277DA87D837D837DA827F8F852FD05FFA87DFD05FF52F8F8277D837D
%837D837D8427F8F852FD0CFF27F8F8527D837D837D7DF8F8FD087D8327FD
%04F87DFD0CFFA852FD04F85283FD087D52F8F827A8FD04FF7DF8F8F8FD05
%FF52F8F827FD057D832DF8F852FD06FF27F8FD06FF52F8F852FD057D8327
%F8F852FD06FF7DA8A8FD05FF27F8F8527D7D7D8352F8F852A87D7D7D837D
%A827FD04F8A8FD0FFF7DFD04F852A87D837D7D7D837D27F8F8A8FD05FF52
%F8F8F8FD06FF27F8F8FD047D847D27F827FD06FFA852F8A8FD06FF27F8F8
%FD047DA858F8F827FD04FFA827F8F8F82727FD05FFF8F8F8FD057DF8F859
%FD057D8352FD04F8A8FD11FF7DFD04F858FD067D52F8F852FD07FF27277D
%FD07FFF8F8F8837D7D7D52F8F8F8527DFFFFFF52FD05F852FD04FFA8F8F8
%27837D7D7D27F8F8A8FFFFFF7DFD08F8A8FFFFFF7DF8F827837D7D52F8F8
%52A87D837DA87D27F8F8F8A8FD13FF7DF8F8F82D7D847D837DA827F8F8FD
%06FFA8FD057DFD06FF7DF8277D837DA827FD05F827A852FD06F852FD05FF
%52F8277D837D7DF8F852FFFFFFA827F8F8F8525227F8F8F8FD04FF27F827
%7D837D7DF8F8FD067D52F8F8F87DFD15FF52F8F8F859FD057D27F852FD05
%FFA8FD06F852FD05FFA8F8F8527D7D52F8F85227FD07F8A8FF5252A8FD05
%FF7DF8F87D7D7D52F8F8A8FFFFFF7DF8F8F8A8FFFFA827F8F852FFFFFF52
%F8F87D7D7D52F8F858837D837D7DF8F8F852FD17FF27F8F827A87D837D7D
%F8F87DFD05FF7DFD06F852FD06FFF8F827A87D52F8F8A8FF7D52FD05F87D
%A8FD09FFF8F852A87D52F827FD04FF27F8F827FD04FF7DF8F827FFFFFFA8
%F8F852A87D7DF8F8FD047D8327F8F8F8A8FD17FF52F8F8F8587D7D8352F8
%F8A8FD05FF7DFD06F827FD06FF27F8277D832DF8F8FD04FFA827FD05F852
%A8FD06FFA827F8527D8327F8F8FFFFFF7DF8F8F827FD04FFA8F8F8F8A8FF
%FFA8F8F8527D7D52F8F858A87DA87D27F8F852FD05FF7D52275252FD05FF
%7D5227527DFD05FFF8F8F8527D837D58F8F8A8FD05FF7DFD06F852FD06FF
%27F827A87D52F827FD06FFA852FD05F852A8FD05FF27F827A87D2EF852FD
%04FFA8F827FD05FFA8F8F8F87DFFFFFFF8F852A87D7DF8F8FD057DF8F8F8
%7DFD04FF52FD06F8A8FFFFFD06F827FD04FF27F8F827837D8352F8F8A8FD
%05FF7DFD06F827FD06FF27F8277DA82DF8F8FD09FF5227FD04F827A8FFFF
%FF27F8527DA827F827FD05FFA8FD06FFA8F8F8F8A8FFFFA8F8F8527D8352
%F8F852A87D8352F8F8F8A8FFFFFF52F8F8F82727F8F8F8FF27F8F8272727
%F8F852FFFFFF7DF8F827FD047DF8F87DFD05FFA827FD05F87DFD06FFF8F8
%27A87D52F8F8A8FD0AFF52FD05F8277DFFF8F852A87D52F827FD04FF7DA8
%7DA8FD04FF7DF8F8F8A8FFFFA8F8F852837D7DF8F8597D7D7D52F8F8F8FF
%FFFFA8F8F8F852FFFF52F8A87DF8F8F8A8FFA82727A8FFFFFFA8F8F8F87D
%7D7D58F8F852FD07FF27F8F8F8A8FD06FFA8F8F8527D7D52F8F87DFD05FF
%A827A8FFFF52F8F827FD07F8527D7D2EF8F8A8FFFFFF27F8F827FD04FF52
%F8F827FFFFFF52F8F87D7D7D52F8F852A87DA852F8F852FFFFFFA8F8F8F8
%FD06FF7DF8F852FFFFFFA8FD05FFA8F8F8277D837DA827F827FD07FF27F8
%F8F8A8FD06FF7DF8F858A87D83F8F827FD05FFF8F8F85227F8F827A8A827
%FD04F8277D837D7DF8F852FFFFFF7DF8F8F87DFFA87DF8F8F87DFFFFFF52
%F8277D837D7DF8F8FD047D52F8F827FFFFFF7DF8F827FD06FF27F8F87DFD
%09FFA8F8F8F8FD047D52F8F87DFD06FF27F8F8F8A8FD06FF27F8F8FD047D
%52F8F8A8FFFFFFA852FD06F87DFFFFFF7D52F8F827837D7D7D27F827A8FF
%FFFF27FD08F852FFFFFFA8F8F827A87D7D52F8F858837DA852F8F852FFFF
%FFA8F8F8F8FD06FF52F8F852FD09FFA8F8F8F87D837D837D27F827FD06FF
%27F8F8F8A8FD05FF7DF8F8527D837D8352F8F852FD05FFA87D27F87DA8FD
%05FF52F8F87D7D837DA852F8F852FD04FF27FD06F852FD04FF27F8F87D7D
%837D7DF8F8FD047D52F8F827FFFFFFA8F8F8F87DFFFFA852FF52F8F827FF
%FFFF7D52FD04FFA8F8F8F8FD057D27F8F852FD05FF27F8F8F8A8FD04FF7D
%F8F827FD067D27F8F852FD06FF27F8FD06FF7DF8F827FD067DF8F8F87DFD
%04FF5252F82727A8FD04FF52F8F852FD047D52F8F858A87DA852F8F827FD
%04FF27F8F8277DA827F827A8F8F8F852A87DF8F852FFFFFF7DF8F8277DA8
%7D837DA827F8F852FD04FF27F8F827A8FFFFFF7DF8F8F852A87D837D837D
%83F8F8F87DFD05FFA852FD05FF7DF8F8277DA87D837D837D7DF8F8F8A8FD
%0CFF52F8F8277D837D837D7DF8F8FD057DF8F8F8A8FFFFFFA8FD07F852FF
%7DFD07F8A8FFFFFF52F8F827FD077DF8F8F827A8FFFFFFA8FFA8FFFFFF52
%F8F8F82DA8FD087DF8F8F852A8FD09FF52F8F8F85284FD077D58F8F8F852
%FD09FFA827F8F8F852837D7D7D8352F8F852A87D837D27F8F852FD04FFA8
%27FD04F87DFFFFFF7DFD04F827A8FD04FF27F8F8527D7D7D83FD047D27F8
%F8F852A8A8FFFFFFA87D27F8F8F852A87D837D7D7D83FD047DF8F8F82752
%A8A8FFFFFFA87DF8F8F82752A87D837D7D7D837D7D7D59F8F8F82752A8FD
%04FF7D52F8F8F8277DA87D83FD047DF8F859FD047D27F8F827A8FD05FFA8
%A87DFFFFFFA8FFFFFF7DA8A8FD05FF7DF8F8F85283FD087D27FD06F827FD
%06F85283FD0C7D27FD06F827FD05F8275283FD0C7DFD05F827F827FD05F8
%275883FD067D52F8F852A87D837D7DF8F8F87DFD17FF52F8F8F8A87D837D
%837D837D837DA85227FD09F8527DA87D837D837D837D837D837D837D8352
%27FD08F827527DA87D837D837D837D837D837D837D7D2E27FD07F8212758
%7DA87D837D837D837D7DF8F8FD067D27F8F8F8FD16FF7DF8F8F852FD0E7D
%52FD04275252FD127D837D7D2DFD04275252FD127D837D7DFD0527525283
%FD0A7D52F8F858837D837D8452F8F8F827FD15FFF8F8F8277D837D837D7D
%7D837D7D7D837D7D7DA87D847DA87D837D837D7D7D837D7D7D837D7D7D83
%7D7D7D837D837DA87D847DA87D837D837D7D7D837D7D7D837D7D7D837D7D
%7D837D837DA87D847DA87D837D837D7D7D837D7D7D837D7DF8F8FD047D83
%7D7D27F8F8F852FD13FFFD04F852837D7D7D837D7D7D837D7D7D837D7D7D
%837D7D7D837D7D7D837D7D7D837D7D7D837D7D7D837D7D7D837D7D7D837D
%7D7D837D7D7D837D7D7D837D7D7D837D7D7D837D7D7D837D7D7D837D7D7D
%837D7D7D837D7D7D837D7D7DA852F8F8527D527D52837D83FD04F852FD11
%FF27F8F8F827A87D7D527D5258527D5258527D5258527D5258527D525852
%7D5258527D5258527D5258527D5258527D5258527D5258527D5258527D52
%58527D5258527D5258527D5258527D5258527D5258527D5258527D525852
%7D5258527D5252FD07F852837D7DFD04F827FD0EFFA8FD04F8277D7D8427
%FD5FF8277D837D7DFD05F87DA8FD09FFA852FD04F8277D7DA852FD61F82D
%FD047DFD06F8277D7DA8A8A87D7D27FD05F8277D7D8358FD63F8527DA87D
%7D27FD08F827FD07F82752A87DA87D27FD0BF8527DA87D7DF8527D52F8F8
%52A8FD0EF827A852F8F87D52F8F852A8A87D27FD0FF852A8FF7D27F8F8F8
%7D7D27FD16F852FD047D5227FD0DF82752A87D7D7D27FD0CF8A8FFA8A8FF
%A8F8FFA8F8F8FFA8FD0EF852FFFFF8F8A8FFF852FFFF7DFFA8FD0EF827FF
%A87DFFA8F8F852FFFF27FD17F8527DA87DA87D7D2727FD07F8272D7D7D83
%7DA87D27FD0DF8A8A8F8F8A8FFF852FF52A8FF27FD0EF827FFFFA8F8A8A8
%F8A8FFF8F852FF27FD0DF852FF52F827A8F8F87DFFFF7DFD18F82758837D
%7D7D837D7D52525258527D7D83FD047D52FD0FF87DFF7DA8FF52F8F87DFF
%FF7DFD0FF827FFA8FF277DA827FF52FD12F827A8FFA852F8F8F8FF527DA8
%FD19F82752837DA87D837DA87DA87DA87D837DA87D7D27FD10F8A8FF7D7D
%FFA8F8F852FFFFFD10F827FF52FD04A852FF7DF8F8F827FD0FF8277DFFFF
%FFF852FF5252FF27FD1BF85252837D7D7D837D7D7D837D7D5227FD12F87D
%FFF8F852FF27F8F8FF7DFD10F827FF52F8FFFFA8F8FF7DF8F852FF52FD0D
%F8527DF8F852FF527DFFA8FFFF7DFD1DF82752527D527D587D5252FD15F8
%A8FF7D7DFFFF27F827FFA8FD10F827FF52F87DFFA8F852FF7D7DFFFFFD0E
%F852FF7D52A8FF52FF7D2727A8FF27FD3BF852A8A8FFA852F8F8F8A852FD
%10F827A852F827A87DF8F852FFFFA827FD0FF852FFA8FF2752A827F8F827
%FF27FD59F827FD07F827FD13F827FD95F852FD7F27FD7FFFFF
%%EndData
%%EndComments
%%BeginProlog
%%BeginResource: procset Adobe_level2_AI5 1.2 0
%%Title: (Adobe Illustrator (R) Version 5.0 Level 2 Emulation)
%%Version: 1.2 0
%%CreationDate: (04/10/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /Adobe_level2_AI5 26 dict dup begin
	put
	/packedarray where not
	{
		userdict begin
		/packedarray
		{
			array astore readonly
		} bind def
		/setpacking /pop load def
		/currentpacking false def
	 end
		0
	} if
	pop
	userdict /defaultpacking currentpacking put true setpacking
	/initialize
	{
		Adobe_level2_AI5 begin
	} bind def
	/terminate
	{
		currentdict Adobe_level2_AI5 eq
		{
		 end
		} if
	} bind def
	mark
	/setcustomcolor where not
	{
		/findcmykcustomcolor
		{
			(AI8_CMYK_CustomColor)
			6 packedarray
		} bind def
		/findrgbcustomcolor
		{
			(AI8_RGB_CustomColor)
			5 packedarray
		} bind def
		/setcustomcolor
		{
			exch 
			aload pop dup
			(AI8_CMYK_CustomColor) eq
			{
				pop pop
				4
				{
					4 index mul
					4 1 roll
				} repeat
				5 -1 roll pop
				setcmykcolor
			}
			{
				dup (AI8_RGB_CustomColor) eq
				{
					pop pop
					3
					{
						1 exch sub
						3 index mul 
						1 exch sub
						3 1 roll
					} repeat
					4 -1 roll pop
					setrgbcolor
				}
				{
					pop
					4
					{
						4 index mul 4 1 roll
					} repeat
					5 -1 roll pop
					setcmykcolor
				} ifelse
			} ifelse
		}
		def
	} if
	/setAIseparationgray
	{
		false setoverprint
		0 setgray
		/setseparationgray where{
			pop setseparationgray
		}{
			/setcolorspace where{
				pop
				[/Separation (All) /DeviceCMYK {dup dup dup}] setcolorspace
				1 exch sub setcolor
			}{
				setgray
			}ifelse
		}ifelse
	} def
	
	/gt38? mark {version cvr cvx exec} stopped {cleartomark true} {38 gt exch pop} ifelse def
	userdict /deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt put
	userdict /level2?
	systemdict /languagelevel known dup
	{
		pop systemdict /languagelevel get 2 ge
	} if
	put
/level2ScreenFreq
{
 begin
		60
		HalftoneType 1 eq
		{
			pop Frequency
		} if
		HalftoneType 2 eq
		{
			pop GrayFrequency
		} if
		HalftoneType 5 eq
		{
			pop Default level2ScreenFreq
		} if
 end
} bind def
userdict /currentScreenFreq  
	level2? {currenthalftone level2ScreenFreq} {currentscreen pop pop} ifelse put
level2? not
	{
		/setcmykcolor where not
		{
			/setcmykcolor
			{
				exch .11 mul add exch .59 mul add exch .3 mul add
				1 exch sub setgray
			} def
		} if
		/currentcmykcolor where not
		{
			/currentcmykcolor
			{
				0 0 0 1 currentgray sub
			} def
		} if
		/setoverprint where not
		{
			/setoverprint /pop load def
		} if
		/selectfont where not
		{
			/selectfont
			{
				exch findfont exch
				dup type /arraytype eq
				{
					makefont
				}
				{
					scalefont
				} ifelse
				setfont
			} bind def
		} if
		/cshow where not
		{
			/cshow
			{
				[
				0 0 5 -1 roll aload pop
				] cvx bind forall
			} bind def
		} if
	} if
	cleartomark
	/anyColor?
	{
		add add add 0 ne
	} bind def
	/testColor
	{
		gsave
		setcmykcolor currentcmykcolor
		grestore
	} bind def
	/testCMYKColorThrough
	{
		testColor anyColor?
	} bind def
	userdict /composite?
	1 0 0 0 testCMYKColorThrough
	0 1 0 0 testCMYKColorThrough
	0 0 1 0 testCMYKColorThrough
	0 0 0 1 testCMYKColorThrough
	and and and
	put
	composite? not
	{
		userdict begin
		gsave
		/cyan? 1 0 0 0 testCMYKColorThrough def
		/magenta? 0 1 0 0 testCMYKColorThrough def
		/yellow? 0 0 1 0 testCMYKColorThrough def
		/black? 0 0 0 1 testCMYKColorThrough def
		grestore
		/isCMYKSep? cyan? magenta? yellow? black? or or or def
		/customColor? isCMYKSep? not def
	 end
	} if
 end defaultpacking setpacking
%%EndResource
%%BeginProcSet: Adobe_ColorImage_AI6 1.3 0
userdict /Adobe_ColorImage_AI6 known not
{
	userdict /Adobe_ColorImage_AI6 53 dict put 
} if
userdict /Adobe_ColorImage_AI6 get begin
/initialize { 
	Adobe_ColorImage_AI6 begin
	Adobe_ColorImage_AI6 {
		dup type /arraytype eq {
			dup xcheck {
				bind
			} if
		} if
		pop pop
	} forall
} def
/terminate { end } def
currentdict /Adobe_ColorImage_AI6_Vars known not {
	/Adobe_ColorImage_AI6_Vars 41 dict def
} if
Adobe_ColorImage_AI6_Vars begin
	/plateindex -1 def
	/_newproc null def
	/_proc1 null def
	/_proc2 null def
	/sourcearray 4 array def
	/_ptispace null def
	/_ptiname null def
	/_pti0 0 def
	/_pti1 0 def
	/_ptiproc null def
	/_ptiscale 0 def
	/_pticomps 0 def
	/_ptibuf 0 string def
	/_gtigray 0 def
	/_cticmyk null def
	/_rtirgb null def
	/XIEnable true def
	/XIType 0 def
	/XIEncoding 0 def
	/XICompression 0 def
	/XIChannelCount 0 def
	/XIBitsPerPixel 0 def
	/XIImageHeight 0 def
	/XIImageWidth 0 def
	/XIImageMatrix null def
	/XIRowBytes 0 def
	/XIFile null def
	/XIBuffer1 null def
	/XIBuffer2 null def
	/XIBuffer3 null def
	/XIDataProc null def
	/XIColorSpace /DeviceGray def
	/XIColorValues 0 def
	/XIPlateList false def
end
/ci6colorimage /colorimage where {/colorimage get}{null} ifelse def
/ci6image systemdict /image get def
/ci6curtransfer systemdict /currenttransfer get def
/ci6curoverprint /currentoverprint where {/currentoverprint get}{{_of}} ifelse def
/ci6foureq {
	4 index ne {
		pop pop pop false
	}{
		4 index ne {
			pop pop false
		}{
			4 index ne {
				pop false
			}{
				4 index eq
			} ifelse
		} ifelse
	} ifelse
} def
/ci6testplate {
	Adobe_ColorImage_AI6_Vars begin
		/plateindex -1 def
		/setcmykcolor where {
			pop
			gsave
			1 0 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 1 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 1 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 0 1 setcmykcolor systemdict /currentgray get exec 1 exch sub
			grestore
			1 0 0 0 ci6foureq { 
				/plateindex 0 def
			}{
				0 1 0 0 ci6foureq { 
					/plateindex 1 def
				}{
					0 0 1 0 ci6foureq {
						/plateindex 2 def
					}{
						0 0 0 1 ci6foureq { 
							/plateindex 3 def
						}{
							0 0 0 0 ci6foureq {
								/plateindex 5 def
							} if
						} ifelse
					} ifelse
				} ifelse
			} ifelse
			pop pop pop pop
		} if
		plateindex
 end
} def
/ci6concatprocs {
	/packedarray where {
		pop dup type /packedarraytype eq 2 index type
		/packedarraytype eq or
	}{
		false
	} ifelse
	{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		_proc1 aload pop
		_proc2 aload pop
		_proc1 length
		_proc2 length add
		packedarray cvx
	}{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		/_newproc _proc1 length _proc2 length add array def
		_newproc 0 _proc1 putinterval
		_newproc _proc1 length _proc2 putinterval
		_newproc cvx
	} ifelse
} def
/ci6istint {
	type /arraytype eq 
} def
/ci6isspot {
	dup type /arraytype eq {
		dup length 1 sub get /Separation eq
	}{
		pop false
	} ifelse
} def
/ci6spotname {
	dup ci6isspot {dup length 2 sub get}{pop ()} ifelse
} def
/ci6altspace {
	aload pop pop pop ci6colormake
} def
/ci6numcomps {
	dup /DeviceGray eq {
		pop 1
	}{
		dup /DeviceRGB eq {
			pop 3
		}{
			/DeviceCMYK eq {
				4
			}{
				1
			} ifelse
		} ifelse
	} ifelse
} def
/ci6marksplate {
	dup /DeviceGray eq {
		pop plateindex 3 eq
	}{
		dup /DeviceRGB eq {
			pop plateindex 5 ne
		}{
			dup /DeviceCMYK eq {
				pop plateindex 5 ne
			}{
				dup ci6isspot {
					/findcmykcustomcolor where {
						pop
						dup length 2 sub get
						0.1 0.1 0.1 0.1 5 -1 roll
						findcmykcustomcolor 1 setcustomcolor
						systemdict /currentgray get exec
						1 ne
					}{
						pop plateindex 5 ne
					} ifelse
				}{
					pop plateindex 5 ne
				} ifelse
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colormake {
	dup ci6numcomps
	exch 1 index 2 add 1 roll
	dup 1 eq {pop}{array astore} ifelse
	exch
} def
/ci6colorexpand {
	dup ci6spotname exch
	dup ci6istint {
		ci6altspace
		exch 4 1 roll
	}{
		1 3 1 roll
	} ifelse
} def
/ci6colortint {
	dup /DeviceGray eq {
		3 1 roll 1 exch sub mul 1 exch sub exch
	}{
		dup /DeviceRGB eq {
			3 1 roll {1 exch sub 1 index mul 1 exch sub exch} forall pop 3 array astore exch
		}{
			dup /DeviceCMYK eq {
				3 1 roll {1 index mul exch} forall pop 4 array astore exch
			}{
				3 1 roll mul exch
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colortocmyk {
	dup /DeviceGray eq {
		pop 1 exch sub 0 0 0 4 -1 roll 4 array astore
	}{
		dup /DeviceRGB eq {
			pop aload pop _rgbtocmyk 4 array astore
		}{
			dup /DeviceCMYK eq {
				pop
			}{
				ci6altspace ci6colortint ci6colortocmyk
			} ifelse
		} ifelse
	} ifelse
} def
/ci6makeimagedict {
	7 dict begin
		/ImageType 1 def
		/Decode exch def
		/DataSource exch def
		/ImageMatrix exch def
		/BitsPerComponent exch def
		/Height exch def
		/Width exch def
	currentdict end
} def
/ci6stringinvert {
	0 1 2 index length 1 sub {
		dup 2 index exch get 255 exch sub 2 index 3 1 roll put
	} for
} def
/ci6stringknockout {
	0 1 2 index length 1 sub {
		255 2 index 3 1 roll put
	} for
} def
/ci6stringapply {
	0 1 4 index length 1 sub {
		dup
		4 index exch get
		3 index 3 1 roll
		3 index exec
	} for
	pop exch pop
} def
/ci6walkrgbstring {
	0 3 index
	dup length 1 sub 0 3 3 -1 roll {
		3 getinterval {} forall
		5 index exec
		3 index
	} for
	
	 5 {pop} repeat
} def
/ci6walkcmykstring
{
	0 3 index
	dup length 1 sub 0 4 3 -1 roll {
		4 getinterval {} forall
		
		6 index exec
		
		3 index
		
	} for
	
	5 { pop } repeat
	
} def
/ci6putrgbtograystr
{
	.11 mul exch
	
	.59 mul add exch
	
	.3 mul add
	
	cvi 3 copy put
	
	pop 1 add
} def
/ci6putcmyktograystr
{
	exch .11 mul add
	
	exch .59 mul add
	
	exch .3 mul add
	
	dup 255 gt { pop 255 } if
	
	255 exch sub cvi 3 copy put
	
	pop 1 add
} def
/ci6rgbtograyproc {	
	Adobe_ColorImage_AI6_Vars begin 
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putrgbtograystr load exch
		ci6walkrgbstring
 end
} def
/ci6cmyktograyproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putcmyktograystr load exch
		ci6walkcmykstring
 end
} def
/ci6separatecmykproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		
		XIBuffer3
		
		0 2 index
		
		plateindex 4 2 index length 1 sub {
			get 255 exch sub
			
			3 copy put pop 1 add
			
			2 index
		} for
		pop pop exch pop
 end
} def
	
/ci6compositeimage {
	dup 1 eq {
		pop pop image
	}{
		/ci6colorimage load null ne {
			ci6colorimage
		}{
			3 1 roll pop
			sourcearray 0 3 -1 roll put
			3 eq {/ci6rgbtograyproc}{/ci6cmyktograyproc} ifelse load
			image
		} ifelse
	} ifelse
} def
/ci6knockoutimage {
	gsave
	0 ci6curtransfer exec 1 ci6curtransfer exec
	eq {
		0 ci6curtransfer exec 0.5 lt
	}{
		0 ci6curtransfer exec 1 ci6curtransfer exec gt
	} ifelse
	{{pop 0}}{{pop 1}} ifelse
	systemdict /settransfer get exec
	ci6compositeimage
	grestore
} def
/ci6drawimage {
	ci6testplate -1 eq {
		pop ci6compositeimage
	}{
		dup type /arraytype eq {
			dup length plateindex gt {plateindex get}{pop false} ifelse
		}{
			{
				true
			}{
				dup 1 eq {plateindex 3 eq}{plateindex 3 le} ifelse
			} ifelse
		} ifelse
		{
			dup 1 eq {
				pop pop ci6image
			}{
				dup 3 eq {
					ci6compositeimage
				}{
					pop pop
					sourcearray 0 3 -1 roll put
					/ci6separatecmykproc load
					ci6image
				} ifelse
			} ifelse
		}{
			ci6curoverprint {
				7 {pop} repeat
			}{
				ci6knockoutimage
			} ifelse
		} ifelse
	} ifelse
} def
/ci6proctintimage {
	/_ptispace exch store /_ptiname exch store /_pti1 exch store /_pti0 exch store /_ptiproc exch store
	/_pticomps _ptispace ci6numcomps store
	/_ptiscale _pti1 _pti0 sub store
	level2? {
		_ptiname length 0 gt version cvr 2012 ge and {
			[/Separation _ptiname _ptispace {_ptiproc}] setcolorspace
			[_pti0 _pti1] ci6makeimagedict ci6image
		}{
			[/Indexed _ptispace 255 {255 div _ptiscale mul _pti0 add _ptiproc}] setcolorspace
			[0 255] ci6makeimagedict ci6image
		} ifelse
	}{
		_pticomps 1 eq {
			{
				dup
				{
					255 div _ptiscale mul _pti0 add _ptiproc 255 mul cvi put
				} ci6stringapply
			} ci6concatprocs ci6image
		}{
			{
				dup length _pticomps mul dup _ptibuf length ne {/_ptibuf exch string store}{pop} ifelse
				_ptibuf {
					exch _pticomps mul exch 255 div _ptiscale mul _pti0 add _ptiproc
					_pticomps 2 add -2 roll
					_pticomps 1 sub -1 0 {
						1 index add 2 index exch
						5 -1 roll
						255 mul cvi put
					} for
					pop pop
				} ci6stringapply
			} ci6concatprocs false _pticomps
			/ci6colorimage load null eq {7 {pop} repeat}{ci6colorimage} ifelse
		} ifelse
	} ifelse
} def
/ci6graytintimage {
	/_gtigray 5 -1 roll store
	{1 _gtigray sub mul 1 exch sub} 4 1 roll
	/DeviceGray ci6proctintimage
} def
/ci6cmyktintimage {
	/_cticmyk 5 -1 roll store
	{_cticmyk {1 index mul exch} forall pop} 4 1 roll
	/DeviceCMYK ci6proctintimage
} def
/ci6rgbtintimage {
	/_rtirgb 5 -1 roll store
	{_rtirgb {1 exch sub 1 index mul 1 exch sub exch} forall pop} 4 1 roll
	/DeviceRGB ci6proctintimage
} def
/ci6tintimage {
	ci6testplate -1 eq {
		ci6colorexpand
		3 -1 roll 5 -1 roll {0}{0 exch} ifelse 4 2 roll
		dup /DeviceGray eq {
			pop ci6graytintimage
		}{
			dup /DeviceRGB eq {
				pop ci6rgbtintimage
			}{
				pop ci6cmyktintimage
			} ifelse
		} ifelse
	}{
		dup ci6marksplate {
			plateindex 5 lt {
				ci6colortocmyk plateindex get
				dup 0 eq ci6curoverprint and {
					7 {pop} repeat
				}{
					1 exch sub
					exch {1 0}{0 1} ifelse () ci6graytintimage
				} ifelse
			}{
				pop exch {0}{0 exch} ifelse 0 3 1 roll () ci6graytintimage
			} ifelse
		}{
			ci6curoverprint {
				8 {pop} repeat
			}{
				pop pop pop
				{pop 1} 0 1 () /DeviceGray ci6proctintimage
			} ifelse
		} ifelse
	} ifelse
} def
/XINullImage {
} def
/XIImageMask {
	XIImageWidth XIImageHeight false
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	imagemask
} def
/XIImageTint {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	XIType 3 eq XIColorValues XIColorSpace ci6tintimage
} def
/XIImage {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	false XIChannelCount XIPlateList ci6drawimage
} def
/XG {
	pop pop
} def
/XF {
	13 {pop} repeat
} def
/Xh {
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		/XIImageMatrix exch def
		0 0 moveto
		XIImageMatrix concat
		XIImageWidth XIImageHeight scale
		
		/_lp /null ddef
		_fc
		/_lp /imagemask ddef
 end
} def
/XH {
	Adobe_ColorImage_AI6_Vars begin
		grestore
 end
} def
/XIEnable {
	Adobe_ColorImage_AI6_Vars /XIEnable 3 -1 roll put
} def
/XC {
	Adobe_ColorImage_AI6_Vars begin
		ci6colormake
		/XIColorSpace exch def
		/XIColorValues exch def
 end
} def
/XIPlates {
	Adobe_ColorImage_AI6_Vars begin
		/XIPlateList exch def
 end
} def
/XI
{
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		cvi dup
		256 idiv /XICompression exch store
		256 mod /XIEncoding exch store
		pop pop
		/XIChannelCount exch def
		/XIBitsPerPixel exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		pop pop pop pop
		/XIImageMatrix exch def
		XIBitsPerPixel 1 eq {
			XIImageWidth 8 div ceiling cvi
		}{
			XIImageWidth XIChannelCount mul
		} ifelse
		/XIRowBytes exch def
		XIEnable {
			/XIBuffer3 XIImageWidth string def
			XICompression 0 eq {
				/XIBuffer1 XIRowBytes string def
				XIEncoding 0 eq {
					{currentfile XIBuffer1 readhexstring pop}
				}{
					{currentfile XIBuffer1 readstring pop}
				} ifelse
			}{
				/XIBuffer1 256 string def
				/XIBuffer2 XIRowBytes string def
				{currentfile XIBuffer1 readline pop (%) anchorsearch {pop} if}
				/ASCII85Decode filter /DCTDecode filter
				/XIFile exch def
				{XIFile XIBuffer2 readstring pop}
			} ifelse
			/XIDataProc exch def
			
			XIType 1 ne {
				0 setgray
			} if
			XIType 1 eq {
				XIImageMask
			}{
				XIType 2 eq XIType 3 eq or {
					XIImageTint
				}{
					XIImage
				} ifelse
			} ifelse
		}{
			XINullImage
		} ifelse
		/XIPlateList false def
		grestore
 end
} def
end
%%EndProcSet
%%BeginResource: procset Adobe_Illustrator_AI5 1.3 0
%%Title: (Adobe Illustrator (R) Version 8.0 Full Prolog)
%%Version: 1.3 0
%%CreationDate: (3/7/1994) ()
%%Copyright: ((C) 1987-1998 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5_vars 112 dict dup begin
put
/_?cmyk false def
/_eo false def
/_lp /none def
/_pf
{
} def
/_ps
{
} def
/_psf
{
} def
/_pss
{
} def
/_pjsf
{
} def
/_pjss
{
} def
/_pola 0 def
/_doClip 0 def
/cf currentflat def
/_lineorientation 0 def
/_charorientation 0 def
/_yokoorientation 0 def
/_tm matrix def
/_renderStart
[
/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0
] def
/_renderEnd
[
null null null null /i1 /i1 /i1 /i1
] def
/_render -1 def
/_shift [0 0] def
/_ax 0 def
/_ay 0 def
/_cx 0 def
/_cy 0 def
/_leading
[
0 0
] def
/_ctm matrix def
/_mtx matrix def
/_sp 16#020 def
/_hyphen (-) def
/_fontSize 0 def
/_fontAscent 0 def
/_fontDescent 0 def
/_fontHeight 0 def
/_fontRotateAdjust 0 def
/Ss 256 string def
Ss 0 (fonts/) putinterval
/_cnt 0 def
/_scale [1 1] def
/_nativeEncoding 0 def
/_useNativeEncoding 0 def
/_tempEncode 0 def
/_pntr 0 def
/_tDict 2 dict def
/_hfname 100 string def
/_hffound false def
/Tx
{
} def
/Tj
{
} def
/CRender
{
} def
/_AI3_savepage
{
} def
/_gf null def
/_cf 4 array def
/_rgbf 3 array def
/_if null def
/_of false def
/_fc
{
} def
/_gs null def
/_cs 4 array def
/_rgbs 3 array def
/_is null def
/_os false def
/_sc
{
} def
/_pd 1 dict def
/_ed 15 dict def
/_pm matrix def
/_fm null def
/_fd null def
/_fdd null def
/_sm null def
/_sd null def
/_sdd null def
/_i null def
/_lobyte 0 def
/_hibyte 0 def
/_cproc null def
/_cscript 0 def
/_hvax 0 def
/_hvay 0 def
/_hvwb 0 def
/_hvcx 0 def
/_hvcy 0 def
/_bitfont null def
/_bitlobyte 0 def
/_bithibyte 0 def
/_bitkey null def
/_bitdata null def
/_bitindex 0 def
/discardSave null def
/buffer 256 string def
/beginString null def
/endString null def
/endStringLength null def
/layerCnt 1 def
/layerCount 1 def
/perCent (%) 0 get def
/perCentSeen? false def
/newBuff null def
/newBuffButFirst null def
/newBuffLast null def
/clipForward? false def
end
userdict /Adobe_Illustrator_AI5 known not {
	userdict /Adobe_Illustrator_AI5 100 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/initialize
{
	Adobe_Illustrator_AI5 dup begin
	Adobe_Illustrator_AI5_vars begin
	/_aicmykps where {pop /_?cmyk _aicmykps def}if
	discardDict
	{
		bind pop pop
	} forall
	dup /nc get begin
	{
		dup xcheck 1 index type /operatortype ne and
		{
			bind
		} if
		pop pop
	} forall
 end
	newpath
} def
/terminate
{
 end
 end
} def
/_
null def
/ddef
{
	Adobe_Illustrator_AI5_vars 3 1 roll put
} def
/xput
{
	dup load dup length exch maxlength eq
	{
		dup dup load dup
		length 2 mul dict copy def
	} if
	load begin
	def
 end
} def
/npop
{
	{
		pop
	} repeat
} def
/hswj
{
	dup stringwidth 3 2 roll
	{
		_hvwb eq { exch _hvcx add exch _hvcy add } if
		exch _hvax add exch _hvay add
	} cforall
} def
/vswj
{
	0 0 3 -1 roll
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			dup cstring stringwidth 5 2 roll
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			4 -1 roll sub exch
			3 -1 roll sub exch
		}
		{
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			_fontHeight sub
		} ifelse
	} cforall
} def
/swj
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hswj } { vswj } ifelse
} def
/sw
{
	0 0 0 6 3 roll swj
} def
/vjss
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			5 index setmatrix stroke
			grestore
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			gsave
			2 index false charpath
			6 index setmatrix stroke
			grestore
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjss
{
	4 1 roll
	{
		dup cstring
		gsave
		false charpath currentpoint
		5 index setmatrix stroke
		grestore
		moveto
		_sp eq
		{
			5 index 5 index rmoveto
		} if
		2 copy rmoveto
	} cforall
	6 npop
} def
/jss
{
	_lineorientation 0 eq { hjss } { vjss } ifelse
} def
/ss
{
	0 0 0 7 3 roll jss
} def
/vjsp
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			false charpath
            currentpoint
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			2 index false charpath
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjsp
{
    4 1 roll
    {
        dup cstring
        false charpath
        _sp eq
        {
            5 index 5 index rmoveto
        } if
        2 copy rmoveto
    } cforall
    6 npop
} def
/jsp
{
	matrix currentmatrix
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/sp
{
    matrix currentmatrix
    0 0 0 7 3 roll
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/pl
{
	transform
	0.25 sub round 0.25 add exch
	0.25 sub round 0.25 add exch
	itransform
} def
/setstrokeadjust where
{
	pop true setstrokeadjust
	/c
	{
		curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll curveto
	} def
	/V
	/v load def
	/y
	{
		2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		lineto
	} def
	/L
	/l load def
	/m
	{
		moveto
	} def
}
{
	/c
	{
		pl curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll pl curveto
	} def
	/V
	/v load def
	/y
	{
		pl 2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		pl lineto
	} def
	/L
	/l load def
	/m
	{
		pl moveto
	} def
} ifelse
/d
{
	setdash
} def
/cf
{
} def
/i
{
	dup 0 eq
	{
		pop cf
	} if
	setflat
} def
/j
{
	setlinejoin
} def
/J
{
	setlinecap
} def
/M
{
	setmiterlimit
} def
/w
{
	setlinewidth
} def
/XR
{
	0 ne
	/_eo exch ddef
} def
/H
{
} def
/h
{
	closepath
} def
/N
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			_eo {eoclip} {clip} ifelse /_doClip 0 ddef
		} if
		newpath
	}
	{
		/CRender
		{
			N
		} ddef
	} ifelse
} def
/n
{
	N
} def
/F
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _pf grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _fc
			/_doClip 0 ddef
		}
		{
			_pf
		} ifelse
	}
	{
		/CRender
		{
			F
		} ddef
	} ifelse
} def
/f
{
	closepath
	F
} def
/S
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _ps grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			_ps
		} ifelse
	}
	{
		/CRender
		{
			S
		} ddef
	} ifelse
} def
/s
{
	closepath
	S
} def
/B
{
	_pola 0 eq
	{
		_doClip 1 eq
		gsave F grestore
		{
			gsave S grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			S
		} ifelse
	}
	{
		/CRender
		{
			B
		} ddef
	} ifelse
} def
/b
{
	closepath
	B
} def
/W
{
	/_doClip 1 ddef
} def
/*
{
	count 0 ne
	{
		dup type /stringtype eq
		{
			pop
		} if
	} if
	newpath
} def
/u
{
} def
/U
{
} def
/q
{
	_pola 0 eq
	{
		gsave
	} if
} def
/Q
{
	_pola 0 eq
	{
		grestore
	} if
} def
/*u
{
	_pola 1 add /_pola exch ddef
} def
/*U
{
	_pola 1 sub /_pola exch ddef
	_pola 0 eq
	{
		CRender
	} if
} def
/D
{
	pop
} def
/*w
{
} def
/*W
{
} def
/`
{
	/_i save ddef
	clipForward?
	{
		nulldevice
	} if
	6 1 roll 4 npop
	concat pop
	userdict begin
	/showpage
	{
	} def
	0 setgray
	0 setlinecap
	1 setlinewidth
	0 setlinejoin
	10 setmiterlimit
	[] 0 setdash
	/setstrokeadjust where {pop false setstrokeadjust} if
	newpath
	0 setgray
	false setoverprint
} def
/~
{
 end
	_i restore
} def
/_rgbtocmyk
{
	3
	{
		1 exch sub 3 1 roll
	} repeat
	3 copy 1 4 1 roll
	3
	{
		3 index 2 copy gt
		{
			exch
		} if
		pop 4 1 roll
	} repeat
	pop pop pop
	4 1 roll
	3
	{
		3 index sub
		3 1 roll
	} repeat
	4 -1 roll
} def
/setrgbfill
{
	_rgbf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_rgbf aload pop setrgbcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/setrgbstroke
{
	_rgbs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_rgbs aload pop setrgbcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/O
{
	0 ne
	/_of exch ddef
	/_lp /none ddef
} def
/R
{
	0 ne
	/_os exch ddef
	/_lp /none ddef
} def
/g
{
	/_gf exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/G
{
	/_gs exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/k
{
	_cf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_cf aload pop setcmykcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/K
{
	_cs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_cs aload pop setcmykcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xa
{
	_?cmyk {
		3 npop k
	}{
		setrgbfill 4 npop
	} ifelse
} def
/XA
{
	_?cmyk {
		3 npop K
	}{
		setrgbstroke 4 npop
	} ifelse
} def
/Xs
{
	/_gf exch ddef
	5 npop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setAIseparationgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XS
{
	/_gs exch ddef
	5 npop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setAIseparationgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xx
{
	exch
	/_gf exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XX
{
	exch
	/_gs exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/x
{
	/_gf exch ddef
	findcmykcustomcolor
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/X
{
	/_gs exch ddef
	findcmykcustomcolor
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/XK
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		K
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		XA
	} ifelse
} def
/Xk
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		k
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		Xa
	} ifelse
} def
/A
{
	pop
} def
/annotatepage
{
userdict /annotatepage 2 copy known {get exec} {pop pop} ifelse
} def
/XT {
	pop pop
} def
/Xt {
	pop
} def
/discard
{
	save /discardSave exch store
	discardDict begin
	/endString exch store
	gt38?
	{
		2 add
	} if
	load
	stopped
	pop
 end
	discardSave restore
} bind def
userdict /discardDict 7 dict dup begin
put
/pre38Initialize
{
	/endStringLength endString length store
	/newBuff buffer 0 endStringLength getinterval store
	/newBuffButFirst newBuff 1 endStringLength 1 sub getinterval store
	/newBuffLast newBuff endStringLength 1 sub 1 getinterval store
} def
/shiftBuffer
{
	newBuff 0 newBuffButFirst putinterval
	newBuffLast 0
	currentfile read not
	{
	stop
	} if
	put
} def
0
{
	pre38Initialize
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff endString eq
			{
				cleartomark stop
			} if
			shiftBuffer
		} loop
	}
	{
	stop
	} ifelse
} def
1
{
	pre38Initialize
	/beginString exch store
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff beginString eq
			{
				/layerCount dup load 1 add store
			}
			{
				newBuff endString eq
				{
					/layerCount dup load 1 sub store
					layerCount 0 eq
					{
						cleartomark stop
					} if
				} if
			} ifelse
			shiftBuffer
		} loop
	} if
} def
2
{
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			endString eq {
				cleartomark stop
			} if
		}ifelse
	} loop
} def
3
{
	/beginString exch store
	/layerCnt 1 store
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			dup beginString eq
			{
				pop /layerCnt dup load 1 add store
			}
			{
				endString eq
				{
					layerCnt 1 eq
					{
						cleartomark stop
					}
					{
						/layerCnt dup load 1 sub store
					} ifelse
				} if
			} ifelse
		}ifelse
	} loop
} def
end
userdict /clipRenderOff 15 dict dup begin
put
{
	/n /N /s /S /f /F /b /B
}
{
	{
		_doClip 1 eq
		{
			/_doClip 0 ddef _eo {eoclip} {clip} ifelse
		} if
		newpath
	} def
} forall
/Tr /pop load def
/Bb {} def
/BB /pop load def
/Bg {12 npop} def
/Bm {6 npop} def
/Bc /Bm load def
/Bh {4 npop} def
end
/Lb
{
	6 npop
	7 2 roll
	5 npop
	0 eq
	{
		0 eq
		{
			(%AI5_BeginLayer) 1 (%AI5_EndLayer--) discard
		}
		{
			
			/clipForward? true def
			
			/Tx /pop load def
			/Tj /pop load def
			
			currentdict end clipRenderOff begin begin
		} ifelse
	}
	{
		0 eq
		{
			save /discardSave exch store
		} if
	} ifelse
} bind def
/LB
{
	discardSave dup null ne
	{
		restore
	}
	{
		pop
		clipForward?
		{
			currentdict
		 end
		 end
		 begin
					
			/clipForward? false ddef
		} if
	} ifelse
} bind def
/Pb
{
	pop pop
	0 (%AI5_EndPalette) discard
} bind def
/Np
{
	0 (%AI5_End_NonPrinting--) discard
} bind def
/Ln /pop load def
/Ap
/pop load def
/Ar
{
	72 exch div
	0 dtransform dup mul exch dup mul add sqrt
	dup 1 lt
	{
		pop 1
	} if
	setflat
} def
/Mb
{
	q
} def
/Md
{
} def
/MB
{
	Q
} def
/nc 4 dict def
nc begin
/setgray
{
	pop
} bind def
/setcmykcolor
{
	4 npop
} bind def
/setrgbcolor
{
	3 npop
} bind def
/setcustomcolor
{
	2 npop
} bind def
currentdict readonly pop
end
/XP
{
	4 npop
} bind def
/XD
{
	pop
} bind def
end
setpacking
%%EndResource
%%BeginResource: procset Adobe_cshow 2.0 8
%%Title: (Writing System Operators)
%%Version: 2.0 8
%%CreationDate: (1/23/89) ()
%%Copyright: ((C) 1992-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_cshow 14 dict dup begin put
/initialize
{
	Adobe_cshow begin
	Adobe_cshow
	{
		dup xcheck
		{
			bind
		} if
		pop pop
	} forall
 end
	Adobe_cshow begin
} def
/terminate
{
currentdict Adobe_cshow eq
	{
 end
	} if
} def
/cforall
{
	/_lobyte 0 ddef
	/_hibyte 0 ddef
	/_cproc exch ddef
	/_cscript currentfont /FontScript known { currentfont /FontScript get } { -1 } ifelse ddef
	{
		/_lobyte exch ddef
		_hibyte 0 eq
		_cscript 1 eq
		_lobyte 129 ge _lobyte 159 le and
		_lobyte 224 ge _lobyte 252 le and or and
		_cscript 2 eq
		_lobyte 161 ge _lobyte 254 le and and
		_cscript 3 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript 25 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript -1 eq
		or or or or and
		{
			/_hibyte _lobyte ddef
		}
		{
			_hibyte 256 mul _lobyte add
			_cproc
			/_hibyte 0 ddef
		} ifelse
	} forall
} def
/cstring
{
	dup 256 lt
	{
		(s) dup 0 4 3 roll put
	}
	{
		dup 256 idiv exch 256 mod
		(hl) dup dup 0 6 5 roll put 1 4 3 roll put
	} ifelse
} def
/clength
{
	0 exch
	{ 256 lt { 1 } { 2 } ifelse add } cforall
} def
/hawidthshow
{
	{
		dup cstring
		show
		_hvax _hvay rmoveto
		_hvwb eq { _hvcx _hvcy rmoveto } if
	} cforall
} def
/vawidthshow
{
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			-90 rotate
			0 _fontRotateAdjust rmoveto
			cstring
			_hvcx _hvcy _hvwb _hvax _hvay 6 -1 roll awidthshow
			0 _fontRotateAdjust neg rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			exch _hvay sub exch _hvax sub
			2 index _hvwb eq { exch _hvcy sub exch _hvcx sub } if
			3 2 roll
			cstring
			dup stringwidth pop 2 div neg _fontAscent neg rmoveto
			show
			moveto
		} ifelse
	} cforall
} def
/hvawidthshow
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hawidthshow } { vawidthshow } ifelse
} def
/hvwidthshow
{
	0 0 3 -1 roll hvawidthshow
} def
/hvashow
{
	0 0 0 6 -3 roll hvawidthshow
} def
/hvshow
{
	0 0 0 0 0 6 -1 roll hvawidthshow
} def
currentdict readonly pop end
setpacking
%%EndResource
%%BeginResource: procset Adobe_shading_AI8 1.0 0
%%Title: (Adobe Illustrator 8 Shading Procset)
%%Version: 1.0 0
%%CreationDate: (12/17/97) ()
%%Copyright: ((C) 1987-1997 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /Adobe_shading_AI8 10 dict dup begin put
/initialize {
	Adobe_shading_AI8 begin
	Adobe_shading_AI8 bdprocs
	Mesh /initialize get exec
} def
/terminate {
	currentdict Adobe_shading_AI8 eq {
	 end
	} if
} def
/bdprocs {
	{
		dup xcheck 1 index type /arraytype eq and {
			bind
		} if
		pop pop
	} forall
} def
/X! {pop} def
/X# {pop pop} def
/Mesh 40 dict def
Mesh begin
/initialize {
	Mesh bdprocs
	Mesh begin
		/emulate? /AI8MeshEmulation where {
			pop AI8MeshEmulation
		}{
			systemdict /shfill known not
		} ifelse def
 end
} def
/bd {
	shadingdict begin
} def
/paint {
	emulate? {
	 end
	}{
		/_lp /none ddef _fc /_lp /none ddef
		
		/AIColorSpace AIColorSpace tocolorspace store
		/ColorSpace AIColorSpace topsspace store
		
		version_ge_3010.106 not systemdict /setsmoothness known and {
			0.0001 setsmoothness
		} if
		
		composite? {
			/DataSource getdatasrc def
			Matrix concat
			currentdict end
			shfill
		}{
			AIColorSpace makesmarks AIPlateList markingplate and not isoverprint and {
			 end
			}{
				/ColorSpace /DeviceGray store
				/Decode [0 1 0 1 0 1] store
				/DataSource getplatesrc def
				Matrix concat
				currentdict end
				shfill
			} ifelse
		} ifelse
	} ifelse
} def
/shadingdict 12 dict def
shadingdict begin
	/ShadingType 6 def
	/BitsPerCoordinate 16 def
	/BitsPerComponent 8 def
	/BitsPerFlag 8 def
end
/datafile null def
/databuf 256 string def
/dataptr 0 def
/srcspace null def
/srcchannels 0 def
/dstchannels 0 def
/dstplate 0 def
/srctodstcolor null def
/getplatesrc {
	/srcspace AIColorSpace store
	/srcchannels AIColorSpace getnchannels store
	/dstchannels 1 store
	/dstplate getplateindex store
	/srctodstcolor srcspace makesmarks {
		dstplate 4 eq {
			{1 exch sub}
		}{
			{srcspace tocmyk 3 dstplate sub index 1 exch sub 5 1 roll 4 {pop} repeat}
		} ifelse
	}{
		{srcchannels {pop} repeat 1}
	} ifelse store
	/datafile getdatasrc store
	/rdpatch168 load DataLength () /SubFileDecode filter
} def
/getdatasrc {
	/rdcmntline load /ASCII85Decode filter
} def
/rdpatch168 {
	/dataptr 0 store
	49 rdcount
	4 {
		dup {pop srcchannels getint8} if
		dup {pop srctodstcolor dstchannels putint8 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdpatch3216 {
	/dataptr 0 store
	97 rdcount
	4 {
		dup {pop srcchannels getint16} if
		dup {pop srctodstcolor dstchannels putint16 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdcount {
	dup 0 gt {
		datafile databuf dataptr 4 -1 roll getinterval readstring
		exch length dataptr add /dataptr exch store
	}{
		true
	} ifelse
} def
/getint8 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 255 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint8 {
	dup dataptr add /dataptr exch store
	dataptr exch
	{
		1 sub exch
		255 mul cvi
		databuf 2 index
		3 -1 roll put
	} repeat
	pop
} def 
/getint16 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 256 mul datafile read} if
		dup {pop add 65535 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint16 {
	dup 2 mul dataptr add /dataptr exch store
	dataptr exch
	{
		2 sub exch
		65535 mul cvi dup
		256 idiv databuf 3 index 3 -1 roll put
		256 mod databuf 2 index 1 add 3 -1 roll put
	} repeat
	pop
} def 
/srcbuf 256 string def
/rdcmntline {
	currentfile srcbuf readline pop
	(%) anchorsearch {pop} if
} def
/getplateindex {
	0 [cyan? magenta? yellow? black? customColor?] {{exit} if 1 add} forall
} def
/aicsarray 4 array def
/aicsaltvals 4 array def
/aicsaltcolr aicsaltvals def
/tocolorspace {
	dup type /arraytype eq {
		mark exch aload pop
		aicsarray 0 3 -1 roll put
		aicsarray 1 3 -1 roll put
		dup aicsarray 2 3 -1 roll put
		gettintxform aicsarray 3 3 -1 roll put
		counttomark aicsaltvals 0 3 -1 roll getinterval /aicsaltcolr exch store
		aicsaltcolr astore pop pop
		aicsarray
	} if
} def
/subtintxform {aicsaltcolr {1 index mul exch} forall pop} def
/addtintxform {aicsaltcolr {1 sub 1 index mul 1 add exch} forall pop} def
/gettintxform {
	/DeviceRGB eq {/addtintxform}{/subtintxform} ifelse load
} def
/getnchannels {
	dup type /arraytype eq {0 get} if
	colorspacedict exch get begin Channels end
} def
/makesmarks {
	composite? {
		pop true
	}{
		dup dup type /arraytype eq {0 get} if
		colorspacedict exch get begin MarksPlate end
	} ifelse
} def
/markingplate {
	composite? {
		pop true
	}{
		dup type /arraytype eq {
			dup length getplateindex gt {getplateindex get}{pop false} ifelse
		} if
	} ifelse
} def
/tocmyk {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToCMYK end
} def
/topsspace {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToPSSpace end
} def
/colorspacedict 5 dict dup begin
	/DeviceGray 4 dict dup begin
		/Channels 1 def
		/MarksPlate {pop black?} def
		/ToCMYK {pop 1 exch sub 0 0 0 4 -1 roll} def
		/ToPSSpace {} def
 end def
	/DeviceRGB 4 dict dup begin
		/Channels 3 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop _rgbtocmyk} def
		/ToPSSpace {} def
 end def
	/DeviceCMYK 4 dict dup begin
		/Channels 4 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop} def
		/ToPSSpace {} def
 end def
	/Separation 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			/findcmykcustomcolor where {
				pop dup 1 exch ToCMYK 5 -1 roll 1 get
				findcmykcustomcolor 1 setcustomcolor
				systemdict /currentgray get exec
				1 ne
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {} def
 end def
	/Process 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			isCMYKSep? {
				1 exch ToCMYK 4 array astore getplateindex get 0 ne 
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {
			4 array copy dup 0 /Separation put
		} def
 end def
end def
/isoverprint {
	/currentoverprint where {pop currentoverprint}{_of} ifelse
} def
/version_ge_3010.106 {
   version {cvr} stopped {
      pop
      false
   }{
      3010.106 ge
   } ifelse
} def
end
end
defaultpacking setpacking
%%EndResource
%%EndProlog
%%BeginSetup
userdict /_useSmoothShade false put
userdict /_aicmykps true put
userdict /_forceToCMYK true put
Adobe_level2_AI5 /initialize get exec
Adobe_cshow /initialize get exec
Adobe_ColorImage_AI6 /initialize get exec
Adobe_shading_AI8 /initialize get exec
Adobe_Illustrator_AI5 /initialize get exec
%AI3_BeginRider
currentpacking true setpacking
setpacking
%AI3_EndRider
%AI5_Begin_NonPrinting
Np
%AI8_PluginGroupInfo
(Adobe Path Blends) (Adobe Blends Plugin) (LiveBlends.aip)
%AI8_PluginGroupInfo
(Adobe Tracing Object) (Tracing) (TracingSuite.aip)
%AI8_PluginGroupInfo
(Adobe Scatter Brush Tool) (Adobe Scatter Brush Plugin) (ScatterBrushTool.aip)
%AI8_PluginGroupInfo
(Adobe Scatter Brush Tool) (Adobe Scatter Brush Plugin) (ScatterBrushTool.aip)
%AI8_PluginGroupInfo
(Adobe PatternOnPath Brush Tool) (Adobe Pattern Brush Plugin) (ArtBrushTool.aip)
%AI8_PluginGroupInfo
(Adobe PatternOnPath Brush Tool) (Adobe Pattern Brush Plugin) (ArtBrushTool.aip)
%AI8_PluginGroupInfo
(Adobe ArtOnPath Brush Tool) (Adobe Art Brush Plugin) (ArtBrushTool.aip)
%AI8_PluginGroupInfo
(Adobe ArtOnPath Brush Tool) (Adobe Art Brush Plugin) (ArtBrushTool.aip)
%AI8_PluginGroupInfo
(Adobe Calligraphic Brush Tool) (Adobe Calligraphic Brush Plugin) (CalligBrushTool.aip)
%AI8_PluginGroupInfo
(Adobe Flare Plugin) (Flare) (Flare.aip)
%AI8_PluginGroupInfo
(Adobe Symbolism) (Adobe Symbolism) (ParticleSystem.aip)
%AI8_PluginGroupInfo
(Adobe Deform Plugin) (Adobe Envelope Plugin) (Envelope and Warp.aip)
%AI8_PluginGroupInfo
(Pathfinder Suite) (Adobe Compound Shape) (PathFinderS.aip)
%AI8_PluginGroupInfo
(Adobe Planar Group) (Adobe Live Paint Plugin) (Live Paint.aip)
%AI5_End_NonPrinting--
%AI5_BeginPalette
0 0 Pb
0.74902 0.678431 0.670588 0.901961 ([Registration]) 0 Xs
([Registration])
Pc
PB
%AI5_EndPalette
%%EndSetup
%AI5_BeginLayer
1 1 1 1 0 0 1 0 79 128 255 0 50 Lb
(svg2759) Ln
0 A
u
U
u
u
0 O
0.34902 0.231373 0.305882 0 0.666667 0.698039 0.670588 Xa
0 J 0 j 1 w 4 M []0 d
0 XR
343.9082 320.0474 m
457.2617 319.8457 L
458.8457 319.8457 460.2617 320.0806 460.2617 316.6855 C
460.123 279.3564 L
341.0474 279.3564 L
341.0474 316.8242 L
341.0474 318.4985 341.2095 320.0474 343.9082 320.0474 C
f
*u
1 D
0.74902 0.678431 0.670588 0.901961 0 0 0 Xa
458.2539 320.5 m
342.7476 320.5 L
341.5083 320.5 340.5 319.4917 340.5 318.2529 C
340.5 279.0068 L
340.5 278.7266 340.7271 278.5 341.0073 278.5 C
459.9922 278.5 L
460.2734 278.5 460.5 278.7266 460.5 279.0068 C
460.5 318.2529 L
460.5 319.4917 459.4922 320.5 458.2539 320.5 C
f
0 D
342.7476 319.4849 m
458.2539 319.4849 L
458.9326 319.4849 459.4844 318.9321 459.4844 318.2529 C
459.4844 302.4565 459.4844 291.0322 V
376.9282 291.0322 L
373.9023 285.5615 368.0718 281.8467 361.3809 281.8467 c
354.6885 281.8467 348.8599 285.5586 345.8359 291.0322 C
341.5151 291.0322 L
341.5151 302.4565 341.5151 318.2529 Y
341.5151 318.9321 342.0684 319.4849 342.7476 319.4849 C
f
*U
u
0 0 0 0 1 1 1 Xa
375.0225 300.9487 m
375.0269 293.4189 368.9258 287.3125 361.3955 287.3066 C
353.8657 287.3027 347.7573 293.4033 347.7524 300.9321 C
347.7524 300.938 347.7524 300.9429 347.7524 300.9487 C
347.7476 308.4785 353.8491 314.5854 361.3789 314.5903 C
368.9102 314.5947 375.0181 308.4946 375.0225 300.9653 C
375.0225 300.96 375.0225 300.9541 375.0225 300.9487 C
f
u
*u
0.74902 0.678431 0.670588 0.901961 0 0 0 Xa
372.4717 312.0532 m
375.4946 309.0303 377.0068 305.3281 377.0068 300.9487 c
377.0068 296.5684 375.521 292.9063 372.5493 289.9609 C
369.3955 286.8594 365.6685 285.3086 361.3672 285.3086 c
357.1187 285.3086 353.4561 286.8457 350.3813 289.9219 C
347.3052 292.998 345.7676 296.6729 345.7676 300.9487 c
345.7676 305.2236 347.3052 308.9253 350.3813 312.0532 C
353.3784 315.0776 357.041 316.5894 361.3672 316.5894 c
365.7471 316.5894 369.4478 315.0776 372.4717 312.0532 C
f
1 D
352.4165 310.0195 m
349.8604 307.4375 348.582 304.4136 348.582 300.9448 c
348.582 297.4766 349.8477 294.4775 352.377 291.9492 C
354.9077 289.4189 357.9189 288.1543 361.4141 288.1543 c
364.9087 288.1543 367.9463 289.4316 370.5288 291.9873 C
372.9805 294.3613 374.2061 297.3457 374.2061 300.9448 c
374.2061 304.5166 372.96 307.5483 370.4688 310.0391 C
367.9785 312.5288 364.96 313.7744 361.4141 313.7744 c
357.8677 313.7744 354.8672 312.5225 352.4165 310.0195 C
f
0 D
359.1431 302.4702 m
358.7529 303.3218 358.1689 303.748 357.3882 303.748 c
356.0103 303.748 355.3213 302.8198 355.3213 300.9644 c
355.3213 299.1084 356.0103 298.1816 357.3882 298.1816 c
358.2988 298.1816 358.9487 298.6328 359.3389 299.5381 C
361.25 298.5215 L
360.3389 296.9023 358.9722 296.0928 357.1504 296.0928 c
355.7451 296.0928 354.6196 296.5234 353.7744 297.3848 C
352.9282 298.2461 352.5049 299.4351 352.5049 300.9487 c
352.5049 302.4365 352.9414 303.6172 353.813 304.4922 C
354.6846 305.3667 355.7715 305.8042 357.0732 305.8042 c
358.9995 305.8042 360.3774 305.0449 361.2119 303.5288 C
359.1431 302.4702 L
f
368.1338 302.4702 m
367.7427 303.3218 367.1689 303.748 366.4141 303.748 c
365.0078 303.748 364.3042 302.8198 364.3042 300.9644 c
364.3042 299.1084 365.0078 298.1816 366.4141 298.1816 c
367.3262 298.1816 367.9648 298.6328 368.3286 299.5381 C
370.2822 298.5215 L
369.373 296.9023 368.0083 296.0928 366.1895 296.0928 c
364.7861 296.0928 363.6636 296.5234 362.8184 297.3848 C
361.9751 298.2461 361.5518 299.4351 361.5518 300.9487 c
361.5518 302.4365 361.9805 303.6172 362.8389 304.4922 C
363.6953 305.3667 364.7861 305.8042 366.1123 305.8042 c
368.0347 305.8042 369.4116 305.0449 370.2427 303.5288 C
368.1338 302.4702 L
f
*U
U
/AdobeObjectMatrix (1.000000 0.000000 0.000000 1.000000 -289.615692 99.065300) XT
U
/AdobeObjectMatrix (0.872921 0.000000 0.000000 0.872921 50.125359 143.214401) XT
u
0 0 0 0 1 1 1 Xa
392.2637 316.0137 m
398.1943 316.0137 403.002 311.2065 403.002 305.2764 c
403.002 299.3457 398.1943 294.5391 392.2637 294.5391 c
386.3325 294.5391 381.5244 299.3457 381.5244 305.2764 c
381.5244 311.2065 386.3325 316.0137 392.2637 316.0137 c
f
u
1 D
0.74902 0.678431 0.670588 0.901961 0 0 0 Xa
395.3716 308.3833 m
395.3716 308.7974 395.0356 309.1323 394.6221 309.1323 C
389.8794 309.1323 L
389.4658 309.1323 389.1304 308.7974 389.1304 308.3833 C
389.1304 303.6406 L
390.4531 303.6406 L
390.4531 298.0244 L
394.0479 298.0244 L
394.0479 303.6406 L
395.3716 303.6406 L
395.3716 308.3833 L
395.3716 308.3833 L
f
0 D
392.251 313.001 m
393.1465 313.001 393.873 312.2744 393.873 311.3789 c
393.873 310.4829 393.1465 309.7568 392.251 309.7568 c
391.355 309.7568 390.6284 310.4829 390.6284 311.3789 c
390.6284 312.2744 391.355 313.001 392.251 313.001 c
f
U
*u
1 D
392.2358 317.1074 m
389.0244 317.1074 386.3052 315.9868 384.0796 313.7451 C
381.7964 311.4263 380.6548 308.6816 380.6548 305.5127 c
380.6548 302.3442 381.7964 299.6187 384.0796 297.3379 C
386.3633 295.0586 389.0825 293.918 392.2358 293.918 c
395.4287 293.918 398.1963 295.0674 400.5381 297.3672 C
402.7441 299.5508 403.8467 302.2661 403.8467 305.5127 c
403.8467 308.7598 402.7246 311.5034 400.48 313.7451 C
398.2354 315.9868 395.4878 317.1074 392.2358 317.1074 c
f
0 D
392.2656 315.0215 m
394.8979 315.0215 397.1318 314.0928 398.9697 312.2378 C
400.8286 310.4023 401.7578 308.1602 401.7578 305.5127 c
401.7578 302.8462 400.8477 300.6333 399.0283 298.875 C
397.1123 296.9805 394.8579 296.0342 392.2656 296.0342 c
389.6719 296.0342 387.4365 296.9707 385.5596 298.8457 C
383.6826 300.7202 382.7441 302.9424 382.7441 305.5127 c
382.7441 308.0835 383.6924 310.3247 385.5889 312.2378 C
387.4087 314.0928 389.6338 315.0215 392.2656 315.0215 c
f
*U
U
u
*u
0 0 0 0 1 1 1 Xa
388.9014 287.752 m
389.2168 287.752 389.5049 287.7246 389.7646 287.6689 C
390.0249 287.6133 390.248 287.5225 390.4346 287.3955 C
390.6201 287.2695 390.7637 287.1006 390.8662 286.8906 C
390.9683 286.6797 391.0195 286.4219 391.0195 286.1113 c
391.0195 285.7773 390.9438 285.5 390.7915 285.2783 C
390.6401 285.0547 390.415 284.873 390.1182 284.7305 C
390.5278 284.6133 390.8335 284.4082 391.0352 284.1133 C
391.2373 283.8193 391.3379 283.4648 391.3379 283.0508 c
391.3379 282.7168 391.2729 282.4277 391.1431 282.1836 C
391.0127 281.9395 390.8374 281.7402 390.6172 281.5859 C
390.3975 281.4307 390.1465 281.3164 389.8647 281.2422 C
389.5825 281.168 389.2935 281.1309 388.9951 281.1309 C
385.7793 281.1309 L
385.7793 287.752 L
388.9014 287.752 L
388.9014 287.752 L
f
1 D
388.7148 285.0742 m
388.9751 285.0742 389.1885 285.1367 389.3555 285.2598 C
389.5234 285.3828 389.6069 285.583 389.6069 285.8604 c
389.6069 286.0146 389.5786 286.1416 389.5234 286.2402 C
389.4668 286.3389 389.3931 286.416 389.2998 286.4717 C
389.207 286.5273 389.1001 286.5664 388.98 286.5869 C
388.8584 286.6084 388.7334 286.6191 388.603 286.6191 C
387.2388 286.6191 L
387.2388 285.0742 L
388.7148 285.0742 L
f
388.8003 282.2637 m
388.9429 282.2637 389.0786 282.2773 389.209 282.3057 c
389.3389 282.334 389.4531 282.3809 389.5532 282.4443 C
389.6523 282.5098 389.731 282.5977 389.79 282.709 C
389.8481 282.8203 389.8784 282.9629 389.8784 283.1357 c
389.8784 283.4746 389.7822 283.7178 389.5903 283.8633 C
389.3979 284.0078 389.1436 284.0801 388.8281 284.0801 C
387.2388 284.0801 L
387.2388 282.2637 L
388.8003 282.2637 L
f
*U
0 D
391.5952 287.752 m
393.2275 287.752 L
394.7783 285.1367 L
396.3203 287.752 L
397.9443 287.752 L
395.4849 283.6719 L
395.4849 281.1309 L
394.0254 281.1309 L
394.0254 283.709 L
391.5952 287.752 L
f
U
u
438.9404 282.7676 m
439.0215 282.6133 439.127 282.4883 439.2598 282.3926 c
439.3926 282.2959 439.5479 282.2246 439.7275 282.1787 C
439.9063 282.1318 440.0908 282.1094 440.2832 282.1094 c
440.4121 282.1094 440.5508 282.1191 440.6992 282.1416 C
440.8467 282.1631 440.9854 282.2051 441.1152 282.2676 C
441.2441 282.3281 441.3516 282.4141 441.4395 282.5225 C
441.5254 282.6299 441.5684 282.7676 441.5684 282.9346 c
441.5684 283.1143 441.5117 283.2588 441.3965 283.3701 C
441.2832 283.4824 441.1328 283.5742 440.9482 283.6484 C
440.7637 283.7227 440.5527 283.7871 440.3184 283.8438 C
440.084 283.8994 439.8457 283.9609 439.6055 284.0293 C
439.3574 284.0918 439.1172 284.167 438.8828 284.2559 C
438.6484 284.3457 438.4375 284.4619 438.252 284.6045 C
438.0684 284.7461 437.918 284.9238 437.8047 285.1367 C
437.6895 285.3506 437.6328 285.6094 437.6328 285.9121 c
437.6328 286.252 437.7051 286.5469 437.8496 286.7979 C
437.9951 287.0479 438.1855 287.2568 438.4199 287.4248 C
438.6543 287.5918 438.9199 287.7148 439.2168 287.7949 C
439.5137 287.876 439.8105 287.916 440.1055 287.916 c
440.4531 287.916 440.7852 287.877 441.1025 287.7988 C
441.4199 287.7227 441.7031 287.5957 441.9502 287.4238 C
442.1973 287.25 442.3936 287.0293 442.5391 286.7598 C
442.6836 286.4902 442.7559 286.1641 442.7559 285.7813 C
441.3438 285.7813 L
441.3311 285.9785 441.29 286.1426 441.2188 286.2715 C
441.1484 286.4023 441.0547 286.5039 440.9375 286.5781 C
440.8203 286.6523 440.6865 286.7051 440.5361 286.7354 C
440.3857 286.7666 440.2207 286.7822 440.042 286.7822 c
439.9258 286.7822 439.8086 286.7695 439.6914 286.7451 C
439.5742 286.7207 439.4688 286.6777 439.373 286.6152 C
439.2773 286.5527 439.1992 286.4766 439.1377 286.3828 C
439.0762 286.29 439.0449 286.1729 439.0449 286.0313 c
439.0449 285.9004 439.0703 285.7949 439.1191 285.7158 C
439.168 285.6348 439.2656 285.5605 439.4111 285.4922 c
439.5566 285.4248 439.7568 285.3564 440.0127 285.2891 c
440.2695 285.2207 440.6055 285.1328 441.0186 285.0293 C
441.1416 285.0039 441.3135 284.959 441.5313 284.8936 C
441.751 284.8281 441.9688 284.7266 442.1855 284.584 C
442.4014 284.4404 442.5879 284.25 442.7461 284.0127 C
442.9033 283.7754 442.9814 283.4707 442.9814 283.0986 c
442.9814 282.7959 442.9219 282.5146 442.8047 282.2539 c
442.6875 281.9941 442.5127 281.7695 442.2813 281.582 C
442.0488 281.3926 441.7617 281.2461 441.418 281.1416 C
441.0762 281.0352 440.6787 280.9834 440.2266 280.9834 c
439.8613 280.9834 439.5078 281.0293 439.1641 281.1182 C
438.8213 281.209 438.5186 281.3496 438.2559 281.541 C
437.9932 281.7334 437.7852 281.9785 437.6289 282.2754 C
437.4746 282.5723 437.4004 282.9248 437.4072 283.334 C
438.8203 283.334 L
438.8203 283.1113 438.8594 282.9219 438.9404 282.7676 c
f
*u
447.1465 287.752 m
449.623 281.1309 L
448.1113 281.1309 L
447.6094 282.6055 L
445.1328 282.6055 L
444.6133 281.1309 L
443.1475 281.1309 L
445.6523 287.752 L
447.1465 287.752 L
f
1 D
447.2295 283.6924 m
446.3945 286.1201 L
446.375 286.1201 L
445.5137 283.6924 L
447.2295 283.6924 L
f
*U
U
u
0 D
413.0176 287.752 m
415.7852 283.3105 L
415.8008 283.3105 L
415.8008 287.752 L
417.166 287.752 L
417.166 281.1309 L
415.71 281.1309 L
412.9531 285.5645 L
412.9355 285.5645 L
412.9355 281.1309 L
411.5684 281.1309 L
411.5684 287.752 L
413.0176 287.752 L
f
422.6953 285.9883 m
422.6094 286.1279 422.5 286.25 422.3711 286.3555 C
422.2402 286.46 422.0938 286.543 421.9297 286.6006 C
421.7656 286.6602 421.5938 286.6895 421.416 286.6895 c
421.0879 286.6895 420.8086 286.626 420.5801 286.499 C
420.3506 286.373 420.166 286.2031 420.0234 285.9893 C
419.8809 285.7754 419.7773 285.5332 419.7129 285.2617 C
419.6475 284.9902 419.6152 284.709 419.6152 284.418 c
419.6152 284.1396 419.6475 283.8691 419.7129 283.6074 C
419.7773 283.3438 419.8809 283.1074 420.0234 282.8975 C
420.166 282.6875 420.3506 282.5195 420.5801 282.3926 c
420.8086 282.2656 421.0879 282.2021 421.416 282.2021 c
421.8594 282.2021 422.209 282.3379 422.459 282.6104 C
422.709 282.8828 422.8623 283.2412 422.918 283.6865 C
424.3281 283.6865 L
424.291 283.2725 424.1953 282.8975 424.041 282.5645 C
423.8867 282.2285 423.6816 281.9453 423.4277 281.709 C
423.1748 281.4727 422.8779 281.2939 422.5371 281.1699 C
422.1973 281.0449 421.8232 280.9834 421.416 280.9834 c
420.9082 280.9834 420.4512 281.0713 420.0459 281.248 C
419.6416 281.4238 419.2988 281.668 419.0205 281.9756 C
418.7422 282.2852 418.5273 282.6494 418.3789 283.0664 C
418.2305 283.4844 418.1563 283.9336 418.1563 284.418 c
418.1563 284.9121 418.2305 285.3711 418.3789 285.7949 c
418.5273 286.2188 418.7422 286.5889 419.0205 286.9043 C
419.2988 287.2197 419.6416 287.4668 420.0459 287.6465 C
420.4512 287.8262 420.9082 287.916 421.416 287.916 c
421.7803 287.916 422.125 287.8633 422.4492 287.7578 C
422.7744 287.6523 423.0654 287.499 423.3213 287.2969 C
423.5781 287.0967 423.79 286.8477 423.957 286.5508 c
424.124 286.2539 424.2285 285.9121 424.2725 285.5293 C
422.8623 285.5293 L
422.8379 285.6963 422.7813 285.8496 422.6953 285.9883 C
f
U
u
455.0801 305.5195 m
455.084 299.6743 450.3486 294.9316 444.502 294.9277 C
438.6563 294.9238 433.9141 299.6582 433.9102 305.5049 C
433.9102 305.5088 433.9102 305.5146 433.9102 305.5195 C
433.9063 311.3643 438.6416 316.1064 444.4863 316.1108 C
450.333 316.1152 455.0742 311.3799 455.0801 305.5352 C
455.0801 305.5293 455.0801 305.5249 455.0801 305.5195 C
f
u
*u
1 D
0.74902 0.678431 0.670588 0.901961 0 0 0 Xa
444.4189 317.1143 m
441.207 317.1143 438.4873 315.9932 436.2627 313.7524 C
433.9795 311.4331 432.8369 308.6885 432.8369 305.5195 c
432.8369 302.3501 433.9795 299.6255 436.2627 297.3447 C
438.5449 295.0645 441.2646 293.9238 444.4189 293.9238 c
447.6113 293.9238 450.3789 295.0742 452.7207 297.373 C
454.9258 299.5576 456.0293 302.2729 456.0293 305.5195 c
456.0293 308.7656 454.9082 311.5103 452.6621 313.7524 C
450.418 315.9932 447.6699 317.1143 444.4189 317.1143 c
f
0 D
444.4473 315.0269 m
447.0801 315.0269 449.3145 314.0996 451.1533 312.2441 C
453.0107 310.4087 453.9395 308.168 453.9395 305.5195 c
453.9395 302.8525 453.0303 300.6401 451.2109 298.8809 C
449.2949 296.9873 447.04 296.041 444.4473 296.041 c
441.8555 296.041 439.6191 296.9785 437.7422 298.8525 C
435.8662 300.7271 434.9277 302.9487 434.9277 305.5195 c
434.9277 308.0898 435.875 310.3315 437.7715 312.2441 C
439.5908 314.0996 441.8164 315.0269 444.4473 315.0269 c
f
*U
439.2793 307.1553 m
439.7412 310.0732 441.7949 311.6328 444.3691 311.6328 c
448.0703 311.6328 450.3271 308.9468 450.3271 305.3652 c
450.3271 301.8696 447.9258 299.1553 444.3105 299.1553 c
441.8242 299.1553 439.5967 300.6855 439.1914 303.6895 C
442.1133 303.6895 L
442.2002 302.1304 443.2129 301.5811 444.6582 301.5811 c
446.3066 301.5811 447.377 303.1118 447.377 305.4512 c
447.377 307.9072 446.4521 309.2061 444.7158 309.2061 c
443.4434 309.2061 442.3447 308.7437 442.1133 307.1553 C
442.9629 307.1611 L
440.6631 304.8613 L
438.3633 307.1611 L
439.2793 307.1553 L
f
U
/AdobeObjectMatrix (1.000000 0.000000 0.000000 1.000000 -23.952101 -89.729622) XT
U
/AdobeObjectMatrix (0.624995 0.000000 0.000000 0.624995 152.298706 316.932800) XT
u
0 0 0 0 1 1 1 Xa
429.1299 305.519 m
429.1348 299.561 424.3076 294.7305 418.3506 294.7246 C
412.3926 294.7207 407.5586 299.5464 407.5547 305.5039 C
407.5547 305.5088 407.5547 305.5142 407.5547 305.519 C
407.5498 311.4766 412.377 316.3086 418.334 316.3135 C
424.292 316.3174 429.126 311.4912 429.1299 305.5347 C
429.1299 305.5303 429.1299 305.5239 429.1299 305.519 C
f
*u
0.74902 0.678431 0.670588 0.901961 0 0 0 Xa
418.3271 317.1143 m
421.5781 317.1143 424.3262 315.9932 426.5703 313.7524 C
428.8164 311.5103 429.9385 308.7656 429.9385 305.519 c
429.9385 302.2729 428.835 299.5576 426.6299 297.373 C
424.2871 295.0742 421.5205 293.9238 418.3271 293.9238 c
415.1738 293.9238 412.4541 295.0645 410.1719 297.3447 C
407.8877 299.624 406.7461 302.3501 406.7461 305.519 c
406.7461 308.6885 407.8877 311.4331 410.1719 313.7524 C
412.3965 315.9932 415.1152 317.1143 418.3271 317.1143 c
f
1 D
409.3555 308.6343 m
409.0088 307.6563 408.8359 306.6177 408.8359 305.519 c
408.8359 302.9487 409.7744 300.7271 411.6514 298.8516 C
413.5283 296.9785 415.7637 296.041 418.3564 296.041 c
420.9492 296.041 423.2041 296.9873 425.1191 298.8809 C
425.7598 299.501 426.2891 300.1768 426.7031 300.9092 C
422.332 302.856 L
422.0371 301.3848 420.7256 300.3921 419.1406 300.2754 C
419.1406 298.4873 L
417.8086 298.4873 L
417.8086 300.2754 L
416.5088 300.29 415.251 300.8228 414.2891 301.6641 C
415.8867 303.2739 L
416.6563 302.5503 417.4248 302.2251 418.4746 302.2251 c
419.1563 302.2251 419.9102 302.4912 419.9102 303.3779 c
419.9102 303.6914 419.7881 303.9102 419.5967 304.0742 C
418.4912 304.5669 L
417.1143 305.1797 L
416.4336 305.4829 415.8564 305.7393 415.2773 305.9971 C
409.3555 308.6343 L
f
418.3564 315.0269 m
415.7246 315.0269 413.5 314.0996 411.6807 312.2441 C
411.1855 311.7446 410.7549 311.2227 410.3887 310.6777 C
414.8223 308.7046 L
415.2227 309.9341 416.3906 310.6802 417.8086 310.7632 C
417.8086 312.5513 L
419.1406 312.5513 L
419.1406 310.7632 L
420.0576 310.7188 421.0625 310.4673 422.0547 309.6997 C
420.5313 308.1338 L
419.9688 308.5322 419.2588 308.813 418.5488 308.813 c
417.9727 308.813 417.1582 308.6367 417.1582 307.9131 c
417.1582 307.8022 417.1953 307.7046 417.2627 307.6187 C
418.7461 306.9585 L
419.749 306.5107 L
420.3916 306.2246 421.0039 305.9531 421.6113 305.6821 C
427.5537 303.0371 L
427.75 303.8154 427.8477 304.6431 427.8477 305.519 c
427.8477 308.168 426.9189 310.4087 425.0625 312.2441 C
423.2236 314.0996 420.9883 315.0269 418.3564 315.0269 c
f
*U
U
/AdobeObjectMatrix (1.146822 0.000000 0.000000 1.146822 -85.924637 166.153000) XT
U
/AdobeObjectMatrix (0.993781 0.000000 0.000000 0.993670 -437.123352 -74.436913) XT
U
LB
%AI5_EndLayer--
%AI3_BeginCrops
userdict /AI3_noCropMarks known not {
0 A
u
u
0 D
0 R
0 G
0 J 0 j 0.5 w 4 M []0 d
0 XR
331.5 278.5 m
304.5 278.5 L
S
340.5 269.5 m
340.5 242.5 L
S
U
u
331.5 320.5 m
304.5 320.5 L
S
340.5 329.5 m
340.5 356.5 L
S
U
u
469.5 320.5 m
496.5 320.5 L
S
460.5 329.5 m
460.5 356.5 L
S
U
u
469.5 278.5 m
496.5 278.5 L
S
460.5 269.5 m
460.5 242.5 L
S
U
U
} if
%AI3_EndCrops
%%PageTrailer
gsave annotatepage grestore showpage
%%Trailer
Adobe_Illustrator_AI5 /terminate get exec
Adobe_shading_AI8 /terminate get exec
Adobe_ColorImage_AI6 /terminate get exec
Adobe_cshow /terminate get exec
Adobe_level2_AI5 /terminate get exec
%%EOF

%%EndDocument
 @endspecial 0 TeXcolorgray -8000 58000 a
tx@Dict begin  PutEnd  end
 -8000 58000
a -8000 58000 a
SDict begin [ {ThisPage}<</Trans << /S /Replace >> >> /PUT pdfmark
end
 -8000 58000 a -8000 58000 a
SDict begin H.S end
 -8000 58000
a -8000 58000 a
SDict begin 17 H.A end
 -8000 58000 a -8000 58000 a
SDict begin [/View [/XYZ H.V]/Dest (slide.1) cvn /DEST pdfmark end
 -8000 58000
a -8000 58000 a
tx@Dict begin { 59.62032 208.6787 } PutCoor PutBegin  end
 -8000 58000 a 0.74902 0.98431 0.78824
TeXcolorrgb 0.89804 0.2902 0.2706 TeXcolorrgb 4071 x
Fv(T)-529 b(eor)-55 b(ia)1570 b(da)g(Comple)-88 b(xidade)-8000
65398 y Fu(Nota\347\343o)759 b(Assint)-43 b(\363)-53
b(tic)g(a)p 0.74902 0.98431 0.78824 TeXcolorrgb 0.74902 0.98431 0.78824
TeXcolorrgb 32698 75538 a Ft(P)-89 b(r)-128 b(of)-32
b(.)1022 b(Diego)877 b(Noble)p 0.89804 0.2902 0.2706
TeXcolorrgb 32566 80674 a
SDict begin H.S end
 32566 80674 a 0.89804 0.2902 0.2706
TeXcolorrgb 0.74902 0.98431 0.78824 TeXcolorrgb -708
x Fs(your@mail.com)p 0.89804 0.2902 0.2706 TeXcolorrgb
0.89804 0.2902 0.2706 TeXcolorrgb 53600 78018 a
SDict begin H.R end
 53600
78018 a 53600 79966 a
SDict begin [/H /I/Border [0 0 0]BorderArrayPatch/Color [0 1 1]/Action
<</Subtype/URI/URI(mailto:your@mail.com)>>/Subtype /Link H.B /ANN pdfmark
end
 53600 79966 a 0.74902 0.98431 0.78824
TeXcolorrgb 33016 88136 a Fr(6)730 b(de)h(agosto)g(de)g(2018)p
0.74902 0.98431 0.78824 TeXcolorrgb 0 TeXcolorgray -8000
58000 a
tx@Dict begin  PutEnd  end
 -8000 58000 a 0 TeXcolorgray 0 TeXcolorgray eop
end
%%Page: 2 2
TeXDict begin @landscape 2 1 bop 0 TeXcolorgray 8000
4901 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 8000 4901 a 0 TeXcolorgray 0 TeXcolorgray -8000
54901 a
tx@Dict begin tx@ovlDict begin InitOL /TheOL (0) def end end
 -8000 54901 a -8000 54901 a
tx@Dict begin tx@ovlDict begin (0) BOL end end
 -8000 54901 a 3099
x @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.0 SLW 1 1 1  setrgbcolor   0. true 0.0 0.0 397.48499 298.11374 .5
Frame  gsave 1 1 1  setrgbcolor  1. .setopacityalpha  fill  grestore
end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0.89804 0.2902 0.2706  setrgbcolor  /ArrowA { moveto } def
/ArrowB { } def  [ 377.60951 268.30054 19.87546 268.30054   /Lineto
/lineto load def 0  setlinejoin false Line  gsave 0.8 SLW 0.89804 0.2902
0.2706  setrgbcolor  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial -8000 58000 a
SDict begin [ {ThisPage}<</Trans << /S /Wipe >> >> /PUT pdfmark end
 -8000 58000 a
-8000 58000 a
SDict begin H.S end
 -8000 58000 a -8000 58000 a
SDict begin 17 H.A end
 -8000 58000
a -8000 58000 a
SDict begin [/View [/XYZ H.V]/Dest (slide.2) cvn /DEST pdfmark end
 -8000 58000 a -8000 58000 a
tx@Dict begin { 19.87546 274.26408 } PutCoor PutBegin  end
 -8000 58000
a 0.89804 0.2902 0.2706 TeXcolorrgb 532 x Fv(Intr)-160
b(odu\347\343o)p 0 TeXcolorgray -8000 58000 a
tx@Dict begin  PutEnd  end
 -8000 58000
a -8000 58000 a
tx@Dict begin { 391.52295 4.47151 } PutCoor PutBegin  end
 -8000 58000 a -675 w Fq(2)-8000 58000
y
tx@Dict begin  PutEnd  end
 -8000 58000 a -8000 58000 a
tx@Dict begin { 19.87546 259.35748 } PutCoor PutBegin  end
 -8000 58000 a 0.12158 0.21176 0.33725
TeXcolorrgb -8000 70106 a
tx@Dict begin tx@ovlDict begin (1) BOL end end
 -8000 70106 a 0.12158 0.21176 0.33725
TeXcolorrgb -8000 70106 a
tx@Dict begin tx@ovlDict begin (0) BOL end end
 -8000 70106 a 0.12158 0.21176 0.33725
TeXcolorrgb 2446 x Fp(n)p 0.12158 0.21176 0.33725 TeXcolorrgb
3188 w Fo(Analisar)2096 b(algor)-45 b(itmos)2098 b(signi\033c)-99
b(a)2096 b(de)-41 b(t)-51 b(er)-45 b(minar)2096 b(os)g(r)-156
b(ecur)-96 b(sos)-3127 76315 y(comput)-38 b(acionais)1122
b(que)d(o)g(algor)-45 b(itmo)1122 b(r)-156 b(equer)1119
b(conf)-73 b(or)-45 b(me)1121 b(o)f(t)-38 b(a-)-3127
80079 y(manho)957 b(da)f(entr)-131 b(ada)957 b(aument)-38
b(a.)p 0.12158 0.21176 0.33725 TeXcolorrgb -8000 88492
a Fn(!)707 b Fo(O)f(obje)-41 b(tiv)-89 b(o)706 b(dest)-38
b(a)706 b(aula)h(\351)f(\020concr)-156 b(e)-41 b(tiz)-77
b(ar\021)708 b(est)-38 b(a)706 b(ideia)g(de)g(an\341lise.)71199
88492 y
tx@Dict begin tx@ovlDict begin (1) BOL end end
 71199 88492 a -8000 92255 a Fn(!)914 b Fo(Es)-51
b(se)914 b(\351)f(pas)-51 b(so)914 b(inicial)h(par)-131
b(a)915 b(compr)-156 b(eender)914 b(o)g(conceit)-48 b(o)915
b(de)e Fm(tr)-124 b(a-)-8000 96019 y(t)-38 b(abilidade)p
Fo(.)p 0 TeXcolorgray -8000 58000 a
tx@Dict begin  PutEnd  end
 -8000 58000 a 0 TeXcolorgray
0 TeXcolorgray eop end
%%Page: 3 3
TeXDict begin @landscape 3 2 bop 0 TeXcolorgray 8000
4901 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 8000 4901 a 0 TeXcolorgray 0 TeXcolorgray -8000
54901 a
tx@Dict begin tx@ovlDict begin InitOL /TheOL (0) def end end
 -8000 54901 a -8000 54901 a
tx@Dict begin tx@ovlDict begin (0) BOL end end
 -8000 54901 a 3099
x @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.0 SLW 1 1 1  setrgbcolor   0. true 0.0 0.0 397.48499 298.11374 .5
Frame  gsave 1 1 1  setrgbcolor  1. .setopacityalpha  fill  grestore
end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0.89804 0.2902 0.2706  setrgbcolor  /ArrowA { moveto } def
/ArrowB { } def  [ 377.60951 268.30054 19.87546 268.30054   /Lineto
/lineto load def 0  setlinejoin false Line  gsave 0.8 SLW 0.89804 0.2902
0.2706  setrgbcolor  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial -8000 58000 a
SDict begin [ {ThisPage}<</Trans << /S /Wipe >> >> /PUT pdfmark end
 -8000 58000 a
-8000 58000 a
tx@Dict begin { 19.87546 274.26408 } PutCoor PutBegin  end
 -8000 58000 a 0.89804 0.2902 0.2706 TeXcolorrgb
532 x Fv(Intr)-160 b(odu\347\343o)p 0 TeXcolorgray -8000
58000 a
tx@Dict begin  PutEnd  end
 -8000 58000 a -8000 58000 a
tx@Dict begin { 391.52295 4.47151 } PutCoor PutBegin  end
 -8000 58000 a -675
w Fq(2)-8000 58000 y
tx@Dict begin  PutEnd  end
 -8000 58000 a -8000 58000 a
tx@Dict begin { 19.87546 259.35748 } PutCoor PutBegin  end
 -8000
58000 a 0.12158 0.21176 0.33725 TeXcolorrgb -8000 70106
a
tx@Dict begin tx@ovlDict begin (1) BOL end end
 -8000 70106 a 0.12158 0.21176 0.33725 TeXcolorrgb -8000
70106 a
tx@Dict begin tx@ovlDict begin (0) BOL end end
 -8000 70106 a 0.12158 0.21176 0.33725 TeXcolorrgb
2446 x Fp(n)p 0.12158 0.21176 0.33725 TeXcolorrgb 3188
w Fo(Analisar)2096 b(algor)-45 b(itmos)2098 b(signi\033c)-99
b(a)2096 b(de)-41 b(t)-51 b(er)-45 b(minar)2096 b(os)g(r)-156
b(ecur)-96 b(sos)-3127 76315 y(comput)-38 b(acionais)1122
b(que)d(o)g(algor)-45 b(itmo)1122 b(r)-156 b(equer)1119
b(conf)-73 b(or)-45 b(me)1121 b(o)f(t)-38 b(a-)-3127
80079 y(manho)957 b(da)f(entr)-131 b(ada)957 b(aument)-38
b(a.)p 0.12158 0.21176 0.33725 TeXcolorrgb -8000 88492
a Fn(!)707 b Fo(O)f(obje)-41 b(tiv)-89 b(o)706 b(dest)-38
b(a)706 b(aula)h(\351)f(\020concr)-156 b(e)-41 b(tiz)-77
b(ar\021)708 b(est)-38 b(a)706 b(ideia)g(de)g(an\341lise.)-8000
92255 y Fn(!)914 b Fo(Es)-51 b(se)914 b(\351)f(pas)-51
b(so)914 b(inicial)h(par)-131 b(a)915 b(compr)-156 b(eender)914
b(o)g(conceit)-48 b(o)915 b(de)e Fm(tr)-124 b(a-)-8000
96019 y(t)-38 b(abilidade)p Fo(.)p 0 TeXcolorgray -8000
58000 a
tx@Dict begin  PutEnd  end
 -8000 58000 a 0 TeXcolorgray 0 TeXcolorgray eop
end
%%Page: 4 4
TeXDict begin @landscape 4 3 bop 0 TeXcolorgray 8000
4901 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 8000 4901 a 0 TeXcolorgray 0 TeXcolorgray -8000
54901 a
tx@Dict begin tx@ovlDict begin InitOL /TheOL (0) def end end
 -8000 54901 a -8000 54901 a
tx@Dict begin tx@ovlDict begin (0) BOL end end
 -8000 54901 a 3099
x @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.0 SLW 1 1 1  setrgbcolor   0. true 0.0 0.0 397.48499 298.11374 .5
Frame  gsave 1 1 1  setrgbcolor  1. .setopacityalpha  fill  grestore
end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0.89804 0.2902 0.2706  setrgbcolor  /ArrowA { moveto } def
/ArrowB { } def  [ 377.60951 268.30054 19.87546 268.30054   /Lineto
/lineto load def 0  setlinejoin false Line  gsave 0.8 SLW 0.89804 0.2902
0.2706  setrgbcolor  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial -8000 58000 a
SDict begin [ {ThisPage}<</Trans << /S /Wipe >> >> /PUT pdfmark end
 -8000 58000 a
-8000 58000 a
SDict begin H.S end
 -8000 58000 a -8000 58000 a
SDict begin 17 H.A end
 -8000 58000
a -8000 58000 a
SDict begin [/View [/XYZ H.V]/Dest (slide.3) cvn /DEST pdfmark end
 -8000 58000 a -8000 58000 a
tx@Dict begin { 19.87546 274.26408 } PutCoor PutBegin  end
 -8000 58000
a 0.89804 0.2902 0.2706 TeXcolorrgb 532 x Fv(Conte\372do)p
0 TeXcolorgray -8000 58000 a
tx@Dict begin  PutEnd  end
 -8000 58000 a -8000 58000
a
tx@Dict begin { 391.52295 4.47151 } PutCoor PutBegin  end
 -8000 58000 a -715 w Fq(3)-8000 58000 y
tx@Dict begin  PutEnd  end
 -8000 58000
a -8000 58000 a
tx@Dict begin { 19.87546 259.35748 } PutCoor PutBegin  end
 -8000 58000 a 0.12158 0.21176 0.33725
TeXcolorrgb 0.89804 0.2902 0.2706 TeXcolorrgb -8000 81011
a
SDict begin H.S end
 -8000 81011 a 0.89804 0.2902 0.2706 TeXcolorrgb -60
x Fl(Conceit)-55 b(o)1517 b(de)e(E\033ci\352ncia)p 0.89804 0.2902 0.2706
TeXcolorrgb 36820 77558 a
SDict begin H.R end
 36820 77558 a 36820 80951 a
SDict begin [/Color [1 0 0]/H /I/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (slide.4) cvn H.B /ANN pdfmark end

36820 80951 a 0.12158 0.21176 0.33725 TeXcolorrgb 0.89804 0.2902 0.2706
TeXcolorrgb -8000 88603 a
SDict begin H.S end
 -8000 88603 a 0.89804 0.2902 0.2706
TeXcolorrgb -1010 x Fl(No)-64 b(t)-55 b(a\347\343o)1517
b(As)-64 b(sint)-110 b(\363)-152 b(tic)-110 b(a)p 0.89804 0.2902 0.2706
TeXcolorrgb 31585 84383 a
SDict begin H.R end
 31585 84383 a 31585 87593 a
SDict begin [/Color [1 0 0]/H /I/Border [0 0 0]BorderArrayPatch/Subtype
/Link/Dest (slide.9) cvn H.B /ANN pdfmark end

31585 87593 a 0.12158 0.21176 0.33725 TeXcolorrgb 0 TeXcolorgray
-8000 58000 a
tx@Dict begin  PutEnd  end
 -8000 58000 a 0 TeXcolorgray 0 TeXcolorgray
eop end
%%Page: 5 5
TeXDict begin @landscape 5 4 bop 0 TeXcolorgray 8000
4901 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 8000 4901 a 0 TeXcolorgray 0 TeXcolorgray -8000
54901 a
tx@Dict begin tx@ovlDict begin InitOL /TheOL (0) def end end
 -8000 54901 a -8000 54901 a
tx@Dict begin tx@ovlDict begin (0) BOL end end
 -8000 54901 a 3099
x @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.0 SLW 1 1 1  setrgbcolor   0. true 0.0 0.0 397.48499 298.11374 .5
Frame  gsave 1 1 1  setrgbcolor  1. .setopacityalpha  fill  grestore
end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0.89804 0.2902 0.2706  setrgbcolor  /ArrowA { moveto } def
/ArrowB { } def  [ 377.60951 268.30054 19.87546 268.30054   /Lineto
/lineto load def 0  setlinejoin false Line  gsave 0.8 SLW 0.89804 0.2902
0.2706  setrgbcolor  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.0 SLW 0.12158 0.21176 0.33725  setrgbcolor   0. true 0.0 0.0 397.48499
298.11374 .5 Frame  gsave 0.12158 0.21176 0.33725  setrgbcolor  1.
.setopacityalpha  fill  grestore end
 
@endspecial
-8000 58000 a
SDict begin [ {ThisPage}<</Trans << /S /Wipe >> >> /PUT pdfmark end
 -8000 58000 a -8000 58000 a
SDict begin H.S end
 -8000 58000
a -8000 58000 a
SDict begin 17 H.A end
 -8000 58000 a -8000 58000 a
SDict begin [/View [/XYZ H.V]/Dest (slide.4) cvn /DEST pdfmark end
 -8000 58000
a -8000 58000 a
tx@Dict begin { 198.7425 163.96346 } PutCoor PutBegin  end
 -8000 58000 a 0.89804 0.2902 0.2706 TeXcolorrgb
-31864 62650 a Fv(Conceito)1569 b(de)h(E\033ci\352ncia)p
0 TeXcolorgray -8000 58000 a
tx@Dict begin  PutEnd  end
 -8000 58000 a -8000 58000
a
tx@Dict begin { 391.52295 4.47151 } PutCoor PutBegin  end
 -8000 58000 a -723 w Fq(4)-8000 58000 y
tx@Dict begin  PutEnd  end
 -8000 58000
a -8000 58000 a
tx@Dict begin { 19.87546 259.35748 } PutCoor PutBegin  end
 -8000 58000 a 0.12158 0.21176 0.33725
TeXcolorrgb 0 TeXcolorgray -8000 58000 a
tx@Dict begin  PutEnd  end
 -8000 58000
a 0 TeXcolorgray 0 TeXcolorgray eop end
%%Page: 6 6
TeXDict begin @landscape 6 5 bop 0 TeXcolorgray 8000
4901 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 8000 4901 a 0 TeXcolorgray 0 TeXcolorgray -8000
54901 a
tx@Dict begin tx@ovlDict begin InitOL /TheOL (0) def end end
 -8000 54901 a -8000 54901 a
tx@Dict begin tx@ovlDict begin (0) BOL end end
 -8000 54901 a 3099
x @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.0 SLW 1 1 1  setrgbcolor   0. true 0.0 0.0 397.48499 298.11374 .5
Frame  gsave 1 1 1  setrgbcolor  1. .setopacityalpha  fill  grestore
end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0.89804 0.2902 0.2706  setrgbcolor  /ArrowA { moveto } def
/ArrowB { } def  [ 377.60951 268.30054 19.87546 268.30054   /Lineto
/lineto load def 0  setlinejoin false Line  gsave 0.8 SLW 0.89804 0.2902
0.2706  setrgbcolor  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial -8000 58000 a
SDict begin [ {ThisPage}<</Trans << /S /Wipe >> >> /PUT pdfmark end
 -8000 58000 a
-8000 58000 a
SDict begin H.S end
 -8000 58000 a -8000 58000 a
SDict begin 17 H.A end
 -8000 58000
a -8000 58000 a
SDict begin [/View [/XYZ H.V]/Dest (slide.5) cvn /DEST pdfmark end
 -8000 58000 a -8000 58000 a
tx@Dict begin { 19.87546 274.26408 } PutCoor PutBegin  end
 -8000 58000
a 0.89804 0.2902 0.2706 TeXcolorrgb 532 x Fv(Comple)-88
b(xidade)p 0 TeXcolorgray -8000 58000 a
tx@Dict begin  PutEnd  end
 -8000 58000 a
-8000 58000 a
tx@Dict begin { 391.52295 4.47151 } PutCoor PutBegin  end
 -8000 58000 a -676 w Fq(5)-8000 58000 y
tx@Dict begin  PutEnd  end

-8000 58000 a -8000 58000 a
tx@Dict begin { 19.87546 259.35748 } PutCoor PutBegin  end
 -8000 58000 a 0.12158 0.21176 0.33725
TeXcolorrgb -8000 74272 a
tx@Dict begin tx@ovlDict begin (1) BOL end end
 -8000 74272 a 0.12158 0.21176 0.33725
TeXcolorrgb -8000 74272 a
tx@Dict begin tx@ovlDict begin (0) BOL end end
 -8000 74272 a 0.12158 0.21176 0.33725
TeXcolorrgb 3522 x Fp(n)p 0.12158 0.21176 0.33725 TeXcolorrgb
0.89804 0.2902 0.2706 TeXcolorrgb 4592 w Fk(Encontr)-179
b(ar)2664 b(algor)-55 b(itmos)2664 b(e\033cient)-69 b(es)2664
b(par)-179 b(a)-1723 83328 y(solucionar)1287 b(pr)-220
b(oblemas)1289 b(comput)-55 b(acionais.)p 0.12158 0.21176 0.33725
TeXcolorrgb 0.12158 0.21176 0.33725 TeXcolorrgb -8000
90856 a Fj(Mas)1378 b(o)g(que)g(\351)f(\020)p 0.89804 0.2902 0.2706
TeXcolorrgb Fk(e)-83 b(x)-156 b(ecut)-55 b(ar)1379 b(r)-179
b(apidament)-69 b(e)p 0.12158 0.21176 0.33725 TeXcolorrgb
Fj(\021?)p 0 TeXcolorgray -8000 58000 a
tx@Dict begin  PutEnd  end
 -8000 58000 a
0 TeXcolorgray 0 TeXcolorgray eop end
%%Page: 7 7
TeXDict begin @landscape 7 6 bop 0 TeXcolorgray 8000
4901 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 8000 4901 a 0 TeXcolorgray 0 TeXcolorgray -8000
54901 a
tx@Dict begin tx@ovlDict begin InitOL /TheOL (0) def end end
 -8000 54901 a -8000 54901 a
tx@Dict begin tx@ovlDict begin (0) BOL end end
 -8000 54901 a 3099
x @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.0 SLW 1 1 1  setrgbcolor   0. true 0.0 0.0 397.48499 298.11374 .5
Frame  gsave 1 1 1  setrgbcolor  1. .setopacityalpha  fill  grestore
end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0.89804 0.2902 0.2706  setrgbcolor  /ArrowA { moveto } def
/ArrowB { } def  [ 377.60951 268.30054 19.87546 268.30054   /Lineto
/lineto load def 0  setlinejoin false Line  gsave 0.8 SLW 0.89804 0.2902
0.2706  setrgbcolor  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial -8000 58000 a
SDict begin [ {ThisPage}<</Trans << /S /Wipe >> >> /PUT pdfmark end
 -8000 58000 a
-8000 58000 a
SDict begin H.S end
 -8000 58000 a -8000 58000 a
SDict begin 17 H.A end
 -8000 58000
a -8000 58000 a
SDict begin [/View [/XYZ H.V]/Dest (slide.6) cvn /DEST pdfmark end
 -8000 58000 a -8000 58000 a
tx@Dict begin { 19.87546 274.26408 } PutCoor PutBegin  end
 -8000 58000
a 0.89804 0.2902 0.2706 TeXcolorrgb 532 x Fv(E\033ci\352ncia)1572
b(I)p 0 TeXcolorgray -8000 58000 a
tx@Dict begin  PutEnd  end
 -8000 58000 a -8000
58000 a
tx@Dict begin { 391.52295 4.47151 } PutCoor PutBegin  end
 -8000 58000 a -753 w Fq(6)-8000 58000 y
tx@Dict begin  PutEnd  end
 -8000
58000 a -8000 58000 a
tx@Dict begin { 19.87546 259.35748 } PutCoor PutBegin  end
 -8000 58000 a 0.12158 0.21176 0.33725
TeXcolorrgb -8000 77461 a
SDict begin H.S end
 -8000 77461 a -8000 77461 a
SDict begin 25 H.A end

-8000 77461 a -8000 77461 a
SDict begin [/View [/XYZ H.V]/Dest (defn.1) cvn /DEST pdfmark end
 -8000 77461 a 0.12158 0.21176 0.33725
TeXcolorrgb Fl(De\033ni\347\343o)1749 b(1.)p 0.12158 0.21176 0.33725
TeXcolorrgb 1175 w Fj(Um)1588 b(algor)-64 b(itmo)1588
b(\351)g(e\033cient)-73 b(e)1589 b(se,)-8000 82996 y(quando)2642
b(implement)-55 b(ado,)2958 b(e)-78 b(x)-152 b(ecut)-55
b(a)2643 b(r)-188 b(apida-)-8000 88531 y(ment)-73 b(e)955
b(par)-188 b(a)956 b(inst\342ncias)f(r)-225 b(eais)955
b(como)h(entr)-188 b(ada.)p 0 TeXcolorgray -8000 58000
a
tx@Dict begin  PutEnd  end
 -8000 58000 a 0 TeXcolorgray 0 TeXcolorgray eop end
%%Page: 8 8
TeXDict begin @landscape 8 7 bop 0 TeXcolorgray 8000
4901 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 8000 4901 a 0 TeXcolorgray 0 TeXcolorgray -8000
54901 a
tx@Dict begin tx@ovlDict begin InitOL /TheOL (0) def end end
 -8000 54901 a -8000 54901 a
tx@Dict begin tx@ovlDict begin (0) BOL end end
 -8000 54901 a 3099
x @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.0 SLW 1 1 1  setrgbcolor   0. true 0.0 0.0 397.48499 298.11374 .5
Frame  gsave 1 1 1  setrgbcolor  1. .setopacityalpha  fill  grestore
end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0.89804 0.2902 0.2706  setrgbcolor  /ArrowA { moveto } def
/ArrowB { } def  [ 377.60951 268.30054 19.87546 268.30054   /Lineto
/lineto load def 0  setlinejoin false Line  gsave 0.8 SLW 0.89804 0.2902
0.2706  setrgbcolor  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial -8000 58000 a
SDict begin [ {ThisPage}<</Trans << /S /Wipe >> >> /PUT pdfmark end
 -8000 58000 a
-8000 58000 a
SDict begin H.S end
 -8000 58000 a -8000 58000 a
SDict begin 17 H.A end
 -8000 58000
a -8000 58000 a
SDict begin [/View [/XYZ H.V]/Dest (slide.7) cvn /DEST pdfmark end
 -8000 58000 a -8000 58000 a
tx@Dict begin { 19.87546 274.26408 } PutCoor PutBegin  end
 -8000 58000
a 0.89804 0.2902 0.2706 TeXcolorrgb 532 x Fv(E\033ci\352ncia)1572
b(II)p 0 TeXcolorgray -8000 58000 a
tx@Dict begin  PutEnd  end
 -8000 58000 a -8000
58000 a
tx@Dict begin { 391.52295 4.47151 } PutCoor PutBegin  end
 -8000 58000 a -618 w Fq(7)-8000 58000 y
tx@Dict begin  PutEnd  end
 -8000
58000 a -8000 58000 a
tx@Dict begin { 19.87546 259.35748 } PutCoor PutBegin  end
 -8000 58000 a 0.12158 0.21176 0.33725
TeXcolorrgb -8000 74706 a
SDict begin H.S end
 -8000 74706 a -8000 74706 a
SDict begin 25 H.A end

-8000 74706 a -8000 74706 a
SDict begin [/View [/XYZ H.V]/Dest (defn.2) cvn /DEST pdfmark end
 -8000 74706 a 0.12158 0.21176 0.33725
TeXcolorrgb Fl(De\033ni\347\343o)1559 b(2.)p 0.12158 0.21176 0.33725
TeXcolorrgb 1119 w Fj(Um)1415 b(algor)-64 b(itmo)1416
b(\351)f(e\033cient)-73 b(e)1416 b(se,)-8000 80240 y(qualit)-55
b(ativ)-110 b(ament)-73 b(e)1466 b(e)e(em)h(seu)g(pior)g(c)-142
b(aso,)1487 b(t)-73 b(em)-8000 85775 y(um)1245 b(desempenho)i(super)-64
b(ior)1245 b(a)g(um)g(algor)-64 b(itmo)-8000 91310 y(de)1378
b(f)-106 b(or)-230 b(\347)-142 b(a-brut)-55 b(a.)p 0
TeXcolorgray -8000 58000 a
tx@Dict begin  PutEnd  end
 -8000 58000 a 0 TeXcolorgray
0 TeXcolorgray eop end
%%Page: 9 9
TeXDict begin @landscape 9 8 bop 0 TeXcolorgray 8000
4901 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 8000 4901 a 0 TeXcolorgray 0 TeXcolorgray -8000
54901 a
tx@Dict begin tx@ovlDict begin InitOL /TheOL (0) def end end
 -8000 54901 a -8000 54901 a
tx@Dict begin tx@ovlDict begin (0) BOL end end
 -8000 54901 a 3099
x @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.0 SLW 1 1 1  setrgbcolor   0. true 0.0 0.0 397.48499 298.11374 .5
Frame  gsave 1 1 1  setrgbcolor  1. .setopacityalpha  fill  grestore
end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0.89804 0.2902 0.2706  setrgbcolor  /ArrowA { moveto } def
/ArrowB { } def  [ 377.60951 268.30054 19.87546 268.30054   /Lineto
/lineto load def 0  setlinejoin false Line  gsave 0.8 SLW 0.89804 0.2902
0.2706  setrgbcolor  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial -8000 58000 a
SDict begin [ {ThisPage}<</Trans << /S /Wipe >> >> /PUT pdfmark end
 -8000 58000 a
-8000 58000 a
SDict begin H.S end
 -8000 58000 a -8000 58000 a
SDict begin 17 H.A end
 -8000 58000
a -8000 58000 a
SDict begin [/View [/XYZ H.V]/Dest (slide.8) cvn /DEST pdfmark end
 -8000 58000 a -8000 58000 a
tx@Dict begin { 19.87546 274.26408 } PutCoor PutBegin  end
 -8000 58000
a 0.89804 0.2902 0.2706 TeXcolorrgb 532 x Fv(E\033ci\352ncia)1572
b(III)p 0 TeXcolorgray -8000 58000 a
tx@Dict begin  PutEnd  end
 -8000 58000 a -8000
58000 a
tx@Dict begin { 391.52295 4.47151 } PutCoor PutBegin  end
 -8000 58000 a -760 w Fq(8)-8000 58000 y
tx@Dict begin  PutEnd  end
 -8000
58000 a -8000 58000 a
tx@Dict begin { 19.87546 259.35748 } PutCoor PutBegin  end
 -8000 58000 a 0.12158 0.21176 0.33725
TeXcolorrgb -8000 77461 a
SDict begin H.S end
 -8000 77461 a -8000 77461 a
SDict begin 25 H.A end

-8000 77461 a -8000 77461 a
SDict begin [/View [/XYZ H.V]/Dest (defn.3) cvn /DEST pdfmark end
 -8000 77461 a 0.12158 0.21176 0.33725
TeXcolorrgb Fl(De\033ni\347\343o)1741 b(3.)p 0.12158 0.21176 0.33725
TeXcolorrgb 1173 w Fj(Um)1580 b(algor)-64 b(itmo)1583
b(\351)e(e\033cient)-73 b(e)1582 b(se)-8000 82996 y(o)1378
b(seu)g(t)-73 b(empo)1378 b(de)g(e)-78 b(x)-152 b(ecu\347\343o)1379
b(\351)f(polinomial.)67029 82996 y
tx@Dict begin tx@ovlDict begin (1) BOL end end
 67029 82996 a 0.89804 0.2902 0.2706
TeXcolorrgb -8000 91188 a Fk(Mas)g Fi(n)3909 89522 y
Fh(100)10079 91188 y Fk(\351)g(melhor)g(que)g Fi(n)39781
89522 y Fh(1+0)p Fg(:)p Fh(02\(log)573 b Fg(n)p Fh(\))58284
91188 y Fk(?)p 0.12158 0.21176 0.33725 TeXcolorrgb 0
TeXcolorgray -8000 58000 a
tx@Dict begin  PutEnd  end
 -8000 58000 a 0 TeXcolorgray
0 TeXcolorgray eop end
%%Page: 10 10
TeXDict begin @landscape 10 9 bop 0 TeXcolorgray 8000
4901 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 8000 4901 a 0 TeXcolorgray 0 TeXcolorgray -8000
54901 a
tx@Dict begin tx@ovlDict begin InitOL /TheOL (0) def end end
 -8000 54901 a -8000 54901 a
tx@Dict begin tx@ovlDict begin (0) BOL end end
 -8000 54901 a 3099
x @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.0 SLW 1 1 1  setrgbcolor   0. true 0.0 0.0 397.48499 298.11374 .5
Frame  gsave 1 1 1  setrgbcolor  1. .setopacityalpha  fill  grestore
end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0.89804 0.2902 0.2706  setrgbcolor  /ArrowA { moveto } def
/ArrowB { } def  [ 377.60951 268.30054 19.87546 268.30054   /Lineto
/lineto load def 0  setlinejoin false Line  gsave 0.8 SLW 0.89804 0.2902
0.2706  setrgbcolor  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial -8000 58000 a
SDict begin [ {ThisPage}<</Trans << /S /Wipe >> >> /PUT pdfmark end
 -8000 58000 a
-8000 58000 a
tx@Dict begin { 19.87546 274.26408 } PutCoor PutBegin  end
 -8000 58000 a 0.89804 0.2902 0.2706 TeXcolorrgb
532 x Fv(E\033ci\352ncia)1572 b(III)p 0 TeXcolorgray
-8000 58000 a
tx@Dict begin  PutEnd  end
 -8000 58000 a -8000 58000 a
tx@Dict begin { 391.52295 4.47151 } PutCoor PutBegin  end
 -8000 58000
a -760 w Fq(8)-8000 58000 y
tx@Dict begin  PutEnd  end
 -8000 58000 a -8000 58000
a
tx@Dict begin { 19.87546 259.35748 } PutCoor PutBegin  end
 -8000 58000 a 0.12158 0.21176 0.33725 TeXcolorrgb -8000
77461 a
SDict begin H.S end
 -8000 77461 a -8000 77461 a
SDict begin 25 H.A end
 -8000 77461 a -8000
77461 a
SDict begin [/View [/XYZ H.V]/Dest (defn.3) cvn /DEST pdfmark end
 -8000 77461 a 0.12158 0.21176 0.33725 TeXcolorrgb
Fl(De\033ni\347\343o)1741 b(3.)p 0.12158 0.21176 0.33725
TeXcolorrgb 1173 w Fj(Um)1580 b(algor)-64 b(itmo)1583
b(\351)e(e\033cient)-73 b(e)1582 b(se)-8000 82996 y(o)1378
b(seu)g(t)-73 b(empo)1378 b(de)g(e)-78 b(x)-152 b(ecu\347\343o)1379
b(\351)f(polinomial.)p 0.89804 0.2902 0.2706 TeXcolorrgb
-8000 91188 a Fk(Mas)g Fi(n)3909 89522 y Fh(100)10079
91188 y Fk(\351)g(melhor)g(que)g Fi(n)39781 89522 y Fh(1+0)p
Fg(:)p Fh(02\(log)573 b Fg(n)p Fh(\))58284 91188 y Fk(?)p
0.12158 0.21176 0.33725 TeXcolorrgb 0 TeXcolorgray -8000
58000 a
tx@Dict begin  PutEnd  end
 -8000 58000 a 0 TeXcolorgray 0 TeXcolorgray eop
end
%%Page: 11 11
TeXDict begin @landscape 11 10 bop 0 TeXcolorgray 8000
4901 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 8000 4901 a 0 TeXcolorgray 0 TeXcolorgray -8000
54901 a
tx@Dict begin tx@ovlDict begin InitOL /TheOL (0) def end end
 -8000 54901 a -8000 54901 a
tx@Dict begin tx@ovlDict begin (0) BOL end end
 -8000 54901 a 3099
x @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.0 SLW 1 1 1  setrgbcolor   0. true 0.0 0.0 397.48499 298.11374 .5
Frame  gsave 1 1 1  setrgbcolor  1. .setopacityalpha  fill  grestore
end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0.89804 0.2902 0.2706  setrgbcolor  /ArrowA { moveto } def
/ArrowB { } def  [ 377.60951 268.30054 19.87546 268.30054   /Lineto
/lineto load def 0  setlinejoin false Line  gsave 0.8 SLW 0.89804 0.2902
0.2706  setrgbcolor  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.0 SLW 0.12158 0.21176 0.33725  setrgbcolor   0. true 0.0 0.0 397.48499
298.11374 .5 Frame  gsave 0.12158 0.21176 0.33725  setrgbcolor  1.
.setopacityalpha  fill  grestore end
 
@endspecial
-8000 58000 a
SDict begin [ {ThisPage}<</Trans << /S /Wipe >> >> /PUT pdfmark end
 -8000 58000 a -8000 58000 a
SDict begin H.S end
 -8000 58000
a -8000 58000 a
SDict begin 17 H.A end
 -8000 58000 a -8000 58000 a
SDict begin [/View [/XYZ H.V]/Dest (slide.9) cvn /DEST pdfmark end
 -8000 58000
a -8000 58000 a
tx@Dict begin { 198.7425 163.96346 } PutCoor PutBegin  end
 -8000 58000 a 0.89804 0.2902 0.2706 TeXcolorrgb
-29198 62650 a Fv(Nota\347\343o)1568 b(Assint)-88 b(\363)-110
b(tic)g(a)p 0 TeXcolorgray -8000 58000 a
tx@Dict begin  PutEnd  end
 -8000 58000
a -8000 58000 a
tx@Dict begin { 391.52295 4.47151 } PutCoor PutBegin  end
 -8000 58000 a -755 w Fq(9)-8000 58000
y
tx@Dict begin  PutEnd  end
 -8000 58000 a -8000 58000 a
tx@Dict begin { 19.87546 259.35748 } PutCoor PutBegin  end
 -8000 58000 a 0.12158 0.21176 0.33725
TeXcolorrgb 0 TeXcolorgray -8000 58000 a
tx@Dict begin  PutEnd  end
 -8000 58000
a 0 TeXcolorgray 0 TeXcolorgray eop end
%%Page: 12 12
TeXDict begin @landscape 12 11 bop 0 TeXcolorgray 8000
4901 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 8000 4901 a 0 TeXcolorgray 0 TeXcolorgray -8000
54901 a
tx@Dict begin tx@ovlDict begin InitOL /TheOL (0) def end end
 -8000 54901 a -8000 54901 a
tx@Dict begin tx@ovlDict begin (0) BOL end end
 -8000 54901 a 3099
x @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.0 SLW 1 1 1  setrgbcolor   0. true 0.0 0.0 397.48499 298.11374 .5
Frame  gsave 1 1 1  setrgbcolor  1. .setopacityalpha  fill  grestore
end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0.89804 0.2902 0.2706  setrgbcolor  /ArrowA { moveto } def
/ArrowB { } def  [ 377.60951 268.30054 19.87546 268.30054   /Lineto
/lineto load def 0  setlinejoin false Line  gsave 0.8 SLW 0.89804 0.2902
0.2706  setrgbcolor  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial -8000 58000 a
SDict begin [ {ThisPage}<</Trans << /S /Wipe >> >> /PUT pdfmark end
 -8000 58000 a
-8000 58000 a
SDict begin H.S end
 -8000 58000 a -8000 58000 a
SDict begin 17 H.A end
 -8000 58000
a -8000 58000 a
SDict begin [/View [/XYZ H.V]/Dest (slide.10) cvn /DEST pdfmark end
 -8000 58000 a -8000 58000 a
tx@Dict begin { 19.87546 274.26408 } PutCoor PutBegin  end
 -8000 58000
a 0.89804 0.2902 0.2706 TeXcolorrgb 532 x Ff(Big-oh)1577
b Fe(O)p 0 TeXcolorgray -8000 58000 a
tx@Dict begin  PutEnd  end
 -8000 58000 a -8000
58000 a
tx@Dict begin { 391.52295 4.47151 } PutCoor PutBegin  end
 -8000 58000 a -1199 w Fq(10)-8000 58000 y
tx@Dict begin  PutEnd  end
 -8000
58000 a -8000 58000 a
tx@Dict begin { 19.87546 259.35748 } PutCoor PutBegin  end
 -8000 58000 a 0.12158 0.21176 0.33725
TeXcolorrgb -8000 66338 a
SDict begin H.S end
 -8000 66338 a -8000 66338 a
SDict begin 17 H.A end

-8000 66338 a -8000 66338 a
SDict begin [/View [/XYZ H.V]/Dest (defn.4) cvn /DEST pdfmark end
 -8000 66338 a 0.12158 0.21176 0.33725
TeXcolorrgb Fd(De\033ni\347\343o)1207 b(4.)p 0.12158 0.21176 0.33725
TeXcolorrgb 0.89804 0.2902 0.2706 TeXcolorrgb 1172 w
Fm(Limit)-48 b(e)1097 b(as)-51 b(sint)-77 b(\363)-89
b(tico)1098 b(super)-38 b(ior)p 0.12158 0.21176 0.33725
TeXcolorrgb 1098 w Fg(T)434 b Fh(\()p Fg(n)p Fh(\))1096
b Fo(\351)g Fg(O)87 b Fh(\()p Fg(f)340 b Fh(\()p Fg(n)p
Fh(\)\))1096 b Fm(se)-8000 70102 y Fo(e)-54 b(xist)j(em)860
b(const)-38 b(ant)-51 b(es)860 b Fg(c)886 b(>)f Fh(0)859
b Fo(e)g Fg(n)29946 70580 y Fc(0)32050 70102 y Fn(\025)885
b Fh(0)859 b Fo(t)-38 b(al)860 b(que)e Fn(8)p Fg(n)886
b Fn(\025)g Fg(n)57365 70580 y Fc(0)58583 70102 y Fo(,)879
b(\351)859 b(o)g(c)-99 b(aso)-8000 73866 y(que)p 0.89804 0.2902 0.2706
TeXcolorrgb 956 w Fg(T)434 b Fh(\()p Fg(n)p Fh(\))885
b Fn(\024)h Fg(c:f)340 b Fh(\()p Fg(n)p Fh(\))p 0.12158 0.21176 0.33725
TeXcolorrgb Fo(.)17747 73866 y
tx@Dict begin tx@ovlDict begin (1) BOL end end
 17747 73866 a -8000 80286
a Fo(Diz)-99 b(emos)993 b(nest)-51 b(e)991 b(c)-99 b(aso)993
b(que)e Fg(T)434 b Fh(\()p Fg(n)p Fh(\))992 b Fo(\351)f(limit)-38
b(ada)992 b(super)-45 b(ior)g(ment)-51 b(e)994 b(por)-8000
84050 y Fg(f)340 b Fh(\()p Fg(n)p Fh(\))p Fo(.)-8000
101549 y

 -8000 101549 a -8000 101549 a


 pgfo

 save

 0.12158 0.21176 0.33725 setrgbcolor

 0.3985 pgfw

 save

 /pgffc{0.12158 0.21176 0.33725 setrgbcolor}def

 1.0 .pgfsetfillopacityalpha

 0.0 4.25198 moveto

 0.0 54.96849 lineto

 0.0 57.31683 1.90364 59.22049 4.25198 59.22049 curveto

 352.15016 59.22049 lineto

 354.4985 59.22049 356.40215 57.31683 356.40215 54.96849 curveto

 356.40215 4.25198 lineto

 356.40215 1.90364 354.4985 0.0 352.15016 0.0 curveto

 4.25198 0.0 lineto

 1.90364 0.0 0.0 1.90364 0.0 4.25198 curveto

 closepath

 gsave pgffc pgffill grestore newpath

 restore

 save

 /pgffc{0.74902 0.98431 0.78824 setrgbcolor}def

 1.0 .pgfsetfillopacityalpha

 1.41731 4.25198 moveto

 1.41731 33.63857 lineto

 354.98483 33.63857 lineto

 354.98483 4.25198 lineto

 354.98483 2.68643 353.71571 1.41731 352.15016 1.41731 curveto

 4.25198 1.41731 lineto

 2.68643 1.41731 1.41731 2.68643 1.41731 4.25198 curveto

 closepath

 gsave pgffc pgffill grestore newpath

 restore

 save

 1.0 .pgfsetfillopacityalpha

 save

 [1.0 0.0 0.0 1.0 15.5907 41.76408 ] concat

 pgfs


 1 TeXcolorgray
1 TeXcolorgray -8000 101549 a Fb(Ex)-92 b(emplo)p 1 TeXcolorgray
0.12158 0.21176 0.33725 TeXcolorrgb -8000 101549 a


 pgfr

 restore

 restore

 save

 1.0 .pgfsetfillopacityalpha

 save

 [1.0 0.0 0.0 1.0 15.5907 13.50792 ] concat

 pgfs



0.12158 0.21176 0.33725 TeXcolorrgb -8000 101549 a Fg(T)434
b Fh(\()p Fg(n)p Fh(\))885 b(=)h(10)p Fg(n)708 b Fh(+)h(8)p
Fg(;)531 b(f)340 b Fh(\()p Fg(n)p Fh(\))886 b(=)f Fg(n)26775
100392 y Fc(2)27993 101549 y Fg(;)531 b(c)887 b Fh(=)e(5)p
Fg(;)531 b(n)39756 102027 y Fc(0)41860 101549 y Fh(=)885
b(2)p 0.12158 0.21176 0.33725 TeXcolorrgb -8000 101549
a


 pgfr

 restore

 restore

 newpath

 restore

 pgfc


 0 TeXcolorgray -8000 58000 a
tx@Dict begin  PutEnd  end
 -8000 58000 a 0 TeXcolorgray
0 TeXcolorgray eop end
%%Page: 13 13
TeXDict begin @landscape 13 12 bop 0 TeXcolorgray 8000
4901 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 8000 4901 a 0 TeXcolorgray 0 TeXcolorgray -8000
54901 a
tx@Dict begin tx@ovlDict begin InitOL /TheOL (0) def end end
 -8000 54901 a -8000 54901 a
tx@Dict begin tx@ovlDict begin (0) BOL end end
 -8000 54901 a 3099
x @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.0 SLW 1 1 1  setrgbcolor   0. true 0.0 0.0 397.48499 298.11374 .5
Frame  gsave 1 1 1  setrgbcolor  1. .setopacityalpha  fill  grestore
end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0.89804 0.2902 0.2706  setrgbcolor  /ArrowA { moveto } def
/ArrowB { } def  [ 377.60951 268.30054 19.87546 268.30054   /Lineto
/lineto load def 0  setlinejoin false Line  gsave 0.8 SLW 0.89804 0.2902
0.2706  setrgbcolor  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial -8000 58000 a
SDict begin [ {ThisPage}<</Trans << /S /Wipe >> >> /PUT pdfmark end
 -8000 58000 a
-8000 58000 a
tx@Dict begin { 19.87546 274.26408 } PutCoor PutBegin  end
 -8000 58000 a 0.89804 0.2902 0.2706 TeXcolorrgb
532 x Ff(Big-oh)1577 b Fe(O)p 0 TeXcolorgray -8000 58000
a
tx@Dict begin  PutEnd  end
 -8000 58000 a -8000 58000 a
tx@Dict begin { 391.52295 4.47151 } PutCoor PutBegin  end
 -8000 58000 a -1199 w Fq(10)-8000
58000 y
tx@Dict begin  PutEnd  end
 -8000 58000 a -8000 58000 a
tx@Dict begin { 19.87546 259.35748 } PutCoor PutBegin  end
 -8000 58000 a
0.12158 0.21176 0.33725 TeXcolorrgb -8000 66338 a
SDict begin H.S end
 -8000
66338 a -8000 66338 a
SDict begin 17 H.A end
 -8000 66338 a -8000 66338 a
SDict begin [/View [/XYZ H.V]/Dest (defn.4) cvn /DEST pdfmark end
 -8000
66338 a 0.12158 0.21176 0.33725 TeXcolorrgb Fd(De\033ni\347\343o)1207
b(4.)p 0.12158 0.21176 0.33725 TeXcolorrgb 0.89804 0.2902 0.2706
TeXcolorrgb 1172 w Fm(Limit)-48 b(e)1097 b(as)-51 b(sint)-77
b(\363)-89 b(tico)1098 b(super)-38 b(ior)p 0.12158 0.21176 0.33725
TeXcolorrgb 1098 w Fg(T)434 b Fh(\()p Fg(n)p Fh(\))1096
b Fo(\351)g Fg(O)87 b Fh(\()p Fg(f)340 b Fh(\()p Fg(n)p
Fh(\)\))1096 b Fm(se)-8000 70102 y Fo(e)-54 b(xist)j(em)860
b(const)-38 b(ant)-51 b(es)860 b Fg(c)886 b(>)f Fh(0)859
b Fo(e)g Fg(n)29946 70580 y Fc(0)32050 70102 y Fn(\025)885
b Fh(0)859 b Fo(t)-38 b(al)860 b(que)e Fn(8)p Fg(n)886
b Fn(\025)g Fg(n)57365 70580 y Fc(0)58583 70102 y Fo(,)879
b(\351)859 b(o)g(c)-99 b(aso)-8000 73866 y(que)p 0.89804 0.2902 0.2706
TeXcolorrgb 956 w Fg(T)434 b Fh(\()p Fg(n)p Fh(\))885
b Fn(\024)h Fg(c:f)340 b Fh(\()p Fg(n)p Fh(\))p 0.12158 0.21176 0.33725
TeXcolorrgb Fo(.)-8000 80286 y(Diz)-99 b(emos)993 b(nest)-51
b(e)991 b(c)-99 b(aso)993 b(que)e Fg(T)434 b Fh(\()p
Fg(n)p Fh(\))992 b Fo(\351)f(limit)-38 b(ada)992 b(super)-45
b(ior)g(ment)-51 b(e)994 b(por)-8000 84050 y Fg(f)340
b Fh(\()p Fg(n)p Fh(\))p Fo(.)-8000 101549 y

 -8000 101549
a -8000 101549 a


 pgfo

 save

 0.12158 0.21176 0.33725 setrgbcolor

 0.3985 pgfw

 save

 /pgffc{0.12158 0.21176 0.33725 setrgbcolor}def

 1.0 .pgfsetfillopacityalpha

 0.0 4.25198 moveto

 0.0 54.96849 lineto

 0.0 57.31683 1.90364 59.22049 4.25198 59.22049 curveto

 352.15016 59.22049 lineto

 354.4985 59.22049 356.40215 57.31683 356.40215 54.96849 curveto

 356.40215 4.25198 lineto

 356.40215 1.90364 354.4985 0.0 352.15016 0.0 curveto

 4.25198 0.0 lineto

 1.90364 0.0 0.0 1.90364 0.0 4.25198 curveto

 closepath

 gsave pgffc pgffill grestore newpath

 restore

 save

 /pgffc{0.74902 0.98431 0.78824 setrgbcolor}def

 1.0 .pgfsetfillopacityalpha

 1.41731 4.25198 moveto

 1.41731 33.63857 lineto

 354.98483 33.63857 lineto

 354.98483 4.25198 lineto

 354.98483 2.68643 353.71571 1.41731 352.15016 1.41731 curveto

 4.25198 1.41731 lineto

 2.68643 1.41731 1.41731 2.68643 1.41731 4.25198 curveto

 closepath

 gsave pgffc pgffill grestore newpath

 restore

 save

 1.0 .pgfsetfillopacityalpha

 save

 [1.0 0.0 0.0 1.0 15.5907 41.76408 ] concat

 pgfs


 1 TeXcolorgray 1 TeXcolorgray -8000
101549 a Fb(Ex)-92 b(emplo)p 1 TeXcolorgray 0.12158 0.21176 0.33725
TeXcolorrgb -8000 101549 a


 pgfr

 restore

 restore

 save

 1.0 .pgfsetfillopacityalpha

 save

 [1.0 0.0 0.0 1.0 15.5907 13.50792 ] concat

 pgfs


 0.12158 0.21176 0.33725 TeXcolorrgb
-8000 101549 a Fg(T)434 b Fh(\()p Fg(n)p Fh(\))885 b(=)h(10)p
Fg(n)708 b Fh(+)h(8)p Fg(;)531 b(f)340 b Fh(\()p Fg(n)p
Fh(\))886 b(=)f Fg(n)26775 100392 y Fc(2)27993 101549
y Fg(;)531 b(c)887 b Fh(=)e(5)p Fg(;)531 b(n)39756 102027
y Fc(0)41860 101549 y Fh(=)885 b(2)p 0.12158 0.21176 0.33725
TeXcolorrgb -8000 101549 a


 pgfr

 restore

 restore

 newpath

 restore

 pgfc


 0 TeXcolorgray -8000 58000
a
tx@Dict begin  PutEnd  end
 -8000 58000 a 0 TeXcolorgray 0 TeXcolorgray eop end
%%Page: 14 14
TeXDict begin @landscape 14 13 bop 0 TeXcolorgray 8000
4901 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 8000 4901 a 0 TeXcolorgray 0 TeXcolorgray -8000
54901 a
tx@Dict begin tx@ovlDict begin InitOL /TheOL (0) def end end
 -8000 54901 a -8000 54901 a
tx@Dict begin tx@ovlDict begin (0) BOL end end
 -8000 54901 a 3099
x @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.0 SLW 1 1 1  setrgbcolor   0. true 0.0 0.0 397.48499 298.11374 .5
Frame  gsave 1 1 1  setrgbcolor  1. .setopacityalpha  fill  grestore
end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0.89804 0.2902 0.2706  setrgbcolor  /ArrowA { moveto } def
/ArrowB { } def  [ 377.60951 268.30054 19.87546 268.30054   /Lineto
/lineto load def 0  setlinejoin false Line  gsave 0.8 SLW 0.89804 0.2902
0.2706  setrgbcolor  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial -8000 58000 a
SDict begin [ {ThisPage}<</Trans << /S /Wipe >> >> /PUT pdfmark end
 -8000 58000 a
-8000 58000 a
SDict begin H.S end
 -8000 58000 a -8000 58000 a
SDict begin 17 H.A end
 -8000 58000
a -8000 58000 a
SDict begin [/View [/XYZ H.V]/Dest (slide.11) cvn /DEST pdfmark end
 -8000 58000 a -8000 58000 a
tx@Dict begin { 19.87546 274.26408 } PutCoor PutBegin  end
 -8000 58000
a 0.89804 0.2902 0.2706 TeXcolorrgb 532 x Ff(Big-oh)1577
b Fe(O)p 0 TeXcolorgray -8000 58000 a
tx@Dict begin  PutEnd  end
 -8000 58000 a -8000
58000 a
tx@Dict begin { 391.52295 4.47151 } PutCoor PutBegin  end
 -8000 58000 a -845 w Fq(11)-8000 58000 y
tx@Dict begin  PutEnd  end
 -8000
58000 a -8000 58000 a
tx@Dict begin { 19.87546 259.35748 } PutCoor PutBegin  end
 -8000 58000 a 0.12158 0.21176 0.33725
TeXcolorrgb -8000 58000 a
tx@Dict begin tx@ovlDict begin (1) BOL end end
 -8000 58000 a 0.12158 0.21176 0.33725
TeXcolorrgb -8000 58000 a
tx@Dict begin tx@ovlDict begin (0) BOL end end
 -8000 58000 a 0.12158 0.21176 0.33725
TeXcolorrgb 0.12158 0.21176 0.33725 TeXcolorrgb 0.12 0.21 0.34
TeXcolorrgb 41033 82586 a Fg(T)434 b Fh(\()p Fg(n)p Fh(\))p
0.90 0.29 0.27 TeXcolorrgb 36311 65175 a Fg(c:f)340 b
Fh(\()p Fg(n)p Fh(\))3601 99910 y @beginspecial 50 @llx
50 @lly 302 @urx 238 @ury 2520 @rwi @setspecial
%%BeginDocument: ./pic/big.eps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: big.tex
%%Creator: gnuplot 5.0 patchlevel 3
%%CreationDate: Mon Aug  6 20:17:23 2018
%%DocumentFonts: 
%%BoundingBox: 50 50 302 238
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following true/false flags may be edited by hand if desired.
% The unit line width and grayscale image gamma correction may also be changed.
%
/Color true def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Level3 true def
/Rounded false def
/ClipToBoundingBox true def
/SuppressPDFMark false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/Gamma 1.0 def
/BackgroundColor {-1.000 -1.000 -1.000} def
%
/vshift -73 def
/dl1 {
  10.0 Dashlength userlinewidth gnulinewidth div mul mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength userlinewidth gnulinewidth div mul mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/doclip {
  ClipToBoundingBox {
    newpath 50 50 moveto 302 50 lineto 302 238 lineto 50 238 lineto closepath
    clip
  } if
} def
%
% Gnuplot Prolog Version 5.1 (Oct 2015)
%
%/SuppressPDFMark true def
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/g {setgray} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray textshow grestore} {textshow} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray textshow grestore} {textshow} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray textshow grestore} {textshow} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
3.8 setmiterlimit
% Classic Line colors (version 5.0)
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default dash patterns (version 5.0)
/LTB {BL [] LCb DL} def
/LTw {PL [] 1 setgray} def
/LTb {PL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [2 dl1 3 dl2] LC1 DL} def
/LT2 {PL [1 dl1 1.5 dl2] LC2 DL} def
/LT3 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC3 DL} def
/LT4 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [4 dl1 2 dl2] LC5 DL} def
/LT6 {PL [1.5 dl1 1.5 dl2 1.5 dl1 1.5 dl2 1.5 dl1 6 dl2] LC6 DL} def
/LT7 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC8 DL} def
/SL {[] 0 setdash} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
  clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
dup 2 lt
	{/InterpretLevel1 true def
	 /InterpretLevel3 false def}
	{/InterpretLevel1 Level1 def
	 2 gt
	    {/InterpretLevel3 Level3 def}
	    {/InterpretLevel3 false def}
	 ifelse }
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
%
Level1 SuppressPDFMark or 
{} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (big.tex)
  /Subject (gnuplot plot)
  /Creator (gnuplot 5.0 patchlevel 3)
  /Author (dvnoble)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Mon Aug  6 20:17:23 2018)
  /DOCINFO pdfmark
end
} ifelse
%
% Support for boxed text - Ethan A Merritt May 2005
%
/InitTextBox { userdict /TBy2 3 -1 roll put userdict /TBx2 3 -1 roll put
           userdict /TBy1 3 -1 roll put userdict /TBx1 3 -1 roll put
	   /Boxing true def } def
/ExtendTextBox { Boxing
    { gsave dup false charpath pathbbox
      dup TBy2 gt {userdict /TBy2 3 -1 roll put} {pop} ifelse
      dup TBx2 gt {userdict /TBx2 3 -1 roll put} {pop} ifelse
      dup TBy1 lt {userdict /TBy1 3 -1 roll put} {pop} ifelse
      dup TBx1 lt {userdict /TBx1 3 -1 roll put} {pop} ifelse
      grestore } if } def
/PopTextBox { newpath TBx1 TBxmargin sub TBy1 TBymargin sub M
               TBx1 TBxmargin sub TBy2 TBymargin add L
	       TBx2 TBxmargin add TBy2 TBymargin add L
	       TBx2 TBxmargin add TBy1 TBymargin sub L closepath } def
/DrawTextBox { PopTextBox stroke /Boxing false def} def
/FillTextBox { gsave PopTextBox 1 1 1 setrgbcolor fill grestore /Boxing false def} def
0 0 0 0 InitTextBox
/TBxmargin 20 def
/TBymargin 20 def
/Boxing false def
/textshow { ExtendTextBox Gshow } def
%
% redundant definitions for compatibility with prologue.ps older than 5.0.2
/LTB {BL [] LCb DL} def
/LTb {PL [] LCb DL} def
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
doclip
50 50 translate
0.050 0.050 scale
0 setgray
newpath
5.000 UL
LTb
LCb setrgbcolor
[] 0 setdash
5.000 UL
LTb
396 3507 M
396 374 L
4247 0 V
0 3133 R
-4247 0 R
1.000 UP
stroke
0.12 0.21 0.34 C 0.90 0.29 0.27 C 5.000 UL
LTb
LCb setrgbcolor
[] 0 setdash
LTb
5.000 UL
LTb
0.12 0.21 0.34 C 396 374 M
43 12 V
43 13 V
43 13 V
43 14 V
42 14 V
43 16 V
43 17 V
43 18 V
43 20 V
43 22 V
43 24 V
43 24 V
43 25 V
43 23 V
42 21 V
43 18 V
43 14 V
43 8 V
43 1 V
43 -6 V
43 -13 V
43 -20 V
43 -23 V
43 -25 V
42 -24 V
43 -23 V
43 -17 V
43 -11 V
43 -3 V
43 8 V
43 20 V
43 28 V
43 35 V
43 40 V
42 41 V
43 41 V
43 38 V
43 32 V
43 25 V
43 14 V
43 5 V
43 -5 V
43 -11 V
43 -15 V
42 -18 V
43 -18 V
43 -17 V
43 -12 V
43 -7 V
43 2 V
43 10 V
43 17 V
43 23 V
43 27 V
42 31 V
43 32 V
43 34 V
43 32 V
43 31 V
43 28 V
43 24 V
43 21 V
43 18 V
43 16 V
42 14 V
43 12 V
43 11 V
43 11 V
43 10 V
43 11 V
43 11 V
43 11 V
43 14 V
43 15 V
42 18 V
43 21 V
43 24 V
43 27 V
43 32 V
43 37 V
43 41 V
43 45 V
43 48 V
43 51 V
42 54 V
43 55 V
43 56 V
43 58 V
43 58 V
43 57 V
43 58 V
43 57 V
43 57 V
43 57 V
42 57 V
43 57 V
43 56 V
43 57 V
43 56 V
stroke
LTb
LCb setrgbcolor
[] 0 setdash
0.90 0.29 0.27 C 396 374 M
43 2 V
43 2 V
43 3 V
43 2 V
42 3 V
43 3 V
43 4 V
43 4 V
43 4 V
43 5 V
43 5 V
43 6 V
43 7 V
43 6 V
42 7 V
43 7 V
43 6 V
43 7 V
43 6 V
43 6 V
43 6 V
43 5 V
43 5 V
43 6 V
42 5 V
43 6 V
43 7 V
43 7 V
43 8 V
43 10 V
43 10 V
43 12 V
43 13 V
43 14 V
42 16 V
43 16 V
43 19 V
43 19 V
43 21 V
43 22 V
43 24 V
43 26 V
43 27 V
43 29 V
42 31 V
43 33 V
43 35 V
43 38 V
43 40 V
43 43 V
43 46 V
43 49 V
43 53 V
43 57 V
42 62 V
43 67 V
43 72 V
43 79 V
43 84 V
43 92 V
43 97 V
43 101 V
43 104 V
43 104 V
42 102 V
43 98 V
43 94 V
43 86 V
43 77 V
43 67 V
43 58 V
43 56 V
43 59 V
43 65 V
42 78 V
43 96 V
43 118 V
43 145 V
43 179 V
8 40 V
stroke
2.000 UL
LTb
LCb setrgbcolor
[] 0 setdash
5.000 UL
LTb
396 3507 M
396 374 L
4247 0 V
0 3133 R
-4247 0 R
1.000 UP
stroke
stroke
grestore
end
showpage
%%Trailer

%%EndDocument
 @endspecial 0 TeXcolorgray 5556 78355 a
 gsave currentpoint currentpoint translate -270 neg rotate neg exch
neg exch translate
 5556 78355 a
1371 79108 a Fg(tempo)5556 78355 y
 currentpoint grestore moveto
 5556 78355 a 30657
98952 a Fg(n)p 0.90 0.29 0.27 TeXcolorrgb 0.12 0.21 0.34
TeXcolorrgb 0.12158 0.21176 0.33725 TeXcolorrgb 0.12158 0.21176 0.33725
TeXcolorrgb 15723 104759 a Fo(F)-35 b(igur)-131 b(a)957
b(1:)p 0 TeXcolorgray 27573 104759 a
SDict begin H.S end
 27573 104759 a 27573
104759 a
SDict begin H.R end
 27573 104759 a 27573 104759 a
SDict begin [/View [/XYZ H.V]/Dest (figure.1) cvn /DEST pdfmark end
 27573 104759 a
0.12158 0.21176 0.33725 TeXcolorrgb Fg(T)434 b Fh(\()p
Fg(n)p Fh(\))p Fn(2O)89 b Fh(\()p Fg(f)340 b Fh(\()p
Fg(n)p Fh(\)\))p 0.12158 0.21176 0.33725 TeXcolorrgb
0.12158 0.21176 0.33725 TeXcolorrgb 0 TeXcolorgray -8000
58000 a
tx@Dict begin  PutEnd  end
 -8000 58000 a 0 TeXcolorgray 0 TeXcolorgray eop
end
%%Page: 15 15
TeXDict begin @landscape 15 14 bop 0 TeXcolorgray 8000
4901 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 8000 4901 a 0 TeXcolorgray 0 TeXcolorgray -8000
54901 a
tx@Dict begin tx@ovlDict begin InitOL /TheOL (0) def end end
 -8000 54901 a -8000 54901 a
tx@Dict begin tx@ovlDict begin (0) BOL end end
 -8000 54901 a 3099
x @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.0 SLW 1 1 1  setrgbcolor   0. true 0.0 0.0 397.48499 298.11374 .5
Frame  gsave 1 1 1  setrgbcolor  1. .setopacityalpha  fill  grestore
end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0.89804 0.2902 0.2706  setrgbcolor  /ArrowA { moveto } def
/ArrowB { } def  [ 377.60951 268.30054 19.87546 268.30054   /Lineto
/lineto load def 0  setlinejoin false Line  gsave 0.8 SLW 0.89804 0.2902
0.2706  setrgbcolor  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial -8000 58000 a
SDict begin [ {ThisPage}<</Trans << /S /Wipe >> >> /PUT pdfmark end
 -8000 58000 a
-8000 58000 a
SDict begin H.S end
 -8000 58000 a -8000 58000 a
SDict begin 17 H.A end
 -8000 58000
a -8000 58000 a
SDict begin [/View [/XYZ H.V]/Dest (slide.12) cvn /DEST pdfmark end
 -8000 58000 a -8000 58000 a
tx@Dict begin { 19.87546 274.26408 } PutCoor PutBegin  end
 -8000 58000
a 0.89804 0.2902 0.2706 TeXcolorrgb 532 x Fa(\012)p 0
TeXcolorgray -8000 58000 a
tx@Dict begin  PutEnd  end
 -8000 58000 a -8000 58000
a
tx@Dict begin { 391.52295 4.47151 } PutCoor PutBegin  end
 -8000 58000 a -1097 w Fq(12)-8000 58000 y
tx@Dict begin  PutEnd  end
 -8000 58000
a -8000 58000 a
tx@Dict begin { 19.87546 259.35748 } PutCoor PutBegin  end
 -8000 58000 a 0.12158 0.21176 0.33725
TeXcolorrgb -8000 73720 a
SDict begin H.S end
 -8000 73720 a -8000 73720 a
SDict begin 17 H.A end

-8000 73720 a -8000 73720 a
SDict begin [/View [/XYZ H.V]/Dest (defn.5) cvn /DEST pdfmark end
 -8000 73720 a 0.12158 0.21176 0.33725
TeXcolorrgb Fd(De\033ni\347\343o)1447 b(5.)p 0.12158 0.21176 0.33725
TeXcolorrgb 0.89804 0.2902 0.2706 TeXcolorrgb 1273 w
Fm(Limit)-48 b(e)1315 b(as)-51 b(sint)-77 b(\363)-89
b(tico)1317 b(inf)-70 b(er)-38 b(ior)p 0.12158 0.21176 0.33725
TeXcolorrgb 1316 w Fg(T)434 b Fh(\()p Fg(n)p Fh(\))1315
b Fo(\351)f Fh(\012\()p Fg(f)340 b Fh(\()p Fg(n)p Fh(\)\))1316
b Fm(se)-8000 77484 y Fo(e)-54 b(xist)j(em)860 b(const)-38
b(ant)-51 b(es)860 b Fg(c)886 b(>)f Fh(0)859 b Fo(e)g
Fg(n)29946 77962 y Fc(0)32050 77484 y Fn(\025)885 b Fh(0)859
b Fo(t)-38 b(al)860 b(que)e Fn(8)p Fg(n)886 b Fn(\025)g
Fg(n)57365 77962 y Fc(0)58583 77484 y Fo(,)879 b(\351)859
b(o)g(c)-99 b(aso)-8000 81248 y(que)p 0.89804 0.2902 0.2706
TeXcolorrgb 956 w Fg(T)434 b Fh(\()p Fg(n)p Fh(\))885
b Fn(\025)h Fg(c:f)340 b Fh(\()p Fg(n)p Fh(\))p 0.12158 0.21176 0.33725
TeXcolorrgb Fo(.)17747 81248 y
tx@Dict begin tx@ovlDict begin (1) BOL end end
 17747 81248 a -8000 87668
a Fo(Diz)-99 b(emos)1175 b(nest)-51 b(e)1175 b(c)-99
b(aso)1176 b(que)e Fg(T)434 b Fh(\()p Fg(n)p Fh(\))1174
b Fo(\351)h(limit)-38 b(ada)1175 b(inf)-77 b(er)-45 b(ior)g(ment)-51
b(e)1177 b(por)-8000 91432 y Fg(f)340 b Fh(\()p Fg(n)p
Fh(\))p Fo(.)p 0 TeXcolorgray -8000 58000 a
tx@Dict begin  PutEnd  end
 -8000 58000
a 0 TeXcolorgray 0 TeXcolorgray eop end
%%Page: 16 16
TeXDict begin @landscape 16 15 bop 0 TeXcolorgray 8000
4901 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 8000 4901 a 0 TeXcolorgray 0 TeXcolorgray -8000
54901 a
tx@Dict begin tx@ovlDict begin InitOL /TheOL (0) def end end
 -8000 54901 a -8000 54901 a
tx@Dict begin tx@ovlDict begin (0) BOL end end
 -8000 54901 a 3099
x @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.0 SLW 1 1 1  setrgbcolor   0. true 0.0 0.0 397.48499 298.11374 .5
Frame  gsave 1 1 1  setrgbcolor  1. .setopacityalpha  fill  grestore
end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0.89804 0.2902 0.2706  setrgbcolor  /ArrowA { moveto } def
/ArrowB { } def  [ 377.60951 268.30054 19.87546 268.30054   /Lineto
/lineto load def 0  setlinejoin false Line  gsave 0.8 SLW 0.89804 0.2902
0.2706  setrgbcolor  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial -8000 58000 a
SDict begin [ {ThisPage}<</Trans << /S /Wipe >> >> /PUT pdfmark end
 -8000 58000 a
-8000 58000 a
tx@Dict begin { 19.87546 274.26408 } PutCoor PutBegin  end
 -8000 58000 a 0.89804 0.2902 0.2706 TeXcolorrgb
532 x Fa(\012)p 0 TeXcolorgray -8000 58000 a
tx@Dict begin  PutEnd  end
 -8000 58000
a -8000 58000 a
tx@Dict begin { 391.52295 4.47151 } PutCoor PutBegin  end
 -8000 58000 a -1097 w Fq(12)-8000 58000
y
tx@Dict begin  PutEnd  end
 -8000 58000 a -8000 58000 a
tx@Dict begin { 19.87546 259.35748 } PutCoor PutBegin  end
 -8000 58000 a 0.12158 0.21176 0.33725
TeXcolorrgb -8000 73720 a
SDict begin H.S end
 -8000 73720 a -8000 73720 a
SDict begin 17 H.A end

-8000 73720 a -8000 73720 a
SDict begin [/View [/XYZ H.V]/Dest (defn.5) cvn /DEST pdfmark end
 -8000 73720 a 0.12158 0.21176 0.33725
TeXcolorrgb Fd(De\033ni\347\343o)1447 b(5.)p 0.12158 0.21176 0.33725
TeXcolorrgb 0.89804 0.2902 0.2706 TeXcolorrgb 1273 w
Fm(Limit)-48 b(e)1315 b(as)-51 b(sint)-77 b(\363)-89
b(tico)1317 b(inf)-70 b(er)-38 b(ior)p 0.12158 0.21176 0.33725
TeXcolorrgb 1316 w Fg(T)434 b Fh(\()p Fg(n)p Fh(\))1315
b Fo(\351)f Fh(\012\()p Fg(f)340 b Fh(\()p Fg(n)p Fh(\)\))1316
b Fm(se)-8000 77484 y Fo(e)-54 b(xist)j(em)860 b(const)-38
b(ant)-51 b(es)860 b Fg(c)886 b(>)f Fh(0)859 b Fo(e)g
Fg(n)29946 77962 y Fc(0)32050 77484 y Fn(\025)885 b Fh(0)859
b Fo(t)-38 b(al)860 b(que)e Fn(8)p Fg(n)886 b Fn(\025)g
Fg(n)57365 77962 y Fc(0)58583 77484 y Fo(,)879 b(\351)859
b(o)g(c)-99 b(aso)-8000 81248 y(que)p 0.89804 0.2902 0.2706
TeXcolorrgb 956 w Fg(T)434 b Fh(\()p Fg(n)p Fh(\))885
b Fn(\025)h Fg(c:f)340 b Fh(\()p Fg(n)p Fh(\))p 0.12158 0.21176 0.33725
TeXcolorrgb Fo(.)-8000 87668 y(Diz)-99 b(emos)1175 b(nest)-51
b(e)1175 b(c)-99 b(aso)1176 b(que)e Fg(T)434 b Fh(\()p
Fg(n)p Fh(\))1174 b Fo(\351)h(limit)-38 b(ada)1175 b(inf)-77
b(er)-45 b(ior)g(ment)-51 b(e)1177 b(por)-8000 91432
y Fg(f)340 b Fh(\()p Fg(n)p Fh(\))p Fo(.)p 0 TeXcolorgray
-8000 58000 a
tx@Dict begin  PutEnd  end
 -8000 58000 a 0 TeXcolorgray 0 TeXcolorgray
eop end
%%Page: 17 17
TeXDict begin @landscape 17 16 bop 0 TeXcolorgray 8000
4901 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 8000 4901 a 0 TeXcolorgray 0 TeXcolorgray -8000
54901 a
tx@Dict begin tx@ovlDict begin InitOL /TheOL (0) def end end
 -8000 54901 a -8000 54901 a
tx@Dict begin tx@ovlDict begin (0) BOL end end
 -8000 54901 a 3099
x @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.0 SLW 1 1 1  setrgbcolor   0. true 0.0 0.0 397.48499 298.11374 .5
Frame  gsave 1 1 1  setrgbcolor  1. .setopacityalpha  fill  grestore
end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0.89804 0.2902 0.2706  setrgbcolor  /ArrowA { moveto } def
/ArrowB { } def  [ 377.60951 268.30054 19.87546 268.30054   /Lineto
/lineto load def 0  setlinejoin false Line  gsave 0.8 SLW 0.89804 0.2902
0.2706  setrgbcolor  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial -8000 58000 a
SDict begin [ {ThisPage}<</Trans << /S /Wipe >> >> /PUT pdfmark end
 -8000 58000 a
-8000 58000 a
SDict begin H.S end
 -8000 58000 a -8000 58000 a
SDict begin 17 H.A end
 -8000 58000
a -8000 58000 a
SDict begin [/View [/XYZ H.V]/Dest (slide.13) cvn /DEST pdfmark end
 -8000 58000 a -8000 58000 a
tx@Dict begin { 19.87546 274.26408 } PutCoor PutBegin  end
 -8000 58000
a 0.89804 0.2902 0.2706 TeXcolorrgb 532 x Fa(\012)p 0
TeXcolorgray -8000 58000 a
tx@Dict begin  PutEnd  end
 -8000 58000 a -8000 58000
a
tx@Dict begin { 391.52295 4.47151 } PutCoor PutBegin  end
 -8000 58000 a -1137 w Fq(13)-8000 58000 y
tx@Dict begin  PutEnd  end
 -8000 58000
a -8000 58000 a
tx@Dict begin { 19.87546 259.35748 } PutCoor PutBegin  end
 -8000 58000 a 0.12158 0.21176 0.33725
TeXcolorrgb -8000 58000 a
tx@Dict begin tx@ovlDict begin (1) BOL end end
 -8000 58000 a 0.12158 0.21176 0.33725
TeXcolorrgb -8000 58000 a
tx@Dict begin tx@ovlDict begin (0) BOL end end
 -8000 58000 a 0.12158 0.21176 0.33725
TeXcolorrgb 0.12158 0.21176 0.33725 TeXcolorrgb 0.12 0.21 0.34
TeXcolorrgb 41033 82586 a Fg(T)434 b Fh(\()p Fg(n)p Fh(\))p
0.55 0.79 0.59 TeXcolorrgb 41033 93030 a Fg(c:f)340 b
Fh(\()p Fg(n)p Fh(\))3601 99910 y @beginspecial 50 @llx
50 @lly 302 @urx 238 @ury 2520 @rwi @setspecial
%%BeginDocument: ./pic/omega.eps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: omega.tex
%%Creator: gnuplot 5.0 patchlevel 3
%%CreationDate: Mon Aug  6 20:17:23 2018
%%DocumentFonts: 
%%BoundingBox: 50 50 302 238
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following true/false flags may be edited by hand if desired.
% The unit line width and grayscale image gamma correction may also be changed.
%
/Color true def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Level3 true def
/Rounded false def
/ClipToBoundingBox true def
/SuppressPDFMark false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/Gamma 1.0 def
/BackgroundColor {-1.000 -1.000 -1.000} def
%
/vshift -73 def
/dl1 {
  10.0 Dashlength userlinewidth gnulinewidth div mul mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength userlinewidth gnulinewidth div mul mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/doclip {
  ClipToBoundingBox {
    newpath 50 50 moveto 302 50 lineto 302 238 lineto 50 238 lineto closepath
    clip
  } if
} def
%
% Gnuplot Prolog Version 5.1 (Oct 2015)
%
%/SuppressPDFMark true def
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/g {setgray} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray textshow grestore} {textshow} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray textshow grestore} {textshow} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray textshow grestore} {textshow} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
3.8 setmiterlimit
% Classic Line colors (version 5.0)
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default dash patterns (version 5.0)
/LTB {BL [] LCb DL} def
/LTw {PL [] 1 setgray} def
/LTb {PL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [2 dl1 3 dl2] LC1 DL} def
/LT2 {PL [1 dl1 1.5 dl2] LC2 DL} def
/LT3 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC3 DL} def
/LT4 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [4 dl1 2 dl2] LC5 DL} def
/LT6 {PL [1.5 dl1 1.5 dl2 1.5 dl1 1.5 dl2 1.5 dl1 6 dl2] LC6 DL} def
/LT7 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC8 DL} def
/SL {[] 0 setdash} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
  clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
dup 2 lt
	{/InterpretLevel1 true def
	 /InterpretLevel3 false def}
	{/InterpretLevel1 Level1 def
	 2 gt
	    {/InterpretLevel3 Level3 def}
	    {/InterpretLevel3 false def}
	 ifelse }
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
%
Level1 SuppressPDFMark or 
{} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (omega.tex)
  /Subject (gnuplot plot)
  /Creator (gnuplot 5.0 patchlevel 3)
  /Author (dvnoble)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Mon Aug  6 20:17:23 2018)
  /DOCINFO pdfmark
end
} ifelse
%
% Support for boxed text - Ethan A Merritt May 2005
%
/InitTextBox { userdict /TBy2 3 -1 roll put userdict /TBx2 3 -1 roll put
           userdict /TBy1 3 -1 roll put userdict /TBx1 3 -1 roll put
	   /Boxing true def } def
/ExtendTextBox { Boxing
    { gsave dup false charpath pathbbox
      dup TBy2 gt {userdict /TBy2 3 -1 roll put} {pop} ifelse
      dup TBx2 gt {userdict /TBx2 3 -1 roll put} {pop} ifelse
      dup TBy1 lt {userdict /TBy1 3 -1 roll put} {pop} ifelse
      dup TBx1 lt {userdict /TBx1 3 -1 roll put} {pop} ifelse
      grestore } if } def
/PopTextBox { newpath TBx1 TBxmargin sub TBy1 TBymargin sub M
               TBx1 TBxmargin sub TBy2 TBymargin add L
	       TBx2 TBxmargin add TBy2 TBymargin add L
	       TBx2 TBxmargin add TBy1 TBymargin sub L closepath } def
/DrawTextBox { PopTextBox stroke /Boxing false def} def
/FillTextBox { gsave PopTextBox 1 1 1 setrgbcolor fill grestore /Boxing false def} def
0 0 0 0 InitTextBox
/TBxmargin 20 def
/TBymargin 20 def
/Boxing false def
/textshow { ExtendTextBox Gshow } def
%
% redundant definitions for compatibility with prologue.ps older than 5.0.2
/LTB {BL [] LCb DL} def
/LTb {PL [] LCb DL} def
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
doclip
50 50 translate
0.050 0.050 scale
0 setgray
newpath
5.000 UL
LTb
LCb setrgbcolor
[] 0 setdash
5.000 UL
LTb
396 3507 M
396 374 L
4247 0 V
0 3133 R
-4247 0 R
1.000 UP
stroke
0.12 0.21 0.34 C 0.55 0.79 0.59 C 5.000 UL
LTb
LCb setrgbcolor
[] 0 setdash
LTb
5.000 UL
LTb
0.12 0.21 0.34 C 396 374 M
43 12 V
43 13 V
43 13 V
43 14 V
42 14 V
43 16 V
43 17 V
43 18 V
43 20 V
43 22 V
43 24 V
43 24 V
43 25 V
43 23 V
42 21 V
43 18 V
43 14 V
43 8 V
43 1 V
43 -6 V
43 -13 V
43 -20 V
43 -23 V
43 -25 V
42 -24 V
43 -23 V
43 -17 V
43 -11 V
43 -3 V
43 8 V
43 20 V
43 28 V
43 35 V
43 40 V
42 41 V
43 41 V
43 38 V
43 32 V
43 25 V
43 14 V
43 5 V
43 -5 V
43 -11 V
43 -15 V
42 -18 V
43 -18 V
43 -17 V
43 -12 V
43 -7 V
43 2 V
43 10 V
43 17 V
43 23 V
43 27 V
42 31 V
43 32 V
43 34 V
43 32 V
43 31 V
43 28 V
43 24 V
43 21 V
43 18 V
43 16 V
42 14 V
43 12 V
43 11 V
43 11 V
43 10 V
43 11 V
43 11 V
43 11 V
43 14 V
43 15 V
42 18 V
43 21 V
43 24 V
43 27 V
43 32 V
43 37 V
43 41 V
43 45 V
43 48 V
43 51 V
42 54 V
43 55 V
43 56 V
43 58 V
43 58 V
43 57 V
43 58 V
43 57 V
43 57 V
43 57 V
42 57 V
43 57 V
43 56 V
43 57 V
43 56 V
stroke
LTb
LCb setrgbcolor
[] 0 setdash
0.55 0.79 0.59 C 396 374 M
43 37 V
43 37 V
43 36 V
43 36 V
42 33 V
43 32 V
43 30 V
43 28 V
43 25 V
43 21 V
43 19 V
43 15 V
43 13 V
43 10 V
42 9 V
43 7 V
43 5 V
43 6 V
43 4 V
43 5 V
43 5 V
43 6 V
43 6 V
43 6 V
42 6 V
43 6 V
43 7 V
43 7 V
43 8 V
43 7 V
43 8 V
43 8 V
43 8 V
43 7 V
42 7 V
43 6 V
43 6 V
43 5 V
43 4 V
43 3 V
43 1 V
43 1 V
43 -1 V
43 0 V
42 -1 V
43 -1 V
43 -1 V
43 0 V
43 0 V
43 1 V
43 2 V
43 3 V
43 3 V
43 4 V
42 4 V
43 4 V
43 4 V
43 3 V
43 3 V
43 2 V
43 2 V
43 1 V
43 0 V
43 0 V
42 0 V
43 -1 V
43 -1 V
43 -1 V
43 -1 V
43 -1 V
43 -1 V
43 -1 V
43 -1 V
43 0 V
42 0 V
43 0 V
43 1 V
43 1 V
43 2 V
43 2 V
43 3 V
43 3 V
43 3 V
43 4 V
42 4 V
43 3 V
43 4 V
43 3 V
43 2 V
43 2 V
43 1 V
43 1 V
43 0 V
43 0 V
42 0 V
43 -1 V
43 -1 V
43 -1 V
43 -1 V
stroke
2.000 UL
LTb
LCb setrgbcolor
[] 0 setdash
5.000 UL
LTb
396 3507 M
396 374 L
4247 0 V
0 3133 R
-4247 0 R
1.000 UP
stroke
stroke
grestore
end
showpage
%%Trailer

%%EndDocument
 @endspecial 0 TeXcolorgray 5556 78355 a
 gsave currentpoint currentpoint translate -270 neg rotate neg exch
neg exch translate
 5556 78355 a
1371 79108 a Fg(tempo)5556 78355 y
 currentpoint grestore moveto
 5556 78355 a 30657
98952 a Fg(n)p 0.55 0.79 0.59 TeXcolorrgb 0.12 0.21 0.34
TeXcolorrgb 0.12158 0.21176 0.33725 TeXcolorrgb 0.12158 0.21176 0.33725
TeXcolorrgb 15606 104759 a Fo(F)-35 b(igur)-131 b(a)958
b(2:)p 0 TeXcolorgray 28062 104759 a
SDict begin H.S end
 28062 104759 a 28062
104759 a
SDict begin H.R end
 28062 104759 a 28062 104759 a
SDict begin [/View [/XYZ H.V]/Dest (figure.2) cvn /DEST pdfmark end
 28062 104759 a
0.12158 0.21176 0.33725 TeXcolorrgb Fg(T)434 b Fh(\()p
Fg(n)p Fh(\))p Fn(2)p Fh(\012\()p Fg(f)340 b Fh(\()p
Fg(n)p Fh(\)\))p 0.12158 0.21176 0.33725 TeXcolorrgb
0.12158 0.21176 0.33725 TeXcolorrgb 0 TeXcolorgray -8000
58000 a
tx@Dict begin  PutEnd  end
 -8000 58000 a 0 TeXcolorgray 0 TeXcolorgray eop
end
%%Page: 18 18
TeXDict begin @landscape 18 17 bop 0 TeXcolorgray 8000
4901 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 8000 4901 a 0 TeXcolorgray 0 TeXcolorgray -8000
54901 a
tx@Dict begin tx@ovlDict begin InitOL /TheOL (0) def end end
 -8000 54901 a -8000 54901 a
tx@Dict begin tx@ovlDict begin (0) BOL end end
 -8000 54901 a 3099
x @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.0 SLW 1 1 1  setrgbcolor   0. true 0.0 0.0 397.48499 298.11374 .5
Frame  gsave 1 1 1  setrgbcolor  1. .setopacityalpha  fill  grestore
end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0.89804 0.2902 0.2706  setrgbcolor  /ArrowA { moveto } def
/ArrowB { } def  [ 377.60951 268.30054 19.87546 268.30054   /Lineto
/lineto load def 0  setlinejoin false Line  gsave 0.8 SLW 0.89804 0.2902
0.2706  setrgbcolor  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial -8000 58000 a
SDict begin [ {ThisPage}<</Trans << /S /Wipe >> >> /PUT pdfmark end
 -8000 58000 a
-8000 58000 a
SDict begin H.S end
 -8000 58000 a -8000 58000 a
SDict begin 17 H.A end
 -8000 58000
a -8000 58000 a
SDict begin [/View [/XYZ H.V]/Dest (slide.14) cvn /DEST pdfmark end
 -8000 58000 a -8000 58000 a
tx@Dict begin { 19.87546 274.26408 } PutCoor PutBegin  end
 -8000 58000
a 0.89804 0.2902 0.2706 TeXcolorrgb 532 x Fa(\002)p 0
TeXcolorgray -8000 58000 a
tx@Dict begin  PutEnd  end
 -8000 58000 a -8000 58000
a
tx@Dict begin { 391.52295 4.47151 } PutCoor PutBegin  end
 -8000 58000 a -1145 w Fq(14)-8000 58000 y
tx@Dict begin  PutEnd  end
 -8000 58000
a -8000 58000 a
tx@Dict begin { 19.87546 259.35748 } PutCoor PutBegin  end
 -8000 58000 a 0.12158 0.21176 0.33725
TeXcolorrgb -8000 68601 a
SDict begin H.S end
 -8000 68601 a -8000 68601 a
SDict begin 17 H.A end

-8000 68601 a -8000 68601 a
SDict begin [/View [/XYZ H.V]/Dest (defn.6) cvn /DEST pdfmark end
 -8000 68601 a 0.12158 0.21176 0.33725
TeXcolorrgb Fd(De\033ni\347\343o)1600 b(6.)p 0.12158 0.21176 0.33725
TeXcolorrgb 0.89804 0.2902 0.2706 TeXcolorrgb 1337 w
Fm(Limit)-48 b(e)1453 b(as)-51 b(sint)-77 b(\363)-89
b(tico)1456 b(estr)-38 b(it)-45 b(o)p 0.12158 0.21176 0.33725
TeXcolorrgb 1454 w Fg(T)434 b Fh(\()p Fg(n)p Fh(\))1453
b Fo(\351)g Fh(\002\()p Fg(f)340 b Fh(\()p Fg(n)p Fh(\)\))1454
b Fm(se)-8000 72365 y Fg(T)434 b Fh(\()p Fg(n)p Fh(\))956
b Fo(\351)g(t)-38 b(ant)-48 b(o)957 b Fg(O)87 b Fh(\()p
Fg(f)340 b Fh(\()p Fg(n)p Fh(\)\))956 b Fo(quant)-48
b(o)957 b Fh(\012\()p Fg(f)340 b Fh(\()p Fg(n)p Fh(\)\))p
Fo(.)43307 72365 y
tx@Dict begin tx@ovlDict begin (1) BOL end end
 43307 72365 a -8000 78785 a Fo(Diz)-99
b(emos)1347 b(nest)-51 b(e)1347 b(c)-99 b(aso)1347 b(que)f
Fg(T)434 b Fh(\()p Fg(n)p Fh(\))1346 b Fo(\351)g(limit)-38
b(ada)1347 b(estr)-45 b(it)-38 b(ament)-51 b(e)1347 b(por)-8000
82549 y Fg(f)340 b Fh(\()p Fg(n)p Fh(\))p Fo(.)-8000
83346 y
tx@Dict begin tx@ovlDict begin (1) BOL end end
 -8000 83346 a 0.89804 0.2902 0.2706 TeXcolorrgb
0.89804 0.2902 0.2706 TeXcolorrgb 4959 x Fp(n)p 0.89804 0.2902 0.2706
TeXcolorrgb 3188 w Fo(T)-383 b(amb\351m)957 b(conhecido)g(por)h(limit)
-51 b(e)957 b(r)-156 b(estr)-45 b(it)d(o.)p 0.89804 0.2902 0.2706
TeXcolorrgb 0.89804 0.2902 0.2706 TeXcolorrgb -8000 93397
a Fp(n)p 0.89804 0.2902 0.2706 TeXcolorrgb 3188 w Fo(A)876
b(fun\347\343o)g Fg(T)434 b Fh(\()p Fg(n)p Fh(\))875
b Fo(cr)-156 b(esce)877 b(dentr)-159 b(o)876 b(de)f(um)h(f)-61
b(at)-48 b(or)877 b(const)-38 b(ant)-51 b(e)876 b(mul-)-3127
97161 y(tiplic)-99 b(ado)958 b(por)g Fg(f)340 b Fh(\()p
Fg(n)p Fh(\))p Fo(.)p 0.89804 0.2902 0.2706 TeXcolorrgb
0.12158 0.21176 0.33725 TeXcolorrgb 0 TeXcolorgray -8000
58000 a
tx@Dict begin  PutEnd  end
 -8000 58000 a 0 TeXcolorgray 0 TeXcolorgray eop
end
%%Page: 19 19
TeXDict begin @landscape 19 18 bop 0 TeXcolorgray 8000
4901 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 8000 4901 a 0 TeXcolorgray 0 TeXcolorgray -8000
54901 a
tx@Dict begin tx@ovlDict begin InitOL /TheOL (0) def end end
 -8000 54901 a -8000 54901 a
tx@Dict begin tx@ovlDict begin (0) BOL end end
 -8000 54901 a 3099
x @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.0 SLW 1 1 1  setrgbcolor   0. true 0.0 0.0 397.48499 298.11374 .5
Frame  gsave 1 1 1  setrgbcolor  1. .setopacityalpha  fill  grestore
end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0.89804 0.2902 0.2706  setrgbcolor  /ArrowA { moveto } def
/ArrowB { } def  [ 377.60951 268.30054 19.87546 268.30054   /Lineto
/lineto load def 0  setlinejoin false Line  gsave 0.8 SLW 0.89804 0.2902
0.2706  setrgbcolor  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial -8000 58000 a
SDict begin [ {ThisPage}<</Trans << /S /Wipe >> >> /PUT pdfmark end
 -8000 58000 a
-8000 58000 a
tx@Dict begin { 19.87546 274.26408 } PutCoor PutBegin  end
 -8000 58000 a 0.89804 0.2902 0.2706 TeXcolorrgb
532 x Fa(\002)p 0 TeXcolorgray -8000 58000 a
tx@Dict begin  PutEnd  end
 -8000 58000
a -8000 58000 a
tx@Dict begin { 391.52295 4.47151 } PutCoor PutBegin  end
 -8000 58000 a -1145 w Fq(14)-8000 58000
y
tx@Dict begin  PutEnd  end
 -8000 58000 a -8000 58000 a
tx@Dict begin { 19.87546 259.35748 } PutCoor PutBegin  end
 -8000 58000 a 0.12158 0.21176 0.33725
TeXcolorrgb -8000 68601 a
SDict begin H.S end
 -8000 68601 a -8000 68601 a
SDict begin 17 H.A end

-8000 68601 a -8000 68601 a
SDict begin [/View [/XYZ H.V]/Dest (defn.6) cvn /DEST pdfmark end
 -8000 68601 a 0.12158 0.21176 0.33725
TeXcolorrgb Fd(De\033ni\347\343o)1600 b(6.)p 0.12158 0.21176 0.33725
TeXcolorrgb 0.89804 0.2902 0.2706 TeXcolorrgb 1337 w
Fm(Limit)-48 b(e)1453 b(as)-51 b(sint)-77 b(\363)-89
b(tico)1456 b(estr)-38 b(it)-45 b(o)p 0.12158 0.21176 0.33725
TeXcolorrgb 1454 w Fg(T)434 b Fh(\()p Fg(n)p Fh(\))1453
b Fo(\351)g Fh(\002\()p Fg(f)340 b Fh(\()p Fg(n)p Fh(\)\))1454
b Fm(se)-8000 72365 y Fg(T)434 b Fh(\()p Fg(n)p Fh(\))956
b Fo(\351)g(t)-38 b(ant)-48 b(o)957 b Fg(O)87 b Fh(\()p
Fg(f)340 b Fh(\()p Fg(n)p Fh(\)\))956 b Fo(quant)-48
b(o)957 b Fh(\012\()p Fg(f)340 b Fh(\()p Fg(n)p Fh(\)\))p
Fo(.)-8000 78785 y(Diz)-99 b(emos)1347 b(nest)-51 b(e)1347
b(c)-99 b(aso)1347 b(que)f Fg(T)434 b Fh(\()p Fg(n)p
Fh(\))1346 b Fo(\351)g(limit)-38 b(ada)1347 b(estr)-45
b(it)-38 b(ament)-51 b(e)1347 b(por)-8000 82549 y Fg(f)340
b Fh(\()p Fg(n)p Fh(\))p Fo(.)-1135 82549 y
tx@Dict begin tx@ovlDict begin (1) BOL end end
 -1135 82549
a -8000 83346 a
tx@Dict begin tx@ovlDict begin (1) BOL end end
 -8000 83346 a 0.89804 0.2902 0.2706 TeXcolorrgb
0.89804 0.2902 0.2706 TeXcolorrgb 4959 x Fp(n)p 0.89804 0.2902 0.2706
TeXcolorrgb 3188 w Fo(T)-383 b(amb\351m)957 b(conhecido)g(por)h(limit)
-51 b(e)957 b(r)-156 b(estr)-45 b(it)d(o.)p 0.89804 0.2902 0.2706
TeXcolorrgb 0.89804 0.2902 0.2706 TeXcolorrgb -8000 93397
a Fp(n)p 0.89804 0.2902 0.2706 TeXcolorrgb 3188 w Fo(A)876
b(fun\347\343o)g Fg(T)434 b Fh(\()p Fg(n)p Fh(\))875
b Fo(cr)-156 b(esce)877 b(dentr)-159 b(o)876 b(de)f(um)h(f)-61
b(at)-48 b(or)877 b(const)-38 b(ant)-51 b(e)876 b(mul-)-3127
97161 y(tiplic)-99 b(ado)958 b(por)g Fg(f)340 b Fh(\()p
Fg(n)p Fh(\))p Fo(.)p 0.89804 0.2902 0.2706 TeXcolorrgb
0.12158 0.21176 0.33725 TeXcolorrgb 0 TeXcolorgray -8000
58000 a
tx@Dict begin  PutEnd  end
 -8000 58000 a 0 TeXcolorgray 0 TeXcolorgray eop
end
%%Page: 20 20
TeXDict begin @landscape 20 19 bop 0 TeXcolorgray 8000
4901 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 8000 4901 a 0 TeXcolorgray 0 TeXcolorgray -8000
54901 a
tx@Dict begin tx@ovlDict begin InitOL /TheOL (0) def end end
 -8000 54901 a -8000 54901 a
tx@Dict begin tx@ovlDict begin (0) BOL end end
 -8000 54901 a 3099
x @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.0 SLW 1 1 1  setrgbcolor   0. true 0.0 0.0 397.48499 298.11374 .5
Frame  gsave 1 1 1  setrgbcolor  1. .setopacityalpha  fill  grestore
end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0.89804 0.2902 0.2706  setrgbcolor  /ArrowA { moveto } def
/ArrowB { } def  [ 377.60951 268.30054 19.87546 268.30054   /Lineto
/lineto load def 0  setlinejoin false Line  gsave 0.8 SLW 0.89804 0.2902
0.2706  setrgbcolor  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial -8000 58000 a
SDict begin [ {ThisPage}<</Trans << /S /Wipe >> >> /PUT pdfmark end
 -8000 58000 a
-8000 58000 a
tx@Dict begin { 19.87546 274.26408 } PutCoor PutBegin  end
 -8000 58000 a 0.89804 0.2902 0.2706 TeXcolorrgb
532 x Fa(\002)p 0 TeXcolorgray -8000 58000 a
tx@Dict begin  PutEnd  end
 -8000 58000
a -8000 58000 a
tx@Dict begin { 391.52295 4.47151 } PutCoor PutBegin  end
 -8000 58000 a -1145 w Fq(14)-8000 58000
y
tx@Dict begin  PutEnd  end
 -8000 58000 a -8000 58000 a
tx@Dict begin { 19.87546 259.35748 } PutCoor PutBegin  end
 -8000 58000 a 0.12158 0.21176 0.33725
TeXcolorrgb -8000 68601 a
SDict begin H.S end
 -8000 68601 a -8000 68601 a
SDict begin 17 H.A end

-8000 68601 a -8000 68601 a
SDict begin [/View [/XYZ H.V]/Dest (defn.6) cvn /DEST pdfmark end
 -8000 68601 a 0.12158 0.21176 0.33725
TeXcolorrgb Fd(De\033ni\347\343o)1600 b(6.)p 0.12158 0.21176 0.33725
TeXcolorrgb 0.89804 0.2902 0.2706 TeXcolorrgb 1337 w
Fm(Limit)-48 b(e)1453 b(as)-51 b(sint)-77 b(\363)-89
b(tico)1456 b(estr)-38 b(it)-45 b(o)p 0.12158 0.21176 0.33725
TeXcolorrgb 1454 w Fg(T)434 b Fh(\()p Fg(n)p Fh(\))1453
b Fo(\351)g Fh(\002\()p Fg(f)340 b Fh(\()p Fg(n)p Fh(\)\))1454
b Fm(se)-8000 72365 y Fg(T)434 b Fh(\()p Fg(n)p Fh(\))956
b Fo(\351)g(t)-38 b(ant)-48 b(o)957 b Fg(O)87 b Fh(\()p
Fg(f)340 b Fh(\()p Fg(n)p Fh(\)\))956 b Fo(quant)-48
b(o)957 b Fh(\012\()p Fg(f)340 b Fh(\()p Fg(n)p Fh(\)\))p
Fo(.)-8000 78785 y(Diz)-99 b(emos)1347 b(nest)-51 b(e)1347
b(c)-99 b(aso)1347 b(que)f Fg(T)434 b Fh(\()p Fg(n)p
Fh(\))1346 b Fo(\351)g(limit)-38 b(ada)1347 b(estr)-45
b(it)-38 b(ament)-51 b(e)1347 b(por)-8000 82549 y Fg(f)340
b Fh(\()p Fg(n)p Fh(\))p Fo(.)-8000 83346 y
tx@Dict begin tx@ovlDict begin (1) BOL end end
 -8000 83346
a 0.12158 0.21176 0.33725 TeXcolorrgb -8000 83346 a
tx@Dict begin tx@ovlDict begin (0) BOL end end
 -8000
83346 a 0.12158 0.21176 0.33725 TeXcolorrgb 4959 x Fp(n)p
0.12158 0.21176 0.33725 TeXcolorrgb 3188 w Fo(T)-383
b(amb\351m)957 b(conhecido)g(por)h(limit)-51 b(e)957
b(r)-156 b(estr)-45 b(it)d(o.)p 0.12158 0.21176 0.33725
TeXcolorrgb 47990 88305 a
tx@Dict begin tx@ovlDict begin (0) BOL end end
 47990 88305 a 0.12158 0.21176 0.33725
TeXcolorrgb -8000 93397 a Fp(n)p 0.12158 0.21176 0.33725
TeXcolorrgb 3188 w Fo(A)876 b(fun\347\343o)g Fg(T)434
b Fh(\()p Fg(n)p Fh(\))875 b Fo(cr)-156 b(esce)877 b(dentr)-159
b(o)876 b(de)f(um)h(f)-61 b(at)-48 b(or)877 b(const)-38
b(ant)-51 b(e)876 b(mul-)-3127 97161 y(tiplic)-99 b(ado)958
b(por)g Fg(f)340 b Fh(\()p Fg(n)p Fh(\))p Fo(.)p 0.12158 0.21176 0.33725
TeXcolorrgb 0.12158 0.21176 0.33725 TeXcolorrgb 0 TeXcolorgray
-8000 58000 a
tx@Dict begin  PutEnd  end
 -8000 58000 a 0 TeXcolorgray 0 TeXcolorgray
eop end
%%Page: 21 21
TeXDict begin @landscape 21 20 bop 0 TeXcolorgray 8000
4901 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 8000 4901 a 0 TeXcolorgray 0 TeXcolorgray -8000
54901 a
tx@Dict begin tx@ovlDict begin InitOL /TheOL (0) def end end
 -8000 54901 a -8000 54901 a
tx@Dict begin tx@ovlDict begin (0) BOL end end
 -8000 54901 a 3099
x @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.0 SLW 1 1 1  setrgbcolor   0. true 0.0 0.0 397.48499 298.11374 .5
Frame  gsave 1 1 1  setrgbcolor  1. .setopacityalpha  fill  grestore
end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0.89804 0.2902 0.2706  setrgbcolor  /ArrowA { moveto } def
/ArrowB { } def  [ 377.60951 268.30054 19.87546 268.30054   /Lineto
/lineto load def 0  setlinejoin false Line  gsave 0.8 SLW 0.89804 0.2902
0.2706  setrgbcolor  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial -8000 58000 a
SDict begin [ {ThisPage}<</Trans << /S /Wipe >> >> /PUT pdfmark end
 -8000 58000 a
-8000 58000 a
SDict begin H.S end
 -8000 58000 a -8000 58000 a
SDict begin 17 H.A end
 -8000 58000
a -8000 58000 a
SDict begin [/View [/XYZ H.V]/Dest (slide.15) cvn /DEST pdfmark end
 -8000 58000 a -8000 58000 a
tx@Dict begin { 19.87546 274.26408 } PutCoor PutBegin  end
 -8000 58000
a 0.89804 0.2902 0.2706 TeXcolorrgb 532 x Fa(\002)p 0
TeXcolorgray -8000 58000 a
tx@Dict begin  PutEnd  end
 -8000 58000 a -8000 58000
a
tx@Dict begin { 391.52295 4.47151 } PutCoor PutBegin  end
 -8000 58000 a -1099 w Fq(15)-8000 58000 y
tx@Dict begin  PutEnd  end
 -8000 58000
a -8000 58000 a
tx@Dict begin { 19.87546 259.35748 } PutCoor PutBegin  end
 -8000 58000 a 0.12158 0.21176 0.33725
TeXcolorrgb -8000 58000 a
tx@Dict begin tx@ovlDict begin (1) BOL end end
 -8000 58000 a 0.12158 0.21176 0.33725
TeXcolorrgb -8000 58000 a
tx@Dict begin tx@ovlDict begin (0) BOL end end
 -8000 58000 a 0.12158 0.21176 0.33725
TeXcolorrgb 0.12158 0.21176 0.33725 TeXcolorrgb 0.12 0.21 0.34
TeXcolorrgb 41033 82586 a Fg(T)434 b Fh(\()p Fg(n)p Fh(\))p
0.90 0.29 0.27 TeXcolorrgb 33956 65175 a Fg(c)p Fh(1)p
Fg(:f)340 b Fh(\()p Fg(n)p Fh(\))p 0.55 0.79 0.59 TeXcolorrgb
41033 93030 a Fg(c)p Fh(2)p Fg(:f)g Fh(\()p Fg(n)p Fh(\))3601
99910 y @beginspecial 50 @llx 50 @lly 302 @urx 238 @ury
2520 @rwi @setspecial
%%BeginDocument: ./pic/tight.eps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: tight.tex
%%Creator: gnuplot 5.0 patchlevel 3
%%CreationDate: Mon Aug  6 20:17:23 2018
%%DocumentFonts: 
%%BoundingBox: 50 50 302 238
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following true/false flags may be edited by hand if desired.
% The unit line width and grayscale image gamma correction may also be changed.
%
/Color true def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Level3 true def
/Rounded false def
/ClipToBoundingBox true def
/SuppressPDFMark false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/Gamma 1.0 def
/BackgroundColor {-1.000 -1.000 -1.000} def
%
/vshift -73 def
/dl1 {
  10.0 Dashlength userlinewidth gnulinewidth div mul mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength userlinewidth gnulinewidth div mul mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/doclip {
  ClipToBoundingBox {
    newpath 50 50 moveto 302 50 lineto 302 238 lineto 50 238 lineto closepath
    clip
  } if
} def
%
% Gnuplot Prolog Version 5.1 (Oct 2015)
%
%/SuppressPDFMark true def
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/g {setgray} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray textshow grestore} {textshow} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray textshow grestore} {textshow} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray textshow grestore} {textshow} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
3.8 setmiterlimit
% Classic Line colors (version 5.0)
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default dash patterns (version 5.0)
/LTB {BL [] LCb DL} def
/LTw {PL [] 1 setgray} def
/LTb {PL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [2 dl1 3 dl2] LC1 DL} def
/LT2 {PL [1 dl1 1.5 dl2] LC2 DL} def
/LT3 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC3 DL} def
/LT4 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [4 dl1 2 dl2] LC5 DL} def
/LT6 {PL [1.5 dl1 1.5 dl2 1.5 dl1 1.5 dl2 1.5 dl1 6 dl2] LC6 DL} def
/LT7 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC8 DL} def
/SL {[] 0 setdash} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
  clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
dup 2 lt
	{/InterpretLevel1 true def
	 /InterpretLevel3 false def}
	{/InterpretLevel1 Level1 def
	 2 gt
	    {/InterpretLevel3 Level3 def}
	    {/InterpretLevel3 false def}
	 ifelse }
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
%
Level1 SuppressPDFMark or 
{} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (tight.tex)
  /Subject (gnuplot plot)
  /Creator (gnuplot 5.0 patchlevel 3)
  /Author (dvnoble)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Mon Aug  6 20:17:23 2018)
  /DOCINFO pdfmark
end
} ifelse
%
% Support for boxed text - Ethan A Merritt May 2005
%
/InitTextBox { userdict /TBy2 3 -1 roll put userdict /TBx2 3 -1 roll put
           userdict /TBy1 3 -1 roll put userdict /TBx1 3 -1 roll put
	   /Boxing true def } def
/ExtendTextBox { Boxing
    { gsave dup false charpath pathbbox
      dup TBy2 gt {userdict /TBy2 3 -1 roll put} {pop} ifelse
      dup TBx2 gt {userdict /TBx2 3 -1 roll put} {pop} ifelse
      dup TBy1 lt {userdict /TBy1 3 -1 roll put} {pop} ifelse
      dup TBx1 lt {userdict /TBx1 3 -1 roll put} {pop} ifelse
      grestore } if } def
/PopTextBox { newpath TBx1 TBxmargin sub TBy1 TBymargin sub M
               TBx1 TBxmargin sub TBy2 TBymargin add L
	       TBx2 TBxmargin add TBy2 TBymargin add L
	       TBx2 TBxmargin add TBy1 TBymargin sub L closepath } def
/DrawTextBox { PopTextBox stroke /Boxing false def} def
/FillTextBox { gsave PopTextBox 1 1 1 setrgbcolor fill grestore /Boxing false def} def
0 0 0 0 InitTextBox
/TBxmargin 20 def
/TBymargin 20 def
/Boxing false def
/textshow { ExtendTextBox Gshow } def
%
% redundant definitions for compatibility with prologue.ps older than 5.0.2
/LTB {BL [] LCb DL} def
/LTb {PL [] LCb DL} def
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
doclip
50 50 translate
0.050 0.050 scale
0 setgray
newpath
5.000 UL
LTb
LCb setrgbcolor
[] 0 setdash
5.000 UL
LTb
396 3507 M
396 374 L
4247 0 V
0 3133 R
-4247 0 R
1.000 UP
stroke
0.12 0.21 0.34 C 0.90 0.29 0.27 C 0.55 0.79 0.59 C 5.000 UL
LTb
LCb setrgbcolor
[] 0 setdash
LTb
5.000 UL
LTb
0.12 0.21 0.34 C 396 374 M
43 12 V
43 13 V
43 13 V
43 14 V
42 14 V
43 16 V
43 17 V
43 18 V
43 20 V
43 22 V
43 24 V
43 24 V
43 25 V
43 23 V
42 21 V
43 18 V
43 14 V
43 8 V
43 1 V
43 -6 V
43 -13 V
43 -20 V
43 -23 V
43 -25 V
42 -24 V
43 -23 V
43 -17 V
43 -11 V
43 -3 V
43 8 V
43 20 V
43 28 V
43 35 V
43 40 V
42 41 V
43 41 V
43 38 V
43 32 V
43 25 V
43 14 V
43 5 V
43 -5 V
43 -11 V
43 -15 V
42 -18 V
43 -18 V
43 -17 V
43 -12 V
43 -7 V
43 2 V
43 10 V
43 17 V
43 23 V
43 27 V
42 31 V
43 32 V
43 34 V
43 32 V
43 31 V
43 28 V
43 24 V
43 21 V
43 18 V
43 16 V
42 14 V
43 12 V
43 11 V
43 11 V
43 10 V
43 11 V
43 11 V
43 11 V
43 14 V
43 15 V
42 18 V
43 21 V
43 24 V
43 27 V
43 32 V
43 37 V
43 41 V
43 45 V
43 48 V
43 51 V
42 54 V
43 55 V
43 56 V
43 58 V
43 58 V
43 57 V
43 58 V
43 57 V
43 57 V
43 57 V
42 57 V
43 57 V
43 56 V
43 57 V
43 56 V
stroke
LTb
LCb setrgbcolor
[] 0 setdash
0.90 0.29 0.27 C 396 374 M
43 2 V
43 2 V
43 3 V
43 2 V
42 3 V
43 3 V
43 4 V
43 4 V
43 4 V
43 5 V
43 5 V
43 6 V
43 7 V
43 6 V
42 7 V
43 7 V
43 6 V
43 7 V
43 6 V
43 6 V
43 6 V
43 5 V
43 5 V
43 6 V
42 5 V
43 6 V
43 7 V
43 7 V
43 8 V
43 10 V
43 10 V
43 12 V
43 13 V
43 14 V
42 16 V
43 16 V
43 19 V
43 19 V
43 21 V
43 22 V
43 24 V
43 26 V
43 27 V
43 29 V
42 31 V
43 33 V
43 35 V
43 38 V
43 40 V
43 43 V
43 46 V
43 49 V
43 53 V
43 57 V
42 62 V
43 67 V
43 72 V
43 79 V
43 84 V
43 92 V
43 97 V
43 101 V
43 104 V
43 104 V
42 102 V
43 98 V
43 94 V
43 86 V
43 77 V
43 67 V
43 58 V
43 56 V
43 59 V
43 65 V
42 78 V
43 96 V
43 118 V
43 145 V
43 179 V
8 40 V
stroke
LTb
LCb setrgbcolor
[] 0 setdash
0.55 0.79 0.59 C 396 374 M
43 37 V
43 37 V
43 36 V
43 36 V
42 33 V
43 32 V
43 30 V
43 28 V
43 25 V
43 21 V
43 19 V
43 15 V
43 13 V
43 10 V
42 9 V
43 7 V
43 5 V
43 6 V
43 4 V
43 5 V
43 5 V
43 6 V
43 6 V
43 6 V
42 6 V
43 6 V
43 7 V
43 7 V
43 8 V
43 7 V
43 8 V
43 8 V
43 8 V
43 7 V
42 7 V
43 6 V
43 6 V
43 5 V
43 4 V
43 3 V
43 1 V
43 1 V
43 -1 V
43 0 V
42 -1 V
43 -1 V
43 -1 V
43 0 V
43 0 V
43 1 V
43 2 V
43 3 V
43 3 V
43 4 V
42 4 V
43 4 V
43 4 V
43 3 V
43 3 V
43 2 V
43 2 V
43 1 V
43 0 V
43 0 V
42 0 V
43 -1 V
43 -1 V
43 -1 V
43 -1 V
43 -1 V
43 -1 V
43 -1 V
43 -1 V
43 0 V
42 0 V
43 0 V
43 1 V
43 1 V
43 2 V
43 2 V
43 3 V
43 3 V
43 3 V
43 4 V
42 4 V
43 3 V
43 4 V
43 3 V
43 2 V
43 2 V
43 1 V
43 1 V
43 0 V
43 0 V
42 0 V
43 -1 V
43 -1 V
43 -1 V
43 -1 V
stroke
2.000 UL
LTb
LCb setrgbcolor
[] 0 setdash
5.000 UL
LTb
396 3507 M
396 374 L
4247 0 V
0 3133 R
-4247 0 R
1.000 UP
stroke
stroke
grestore
end
showpage
%%Trailer

%%EndDocument
 @endspecial 0 TeXcolorgray 5556 78355 a
 gsave currentpoint currentpoint translate -270 neg rotate neg exch
neg exch translate
 5556 78355 a
1371 79108 a Fg(tempo)5556 78355 y
 currentpoint grestore moveto
 5556 78355 a 30657
98952 a Fg(n)p 0.55 0.79 0.59 TeXcolorrgb 0.90 0.29 0.27
TeXcolorrgb 0.12 0.21 0.34 TeXcolorrgb 0.12158 0.21176 0.33725
TeXcolorrgb 0.12158 0.21176 0.33725 TeXcolorrgb 15472
104759 a Fo(F)-35 b(igur)-131 b(a)957 b(3:)p 0 TeXcolorgray
28023 104759 a
SDict begin H.S end
 28023 104759 a 28023 104759 a
SDict begin H.R end
 28023 104759
a 28023 104759 a
SDict begin [/View [/XYZ H.V]/Dest (figure.3) cvn /DEST pdfmark end
 28023 104759 a 0.12158 0.21176 0.33725
TeXcolorrgb Fg(T)434 b Fh(\()p Fg(n)p Fh(\))p Fn(2)p
Fh(\002\()p Fg(f)340 b Fh(\()p Fg(n)p Fh(\)\))p 0.12158 0.21176 0.33725
TeXcolorrgb 0.12158 0.21176 0.33725 TeXcolorrgb 0 TeXcolorgray
-8000 58000 a
tx@Dict begin  PutEnd  end
 -8000 58000 a 0 TeXcolorgray 0 TeXcolorgray
eop end
%%Page: 22 22
TeXDict begin @landscape 22 21 bop 0 TeXcolorgray 8000
4901 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 8000 4901 a 0 TeXcolorgray 0 TeXcolorgray -8000
54901 a
tx@Dict begin tx@ovlDict begin InitOL /TheOL (0) def end end
 -8000 54901 a -8000 54901 a
tx@Dict begin tx@ovlDict begin (0) BOL end end
 -8000 54901 a 3099
x @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.0 SLW 1 1 1  setrgbcolor   0. true 0.0 0.0 397.48499 298.11374 .5
Frame  gsave 1 1 1  setrgbcolor  1. .setopacityalpha  fill  grestore
end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0.89804 0.2902 0.2706  setrgbcolor  /ArrowA { moveto } def
/ArrowB { } def  [ 377.60951 268.30054 19.87546 268.30054   /Lineto
/lineto load def 0  setlinejoin false Line  gsave 0.8 SLW 0.89804 0.2902
0.2706  setrgbcolor  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial -8000 58000 a
SDict begin [ {ThisPage}<</Trans << /S /Wipe >> >> /PUT pdfmark end
 -8000 58000 a
-8000 58000 a
SDict begin H.S end
 -8000 58000 a -8000 58000 a
SDict begin 17 H.A end
 -8000 58000
a -8000 58000 a
SDict begin [/View [/XYZ H.V]/Dest (slide.16) cvn /DEST pdfmark end
 -8000 58000 a -8000 58000 a
tx@Dict begin { 19.87546 274.26408 } PutCoor PutBegin  end
 -8000 58000
a 0.89804 0.2902 0.2706 TeXcolorrgb 532 x Fv(Obser)77
b(v)-116 b(a\347\365es)p 0 TeXcolorgray -8000 58000 a
tx@Dict begin  PutEnd  end

-8000 58000 a -8000 58000 a
tx@Dict begin { 391.52295 4.47151 } PutCoor PutBegin  end
 -8000 58000 a -1176 w Fq(16)-8000
58000 y
tx@Dict begin  PutEnd  end
 -8000 58000 a -8000 58000 a
tx@Dict begin { 19.87546 259.35748 } PutCoor PutBegin  end
 -8000 58000 a
0.12158 0.21176 0.33725 TeXcolorrgb -8000 63386 a
tx@Dict begin tx@ovlDict begin (1) BOL end end
 -8000
63386 a 0.12158 0.21176 0.33725 TeXcolorrgb -8000 63386
a
tx@Dict begin tx@ovlDict begin (0) BOL end end
 -8000 63386 a 0.12158 0.21176 0.33725 TeXcolorrgb 2584
x Fp(n)p 0.12158 0.21176 0.33725 TeXcolorrgb 3188 w Fo(Dadas)1261
b(duas)g(fun\347\365es)g Fg(g)1563 b Fh(=)1449 b Fg(n)34307
64813 y Fc(2)36786 65970 y Fo(e)1260 b Fg(f)1789 b Fh(=)1449
b Fg(n)934 b Fh(+)g(32)p Fo(,)1337 b(ano)-54 b(t)-38
b(amos)-3127 69734 y(que)1096 b Fg(f)340 b Fh(\()p Fg(n)p
Fh(\))p Fn(2)q(O)89 b Fh(\()p Fg(g)114 b Fh(\()p Fg(n)p
Fh(\)\))1097 b Fo(usando)f(a)h(seguint)-51 b(e)1097 b(no)-54
b(t)-38 b(a\347\343o:)1396 b Fg(f)340 b Fh(\()p Fg(n)p
Fh(\))1145 b(=)-3127 73497 y Fn(O)89 b Fh(\()p Fg(g)114
b Fh(\()p Fg(n)p Fh(\)\))p Fo(.)p 0.12158 0.21176 0.33725
TeXcolorrgb 9639 73497 a
tx@Dict begin tx@ovlDict begin (0) BOL end end
 9639 73497 a 0.12158 0.21176 0.33725
TeXcolorrgb -8000 78589 a Fp(n)p 0.12158 0.21176 0.33725
TeXcolorrgb 3188 w Fo(Nest)-51 b(e)964 b(c)-99 b(aso,)967
b(lemos)e Fg(f)340 b Fh(\()p Fg(n)p Fh(\))p 0.89804 0.2902 0.2706
TeXcolorrgb 964 w Fm(\351)p 0.12158 0.21176 0.33725 TeXcolorrgb
964 w Fn(O)89 b Fh(\()p Fg(g)114 b Fh(\()p Fg(n)p Fh(\)\))964
b Fo(ao)g(in)-73 b(v)-92 b(\351s)964 b(de)f(nos)i(r)-156
b(ef)-77 b(e-)-3127 82353 y(r)-45 b(ir)g(mos)959 b(ao)e(sentido)g(de)f
(igualdade)g(usual.)p 0.12158 0.21176 0.33725 TeXcolorrgb
48016 82353 a
tx@Dict begin tx@ovlDict begin (0) BOL end end
 48016 82353 a 0.12158 0.21176 0.33725 TeXcolorrgb
-8000 87445 a Fp(n)p 0.12158 0.21176 0.33725 TeXcolorrgb
3188 w Fo(Ist)-48 b(o)1018 b(por)-131 b(que)1018 b Fn(O)89
b Fh(\()p Fg(g)114 b Fh(\()p Fg(n)p Fh(\)\))1017 b Fo(\351)g(um)g
(conjunt)-48 b(o)1018 b(de)f(fun\347\365es)h(que)e(t)-51
b(em)-3127 91209 y(o)957 b(mesmo)g(limit)-51 b(e)956
b(as)-51 b(sint)-80 b(\363)-89 b(tico)959 b(super)-45
b(ior)958 b(que)e Fg(g)114 b Fh(\()p Fg(n)p Fh(\))p Fo(.)p
0.12158 0.21176 0.33725 TeXcolorrgb 58191 91209 a
tx@Dict begin tx@ovlDict begin (0) BOL end end
 58191
91209 a 0.12158 0.21176 0.33725 TeXcolorrgb -8000 96301
a Fp(n)p 0.12158 0.21176 0.33725 TeXcolorrgb 3188 w Fo(P)-194
b(or)38 b(t)-38 b(ant)-48 b(o)1219 b Fg(f)340 b Fh(\()p
Fg(n)p Fh(\))1219 b Fo(\351)f(uma)g(fun\347\343o)h(que)f(per)38
b(t)-51 b(ence)1220 b(a)e(es)-51 b(se)1219 b(con-)-3127
100064 y(junt)-48 b(o.)p 0.12158 0.21176 0.33725 TeXcolorrgb
0.12158 0.21176 0.33725 TeXcolorrgb 0.12158 0.21176 0.33725
TeXcolorrgb 0.12158 0.21176 0.33725 TeXcolorrgb 0 TeXcolorgray
-8000 58000 a
tx@Dict begin  PutEnd  end
 -8000 58000 a 0 TeXcolorgray 0 TeXcolorgray
eop end
%%Page: 23 23
TeXDict begin @landscape 23 22 bop 0 TeXcolorgray 8000
4901 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 8000 4901 a 0 TeXcolorgray 0 TeXcolorgray -8000
54901 a
tx@Dict begin tx@ovlDict begin InitOL /TheOL (0) def end end
 -8000 54901 a -8000 54901 a
tx@Dict begin tx@ovlDict begin (0) BOL end end
 -8000 54901 a 3099
x @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.0 SLW 1 1 1  setrgbcolor   0. true 0.0 0.0 397.48499 298.11374 .5
Frame  gsave 1 1 1  setrgbcolor  1. .setopacityalpha  fill  grestore
end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0.89804 0.2902 0.2706  setrgbcolor  /ArrowA { moveto } def
/ArrowB { } def  [ 377.60951 268.30054 19.87546 268.30054   /Lineto
/lineto load def 0  setlinejoin false Line  gsave 0.8 SLW 0.89804 0.2902
0.2706  setrgbcolor  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial -8000 58000 a
SDict begin [ {ThisPage}<</Trans << /S /Wipe >> >> /PUT pdfmark end
 -8000 58000 a
-8000 58000 a
SDict begin H.S end
 -8000 58000 a -8000 58000 a
SDict begin 17 H.A end
 -8000 58000
a -8000 58000 a
SDict begin [/View [/XYZ H.V]/Dest (slide.17) cvn /DEST pdfmark end
 -8000 58000 a -8000 58000 a
tx@Dict begin { 19.87546 274.26408 } PutCoor PutBegin  end
 -8000 58000
a 0.89804 0.2902 0.2706 TeXcolorrgb 532 x Fv(Bibliogr)-143
b(a\033a)1571 b(consultada)p 0 TeXcolorgray -8000 58000
a
tx@Dict begin  PutEnd  end
 -8000 58000 a -8000 58000 a
tx@Dict begin { 391.52295 4.47151 } PutCoor PutBegin  end
 -8000 58000 a -1040 w Fq(17)-8000
58000 y
tx@Dict begin  PutEnd  end
 -8000 58000 a -8000 58000 a
tx@Dict begin { 19.87546 259.35748 } PutCoor PutBegin  end
 -8000 58000 a
0.12158 0.21176 0.33725 TeXcolorrgb -8000 68449 a
tx@Dict begin tx@ovlDict begin (1) BOL end end
 -8000
68449 a 0.12158 0.21176 0.33725 TeXcolorrgb -8000 68449
a
tx@Dict begin tx@ovlDict begin (0) BOL end end
 -8000 68449 a 0.12158 0.21176 0.33725 TeXcolorrgb -8000
72223 a
SDict begin H.S end
 -8000 72223 a Fo([Cor09])2071 72223 y
SDict begin 17 H.A end
 2071 72223
a 2071 72223 a
SDict begin [/View [/XYZ H.V]/Dest (cite.Cormen2009) cvn /DEST pdfmark
end
 2071 72223 a 0.12158 0.21176 0.33725 TeXcolorrgb
1107 w Fo(T)-51 b(homas)917 b(H.)f(Cor)-45 b(men.)1239
b Fm(Intr)-153 b(oduction)918 b(t)-45 b(o)917 b(Algor)-38
b(ithms)p Fo(.)1239 b(T)-51 b(he)3178 75986 y(MIT)957
b(P)-92 b(r)-156 b(es)-51 b(s)-64 b(,)957 b(3)f(edition,)h(jul)g(2009.)
p 0.12158 0.21176 0.33725 TeXcolorrgb -8000 76703 a
tx@Dict begin tx@ovlDict begin (0) BOL end end
 -8000
76703 a 0.12158 0.21176 0.33725 TeXcolorrgb -8000 82407
a
SDict begin H.S end
 -8000 82407 a Fo([GJ79])-110 82407 y
SDict begin 17 H.A end
 -110 82407 a -110
82407 a
SDict begin [/View [/XYZ H.V]/Dest (cite.Garey1979) cvn /DEST pdfmark
end
 -110 82407 a 0.12158 0.21176 0.33725 TeXcolorrgb
3288 w Fo(Michael)1893 b(Gar)-156 b(ey)1890 b(and)i(Da)-32
b(vid)1891 b(Johnson.)4300 b Fm(Comput)-48 b(er)-89 b(s)3178
86170 y(and)1644 b(Intr)-124 b(act)-38 b(ability:)2490
b(A)1642 b(Guide)h(t)-45 b(o)1644 b(the)f(T)-48 b(heory)1643
b(of)h(NP)-424 b(-)3178 89934 y(Comple)-41 b(t)-48 b(enes)d(s)p
Fo(.)1960 b(W)-179 b(.)1161 b(H.)f(F)-61 b(r)-156 b(eeman)1161
b(and)f(Company,)1212 b(Ne)-54 b(w)3178 93698 y(Y)-383
b(or)-45 b(k,)958 b(1979.)p 0.12158 0.21176 0.33725 TeXcolorrgb
0.12158 0.21176 0.33725 TeXcolorrgb -8000 97712 a
SDict begin H.S end
 -8000
97712 a -8000 97712 a
SDict begin 17 H.A end
 -8000 97712 a -8000 97712 a
SDict begin [/View [/XYZ H.V]/Dest (cite.Garey1979) cvn /DEST pdfmark
end
 -8000
97712 a -8000 97712 a
SDict begin H.S end
 -8000 97712 a -8000 97712 a
SDict begin 17 H.A end
 -8000
97712 a -8000 97712 a
SDict begin [/View [/XYZ H.V]/Dest (cite.Cormen2009) cvn /DEST pdfmark
end
 -8000 97712 a 0 TeXcolorgray -8000
58000 a
tx@Dict begin  PutEnd  end
 -8000 58000 a 0 TeXcolorgray 0 TeXcolorgray eop
end
%%Trailer

userdict /end-hook known{end-hook}if
%%EOF
